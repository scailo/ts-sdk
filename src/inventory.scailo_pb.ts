// @generated by protoc-gen-es v1.5.1 with parameter "target=ts"
// @generated from file inventory.scailo.proto (package Scailo, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3, protoInt64 } from "@bufbuild/protobuf";
import { BOOL_FILTER, EmployeeMetadata, INVENTORY_LIFECYCLE, INVENTORY_SORT_KEY, SORT_ORDER } from "./base.scailo_pb.js";
import { FAMILY_TYPE } from "./families.scailo_pb.js";

/**
 *
 * Stores all the possible references from which a generic inventory can be added
 *
 * @generated from enum Scailo.GENERIC_INVENTORY_REF_FROM
 */
export enum GENERIC_INVENTORY_REF_FROM {
  /**
   * Used only in filters
   *
   * @generated from enum value: GENERIC_INVENTORY_REF_FROM_ANY_UNSPECIFIED = 0;
   */
  GENERIC_INVENTORY_REF_FROM_ANY_UNSPECIFIED = 0,

  /**
   * Denotes that the component originated from initial stock
   *
   * @generated from enum value: GENERIC_INVENTORY_REF_FROM_INITIAL_STOCK = 1;
   */
  GENERIC_INVENTORY_REF_FROM_INITIAL_STOCK = 1,

  /**
   * Denotes that the component originated from a goods receipt
   *
   * @generated from enum value: GENERIC_INVENTORY_REF_FROM_GOODS_RECEIPT = 2;
   */
  GENERIC_INVENTORY_REF_FROM_GOODS_RECEIPT = 2,

  /**
   * Denotes that the component originated from an inward job free issue material
   *
   * @generated from enum value: GENERIC_INVENTORY_REF_FROM_INWARD_JOB_FREE_ISSUE_MATERIAL = 3;
   */
  GENERIC_INVENTORY_REF_FROM_INWARD_JOB_FREE_ISSUE_MATERIAL = 3,

  /**
   * Denotes that the component originated from an outward job free issue material
   *
   * @generated from enum value: GENERIC_INVENTORY_REF_FROM_OUTWARD_JOB_FREE_ISSUE_MATERIAL = 4;
   */
  GENERIC_INVENTORY_REF_FROM_OUTWARD_JOB_FREE_ISSUE_MATERIAL = 4,

  /**
   * Denotes that the component originated from a production plan
   *
   * @generated from enum value: GENERIC_INVENTORY_REF_FROM_PRODUCTION_PLAN = 5;
   */
  GENERIC_INVENTORY_REF_FROM_PRODUCTION_PLAN = 5,
}
// Retrieve enum metadata with: proto3.getEnumType(GENERIC_INVENTORY_REF_FROM)
proto3.util.setEnumType(GENERIC_INVENTORY_REF_FROM, "Scailo.GENERIC_INVENTORY_REF_FROM", [
  { no: 0, name: "GENERIC_INVENTORY_REF_FROM_ANY_UNSPECIFIED" },
  { no: 1, name: "GENERIC_INVENTORY_REF_FROM_INITIAL_STOCK" },
  { no: 2, name: "GENERIC_INVENTORY_REF_FROM_GOODS_RECEIPT" },
  { no: 3, name: "GENERIC_INVENTORY_REF_FROM_INWARD_JOB_FREE_ISSUE_MATERIAL" },
  { no: 4, name: "GENERIC_INVENTORY_REF_FROM_OUTWARD_JOB_FREE_ISSUE_MATERIAL" },
  { no: 5, name: "GENERIC_INVENTORY_REF_FROM_PRODUCTION_PLAN" },
]);

/**
 *
 * Describes the available types of inventory node origins
 *
 * @generated from enum Scailo.INVENTORY_NODE_ORIGIN_TYPE
 */
export enum INVENTORY_NODE_ORIGIN_TYPE {
  /**
   * Use this only in filter and search queries
   *
   * @generated from enum value: INVENTORY_NODE_ORIGIN_TYPE_ANY_UNSPECIFIED = 0;
   */
  INVENTORY_NODE_ORIGIN_TYPE_ANY_UNSPECIFIED = 0,

  /**
   * Denotes that the origin is from a sales order
   *
   * @generated from enum value: INVENTORY_NODE_ORIGIN_TYPE_SALES_ORDER = 10;
   */
  INVENTORY_NODE_ORIGIN_TYPE_SALES_ORDER = 10,

  /**
   * Denotes that the origin is from a sales return
   *
   * @generated from enum value: INVENTORY_NODE_ORIGIN_TYPE_SALES_RETURN = 20;
   */
  INVENTORY_NODE_ORIGIN_TYPE_SALES_RETURN = 20,

  /**
   * Denotes that the origin is from a production plan
   *
   * @generated from enum value: INVENTORY_NODE_ORIGIN_TYPE_PRODUCTION_PLAN = 30;
   */
  INVENTORY_NODE_ORIGIN_TYPE_PRODUCTION_PLAN = 30,

  /**
   * Denotes that the origin is from a work order equation
   *
   * @generated from enum value: INVENTORY_NODE_ORIGIN_TYPE_WORK_ORDER_EQUATION = 40;
   */
  INVENTORY_NODE_ORIGIN_TYPE_WORK_ORDER_EQUATION = 40,

  /**
   * Denotes that the origin from minimum stock
   *
   * @generated from enum value: INVENTORY_NODE_ORIGIN_TYPE_MIN_STOCK = 50;
   */
  INVENTORY_NODE_ORIGIN_TYPE_MIN_STOCK = 50,

  /**
   * Denotes that the origin is from a goods dispatch
   *
   * @generated from enum value: INVENTORY_NODE_ORIGIN_TYPE_GOODS_DISPATCH = 60;
   */
  INVENTORY_NODE_ORIGIN_TYPE_GOODS_DISPATCH = 60,

  /**
   * Denotes that the origin is from a stock issuance
   *
   * @generated from enum value: INVENTORY_NODE_ORIGIN_TYPE_STOCK_ISSUANCE = 70;
   */
  INVENTORY_NODE_ORIGIN_TYPE_STOCK_ISSUANCE = 70,

  /**
   * Denotes that the origin is from a family equation
   *
   * @generated from enum value: INVENTORY_NODE_ORIGIN_TYPE_FAMILY_EQUATION = 80;
   */
  INVENTORY_NODE_ORIGIN_TYPE_FAMILY_EQUATION = 80,

  /**
   * Denotes that the origin is from work in progress
   *
   * @generated from enum value: INVENTORY_NODE_ORIGIN_TYPE_WORK_IN_PROGRESS = 90;
   */
  INVENTORY_NODE_ORIGIN_TYPE_WORK_IN_PROGRESS = 90,

  /**
   * Denotes that the origin is from net indented
   *
   * @generated from enum value: INVENTORY_NODE_ORIGIN_TYPE_NET_INDENTED = 100;
   */
  INVENTORY_NODE_ORIGIN_TYPE_NET_INDENTED = 100,

  /**
   * Dentoes that the origin is from net ordered
   *
   * @generated from enum value: INVENTORY_NODE_ORIGIN_TYPE_NET_ORDERED = 110;
   */
  INVENTORY_NODE_ORIGIN_TYPE_NET_ORDERED = 110,

  /**
   * Denotes that the origin is from iqc
   *
   * @generated from enum value: INVENTORY_NODE_ORIGIN_TYPE_QC = 120;
   */
  INVENTORY_NODE_ORIGIN_TYPE_QC = 120,

  /**
   * Denotes that the origin is from rejected
   *
   * @generated from enum value: INVENTORY_NODE_ORIGIN_TYPE_REJECTED = 130;
   */
  INVENTORY_NODE_ORIGIN_TYPE_REJECTED = 130,

  /**
   * Denotes that the origin is from returnable
   *
   * @generated from enum value: INVENTORY_NODE_ORIGIN_TYPE_RETURNABLE = 140;
   */
  INVENTORY_NODE_ORIGIN_TYPE_RETURNABLE = 140,

  /**
   * Denotes that the origin is from rework
   *
   * @generated from enum value: INVENTORY_NODE_ORIGIN_TYPE_REWORK = 150;
   */
  INVENTORY_NODE_ORIGIN_TYPE_REWORK = 150,

  /**
   * Denotes that the origin is from scrap
   *
   * @generated from enum value: INVENTORY_NODE_ORIGIN_TYPE_SCRAP = 160;
   */
  INVENTORY_NODE_ORIGIN_TYPE_SCRAP = 160,

  /**
   * Denotes that the origin is from store
   *
   * @generated from enum value: INVENTORY_NODE_ORIGIN_TYPE_STORE = 170;
   */
  INVENTORY_NODE_ORIGIN_TYPE_STORE = 170,
}
// Retrieve enum metadata with: proto3.getEnumType(INVENTORY_NODE_ORIGIN_TYPE)
proto3.util.setEnumType(INVENTORY_NODE_ORIGIN_TYPE, "Scailo.INVENTORY_NODE_ORIGIN_TYPE", [
  { no: 0, name: "INVENTORY_NODE_ORIGIN_TYPE_ANY_UNSPECIFIED" },
  { no: 10, name: "INVENTORY_NODE_ORIGIN_TYPE_SALES_ORDER" },
  { no: 20, name: "INVENTORY_NODE_ORIGIN_TYPE_SALES_RETURN" },
  { no: 30, name: "INVENTORY_NODE_ORIGIN_TYPE_PRODUCTION_PLAN" },
  { no: 40, name: "INVENTORY_NODE_ORIGIN_TYPE_WORK_ORDER_EQUATION" },
  { no: 50, name: "INVENTORY_NODE_ORIGIN_TYPE_MIN_STOCK" },
  { no: 60, name: "INVENTORY_NODE_ORIGIN_TYPE_GOODS_DISPATCH" },
  { no: 70, name: "INVENTORY_NODE_ORIGIN_TYPE_STOCK_ISSUANCE" },
  { no: 80, name: "INVENTORY_NODE_ORIGIN_TYPE_FAMILY_EQUATION" },
  { no: 90, name: "INVENTORY_NODE_ORIGIN_TYPE_WORK_IN_PROGRESS" },
  { no: 100, name: "INVENTORY_NODE_ORIGIN_TYPE_NET_INDENTED" },
  { no: 110, name: "INVENTORY_NODE_ORIGIN_TYPE_NET_ORDERED" },
  { no: 120, name: "INVENTORY_NODE_ORIGIN_TYPE_QC" },
  { no: 130, name: "INVENTORY_NODE_ORIGIN_TYPE_REJECTED" },
  { no: 140, name: "INVENTORY_NODE_ORIGIN_TYPE_RETURNABLE" },
  { no: 150, name: "INVENTORY_NODE_ORIGIN_TYPE_REWORK" },
  { no: 160, name: "INVENTORY_NODE_ORIGIN_TYPE_SCRAP" },
  { no: 170, name: "INVENTORY_NODE_ORIGIN_TYPE_STORE" },
]);

/**
 *
 * Describes the parameters that are present in a generic inventory payload, which is an abstraction over every inventory item that consists of the common parameters
 *
 * @generated from message Scailo.GenericInventory
 */
export class GenericInventory extends Message<GenericInventory> {
  /**
   * Stores a globally unique entity UUID. This will be set at the organization level
   *
   * @generated from field: string entity_uuid = 1;
   */
  entityUuid = "";

  /**
   * Stores the metadata of this inventory item
   *
   * @generated from field: Scailo.EmployeeMetadata metadata = 2;
   */
  metadata?: EmployeeMetadata;

  /**
   * The status of this inventory item
   *
   * @generated from field: Scailo.INVENTORY_LIFECYCLE status = 4;
   */
  status = INVENTORY_LIFECYCLE.INVENTORY_LIFECYCLE_ANY_UNSPECIFIED;

  /**
   * The timestamp of when the item was admitted into store
   *
   * @generated from field: uint64 store_intake_at = 10;
   */
  storeIntakeAt = protoInt64.zero;

  /**
   * The timestamp of when the item was either consumed or rejected
   *
   * @generated from field: uint64 consumed_or_rejected_at = 11;
   */
  consumedOrRejectedAt = protoInt64.zero;

  /**
   * The timestamp of when the rework process began
   *
   * @generated from field: uint64 rework_start_at = 12;
   */
  reworkStartAt = protoInt64.zero;

  /**
   * The timestamp of when the rework process ended
   *
   * @generated from field: uint64 rework_end_at = 13;
   */
  reworkEndAt = protoInt64.zero;

  /**
   * The timestamp of when the item was either returned or scrapped
   *
   * @generated from field: uint64 returned_or_scrapped_at = 14;
   */
  returnedOrScrappedAt = protoInt64.zero;

  /**
   * The timestamp of when the item was discarded
   *
   * @generated from field: uint64 discarded_at = 15;
   */
  discardedAt = protoInt64.zero;

  /**
   * The associated vault folder ID
   *
   * @generated from field: uint64 vault_folder_id = 18;
   */
  vaultFolderId = protoInt64.zero;

  /**
   * The ID of the parent inventory item (if applicable)
   *
   * @generated from field: uint64 parent_ref_id = 30;
   */
  parentRefId = protoInt64.zero;

  /**
   * Stores the reference from
   *
   * @generated from field: Scailo.GENERIC_INVENTORY_REF_FROM ref_from = 31;
   */
  refFrom = GENERIC_INVENTORY_REF_FROM.GENERIC_INVENTORY_REF_FROM_ANY_UNSPECIFIED;

  /**
   * Stores the ID of the reference
   *
   * @generated from field: uint64 ref_id = 32;
   */
  refId = protoInt64.zero;

  /**
   * Stores the ID of the associated family
   *
   * @generated from field: uint64 family_id = 33;
   */
  familyId = protoInt64.zero;

  /**
   * The auto generated code of the inventory item
   *
   * @generated from field: string code = 34;
   */
  code = "";

  /**
   * Stores the internal code (as given by user)
   *
   * @generated from field: string internal_item_code = 35;
   */
  internalItemCode = "";

  /**
   * The computed hash of the inventory item
   *
   * @generated from field: string hash = 36;
   */
  hash = "";

  /**
   * Stores the quantity (in cents)
   *
   * @generated from field: uint64 quantity = 37;
   */
  quantity = protoInt64.zero;

  /**
   * Stores the remaining quantity (in cents)
   *
   * @generated from field: uint64 quantity_remaining = 38;
   */
  quantityRemaining = protoInt64.zero;

  /**
   * Stores an optional secondary unit of inventory item
   *
   * @generated from field: uint64 secondary_uom_id = 39;
   */
  secondaryUomId = protoInt64.zero;

  /**
   * Stores an optional quantity in the secondary unit of inventory item
   *
   * @generated from field: uint64 secondary_quantity = 40;
   */
  secondaryQuantity = protoInt64.zero;

  /**
   * Stores an optional shelf life as a timestamp
   *
   * @generated from field: uint64 shelf_life_timestamp = 41;
   */
  shelfLifeTimestamp = protoInt64.zero;

  /**
   * Stores an optional warranty as a timestamp
   *
   * @generated from field: uint64 warranty_timestamp = 42;
   */
  warrantyTimestamp = protoInt64.zero;

  /**
   * Stores the store to which the inventory item is sent to
   *
   * @generated from field: uint64 store_id = 50;
   */
  storeId = protoInt64.zero;

  /**
   * Stores an optional ID of the associated storage that the inventory item is stored in
   *
   * @generated from field: uint64 storage_id = 51;
   */
  storageId = protoInt64.zero;

  /**
   * Stores if the associated QC report should be public
   *
   * @generated from field: bool is_qc_report_public = 52;
   */
  isQcReportPublic = false;

  /**
   * The location ID of where the item needs to be stored
   *
   * @generated from field: uint64 location_id = 54;
   */
  locationId = protoInt64.zero;

  /**
   * Stores any applicable remaining dimensions as a string
   *
   * @generated from field: string remaining_dimensions = 55;
   */
  remainingDimensions = "";

  /**
   * The description of the inventory item
   *
   * @generated from field: string description = 60;
   */
  description = "";

  /**
   * The short URL of the item
   *
   * @generated from field: string short_url = 70;
   */
  shortUrl = "";

  constructor(data?: PartialMessage<GenericInventory>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.GenericInventory";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "entity_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "metadata", kind: "message", T: EmployeeMetadata },
    { no: 4, name: "status", kind: "enum", T: proto3.getEnumType(INVENTORY_LIFECYCLE) },
    { no: 10, name: "store_intake_at", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 11, name: "consumed_or_rejected_at", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 12, name: "rework_start_at", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 13, name: "rework_end_at", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 14, name: "returned_or_scrapped_at", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 15, name: "discarded_at", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 18, name: "vault_folder_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 30, name: "parent_ref_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 31, name: "ref_from", kind: "enum", T: proto3.getEnumType(GENERIC_INVENTORY_REF_FROM) },
    { no: 32, name: "ref_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 33, name: "family_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 34, name: "code", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 35, name: "internal_item_code", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 36, name: "hash", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 37, name: "quantity", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 38, name: "quantity_remaining", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 39, name: "secondary_uom_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 40, name: "secondary_quantity", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 41, name: "shelf_life_timestamp", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 42, name: "warranty_timestamp", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 50, name: "store_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 51, name: "storage_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 52, name: "is_qc_report_public", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 54, name: "location_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 55, name: "remaining_dimensions", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 60, name: "description", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 70, name: "short_url", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GenericInventory {
    return new GenericInventory().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GenericInventory {
    return new GenericInventory().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GenericInventory {
    return new GenericInventory().fromJsonString(jsonString, options);
  }

  static equals(a: GenericInventory | PlainMessage<GenericInventory> | undefined, b: GenericInventory | PlainMessage<GenericInventory> | undefined): boolean {
    return proto3.util.equals(GenericInventory, a, b);
  }
}

/**
 *
 * Describes the message consisting of the list of generic inventory
 *
 * @generated from message Scailo.GenericInventoryList
 */
export class GenericInventoryList extends Message<GenericInventoryList> {
  /**
   * List of generic inventory
   *
   * @generated from field: repeated Scailo.GenericInventory list = 1;
   */
  list: GenericInventory[] = [];

  constructor(data?: PartialMessage<GenericInventoryList>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.GenericInventoryList";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "list", kind: "message", T: GenericInventory, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GenericInventoryList {
    return new GenericInventoryList().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GenericInventoryList {
    return new GenericInventoryList().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GenericInventoryList {
    return new GenericInventoryList().fromJsonString(jsonString, options);
  }

  static equals(a: GenericInventoryList | PlainMessage<GenericInventoryList> | undefined, b: GenericInventoryList | PlainMessage<GenericInventoryList> | undefined): boolean {
    return proto3.util.equals(GenericInventoryList, a, b);
  }
}

/**
 *
 * Describes the parameters that are present in an inventory code map
 *
 * @generated from message Scailo.InventoryCodeMap
 */
export class InventoryCodeMap extends Message<InventoryCodeMap> {
  /**
   * Stores a globally unique entity UUID. This will be set at the organization level
   *
   * @generated from field: string entity_uuid = 1;
   */
  entityUuid = "";

  /**
   * Stores the metadata of this inventory item
   *
   * @generated from field: Scailo.EmployeeMetadata metadata = 2;
   */
  metadata?: EmployeeMetadata;

  /**
   * Stores the purpose
   *
   * @generated from field: string purpose = 10;
   */
  purpose = "";

  /**
   * The type of the family
   *
   * @generated from field: Scailo.FAMILY_TYPE family_type = 11;
   */
  familyType = FAMILY_TYPE.FAMILY_TYPE_ANY_UNSPECIFIED;

  /**
   * Stores the family ID
   *
   * @generated from field: uint64 family_id = 12;
   */
  familyId = protoInt64.zero;

  /**
   * Stores the inventory item's code
   *
   * @generated from field: string code = 20;
   */
  code = "";

  /**
   * The hash of the item
   *
   * @generated from field: string hash = 21;
   */
  hash = "";

  /**
   * The short URL of the item
   *
   * @generated from field: string short_url = 30;
   */
  shortUrl = "";

  constructor(data?: PartialMessage<InventoryCodeMap>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.InventoryCodeMap";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "entity_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "metadata", kind: "message", T: EmployeeMetadata },
    { no: 10, name: "purpose", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 11, name: "family_type", kind: "enum", T: proto3.getEnumType(FAMILY_TYPE) },
    { no: 12, name: "family_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 20, name: "code", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 21, name: "hash", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 30, name: "short_url", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): InventoryCodeMap {
    return new InventoryCodeMap().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): InventoryCodeMap {
    return new InventoryCodeMap().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): InventoryCodeMap {
    return new InventoryCodeMap().fromJsonString(jsonString, options);
  }

  static equals(a: InventoryCodeMap | PlainMessage<InventoryCodeMap> | undefined, b: InventoryCodeMap | PlainMessage<InventoryCodeMap> | undefined): boolean {
    return proto3.util.equals(InventoryCodeMap, a, b);
  }
}

/**
 *
 * Describes the message that consists of parameters that are required to retrieve issuable inventory
 *
 * @generated from message Scailo.IssuableInventorySearchReq
 */
export class IssuableInventorySearchReq extends Message<IssuableInventorySearchReq> {
  /**
   * Stores the status of the inventory
   *
   * @generated from field: Scailo.INVENTORY_LIFECYCLE status = 1;
   */
  status = INVENTORY_LIFECYCLE.INVENTORY_LIFECYCLE_ANY_UNSPECIFIED;

  /**
   * Stores the search key
   *
   * @generated from field: string search_key = 5;
   */
  searchKey = "";

  /**
   * Stores the ID of the family that needs to be retrieved
   *
   * @generated from field: uint64 family_id = 10;
   */
  familyId = protoInt64.zero;

  /**
   * Stores the ID of the location from where the inventory needs to be retrieved
   *
   * @generated from field: uint64 location_id = 15;
   */
  locationId = protoInt64.zero;

  constructor(data?: PartialMessage<IssuableInventorySearchReq>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.IssuableInventorySearchReq";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "status", kind: "enum", T: proto3.getEnumType(INVENTORY_LIFECYCLE) },
    { no: 5, name: "search_key", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 10, name: "family_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 15, name: "location_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): IssuableInventorySearchReq {
    return new IssuableInventorySearchReq().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): IssuableInventorySearchReq {
    return new IssuableInventorySearchReq().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): IssuableInventorySearchReq {
    return new IssuableInventorySearchReq().fromJsonString(jsonString, options);
  }

  static equals(a: IssuableInventorySearchReq | PlainMessage<IssuableInventorySearchReq> | undefined, b: IssuableInventorySearchReq | PlainMessage<IssuableInventorySearchReq> | undefined): boolean {
    return proto3.util.equals(IssuableInventorySearchReq, a, b);
  }
}

/**
 *
 * Describes the request to search for an inventory item using the item's hash
 *
 * @generated from message Scailo.InventoryHashSearchReq
 */
export class InventoryHashSearchReq extends Message<InventoryHashSearchReq> {
  /**
   * The hash of the item
   *
   * @generated from field: string hash = 1;
   */
  hash = "";

  constructor(data?: PartialMessage<InventoryHashSearchReq>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.InventoryHashSearchReq";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "hash", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): InventoryHashSearchReq {
    return new InventoryHashSearchReq().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): InventoryHashSearchReq {
    return new InventoryHashSearchReq().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): InventoryHashSearchReq {
    return new InventoryHashSearchReq().fromJsonString(jsonString, options);
  }

  static equals(a: InventoryHashSearchReq | PlainMessage<InventoryHashSearchReq> | undefined, b: InventoryHashSearchReq | PlainMessage<InventoryHashSearchReq> | undefined): boolean {
    return proto3.util.equals(InventoryHashSearchReq, a, b);
  }
}

/**
 *
 * Describes the request to calculate the quantity remaining for the given family in a particular status
 *
 * @generated from message Scailo.InventoryServiceFamilyQuantityReq
 */
export class InventoryServiceFamilyQuantityReq extends Message<InventoryServiceFamilyQuantityReq> {
  /**
   * The status of this inventory item
   *
   * @generated from field: Scailo.INVENTORY_LIFECYCLE status = 10;
   */
  status = INVENTORY_LIFECYCLE.INVENTORY_LIFECYCLE_ANY_UNSPECIFIED;

  /**
   * Stores the ID of the associated family
   *
   * @generated from field: uint64 family_id = 20;
   */
  familyId = protoInt64.zero;

  constructor(data?: PartialMessage<InventoryServiceFamilyQuantityReq>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.InventoryServiceFamilyQuantityReq";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 10, name: "status", kind: "enum", T: proto3.getEnumType(INVENTORY_LIFECYCLE) },
    { no: 20, name: "family_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): InventoryServiceFamilyQuantityReq {
    return new InventoryServiceFamilyQuantityReq().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): InventoryServiceFamilyQuantityReq {
    return new InventoryServiceFamilyQuantityReq().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): InventoryServiceFamilyQuantityReq {
    return new InventoryServiceFamilyQuantityReq().fromJsonString(jsonString, options);
  }

  static equals(a: InventoryServiceFamilyQuantityReq | PlainMessage<InventoryServiceFamilyQuantityReq> | undefined, b: InventoryServiceFamilyQuantityReq | PlainMessage<InventoryServiceFamilyQuantityReq> | undefined): boolean {
    return proto3.util.equals(InventoryServiceFamilyQuantityReq, a, b);
  }
}

/**
 *
 * Describes the message that consists of parameters that are required to retrieve returnable inventory
 *
 * @generated from message Scailo.ReturnableInventorySearchReq
 */
export class ReturnableInventorySearchReq extends Message<ReturnableInventorySearchReq> {
  /**
   * Stores the ID of the reference (such as purchase order, sales order, inward job, outward job, stock issuance)
   *
   * @generated from field: uint64 ref_id = 1;
   */
  refId = protoInt64.zero;

  /**
   * Stores the search key
   *
   * @generated from field: string search_key = 5;
   */
  searchKey = "";

  /**
   * Stores the ID of the family that needs to be retrieved
   *
   * @generated from field: uint64 family_id = 10;
   */
  familyId = protoInt64.zero;

  /**
   * Stores the ID of the location from where the inventory needs to be retrieved
   *
   * @generated from field: uint64 location_id = 15;
   */
  locationId = protoInt64.zero;

  constructor(data?: PartialMessage<ReturnableInventorySearchReq>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.ReturnableInventorySearchReq";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "ref_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 5, name: "search_key", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 10, name: "family_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 15, name: "location_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ReturnableInventorySearchReq {
    return new ReturnableInventorySearchReq().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ReturnableInventorySearchReq {
    return new ReturnableInventorySearchReq().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ReturnableInventorySearchReq {
    return new ReturnableInventorySearchReq().fromJsonString(jsonString, options);
  }

  static equals(a: ReturnableInventorySearchReq | PlainMessage<ReturnableInventorySearchReq> | undefined, b: ReturnableInventorySearchReq | PlainMessage<ReturnableInventorySearchReq> | undefined): boolean {
    return proto3.util.equals(ReturnableInventorySearchReq, a, b);
  }
}

/**
 *
 * Describes the message that consists of parameters that are required to search for returnable inventory
 *
 * @generated from message Scailo.SearchReturnableInventoryReq
 */
export class SearchReturnableInventoryReq extends Message<SearchReturnableInventoryReq> {
  /**
   * If true, then returns only active records. If false, then returns only inactive records
   *
   * @generated from field: Scailo.BOOL_FILTER is_active = 1;
   */
  isActive = BOOL_FILTER.BOOL_FILTER_ANY_UNSPECIFIED;

  /**
   * The number of records that need to be sent in the response. Returns all records if it is set to -1
   *
   * @generated from field: int64 count = 2;
   */
  count = protoInt64.zero;

  /**
   * The number that need to be offset by before fetching the records
   *
   * @generated from field: uint64 offset = 3;
   */
  offset = protoInt64.zero;

  /**
   * The sort order that is to be used to fetch the pagination response
   *
   * @generated from field: Scailo.SORT_ORDER sort_order = 4;
   */
  sortOrder = SORT_ORDER.ASCENDING_UNSPECIFIED;

  /**
   * The sort key that is to be used to fetch the pagination response
   *
   * @generated from field: Scailo.INVENTORY_SORT_KEY sort_key = 5;
   */
  sortKey = INVENTORY_SORT_KEY.INVENTORY_SORT_KEY_ID_UNSPECIFIED;

  /**
   * The entity UUID that is to be used to filter records
   *
   * @generated from field: string entity_uuid = 6;
   */
  entityUuid = "";

  /**
   * Describes the key with which the search operation needs to be performed
   *
   * @generated from field: string search_key = 11;
   */
  searchKey = "";

  /**
   * Stores the ID of the associated family
   *
   * @generated from field: uint64 family_id = 33;
   */
  familyId = protoInt64.zero;

  /**
   * The minimum remaining quantity (in cents)
   *
   * @generated from field: uint64 quantity_remaining_min = 37;
   */
  quantityRemainingMin = protoInt64.zero;

  /**
   * The maximum remaining quantity (in cents)
   *
   * @generated from field: uint64 quantity_remaining_max = 38;
   */
  quantityRemainingMax = protoInt64.zero;

  /**
   * Stores an optional secondary unit of inventory item
   *
   * @generated from field: uint64 secondary_uom_id = 39;
   */
  secondaryUomId = protoInt64.zero;

  /**
   * The start range of shelf life timestamp
   *
   * @generated from field: uint64 shelf_life_timestamp_start = 40;
   */
  shelfLifeTimestampStart = protoInt64.zero;

  /**
   * The end range of shelf life timestamp
   *
   * @generated from field: uint64 shelf_life_timestamp_end = 41;
   */
  shelfLifeTimestampEnd = protoInt64.zero;

  /**
   * The start range of the warranty timestamp
   *
   * @generated from field: uint64 warranty_timestamp_start = 42;
   */
  warrantyTimestampStart = protoInt64.zero;

  /**
   * The end range of the warranty timestamp
   *
   * @generated from field: uint64 warranty_timestamp_end = 43;
   */
  warrantyTimestampEnd = protoInt64.zero;

  /**
   * Stores if the associated QC report should be public
   *
   * @generated from field: Scailo.BOOL_FILTER is_qc_report_public = 52;
   */
  isQcReportPublic = BOOL_FILTER.BOOL_FILTER_ANY_UNSPECIFIED;

  /**
   * Filter by the location ID
   *
   * @generated from field: uint64 location_id = 54;
   */
  locationId = protoInt64.zero;

  constructor(data?: PartialMessage<SearchReturnableInventoryReq>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.SearchReturnableInventoryReq";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "is_active", kind: "enum", T: proto3.getEnumType(BOOL_FILTER) },
    { no: 2, name: "count", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "offset", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 4, name: "sort_order", kind: "enum", T: proto3.getEnumType(SORT_ORDER) },
    { no: 5, name: "sort_key", kind: "enum", T: proto3.getEnumType(INVENTORY_SORT_KEY) },
    { no: 6, name: "entity_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 11, name: "search_key", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 33, name: "family_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 37, name: "quantity_remaining_min", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 38, name: "quantity_remaining_max", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 39, name: "secondary_uom_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 40, name: "shelf_life_timestamp_start", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 41, name: "shelf_life_timestamp_end", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 42, name: "warranty_timestamp_start", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 43, name: "warranty_timestamp_end", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 52, name: "is_qc_report_public", kind: "enum", T: proto3.getEnumType(BOOL_FILTER) },
    { no: 54, name: "location_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SearchReturnableInventoryReq {
    return new SearchReturnableInventoryReq().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SearchReturnableInventoryReq {
    return new SearchReturnableInventoryReq().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SearchReturnableInventoryReq {
    return new SearchReturnableInventoryReq().fromJsonString(jsonString, options);
  }

  static equals(a: SearchReturnableInventoryReq | PlainMessage<SearchReturnableInventoryReq> | undefined, b: SearchReturnableInventoryReq | PlainMessage<SearchReturnableInventoryReq> | undefined): boolean {
    return proto3.util.equals(SearchReturnableInventoryReq, a, b);
  }
}

/**
 *
 * Describes the message that consists of parameters that are required to search for returnable inventory for a record with the given identifier
 *
 * @generated from message Scailo.SearchReturnableInventoryForIdentifierUUID
 */
export class SearchReturnableInventoryForIdentifierUUID extends Message<SearchReturnableInventoryForIdentifierUUID> {
  /**
   * UUID of the resource
   *
   * @generated from field: string uuid = 1;
   */
  uuid = "";

  /**
   * The search filter to apply
   *
   * @generated from field: Scailo.SearchReturnableInventoryReq filter = 10;
   */
  filter?: SearchReturnableInventoryReq;

  constructor(data?: PartialMessage<SearchReturnableInventoryForIdentifierUUID>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.SearchReturnableInventoryForIdentifierUUID";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 10, name: "filter", kind: "message", T: SearchReturnableInventoryReq },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SearchReturnableInventoryForIdentifierUUID {
    return new SearchReturnableInventoryForIdentifierUUID().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SearchReturnableInventoryForIdentifierUUID {
    return new SearchReturnableInventoryForIdentifierUUID().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SearchReturnableInventoryForIdentifierUUID {
    return new SearchReturnableInventoryForIdentifierUUID().fromJsonString(jsonString, options);
  }

  static equals(a: SearchReturnableInventoryForIdentifierUUID | PlainMessage<SearchReturnableInventoryForIdentifierUUID> | undefined, b: SearchReturnableInventoryForIdentifierUUID | PlainMessage<SearchReturnableInventoryForIdentifierUUID> | undefined): boolean {
    return proto3.util.equals(SearchReturnableInventoryForIdentifierUUID, a, b);
  }
}

/**
 *
 * Describes the message that consists of parameters that are required to filter for returnable inventory
 *
 * @generated from message Scailo.FilterReturnableInventoryReq
 */
export class FilterReturnableInventoryReq extends Message<FilterReturnableInventoryReq> {
  /**
   * If true, then returns only active records. If false, then returns only inactive records
   *
   * @generated from field: Scailo.BOOL_FILTER is_active = 1;
   */
  isActive = BOOL_FILTER.BOOL_FILTER_ANY_UNSPECIFIED;

  /**
   * The number of records that need to be sent in the response. Returns all records if it is set to -1
   *
   * @generated from field: int64 count = 2;
   */
  count = protoInt64.zero;

  /**
   * The number that need to be offset by before fetching the records
   *
   * @generated from field: uint64 offset = 3;
   */
  offset = protoInt64.zero;

  /**
   * The sort order that is to be used to fetch the pagination response
   *
   * @generated from field: Scailo.SORT_ORDER sort_order = 4;
   */
  sortOrder = SORT_ORDER.ASCENDING_UNSPECIFIED;

  /**
   * The sort key that is to be used to fetch the pagination response
   *
   * @generated from field: Scailo.INVENTORY_SORT_KEY sort_key = 5;
   */
  sortKey = INVENTORY_SORT_KEY.INVENTORY_SORT_KEY_ID_UNSPECIFIED;

  /**
   * The minimum timestamp that needs to be considered to filter by creation
   *
   * @generated from field: uint64 creation_timestamp_start = 101;
   */
  creationTimestampStart = protoInt64.zero;

  /**
   * The maximum timestamp that needs to be considered to filter by creation
   *
   * @generated from field: uint64 creation_timestamp_end = 102;
   */
  creationTimestampEnd = protoInt64.zero;

  /**
   * The minimum timestamp that needs to be considered to filter by modification
   *
   * @generated from field: uint64 modification_timestamp_start = 103;
   */
  modificationTimestampStart = protoInt64.zero;

  /**
   * The maximum timestamp that needs to be considered to filter by modification
   *
   * @generated from field: uint64 modification_timestamp_end = 104;
   */
  modificationTimestampEnd = protoInt64.zero;

  /**
   * The entity UUID that is to be used to filter records
   *
   * @generated from field: string entity_uuid = 8;
   */
  entityUuid = "";

  /**
   * Stores the ID of the associated family
   *
   * @generated from field: uint64 family_id = 33;
   */
  familyId = protoInt64.zero;

  /**
   * The auto generated code of the inventory item
   *
   * @generated from field: string code = 34;
   */
  code = "";

  /**
   * Stores the internal code (as given by user)
   *
   * @generated from field: string internal_item_code = 35;
   */
  internalItemCode = "";

  /**
   * The computed hash of the inventory item
   *
   * @generated from field: string hash = 36;
   */
  hash = "";

  /**
   * The minimum remaining quantity (in cents)
   *
   * @generated from field: uint64 quantity_remaining_min = 37;
   */
  quantityRemainingMin = protoInt64.zero;

  /**
   * The maximum remaining quantity (in cents)
   *
   * @generated from field: uint64 quantity_remaining_max = 38;
   */
  quantityRemainingMax = protoInt64.zero;

  /**
   * Stores an optional secondary unit of inventory item
   *
   * @generated from field: uint64 secondary_uom_id = 39;
   */
  secondaryUomId = protoInt64.zero;

  /**
   * The start range of shelf life timestamp
   *
   * @generated from field: uint64 shelf_life_timestamp_start = 40;
   */
  shelfLifeTimestampStart = protoInt64.zero;

  /**
   * The end range of shelf life timestamp
   *
   * @generated from field: uint64 shelf_life_timestamp_end = 41;
   */
  shelfLifeTimestampEnd = protoInt64.zero;

  /**
   * The start range of the warranty timestamp
   *
   * @generated from field: uint64 warranty_timestamp_start = 42;
   */
  warrantyTimestampStart = protoInt64.zero;

  /**
   * The end range of the warranty timestamp
   *
   * @generated from field: uint64 warranty_timestamp_end = 43;
   */
  warrantyTimestampEnd = protoInt64.zero;

  /**
   * Stores if the associated QC report should be public
   *
   * @generated from field: Scailo.BOOL_FILTER is_qc_report_public = 52;
   */
  isQcReportPublic = BOOL_FILTER.BOOL_FILTER_ANY_UNSPECIFIED;

  /**
   * Filter by the location ID
   *
   * @generated from field: uint64 location_id = 54;
   */
  locationId = protoInt64.zero;

  constructor(data?: PartialMessage<FilterReturnableInventoryReq>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.FilterReturnableInventoryReq";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "is_active", kind: "enum", T: proto3.getEnumType(BOOL_FILTER) },
    { no: 2, name: "count", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "offset", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 4, name: "sort_order", kind: "enum", T: proto3.getEnumType(SORT_ORDER) },
    { no: 5, name: "sort_key", kind: "enum", T: proto3.getEnumType(INVENTORY_SORT_KEY) },
    { no: 101, name: "creation_timestamp_start", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 102, name: "creation_timestamp_end", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 103, name: "modification_timestamp_start", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 104, name: "modification_timestamp_end", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 8, name: "entity_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 33, name: "family_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 34, name: "code", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 35, name: "internal_item_code", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 36, name: "hash", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 37, name: "quantity_remaining_min", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 38, name: "quantity_remaining_max", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 39, name: "secondary_uom_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 40, name: "shelf_life_timestamp_start", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 41, name: "shelf_life_timestamp_end", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 42, name: "warranty_timestamp_start", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 43, name: "warranty_timestamp_end", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 52, name: "is_qc_report_public", kind: "enum", T: proto3.getEnumType(BOOL_FILTER) },
    { no: 54, name: "location_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): FilterReturnableInventoryReq {
    return new FilterReturnableInventoryReq().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): FilterReturnableInventoryReq {
    return new FilterReturnableInventoryReq().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): FilterReturnableInventoryReq {
    return new FilterReturnableInventoryReq().fromJsonString(jsonString, options);
  }

  static equals(a: FilterReturnableInventoryReq | PlainMessage<FilterReturnableInventoryReq> | undefined, b: FilterReturnableInventoryReq | PlainMessage<FilterReturnableInventoryReq> | undefined): boolean {
    return proto3.util.equals(FilterReturnableInventoryReq, a, b);
  }
}

/**
 *
 * Describes the message that consists of parameters that are required to filter returnable inventory for a record with the given identifier
 *
 * @generated from message Scailo.FilterReturnableInventoryForIdentifierUUID
 */
export class FilterReturnableInventoryForIdentifierUUID extends Message<FilterReturnableInventoryForIdentifierUUID> {
  /**
   * UUID of the resource
   *
   * @generated from field: string uuid = 1;
   */
  uuid = "";

  /**
   * The returnable inventory filter to apply
   *
   * @generated from field: Scailo.FilterReturnableInventoryReq filter = 10;
   */
  filter?: FilterReturnableInventoryReq;

  constructor(data?: PartialMessage<FilterReturnableInventoryForIdentifierUUID>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.FilterReturnableInventoryForIdentifierUUID";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 10, name: "filter", kind: "message", T: FilterReturnableInventoryReq },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): FilterReturnableInventoryForIdentifierUUID {
    return new FilterReturnableInventoryForIdentifierUUID().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): FilterReturnableInventoryForIdentifierUUID {
    return new FilterReturnableInventoryForIdentifierUUID().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): FilterReturnableInventoryForIdentifierUUID {
    return new FilterReturnableInventoryForIdentifierUUID().fromJsonString(jsonString, options);
  }

  static equals(a: FilterReturnableInventoryForIdentifierUUID | PlainMessage<FilterReturnableInventoryForIdentifierUUID> | undefined, b: FilterReturnableInventoryForIdentifierUUID | PlainMessage<FilterReturnableInventoryForIdentifierUUID> | undefined): boolean {
    return proto3.util.equals(FilterReturnableInventoryForIdentifierUUID, a, b);
  }
}

/**
 *
 * Describes the message consisting of all the inventory statistics for the given family ID
 *
 * @generated from message Scailo.ConsolidatedInventoryStatistics
 */
export class ConsolidatedInventoryStatistics extends Message<ConsolidatedInventoryStatistics> {
  /**
   * The ID of the family
   *
   * @generated from field: uint64 family_id = 1;
   */
  familyId = protoInt64.zero;

  /**
   * The base demand quantity
   *
   * @generated from field: int64 base_demand_count = 10;
   */
  baseDemandCount = protoInt64.zero;

  /**
   * The work in progress quantity
   *
   * @generated from field: int64 work_in_progress_count = 20;
   */
  workInProgressCount = protoInt64.zero;

  /**
   * The indented quantity
   *
   * @generated from field: int64 indented_count = 30;
   */
  indentedCount = protoInt64.zero;

  /**
   * The ordered quantity
   *
   * @generated from field: int64 ordered_count = 40;
   */
  orderedCount = protoInt64.zero;

  /**
   * The quantity in QC
   *
   * @generated from field: int64 qc_count = 100;
   */
  qcCount = protoInt64.zero;

  /**
   * The quantity that has been rejected
   *
   * @generated from field: int64 rejected_count = 110;
   */
  rejectedCount = protoInt64.zero;

  /**
   * The quantity that has been marked for return
   *
   * @generated from field: int64 returnable_count = 120;
   */
  returnableCount = protoInt64.zero;

  /**
   * The quantity in rework
   *
   * @generated from field: int64 rework_count = 130;
   */
  reworkCount = protoInt64.zero;

  /**
   * The quantity that has been scrapped
   *
   * @generated from field: int64 scrap_count = 140;
   */
  scrapCount = protoInt64.zero;

  /**
   * The quantity in store
   *
   * @generated from field: int64 store_count = 150;
   */
  storeCount = protoInt64.zero;

  /**
   * The quantity that is required
   *
   * @generated from field: int64 required_count = 200;
   */
  requiredCount = protoInt64.zero;

  constructor(data?: PartialMessage<ConsolidatedInventoryStatistics>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.ConsolidatedInventoryStatistics";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "family_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 10, name: "base_demand_count", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 20, name: "work_in_progress_count", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 30, name: "indented_count", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 40, name: "ordered_count", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 100, name: "qc_count", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 110, name: "rejected_count", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 120, name: "returnable_count", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 130, name: "rework_count", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 140, name: "scrap_count", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 150, name: "store_count", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 200, name: "required_count", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ConsolidatedInventoryStatistics {
    return new ConsolidatedInventoryStatistics().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ConsolidatedInventoryStatistics {
    return new ConsolidatedInventoryStatistics().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ConsolidatedInventoryStatistics {
    return new ConsolidatedInventoryStatistics().fromJsonString(jsonString, options);
  }

  static equals(a: ConsolidatedInventoryStatistics | PlainMessage<ConsolidatedInventoryStatistics> | undefined, b: ConsolidatedInventoryStatistics | PlainMessage<ConsolidatedInventoryStatistics> | undefined): boolean {
    return proto3.util.equals(ConsolidatedInventoryStatistics, a, b);
  }
}

/**
 *
 * Describes the abridged version of each production plan item
 *
 * @generated from message Scailo.AbridgedProductionPlanItem
 */
export class AbridgedProductionPlanItem extends Message<AbridgedProductionPlanItem> {
  /**
   * Stores the production plan ID
   *
   * @generated from field: uint64 production_plan_id = 10;
   */
  productionPlanId = protoInt64.zero;

  /**
   * Stores the family ID
   *
   * @generated from field: uint64 family_id = 20;
   */
  familyId = protoInt64.zero;

  /**
   * The quantity being manufactured (in cents)
   *
   * @generated from field: int64 quantity = 30;
   */
  quantity = protoInt64.zero;

  constructor(data?: PartialMessage<AbridgedProductionPlanItem>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.AbridgedProductionPlanItem";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 10, name: "production_plan_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 20, name: "family_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 30, name: "quantity", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AbridgedProductionPlanItem {
    return new AbridgedProductionPlanItem().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AbridgedProductionPlanItem {
    return new AbridgedProductionPlanItem().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AbridgedProductionPlanItem {
    return new AbridgedProductionPlanItem().fromJsonString(jsonString, options);
  }

  static equals(a: AbridgedProductionPlanItem | PlainMessage<AbridgedProductionPlanItem> | undefined, b: AbridgedProductionPlanItem | PlainMessage<AbridgedProductionPlanItem> | undefined): boolean {
    return proto3.util.equals(AbridgedProductionPlanItem, a, b);
  }
}

/**
 *
 * Describes the abridged version of each inventory item
 *
 * @generated from message Scailo.AbridgedInventoryItem
 */
export class AbridgedInventoryItem extends Message<AbridgedInventoryItem> {
  /**
   * Stores the ID of the associated family
   *
   * @generated from field: uint64 family_id = 10;
   */
  familyId = protoInt64.zero;

  /**
   * The computed hash of the inventory item
   *
   * @generated from field: string hash = 20;
   */
  hash = "";

  /**
   * Stores the quantity (in cents)
   *
   * @generated from field: int64 quantity = 30;
   */
  quantity = protoInt64.zero;

  constructor(data?: PartialMessage<AbridgedInventoryItem>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.AbridgedInventoryItem";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 10, name: "family_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 20, name: "hash", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 30, name: "quantity", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AbridgedInventoryItem {
    return new AbridgedInventoryItem().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AbridgedInventoryItem {
    return new AbridgedInventoryItem().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AbridgedInventoryItem {
    return new AbridgedInventoryItem().fromJsonString(jsonString, options);
  }

  static equals(a: AbridgedInventoryItem | PlainMessage<AbridgedInventoryItem> | undefined, b: AbridgedInventoryItem | PlainMessage<AbridgedInventoryItem> | undefined): boolean {
    return proto3.util.equals(AbridgedInventoryItem, a, b);
  }
}

/**
 *
 * Describes the abridged version of each purchase indent item
 *
 * @generated from message Scailo.AbridgedPurchaseIndentItem
 */
export class AbridgedPurchaseIndentItem extends Message<AbridgedPurchaseIndentItem> {
  /**
   * Stores the purchase indent ID
   *
   * @generated from field: uint64 purchase_indent_id = 10;
   */
  purchaseIndentId = protoInt64.zero;

  /**
   * Stores the family ID
   *
   * @generated from field: uint64 family_id = 20;
   */
  familyId = protoInt64.zero;

  /**
   * The quantity of the item (in cents)
   *
   * @generated from field: int64 quantity = 30;
   */
  quantity = protoInt64.zero;

  constructor(data?: PartialMessage<AbridgedPurchaseIndentItem>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.AbridgedPurchaseIndentItem";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 10, name: "purchase_indent_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 20, name: "family_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 30, name: "quantity", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AbridgedPurchaseIndentItem {
    return new AbridgedPurchaseIndentItem().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AbridgedPurchaseIndentItem {
    return new AbridgedPurchaseIndentItem().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AbridgedPurchaseIndentItem {
    return new AbridgedPurchaseIndentItem().fromJsonString(jsonString, options);
  }

  static equals(a: AbridgedPurchaseIndentItem | PlainMessage<AbridgedPurchaseIndentItem> | undefined, b: AbridgedPurchaseIndentItem | PlainMessage<AbridgedPurchaseIndentItem> | undefined): boolean {
    return proto3.util.equals(AbridgedPurchaseIndentItem, a, b);
  }
}

/**
 *
 * Describes the abridged version of each purchase order item
 *
 * @generated from message Scailo.AbridgedPurchaseOrderItem
 */
export class AbridgedPurchaseOrderItem extends Message<AbridgedPurchaseOrderItem> {
  /**
   * Stores the purchase order ID
   *
   * @generated from field: uint64 purchase_order_id = 10;
   */
  purchaseOrderId = protoInt64.zero;

  /**
   * Stores the family ID
   *
   * @generated from field: uint64 family_id = 20;
   */
  familyId = protoInt64.zero;

  /**
   * The quantity of the item (in cents)
   *
   * @generated from field: int64 quantity = 30;
   */
  quantity = protoInt64.zero;

  constructor(data?: PartialMessage<AbridgedPurchaseOrderItem>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.AbridgedPurchaseOrderItem";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 10, name: "purchase_order_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 20, name: "family_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 30, name: "quantity", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AbridgedPurchaseOrderItem {
    return new AbridgedPurchaseOrderItem().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AbridgedPurchaseOrderItem {
    return new AbridgedPurchaseOrderItem().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AbridgedPurchaseOrderItem {
    return new AbridgedPurchaseOrderItem().fromJsonString(jsonString, options);
  }

  static equals(a: AbridgedPurchaseOrderItem | PlainMessage<AbridgedPurchaseOrderItem> | undefined, b: AbridgedPurchaseOrderItem | PlainMessage<AbridgedPurchaseOrderItem> | undefined): boolean {
    return proto3.util.equals(AbridgedPurchaseOrderItem, a, b);
  }
}

/**
 *
 * Describes the abridged version of each goods receipt item
 *
 * @generated from message Scailo.AbridgedGoodsReceiptItem
 */
export class AbridgedGoodsReceiptItem extends Message<AbridgedGoodsReceiptItem> {
  /**
   * Stores the goods receipt ID
   *
   * @generated from field: uint64 goods_receipt_id = 10;
   */
  goodsReceiptId = protoInt64.zero;

  /**
   * Stores the family ID
   *
   * @generated from field: uint64 family_id = 20;
   */
  familyId = protoInt64.zero;

  /**
   * The quantity of the item (in cents)
   *
   * @generated from field: int64 quantity = 30;
   */
  quantity = protoInt64.zero;

  constructor(data?: PartialMessage<AbridgedGoodsReceiptItem>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.AbridgedGoodsReceiptItem";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 10, name: "goods_receipt_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 20, name: "family_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 30, name: "quantity", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AbridgedGoodsReceiptItem {
    return new AbridgedGoodsReceiptItem().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AbridgedGoodsReceiptItem {
    return new AbridgedGoodsReceiptItem().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AbridgedGoodsReceiptItem {
    return new AbridgedGoodsReceiptItem().fromJsonString(jsonString, options);
  }

  static equals(a: AbridgedGoodsReceiptItem | PlainMessage<AbridgedGoodsReceiptItem> | undefined, b: AbridgedGoodsReceiptItem | PlainMessage<AbridgedGoodsReceiptItem> | undefined): boolean {
    return proto3.util.equals(AbridgedGoodsReceiptItem, a, b);
  }
}

/**
 *
 * Describes the abridged version of each purchase return item
 *
 * @generated from message Scailo.AbridgedPurchaseReturnItem
 */
export class AbridgedPurchaseReturnItem extends Message<AbridgedPurchaseReturnItem> {
  /**
   * Stores the purchase return ID
   *
   * @generated from field: uint64 purchase_return_id = 10;
   */
  purchaseReturnId = protoInt64.zero;

  /**
   * Stores the family ID
   *
   * @generated from field: uint64 family_id = 20;
   */
  familyId = protoInt64.zero;

  /**
   * The quantity of the item (in cents)
   *
   * @generated from field: int64 quantity = 30;
   */
  quantity = protoInt64.zero;

  constructor(data?: PartialMessage<AbridgedPurchaseReturnItem>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.AbridgedPurchaseReturnItem";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 10, name: "purchase_return_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 20, name: "family_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 30, name: "quantity", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AbridgedPurchaseReturnItem {
    return new AbridgedPurchaseReturnItem().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AbridgedPurchaseReturnItem {
    return new AbridgedPurchaseReturnItem().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AbridgedPurchaseReturnItem {
    return new AbridgedPurchaseReturnItem().fromJsonString(jsonString, options);
  }

  static equals(a: AbridgedPurchaseReturnItem | PlainMessage<AbridgedPurchaseReturnItem> | undefined, b: AbridgedPurchaseReturnItem | PlainMessage<AbridgedPurchaseReturnItem> | undefined): boolean {
    return proto3.util.equals(AbridgedPurchaseReturnItem, a, b);
  }
}

/**
 *
 * Describes the message consisting of the work in progress inventory statistics for the given family ID
 *
 * @generated from message Scailo.InventoryWorkInProgressStatistics
 */
export class InventoryWorkInProgressStatistics extends Message<InventoryWorkInProgressStatistics> {
  /**
   * List of abridged production plan items
   *
   * @generated from field: repeated Scailo.AbridgedProductionPlanItem production_plans = 10;
   */
  productionPlans: AbridgedProductionPlanItem[] = [];

  /**
   * List of abridged inventory items
   *
   * @generated from field: repeated Scailo.AbridgedInventoryItem inventory_items = 20;
   */
  inventoryItems: AbridgedInventoryItem[] = [];

  constructor(data?: PartialMessage<InventoryWorkInProgressStatistics>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.InventoryWorkInProgressStatistics";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 10, name: "production_plans", kind: "message", T: AbridgedProductionPlanItem, repeated: true },
    { no: 20, name: "inventory_items", kind: "message", T: AbridgedInventoryItem, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): InventoryWorkInProgressStatistics {
    return new InventoryWorkInProgressStatistics().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): InventoryWorkInProgressStatistics {
    return new InventoryWorkInProgressStatistics().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): InventoryWorkInProgressStatistics {
    return new InventoryWorkInProgressStatistics().fromJsonString(jsonString, options);
  }

  static equals(a: InventoryWorkInProgressStatistics | PlainMessage<InventoryWorkInProgressStatistics> | undefined, b: InventoryWorkInProgressStatistics | PlainMessage<InventoryWorkInProgressStatistics> | undefined): boolean {
    return proto3.util.equals(InventoryWorkInProgressStatistics, a, b);
  }
}

/**
 *
 * Describes the message consisting of the indented inventory statistics for the given family ID
 *
 * @generated from message Scailo.InventoryIndentedStatistics
 */
export class InventoryIndentedStatistics extends Message<InventoryIndentedStatistics> {
  /**
   * List of abridged purchase indent items
   *
   * @generated from field: repeated Scailo.AbridgedPurchaseIndentItem purchase_indents = 10;
   */
  purchaseIndents: AbridgedPurchaseIndentItem[] = [];

  /**
   * List of abridged purchase order items
   *
   * @generated from field: repeated Scailo.AbridgedPurchaseOrderItem purchase_orders = 20;
   */
  purchaseOrders: AbridgedPurchaseOrderItem[] = [];

  constructor(data?: PartialMessage<InventoryIndentedStatistics>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.InventoryIndentedStatistics";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 10, name: "purchase_indents", kind: "message", T: AbridgedPurchaseIndentItem, repeated: true },
    { no: 20, name: "purchase_orders", kind: "message", T: AbridgedPurchaseOrderItem, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): InventoryIndentedStatistics {
    return new InventoryIndentedStatistics().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): InventoryIndentedStatistics {
    return new InventoryIndentedStatistics().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): InventoryIndentedStatistics {
    return new InventoryIndentedStatistics().fromJsonString(jsonString, options);
  }

  static equals(a: InventoryIndentedStatistics | PlainMessage<InventoryIndentedStatistics> | undefined, b: InventoryIndentedStatistics | PlainMessage<InventoryIndentedStatistics> | undefined): boolean {
    return proto3.util.equals(InventoryIndentedStatistics, a, b);
  }
}

/**
 *
 * Describes the message consisting of the ordered inventory statistics for the given family ID
 *
 * @generated from message Scailo.InventoryOrderedStatistics
 */
export class InventoryOrderedStatistics extends Message<InventoryOrderedStatistics> {
  /**
   * List of abridged purchase order items
   *
   * @generated from field: repeated Scailo.AbridgedPurchaseOrderItem purchase_orders = 10;
   */
  purchaseOrders: AbridgedPurchaseOrderItem[] = [];

  /**
   * List of abridged goods receipt items
   *
   * @generated from field: repeated Scailo.AbridgedGoodsReceiptItem goods_receipts = 20;
   */
  goodsReceipts: AbridgedGoodsReceiptItem[] = [];

  /**
   * List of abridged purchase return items
   *
   * @generated from field: repeated Scailo.AbridgedPurchaseReturnItem purchase_returns = 30;
   */
  purchaseReturns: AbridgedPurchaseReturnItem[] = [];

  constructor(data?: PartialMessage<InventoryOrderedStatistics>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.InventoryOrderedStatistics";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 10, name: "purchase_orders", kind: "message", T: AbridgedPurchaseOrderItem, repeated: true },
    { no: 20, name: "goods_receipts", kind: "message", T: AbridgedGoodsReceiptItem, repeated: true },
    { no: 30, name: "purchase_returns", kind: "message", T: AbridgedPurchaseReturnItem, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): InventoryOrderedStatistics {
    return new InventoryOrderedStatistics().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): InventoryOrderedStatistics {
    return new InventoryOrderedStatistics().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): InventoryOrderedStatistics {
    return new InventoryOrderedStatistics().fromJsonString(jsonString, options);
  }

  static equals(a: InventoryOrderedStatistics | PlainMessage<InventoryOrderedStatistics> | undefined, b: InventoryOrderedStatistics | PlainMessage<InventoryOrderedStatistics> | undefined): boolean {
    return proto3.util.equals(InventoryOrderedStatistics, a, b);
  }
}

/**
 *
 * Describes the message consisting of the detailed demand statistics for the given family ID
 *
 * @generated from message Scailo.InventoryDetailedDemand
 */
export class InventoryDetailedDemand extends Message<InventoryDetailedDemand> {
  /**
   * ID of the resource
   *
   * @generated from field: uint64 id = 1;
   */
  id = protoInt64.zero;

  /**
   * UUID of the resource
   *
   * @generated from field: string uuid = 2;
   */
  uuid = "";

  /**
   * Stores the family ID
   *
   * @generated from field: uint64 family_id = 10;
   */
  familyId = protoInt64.zero;

  /**
   * The base demand quantity of the item (in cents)
   *
   * @generated from field: int64 base_demand_quantity = 20;
   */
  baseDemandQuantity = protoInt64.zero;

  /**
   * The adjusted demand quantity of the item (in cents)
   *
   * @generated from field: int64 adjusted_demand_quantity = 30;
   */
  adjustedDemandQuantity = protoInt64.zero;

  /**
   * The required quantity of the item (in cents)
   *
   * @generated from field: int64 required_quantity = 40;
   */
  requiredQuantity = protoInt64.zero;

  /**
   * The map of the demand
   *
   * @generated from field: Scailo.InventoryDemandMap demand_map = 50;
   */
  demandMap?: InventoryDemandMap;

  /**
   * Represents if the resource is active
   *
   * @generated from field: bool is_active = 60;
   */
  isActive = false;

  /**
   * Stores the timestamp of when the resource was created
   *
   * @generated from field: uint64 created_at = 70;
   */
  createdAt = protoInt64.zero;

  constructor(data?: PartialMessage<InventoryDetailedDemand>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.InventoryDetailedDemand";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 2, name: "uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 10, name: "family_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 20, name: "base_demand_quantity", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 30, name: "adjusted_demand_quantity", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 40, name: "required_quantity", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 50, name: "demand_map", kind: "message", T: InventoryDemandMap },
    { no: 60, name: "is_active", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 70, name: "created_at", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): InventoryDetailedDemand {
    return new InventoryDetailedDemand().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): InventoryDetailedDemand {
    return new InventoryDetailedDemand().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): InventoryDetailedDemand {
    return new InventoryDetailedDemand().fromJsonString(jsonString, options);
  }

  static equals(a: InventoryDetailedDemand | PlainMessage<InventoryDetailedDemand> | undefined, b: InventoryDetailedDemand | PlainMessage<InventoryDetailedDemand> | undefined): boolean {
    return proto3.util.equals(InventoryDetailedDemand, a, b);
  }
}

/**
 *
 * Describes the message consisting of the demand map
 *
 * @generated from message Scailo.InventoryDemandMap
 */
export class InventoryDemandMap extends Message<InventoryDemandMap> {
  /**
   * Stores the family ID
   *
   * @generated from field: uint64 family_id = 10;
   */
  familyId = protoInt64.zero;

  /**
   * The base demand list
   *
   * @generated from field: repeated Scailo.InventoryDemand base_demand_list = 20;
   */
  baseDemandList: InventoryDemand[] = [];

  /**
   * The adjusted demand list
   *
   * @generated from field: repeated Scailo.InventoryDemand adjusted_demand_list = 30;
   */
  adjustedDemandList: InventoryDemand[] = [];

  /**
   * The quantity of the base demand (in cents)
   *
   * @generated from field: int64 base_demand_quantity = 40;
   */
  baseDemandQuantity = protoInt64.zero;

  /**
   * The quantity of the adjusted demand (in cents)
   *
   * @generated from field: int64 adjusted_demand_quantity = 50;
   */
  adjustedDemandQuantity = protoInt64.zero;

  /**
   * The required quantity of the item (in cents)
   *
   * @generated from field: int64 required_quantity = 60;
   */
  requiredQuantity = protoInt64.zero;

  /**
   * Stores if the item has been evaluated
   *
   * @generated from field: bool is_evaluated = 70;
   */
  isEvaluated = false;

  constructor(data?: PartialMessage<InventoryDemandMap>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.InventoryDemandMap";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 10, name: "family_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 20, name: "base_demand_list", kind: "message", T: InventoryDemand, repeated: true },
    { no: 30, name: "adjusted_demand_list", kind: "message", T: InventoryDemand, repeated: true },
    { no: 40, name: "base_demand_quantity", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 50, name: "adjusted_demand_quantity", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 60, name: "required_quantity", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 70, name: "is_evaluated", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): InventoryDemandMap {
    return new InventoryDemandMap().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): InventoryDemandMap {
    return new InventoryDemandMap().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): InventoryDemandMap {
    return new InventoryDemandMap().fromJsonString(jsonString, options);
  }

  static equals(a: InventoryDemandMap | PlainMessage<InventoryDemandMap> | undefined, b: InventoryDemandMap | PlainMessage<InventoryDemandMap> | undefined): boolean {
    return proto3.util.equals(InventoryDemandMap, a, b);
  }
}

/**
 *
 * Describes the message consisting of the demand
 *
 * @generated from message Scailo.InventoryDemand
 */
export class InventoryDemand extends Message<InventoryDemand> {
  /**
   * The type of the origin
   *
   * @generated from field: Scailo.INVENTORY_NODE_ORIGIN_TYPE origin_type = 10;
   */
  originType = INVENTORY_NODE_ORIGIN_TYPE.INVENTORY_NODE_ORIGIN_TYPE_ANY_UNSPECIFIED;

  /**
   * The ID of the origin
   *
   * @generated from field: int64 origin_id = 20;
   */
  originId = protoInt64.zero;

  /**
   * The quantity in the origin
   *
   * @generated from field: int64 quantity = 30;
   */
  quantity = protoInt64.zero;

  /**
   * The multiplier that needs to be applied
   *
   * @generated from field: int64 multiplier = 40;
   */
  multiplier = protoInt64.zero;

  /**
   * The computed total
   *
   * @generated from field: int64 total = 50;
   */
  total = protoInt64.zero;

  /**
   * Stores if the quantity is positive
   *
   * @generated from field: bool is_positive_quantity = 60;
   */
  isPositiveQuantity = false;

  constructor(data?: PartialMessage<InventoryDemand>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.InventoryDemand";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 10, name: "origin_type", kind: "enum", T: proto3.getEnumType(INVENTORY_NODE_ORIGIN_TYPE) },
    { no: 20, name: "origin_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 30, name: "quantity", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 40, name: "multiplier", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 50, name: "total", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 60, name: "is_positive_quantity", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): InventoryDemand {
    return new InventoryDemand().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): InventoryDemand {
    return new InventoryDemand().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): InventoryDemand {
    return new InventoryDemand().fromJsonString(jsonString, options);
  }

  static equals(a: InventoryDemand | PlainMessage<InventoryDemand> | undefined, b: InventoryDemand | PlainMessage<InventoryDemand> | undefined): boolean {
    return proto3.util.equals(InventoryDemand, a, b);
  }
}

