// @generated by protoc-gen-es v1.5.1 with parameter "target=ts"
// @generated from file inventory.scailo.proto (package Scailo, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3, protoInt64 } from "@bufbuild/protobuf";
import { EmployeeMetadata, INVENTORY_LIFECYCLE } from "./base.scailo_pb.js";
import { FAMILY_TYPE } from "./families.scailo_pb.js";

/**
 *
 * Stores all the possible references from which a generic inventory can be added
 *
 * @generated from enum Scailo.GENERIC_INVENTORY_REF_FROM
 */
export enum GENERIC_INVENTORY_REF_FROM {
  /**
   * Used only in filters
   *
   * @generated from enum value: GENERIC_INVENTORY_REF_FROM_ANY_UNSPECIFIED = 0;
   */
  GENERIC_INVENTORY_REF_FROM_ANY_UNSPECIFIED = 0,

  /**
   * Denotes that the component originated from initial stock
   *
   * @generated from enum value: GENERIC_INVENTORY_REF_FROM_INITIAL_STOCK = 1;
   */
  GENERIC_INVENTORY_REF_FROM_INITIAL_STOCK = 1,

  /**
   * Denotes that the component originated from a goods receipt
   *
   * @generated from enum value: GENERIC_INVENTORY_REF_FROM_GOODS_RECEIPT = 2;
   */
  GENERIC_INVENTORY_REF_FROM_GOODS_RECEIPT = 2,

  /**
   * Denotes that the component originated from an inward job free issue material
   *
   * @generated from enum value: GENERIC_INVENTORY_REF_FROM_INWARD_JOB_FREE_ISSUE_MATERIAL = 3;
   */
  GENERIC_INVENTORY_REF_FROM_INWARD_JOB_FREE_ISSUE_MATERIAL = 3,

  /**
   * Denotes that the component originated from an outward job free issue material
   *
   * @generated from enum value: GENERIC_INVENTORY_REF_FROM_OUTWARD_JOB_FREE_ISSUE_MATERIAL = 4;
   */
  GENERIC_INVENTORY_REF_FROM_OUTWARD_JOB_FREE_ISSUE_MATERIAL = 4,

  /**
   * Denotes that the component originated from a production plan
   *
   * @generated from enum value: GENERIC_INVENTORY_REF_FROM_PRODUCTION_PLAN = 5;
   */
  GENERIC_INVENTORY_REF_FROM_PRODUCTION_PLAN = 5,
}
// Retrieve enum metadata with: proto3.getEnumType(GENERIC_INVENTORY_REF_FROM)
proto3.util.setEnumType(GENERIC_INVENTORY_REF_FROM, "Scailo.GENERIC_INVENTORY_REF_FROM", [
  { no: 0, name: "GENERIC_INVENTORY_REF_FROM_ANY_UNSPECIFIED" },
  { no: 1, name: "GENERIC_INVENTORY_REF_FROM_INITIAL_STOCK" },
  { no: 2, name: "GENERIC_INVENTORY_REF_FROM_GOODS_RECEIPT" },
  { no: 3, name: "GENERIC_INVENTORY_REF_FROM_INWARD_JOB_FREE_ISSUE_MATERIAL" },
  { no: 4, name: "GENERIC_INVENTORY_REF_FROM_OUTWARD_JOB_FREE_ISSUE_MATERIAL" },
  { no: 5, name: "GENERIC_INVENTORY_REF_FROM_PRODUCTION_PLAN" },
]);

/**
 *
 * Describes the parameters that are present in a generic inventory payload, which is an abstraction over every inventory item that consists of the common parameters
 *
 * @generated from message Scailo.GenericInventory
 */
export class GenericInventory extends Message<GenericInventory> {
  /**
   * Stores a globally unique entity UUID. This will be set at the organization level
   *
   * @generated from field: string entity_uuid = 1;
   */
  entityUuid = "";

  /**
   * Stores the metadata of this product
   *
   * @generated from field: Scailo.EmployeeMetadata metadata = 2;
   */
  metadata?: EmployeeMetadata;

  /**
   * The status of this product
   *
   * @generated from field: Scailo.INVENTORY_LIFECYCLE status = 4;
   */
  status = INVENTORY_LIFECYCLE.INVENTORY_LIFECYCLE_ANY_UNSPECIFIED;

  /**
   * The timestamp of when the item was admitted into store
   *
   * @generated from field: uint64 store_intake_at = 10;
   */
  storeIntakeAt = protoInt64.zero;

  /**
   * The timestamp of when the item was either consumed or rejected
   *
   * @generated from field: uint64 consumed_or_rejected_at = 11;
   */
  consumedOrRejectedAt = protoInt64.zero;

  /**
   * The timestamp of when the rework process began
   *
   * @generated from field: uint64 rework_start_at = 12;
   */
  reworkStartAt = protoInt64.zero;

  /**
   * The timestamp of when the rework process ended
   *
   * @generated from field: uint64 rework_end_at = 13;
   */
  reworkEndAt = protoInt64.zero;

  /**
   * The timestamp of when the item was either returned or scrapped
   *
   * @generated from field: uint64 returned_or_scrapped_at = 14;
   */
  returnedOrScrappedAt = protoInt64.zero;

  /**
   * The timestamp of when the item was discarded
   *
   * @generated from field: uint64 discarded_at = 15;
   */
  discardedAt = protoInt64.zero;

  /**
   * The associated vault folder ID
   *
   * @generated from field: uint64 vault_folder_id = 18;
   */
  vaultFolderId = protoInt64.zero;

  /**
   * The ID of the parent inventory item (if applicable)
   *
   * @generated from field: uint64 parent_ref_id = 30;
   */
  parentRefId = protoInt64.zero;

  /**
   * Stores the reference from
   *
   * @generated from field: Scailo.GENERIC_INVENTORY_REF_FROM ref_from = 31;
   */
  refFrom = GENERIC_INVENTORY_REF_FROM.GENERIC_INVENTORY_REF_FROM_ANY_UNSPECIFIED;

  /**
   * Stores the ID of the reference
   *
   * @generated from field: uint64 ref_id = 32;
   */
  refId = protoInt64.zero;

  /**
   * Stores the ID of the associated family
   *
   * @generated from field: uint64 family_id = 33;
   */
  familyId = protoInt64.zero;

  /**
   * The auto generated code of the product
   *
   * @generated from field: string code = 34;
   */
  code = "";

  /**
   * Stores the internal code (as given by user)
   *
   * @generated from field: string internal_item_code = 35;
   */
  internalItemCode = "";

  /**
   * The computed hash of the product
   *
   * @generated from field: string hash = 36;
   */
  hash = "";

  /**
   * Stores the quantity (in cents)
   *
   * @generated from field: uint64 quantity = 37;
   */
  quantity = protoInt64.zero;

  /**
   * Stores the remaining quantity (in cents)
   *
   * @generated from field: uint64 quantity_remaining = 38;
   */
  quantityRemaining = protoInt64.zero;

  /**
   * Stores an optional secondary unit of product
   *
   * @generated from field: uint64 secondary_uom_id = 39;
   */
  secondaryUomId = protoInt64.zero;

  /**
   * Stores an optional quantity in the secondary unit of product
   *
   * @generated from field: uint64 secondary_quantity = 40;
   */
  secondaryQuantity = protoInt64.zero;

  /**
   * Stores an optional shelf life as a timestamp
   *
   * @generated from field: uint64 shelf_life_timestamp = 41;
   */
  shelfLifeTimestamp = protoInt64.zero;

  /**
   * Stores an optional warranty as a timestamp
   *
   * @generated from field: uint64 warranty_timestamp = 42;
   */
  warrantyTimestamp = protoInt64.zero;

  /**
   * Stores the store to which the product is sent to
   *
   * @generated from field: uint64 store_id = 50;
   */
  storeId = protoInt64.zero;

  /**
   * Stores an optional ID of the associated storage that the product is stored in
   *
   * @generated from field: uint64 storage_id = 51;
   */
  storageId = protoInt64.zero;

  /**
   * Stores if the associated QC report should be public
   *
   * @generated from field: bool is_qc_report_public = 52;
   */
  isQcReportPublic = false;

  /**
   * The location ID of where the item needs to be stored
   *
   * @generated from field: uint64 location_id = 54;
   */
  locationId = protoInt64.zero;

  /**
   * Stores any applicable remaining dimensions as a string
   *
   * @generated from field: string remaining_dimensions = 55;
   */
  remainingDimensions = "";

  /**
   * The description of the product
   *
   * @generated from field: string description = 60;
   */
  description = "";

  /**
   * The short URL of the item
   *
   * @generated from field: string short_url = 70;
   */
  shortUrl = "";

  constructor(data?: PartialMessage<GenericInventory>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.GenericInventory";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "entity_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "metadata", kind: "message", T: EmployeeMetadata },
    { no: 4, name: "status", kind: "enum", T: proto3.getEnumType(INVENTORY_LIFECYCLE) },
    { no: 10, name: "store_intake_at", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 11, name: "consumed_or_rejected_at", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 12, name: "rework_start_at", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 13, name: "rework_end_at", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 14, name: "returned_or_scrapped_at", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 15, name: "discarded_at", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 18, name: "vault_folder_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 30, name: "parent_ref_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 31, name: "ref_from", kind: "enum", T: proto3.getEnumType(GENERIC_INVENTORY_REF_FROM) },
    { no: 32, name: "ref_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 33, name: "family_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 34, name: "code", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 35, name: "internal_item_code", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 36, name: "hash", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 37, name: "quantity", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 38, name: "quantity_remaining", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 39, name: "secondary_uom_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 40, name: "secondary_quantity", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 41, name: "shelf_life_timestamp", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 42, name: "warranty_timestamp", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 50, name: "store_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 51, name: "storage_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 52, name: "is_qc_report_public", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 54, name: "location_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 55, name: "remaining_dimensions", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 60, name: "description", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 70, name: "short_url", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GenericInventory {
    return new GenericInventory().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GenericInventory {
    return new GenericInventory().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GenericInventory {
    return new GenericInventory().fromJsonString(jsonString, options);
  }

  static equals(a: GenericInventory | PlainMessage<GenericInventory> | undefined, b: GenericInventory | PlainMessage<GenericInventory> | undefined): boolean {
    return proto3.util.equals(GenericInventory, a, b);
  }
}

/**
 *
 * Describes the message consisting of the list of generic inventory
 *
 * @generated from message Scailo.GenericInventoryList
 */
export class GenericInventoryList extends Message<GenericInventoryList> {
  /**
   * List of generic inventory
   *
   * @generated from field: repeated Scailo.GenericInventory list = 1;
   */
  list: GenericInventory[] = [];

  constructor(data?: PartialMessage<GenericInventoryList>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.GenericInventoryList";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "list", kind: "message", T: GenericInventory, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GenericInventoryList {
    return new GenericInventoryList().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GenericInventoryList {
    return new GenericInventoryList().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GenericInventoryList {
    return new GenericInventoryList().fromJsonString(jsonString, options);
  }

  static equals(a: GenericInventoryList | PlainMessage<GenericInventoryList> | undefined, b: GenericInventoryList | PlainMessage<GenericInventoryList> | undefined): boolean {
    return proto3.util.equals(GenericInventoryList, a, b);
  }
}

/**
 *
 * Describes the parameters that are present in an inventory code map
 *
 * @generated from message Scailo.InventoryCodeMap
 */
export class InventoryCodeMap extends Message<InventoryCodeMap> {
  /**
   * Stores a globally unique entity UUID. This will be set at the organization level
   *
   * @generated from field: string entity_uuid = 1;
   */
  entityUuid = "";

  /**
   * Stores the metadata of this product
   *
   * @generated from field: Scailo.EmployeeMetadata metadata = 2;
   */
  metadata?: EmployeeMetadata;

  /**
   * Stores the purpose
   *
   * @generated from field: string purpose = 10;
   */
  purpose = "";

  /**
   * The type of the family
   *
   * @generated from field: Scailo.FAMILY_TYPE family_type = 11;
   */
  familyType = FAMILY_TYPE.FAMILY_TYPE_ANY_UNSPECIFIED;

  /**
   * Stores the family ID
   *
   * @generated from field: uint64 family_id = 12;
   */
  familyId = protoInt64.zero;

  /**
   * Stores the inventory item's code
   *
   * @generated from field: string code = 20;
   */
  code = "";

  /**
   * The hash of the item
   *
   * @generated from field: string hash = 21;
   */
  hash = "";

  /**
   * The short URL of the item
   *
   * @generated from field: string short_url = 30;
   */
  shortUrl = "";

  constructor(data?: PartialMessage<InventoryCodeMap>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.InventoryCodeMap";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "entity_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "metadata", kind: "message", T: EmployeeMetadata },
    { no: 10, name: "purpose", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 11, name: "family_type", kind: "enum", T: proto3.getEnumType(FAMILY_TYPE) },
    { no: 12, name: "family_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 20, name: "code", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 21, name: "hash", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 30, name: "short_url", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): InventoryCodeMap {
    return new InventoryCodeMap().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): InventoryCodeMap {
    return new InventoryCodeMap().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): InventoryCodeMap {
    return new InventoryCodeMap().fromJsonString(jsonString, options);
  }

  static equals(a: InventoryCodeMap | PlainMessage<InventoryCodeMap> | undefined, b: InventoryCodeMap | PlainMessage<InventoryCodeMap> | undefined): boolean {
    return proto3.util.equals(InventoryCodeMap, a, b);
  }
}

/**
 *
 * Describes the message that consists of parameters that are required to retrieve issuable inventory
 *
 * @generated from message Scailo.IssuableInventorySearchReq
 */
export class IssuableInventorySearchReq extends Message<IssuableInventorySearchReq> {
  /**
   * Stores the status of the inventory
   *
   * @generated from field: Scailo.INVENTORY_LIFECYCLE status = 1;
   */
  status = INVENTORY_LIFECYCLE.INVENTORY_LIFECYCLE_ANY_UNSPECIFIED;

  /**
   * Stores the search key
   *
   * @generated from field: string search_key = 5;
   */
  searchKey = "";

  /**
   * Stores the ID of the family that needs to be retrieved
   *
   * @generated from field: uint64 family_id = 10;
   */
  familyId = protoInt64.zero;

  /**
   * Stores the ID of the location from where the inventory needs to be retrieved
   *
   * @generated from field: uint64 location_id = 15;
   */
  locationId = protoInt64.zero;

  constructor(data?: PartialMessage<IssuableInventorySearchReq>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.IssuableInventorySearchReq";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "status", kind: "enum", T: proto3.getEnumType(INVENTORY_LIFECYCLE) },
    { no: 5, name: "search_key", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 10, name: "family_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 15, name: "location_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): IssuableInventorySearchReq {
    return new IssuableInventorySearchReq().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): IssuableInventorySearchReq {
    return new IssuableInventorySearchReq().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): IssuableInventorySearchReq {
    return new IssuableInventorySearchReq().fromJsonString(jsonString, options);
  }

  static equals(a: IssuableInventorySearchReq | PlainMessage<IssuableInventorySearchReq> | undefined, b: IssuableInventorySearchReq | PlainMessage<IssuableInventorySearchReq> | undefined): boolean {
    return proto3.util.equals(IssuableInventorySearchReq, a, b);
  }
}

/**
 *
 * Describes the request to search for an inventory item using the item's hash
 *
 * @generated from message Scailo.InventoryHashSearchReq
 */
export class InventoryHashSearchReq extends Message<InventoryHashSearchReq> {
  /**
   * The hash of the item
   *
   * @generated from field: string hash = 1;
   */
  hash = "";

  constructor(data?: PartialMessage<InventoryHashSearchReq>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.InventoryHashSearchReq";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "hash", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): InventoryHashSearchReq {
    return new InventoryHashSearchReq().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): InventoryHashSearchReq {
    return new InventoryHashSearchReq().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): InventoryHashSearchReq {
    return new InventoryHashSearchReq().fromJsonString(jsonString, options);
  }

  static equals(a: InventoryHashSearchReq | PlainMessage<InventoryHashSearchReq> | undefined, b: InventoryHashSearchReq | PlainMessage<InventoryHashSearchReq> | undefined): boolean {
    return proto3.util.equals(InventoryHashSearchReq, a, b);
  }
}

/**
 *
 * Describes the request to calculate the quantity remaining for the given family in a particular status
 *
 * @generated from message Scailo.InventoryServiceFamilyQuantityReq
 */
export class InventoryServiceFamilyQuantityReq extends Message<InventoryServiceFamilyQuantityReq> {
  /**
   * The status of this inventory item
   *
   * @generated from field: Scailo.INVENTORY_LIFECYCLE status = 10;
   */
  status = INVENTORY_LIFECYCLE.INVENTORY_LIFECYCLE_ANY_UNSPECIFIED;

  /**
   * Stores the ID of the associated family
   *
   * @generated from field: uint64 family_id = 20;
   */
  familyId = protoInt64.zero;

  constructor(data?: PartialMessage<InventoryServiceFamilyQuantityReq>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.InventoryServiceFamilyQuantityReq";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 10, name: "status", kind: "enum", T: proto3.getEnumType(INVENTORY_LIFECYCLE) },
    { no: 20, name: "family_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): InventoryServiceFamilyQuantityReq {
    return new InventoryServiceFamilyQuantityReq().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): InventoryServiceFamilyQuantityReq {
    return new InventoryServiceFamilyQuantityReq().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): InventoryServiceFamilyQuantityReq {
    return new InventoryServiceFamilyQuantityReq().fromJsonString(jsonString, options);
  }

  static equals(a: InventoryServiceFamilyQuantityReq | PlainMessage<InventoryServiceFamilyQuantityReq> | undefined, b: InventoryServiceFamilyQuantityReq | PlainMessage<InventoryServiceFamilyQuantityReq> | undefined): boolean {
    return proto3.util.equals(InventoryServiceFamilyQuantityReq, a, b);
  }
}

/**
 *
 * Describes the message that consists of parameters that are required to retrieve returnable inventory
 *
 * @generated from message Scailo.ReturnableInventorySearchReq
 */
export class ReturnableInventorySearchReq extends Message<ReturnableInventorySearchReq> {
  /**
   * Stores the ID of the reference (such as purchase order, sales order, inward job, outward job, stock issuance)
   *
   * @generated from field: uint64 ref_id = 1;
   */
  refId = protoInt64.zero;

  /**
   * Stores the search key
   *
   * @generated from field: string search_key = 5;
   */
  searchKey = "";

  /**
   * Stores the ID of the family that needs to be retrieved
   *
   * @generated from field: uint64 family_id = 10;
   */
  familyId = protoInt64.zero;

  /**
   * Stores the ID of the location from where the inventory needs to be retrieved
   *
   * @generated from field: uint64 location_id = 15;
   */
  locationId = protoInt64.zero;

  constructor(data?: PartialMessage<ReturnableInventorySearchReq>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.ReturnableInventorySearchReq";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "ref_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 5, name: "search_key", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 10, name: "family_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 15, name: "location_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ReturnableInventorySearchReq {
    return new ReturnableInventorySearchReq().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ReturnableInventorySearchReq {
    return new ReturnableInventorySearchReq().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ReturnableInventorySearchReq {
    return new ReturnableInventorySearchReq().fromJsonString(jsonString, options);
  }

  static equals(a: ReturnableInventorySearchReq | PlainMessage<ReturnableInventorySearchReq> | undefined, b: ReturnableInventorySearchReq | PlainMessage<ReturnableInventorySearchReq> | undefined): boolean {
    return proto3.util.equals(ReturnableInventorySearchReq, a, b);
  }
}

