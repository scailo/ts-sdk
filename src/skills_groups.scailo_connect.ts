// @generated by protoc-gen-connect-es v0.12.0 with parameter "target=ts"
// @generated from file skills_groups.scailo.proto (package Scailo, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { SkillGroup, SkillGroupItem, SkillGroupItemHistoryRequest, SkillsGroupsItemsList, SkillsGroupsList, SkillsGroupsServiceCountReq, SkillsGroupsServiceCreateRequest, SkillsGroupsServiceFilterReq, SkillsGroupsServiceItemCreateRequest, SkillsGroupsServiceItemUpdateRequest, SkillsGroupsServicePaginationReq, SkillsGroupsServicePaginationResponse, SkillsGroupsServiceSearchAllReq, SkillsGroupsServiceUpdateRequest } from "./skills_groups.scailo_pb.js";
import { ActiveStatus, CloneRequest, CountInSLCStatusRequest, CountResponse, Identifier, IdentifierResponse, IdentifierUUID, IdentifierUUIDWithUserComment, IdentifierWithSearchKey, IdentifierWithUserComment, ReorderItemsRequest } from "./base.scailo_pb.js";
import { MethodKind } from "@bufbuild/protobuf";

/**
 *
 * Describes the common methods applicable on each skill group
 *
 * @generated from service Scailo.SkillsGroupsService
 */
export const SkillsGroupsService = {
  typeName: "Scailo.SkillsGroupsService",
  methods: {
    /**
     * Create and send for verification
     *
     * @generated from rpc Scailo.SkillsGroupsService.Create
     */
    create: {
      name: "Create",
      I: SkillsGroupsServiceCreateRequest,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Create and save as draft
     *
     * @generated from rpc Scailo.SkillsGroupsService.Draft
     */
    draft: {
      name: "Draft",
      I: SkillsGroupsServiceCreateRequest,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Update draft
     *
     * @generated from rpc Scailo.SkillsGroupsService.DraftUpdate
     */
    draftUpdate: {
      name: "DraftUpdate",
      I: SkillsGroupsServiceUpdateRequest,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Send for verification
     *
     * @generated from rpc Scailo.SkillsGroupsService.SendForVerification
     */
    sendForVerification: {
      name: "SendForVerification",
      I: IdentifierUUIDWithUserComment,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Verify
     *
     * @generated from rpc Scailo.SkillsGroupsService.Verify
     */
    verify: {
      name: "Verify",
      I: IdentifierUUIDWithUserComment,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Approve
     *
     * @generated from rpc Scailo.SkillsGroupsService.Approve
     */
    approve: {
      name: "Approve",
      I: IdentifierUUIDWithUserComment,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Send For Revision
     *
     * @generated from rpc Scailo.SkillsGroupsService.SendForRevision
     */
    sendForRevision: {
      name: "SendForRevision",
      I: IdentifierUUIDWithUserComment,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Update revision
     *
     * @generated from rpc Scailo.SkillsGroupsService.RevisionUpdate
     */
    revisionUpdate: {
      name: "RevisionUpdate",
      I: SkillsGroupsServiceUpdateRequest,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Halt
     *
     * @generated from rpc Scailo.SkillsGroupsService.Halt
     */
    halt: {
      name: "Halt",
      I: IdentifierUUIDWithUserComment,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Discard
     *
     * @generated from rpc Scailo.SkillsGroupsService.Discard
     */
    discard: {
      name: "Discard",
      I: IdentifierUUIDWithUserComment,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Restore
     *
     * @generated from rpc Scailo.SkillsGroupsService.Restore
     */
    restore: {
      name: "Restore",
      I: IdentifierUUIDWithUserComment,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Complete
     *
     * @generated from rpc Scailo.SkillsGroupsService.Complete
     */
    complete: {
      name: "Complete",
      I: IdentifierUUIDWithUserComment,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Repeat
     *
     * @generated from rpc Scailo.SkillsGroupsService.Repeat
     */
    repeat: {
      name: "Repeat",
      I: IdentifierUUIDWithUserComment,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Reopen
     *
     * @generated from rpc Scailo.SkillsGroupsService.Reopen
     */
    reopen: {
      name: "Reopen",
      I: IdentifierUUIDWithUserComment,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Add comment
     *
     * Send Email
     * rpc SendEmail (IdentifierWithEmailAttributes) returns (IdentifierResponse);
     *
     * @generated from rpc Scailo.SkillsGroupsService.CommentAdd
     */
    commentAdd: {
      name: "CommentAdd",
      I: IdentifierUUIDWithUserComment,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Clone skill group from an existing skill group (denoted by the identifier)
     *
     * @generated from rpc Scailo.SkillsGroupsService.Clone
     */
    clone: {
      name: "Clone",
      I: CloneRequest,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Add a param to a skill group
     *
     * @generated from rpc Scailo.SkillsGroupsService.AddSkillGroupItem
     */
    addSkillGroupItem: {
      name: "AddSkillGroupItem",
      I: SkillsGroupsServiceItemCreateRequest,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Modify a param in a skill group
     *
     * @generated from rpc Scailo.SkillsGroupsService.ModifySkillGroupItem
     */
    modifySkillGroupItem: {
      name: "ModifySkillGroupItem",
      I: SkillsGroupsServiceItemUpdateRequest,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Approve a param in a skill group
     *
     * @generated from rpc Scailo.SkillsGroupsService.ApproveSkillGroupItem
     */
    approveSkillGroupItem: {
      name: "ApproveSkillGroupItem",
      I: IdentifierWithUserComment,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Delete a param in a skill group
     *
     * @generated from rpc Scailo.SkillsGroupsService.DeleteSkillGroupItem
     */
    deleteSkillGroupItem: {
      name: "DeleteSkillGroupItem",
      I: IdentifierWithUserComment,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Reorder params in a skill group
     *
     * @generated from rpc Scailo.SkillsGroupsService.ReorderSkillGroupItems
     */
    reorderSkillGroupItems: {
      name: "ReorderSkillGroupItems",
      I: ReorderItemsRequest,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * View Skill Group Item by ID
     *
     * @generated from rpc Scailo.SkillsGroupsService.ViewSkillGroupItemByID
     */
    viewSkillGroupItemByID: {
      name: "ViewSkillGroupItemByID",
      I: Identifier,
      O: SkillGroupItem,
      kind: MethodKind.Unary,
    },
    /**
     * View approved skill group params for given skill group ID
     *
     * @generated from rpc Scailo.SkillsGroupsService.ViewApprovedSkillGroupItems
     */
    viewApprovedSkillGroupItems: {
      name: "ViewApprovedSkillGroupItems",
      I: IdentifierWithSearchKey,
      O: SkillsGroupsItemsList,
      kind: MethodKind.Unary,
    },
    /**
     * View unapproved skill group params for given skill group ID
     *
     * @generated from rpc Scailo.SkillsGroupsService.ViewUnapprovedSkillGroupItems
     */
    viewUnapprovedSkillGroupItems: {
      name: "ViewUnapprovedSkillGroupItems",
      I: IdentifierWithSearchKey,
      O: SkillsGroupsItemsList,
      kind: MethodKind.Unary,
    },
    /**
     * View the history of the skill group item
     *
     * @generated from rpc Scailo.SkillsGroupsService.ViewSkillGroupItemHistory
     */
    viewSkillGroupItemHistory: {
      name: "ViewSkillGroupItemHistory",
      I: SkillGroupItemHistoryRequest,
      O: SkillsGroupsItemsList,
      kind: MethodKind.Unary,
    },
    /**
     * View by ID
     *
     * @generated from rpc Scailo.SkillsGroupsService.ViewByID
     */
    viewByID: {
      name: "ViewByID",
      I: Identifier,
      O: SkillGroup,
      kind: MethodKind.Unary,
    },
    /**
     * View all
     *
     * @generated from rpc Scailo.SkillsGroupsService.ViewAll
     */
    viewAll: {
      name: "ViewAll",
      I: ActiveStatus,
      O: SkillsGroupsList,
      kind: MethodKind.Unary,
    },
    /**
     * View all with the given entity UUID
     *
     * @generated from rpc Scailo.SkillsGroupsService.ViewAllForEntityUUID
     */
    viewAllForEntityUUID: {
      name: "ViewAllForEntityUUID",
      I: IdentifierUUID,
      O: SkillsGroupsList,
      kind: MethodKind.Unary,
    },
    /**
     * View with pagination
     *
     * @generated from rpc Scailo.SkillsGroupsService.ViewWithPagination
     */
    viewWithPagination: {
      name: "ViewWithPagination",
      I: SkillsGroupsServicePaginationReq,
      O: SkillsGroupsServicePaginationResponse,
      kind: MethodKind.Unary,
    },
    /**
     * View the latest skill group for a role (denoted by the given identifier)
     *
     * @generated from rpc Scailo.SkillsGroupsService.ViewForRoleID
     */
    viewForRoleID: {
      name: "ViewForRoleID",
      I: Identifier,
      O: SkillGroup,
      kind: MethodKind.Unary,
    },
    /**
     * View all that match the given search key
     *
     * @generated from rpc Scailo.SkillsGroupsService.SearchAll
     */
    searchAll: {
      name: "SearchAll",
      I: SkillsGroupsServiceSearchAllReq,
      O: SkillsGroupsList,
      kind: MethodKind.Unary,
    },
    /**
     * View all that match the given filter criteria
     *
     * @generated from rpc Scailo.SkillsGroupsService.Filter
     */
    filter: {
      name: "Filter",
      I: SkillsGroupsServiceFilterReq,
      O: SkillsGroupsList,
      kind: MethodKind.Unary,
    },
    /**
     * Count in status
     *
     * @generated from rpc Scailo.SkillsGroupsService.CountInStatus
     */
    countInStatus: {
      name: "CountInStatus",
      I: CountInSLCStatusRequest,
      O: CountResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Count all that match the given criteria
     *
     * @generated from rpc Scailo.SkillsGroupsService.Count
     */
    count: {
      name: "Count",
      I: SkillsGroupsServiceCountReq,
      O: CountResponse,
      kind: MethodKind.Unary,
    },
  }
} as const;

