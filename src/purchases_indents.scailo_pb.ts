// @generated by protoc-gen-es v1.5.1 with parameter "target=ts"
// @generated from file purchases_indents.scailo.proto (package Scailo, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3, protoInt64 } from "@bufbuild/protobuf";
import { FormFieldDatum, FormFieldDatumCreateRequest, FormFieldDatumFilterRequest } from "./forms_fields_data.scailo_pb.js";
import { ApprovalMetadata, BOOL_FILTER, EmployeeMetadata, LogbookLogConciseSLC, SORT_ORDER, STANDARD_LIFECYCLE_STATUS } from "./base.scailo_pb.js";

/**
 *
 * Describes the available sort keys
 *
 * @generated from enum Scailo.PURCHASE_INDENT_SORT_KEY
 */
export enum PURCHASE_INDENT_SORT_KEY {
  /**
   * Fetch ordered results by id
   *
   * @generated from enum value: PURCHASE_INDENT_SORT_KEY_ID_UNSPECIFIED = 0;
   */
  PURCHASE_INDENT_SORT_KEY_ID_UNSPECIFIED = 0,

  /**
   * Fetch ordered results by the creation timestamp
   *
   * @generated from enum value: PURCHASE_INDENT_SORT_KEY_CREATED_AT = 1;
   */
  PURCHASE_INDENT_SORT_KEY_CREATED_AT = 1,

  /**
   * Fetch ordered results by the modified timestamp
   *
   * @generated from enum value: PURCHASE_INDENT_SORT_KEY_MODIFIED_AT = 2;
   */
  PURCHASE_INDENT_SORT_KEY_MODIFIED_AT = 2,

  /**
   * Fetch ordered results by the approved on timestamp
   *
   * @generated from enum value: PURCHASE_INDENT_SORT_KEY_APPROVED_ON = 3;
   */
  PURCHASE_INDENT_SORT_KEY_APPROVED_ON = 3,

  /**
   * Fetch ordered results by the approved by field
   *
   * @generated from enum value: PURCHASE_INDENT_SORT_KEY_APPROVED_BY = 4;
   */
  PURCHASE_INDENT_SORT_KEY_APPROVED_BY = 4,

  /**
   * Fetch ordered results by the approver's role ID
   *
   * @generated from enum value: PURCHASE_INDENT_SORT_KEY_APPROVER_ROLE_ID = 5;
   */
  PURCHASE_INDENT_SORT_KEY_APPROVER_ROLE_ID = 5,

  /**
   * Fetch ordered results by the approver's completed on timestamp
   *
   * @generated from enum value: PURCHASE_INDENT_SORT_KEY_COMPLETED_ON = 6;
   */
  PURCHASE_INDENT_SORT_KEY_COMPLETED_ON = 6,

  /**
   * Fetch ordered results by the reference ID
   *
   * @generated from enum value: PURCHASE_INDENT_SORT_KEY_REFERENCE_ID = 10;
   */
  PURCHASE_INDENT_SORT_KEY_REFERENCE_ID = 10,

  /**
   * Fetch ordered results by the final ref number
   *
   * @generated from enum value: PURCHASE_INDENT_SORT_KEY_FINAL_REF_NUMBER = 11;
   */
  PURCHASE_INDENT_SORT_KEY_FINAL_REF_NUMBER = 11,

  /**
   * Fetch ordered results by the location ID
   *
   * @generated from enum value: PURCHASE_INDENT_SORT_KEY_CONSIGNEE_LOCATION_ID = 12;
   */
  PURCHASE_INDENT_SORT_KEY_CONSIGNEE_LOCATION_ID = 12,
}
// Retrieve enum metadata with: proto3.getEnumType(PURCHASE_INDENT_SORT_KEY)
proto3.util.setEnumType(PURCHASE_INDENT_SORT_KEY, "Scailo.PURCHASE_INDENT_SORT_KEY", [
  { no: 0, name: "PURCHASE_INDENT_SORT_KEY_ID_UNSPECIFIED" },
  { no: 1, name: "PURCHASE_INDENT_SORT_KEY_CREATED_AT" },
  { no: 2, name: "PURCHASE_INDENT_SORT_KEY_MODIFIED_AT" },
  { no: 3, name: "PURCHASE_INDENT_SORT_KEY_APPROVED_ON" },
  { no: 4, name: "PURCHASE_INDENT_SORT_KEY_APPROVED_BY" },
  { no: 5, name: "PURCHASE_INDENT_SORT_KEY_APPROVER_ROLE_ID" },
  { no: 6, name: "PURCHASE_INDENT_SORT_KEY_COMPLETED_ON" },
  { no: 10, name: "PURCHASE_INDENT_SORT_KEY_REFERENCE_ID" },
  { no: 11, name: "PURCHASE_INDENT_SORT_KEY_FINAL_REF_NUMBER" },
  { no: 12, name: "PURCHASE_INDENT_SORT_KEY_CONSIGNEE_LOCATION_ID" },
]);

/**
 *
 * Describes the available sort keys
 *
 * @generated from enum Scailo.PURCHASE_INDENT_ITEM_SORT_KEY
 */
export enum PURCHASE_INDENT_ITEM_SORT_KEY {
  /**
   * Fetch invoiced results by id
   *
   * @generated from enum value: PURCHASE_INDENT_ITEM_SORT_KEY_ID_UNSPECIFIED = 0;
   */
  PURCHASE_INDENT_ITEM_SORT_KEY_ID_UNSPECIFIED = 0,

  /**
   * Fetch invoiced results by the creation timestamp
   *
   * @generated from enum value: PURCHASE_INDENT_ITEM_SORT_KEY_CREATED_AT = 1;
   */
  PURCHASE_INDENT_ITEM_SORT_KEY_CREATED_AT = 1,

  /**
   * Fetch invoiced results by the modified timestamp
   *
   * @generated from enum value: PURCHASE_INDENT_ITEM_SORT_KEY_MODIFIED_AT = 2;
   */
  PURCHASE_INDENT_ITEM_SORT_KEY_MODIFIED_AT = 2,

  /**
   * Fetch invoiced results by the approved on timestamp
   *
   * @generated from enum value: PURCHASE_INDENT_ITEM_SORT_KEY_APPROVED_ON = 3;
   */
  PURCHASE_INDENT_ITEM_SORT_KEY_APPROVED_ON = 3,

  /**
   * Fetch invoiced results by the approved by field
   *
   * @generated from enum value: PURCHASE_INDENT_ITEM_SORT_KEY_APPROVED_BY = 4;
   */
  PURCHASE_INDENT_ITEM_SORT_KEY_APPROVED_BY = 4,

  /**
   * Fetch invoiced results by the approver's role ID
   *
   * @generated from enum value: PURCHASE_INDENT_ITEM_SORT_KEY_APPROVER_ROLE_ID = 5;
   */
  PURCHASE_INDENT_ITEM_SORT_KEY_APPROVER_ROLE_ID = 5,

  /**
   * Fetch invoiced results by the family ID
   *
   * @generated from enum value: PURCHASE_INDENT_ITEM_SORT_KEY_FAMILY_ID = 10;
   */
  PURCHASE_INDENT_ITEM_SORT_KEY_FAMILY_ID = 10,

  /**
   * Fetch invoiced results by the internal quantity
   *
   * @generated from enum value: PURCHASE_INDENT_ITEM_SORT_KEY_INTERNAL_QUANTITY = 11;
   */
  PURCHASE_INDENT_ITEM_SORT_KEY_INTERNAL_QUANTITY = 11,

  /**
   * Fetch ordered results by the delivery date
   *
   * @generated from enum value: PURCHASE_INDENT_ITEM_SORT_KEY_DELIVERY_DATE = 12;
   */
  PURCHASE_INDENT_ITEM_SORT_KEY_DELIVERY_DATE = 12,
}
// Retrieve enum metadata with: proto3.getEnumType(PURCHASE_INDENT_ITEM_SORT_KEY)
proto3.util.setEnumType(PURCHASE_INDENT_ITEM_SORT_KEY, "Scailo.PURCHASE_INDENT_ITEM_SORT_KEY", [
  { no: 0, name: "PURCHASE_INDENT_ITEM_SORT_KEY_ID_UNSPECIFIED" },
  { no: 1, name: "PURCHASE_INDENT_ITEM_SORT_KEY_CREATED_AT" },
  { no: 2, name: "PURCHASE_INDENT_ITEM_SORT_KEY_MODIFIED_AT" },
  { no: 3, name: "PURCHASE_INDENT_ITEM_SORT_KEY_APPROVED_ON" },
  { no: 4, name: "PURCHASE_INDENT_ITEM_SORT_KEY_APPROVED_BY" },
  { no: 5, name: "PURCHASE_INDENT_ITEM_SORT_KEY_APPROVER_ROLE_ID" },
  { no: 10, name: "PURCHASE_INDENT_ITEM_SORT_KEY_FAMILY_ID" },
  { no: 11, name: "PURCHASE_INDENT_ITEM_SORT_KEY_INTERNAL_QUANTITY" },
  { no: 12, name: "PURCHASE_INDENT_ITEM_SORT_KEY_DELIVERY_DATE" },
]);

/**
 *
 * Describes the applicable statuses of purchase indent items
 *
 * @generated from enum Scailo.PURCHASE_INDENT_ITEM_STATUS
 */
export enum PURCHASE_INDENT_ITEM_STATUS {
  /**
   * Denotes that status be disregarded. This is used only within search APIs
   *
   * @generated from enum value: PURCHASE_INDENT_ITEM_STATUS_ANY_UNSPECIFIED = 0;
   */
  PURCHASE_INDENT_ITEM_STATUS_ANY_UNSPECIFIED = 0,

  /**
   * Denotes that the purchase indent items must have been approved
   *
   * @generated from enum value: PURCHASE_INDENT_ITEM_STATUS_APPROVED = 1;
   */
  PURCHASE_INDENT_ITEM_STATUS_APPROVED = 1,

  /**
   * Denotes that the purchase indent items must be waiting for approval
   *
   * @generated from enum value: PURCHASE_INDENT_ITEM_STATUS_UNAPPROVED = 2;
   */
  PURCHASE_INDENT_ITEM_STATUS_UNAPPROVED = 2,
}
// Retrieve enum metadata with: proto3.getEnumType(PURCHASE_INDENT_ITEM_STATUS)
proto3.util.setEnumType(PURCHASE_INDENT_ITEM_STATUS, "Scailo.PURCHASE_INDENT_ITEM_STATUS", [
  { no: 0, name: "PURCHASE_INDENT_ITEM_STATUS_ANY_UNSPECIFIED" },
  { no: 1, name: "PURCHASE_INDENT_ITEM_STATUS_APPROVED" },
  { no: 2, name: "PURCHASE_INDENT_ITEM_STATUS_UNAPPROVED" },
]);

/**
 *
 * Describes the parameters necessary to create a record
 *
 * @generated from message Scailo.PurchasesIndentsServiceCreateRequest
 */
export class PurchasesIndentsServiceCreateRequest extends Message<PurchasesIndentsServiceCreateRequest> {
  /**
   * Stores a globally unique entity UUID. This will be set at the organization level
   *
   * @generated from field: string entity_uuid = 1;
   */
  entityUuid = "";

  /**
   * Stores any comment that the user might add during this operation
   *
   * @generated from field: string user_comment = 2;
   */
  userComment = "";

  /**
   * The associated vault folder ID
   *
   * @generated from field: uint64 vault_folder_id = 9;
   */
  vaultFolderId = protoInt64.zero;

  /**
   * The reference ID of the purchase indent
   *
   * @generated from field: string reference_id = 10;
   */
  referenceId = "";

  /**
   * The ID of the location
   *
   * @generated from field: uint64 consignee_location_id = 12;
   */
  consigneeLocationId = protoInt64.zero;

  /**
   * The list of dynamic forms
   *
   * @generated from field: repeated Scailo.FormFieldDatumCreateRequest form_data = 30;
   */
  formData: FormFieldDatumCreateRequest[] = [];

  constructor(data?: PartialMessage<PurchasesIndentsServiceCreateRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.PurchasesIndentsServiceCreateRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "entity_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "user_comment", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 9, name: "vault_folder_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 10, name: "reference_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 12, name: "consignee_location_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 30, name: "form_data", kind: "message", T: FormFieldDatumCreateRequest, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PurchasesIndentsServiceCreateRequest {
    return new PurchasesIndentsServiceCreateRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PurchasesIndentsServiceCreateRequest {
    return new PurchasesIndentsServiceCreateRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PurchasesIndentsServiceCreateRequest {
    return new PurchasesIndentsServiceCreateRequest().fromJsonString(jsonString, options);
  }

  static equals(a: PurchasesIndentsServiceCreateRequest | PlainMessage<PurchasesIndentsServiceCreateRequest> | undefined, b: PurchasesIndentsServiceCreateRequest | PlainMessage<PurchasesIndentsServiceCreateRequest> | undefined): boolean {
    return proto3.util.equals(PurchasesIndentsServiceCreateRequest, a, b);
  }
}

/**
 *
 * Describes the parameters necessary to update a record
 *
 * @generated from message Scailo.PurchasesIndentsServiceUpdateRequest
 */
export class PurchasesIndentsServiceUpdateRequest extends Message<PurchasesIndentsServiceUpdateRequest> {
  /**
   * Stores any comment that the user might add during this operation
   *
   * @generated from field: string user_comment = 1;
   */
  userComment = "";

  /**
   * The ID of the record that needs to be updated
   *
   * @generated from field: uint64 id = 2;
   */
  id = protoInt64.zero;

  /**
   * Optional boolean value that stores if a notification needs to be sent to users about the update to the record. This is useful when a subsequent operation needs to be performed immediately (such as send to verification after updating the revision)
   *
   * @generated from field: bool notify_users = 3;
   */
  notifyUsers = false;

  /**
   * The associated vault folder ID
   *
   * @generated from field: uint64 vault_folder_id = 9;
   */
  vaultFolderId = protoInt64.zero;

  /**
   * The reference ID of the purchase indent
   *
   * @generated from field: string reference_id = 10;
   */
  referenceId = "";

  /**
   * The list of dynamic forms
   *
   * @generated from field: repeated Scailo.FormFieldDatumCreateRequest form_data = 30;
   */
  formData: FormFieldDatumCreateRequest[] = [];

  constructor(data?: PartialMessage<PurchasesIndentsServiceUpdateRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.PurchasesIndentsServiceUpdateRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "user_comment", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 3, name: "notify_users", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 9, name: "vault_folder_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 10, name: "reference_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 30, name: "form_data", kind: "message", T: FormFieldDatumCreateRequest, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PurchasesIndentsServiceUpdateRequest {
    return new PurchasesIndentsServiceUpdateRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PurchasesIndentsServiceUpdateRequest {
    return new PurchasesIndentsServiceUpdateRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PurchasesIndentsServiceUpdateRequest {
    return new PurchasesIndentsServiceUpdateRequest().fromJsonString(jsonString, options);
  }

  static equals(a: PurchasesIndentsServiceUpdateRequest | PlainMessage<PurchasesIndentsServiceUpdateRequest> | undefined, b: PurchasesIndentsServiceUpdateRequest | PlainMessage<PurchasesIndentsServiceUpdateRequest> | undefined): boolean {
    return proto3.util.equals(PurchasesIndentsServiceUpdateRequest, a, b);
  }
}

/**
 *
 * Describes the parameters necessary to perform an autofill request
 *
 * @generated from message Scailo.PurchasesIndentsServiceAutofillRequest
 */
export class PurchasesIndentsServiceAutofillRequest extends Message<PurchasesIndentsServiceAutofillRequest> {
  /**
   * Stores any comment that the user might add during this operation
   *
   * @generated from field: string user_comment = 1;
   */
  userComment = "";

  /**
   * The UUID of the record that needs to be updated
   *
   * @generated from field: string uuid = 2;
   */
  uuid = "";

  constructor(data?: PartialMessage<PurchasesIndentsServiceAutofillRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.PurchasesIndentsServiceAutofillRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "user_comment", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PurchasesIndentsServiceAutofillRequest {
    return new PurchasesIndentsServiceAutofillRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PurchasesIndentsServiceAutofillRequest {
    return new PurchasesIndentsServiceAutofillRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PurchasesIndentsServiceAutofillRequest {
    return new PurchasesIndentsServiceAutofillRequest().fromJsonString(jsonString, options);
  }

  static equals(a: PurchasesIndentsServiceAutofillRequest | PlainMessage<PurchasesIndentsServiceAutofillRequest> | undefined, b: PurchasesIndentsServiceAutofillRequest | PlainMessage<PurchasesIndentsServiceAutofillRequest> | undefined): boolean {
    return proto3.util.equals(PurchasesIndentsServiceAutofillRequest, a, b);
  }
}

/**
 *
 * Describes the parameters that are part of a standard response
 *
 * @generated from message Scailo.PurchaseIndent
 */
export class PurchaseIndent extends Message<PurchaseIndent> {
  /**
   * Stores a globally unique entity UUID. This will be set at the organization level
   *
   * @generated from field: string entity_uuid = 1;
   */
  entityUuid = "";

  /**
   * Stores the metadata of this purchase indent
   *
   * @generated from field: Scailo.EmployeeMetadata metadata = 2;
   */
  metadata?: EmployeeMetadata;

  /**
   * Stores the approval metadata
   *
   * @generated from field: Scailo.ApprovalMetadata approval_metadata = 3;
   */
  approvalMetadata?: ApprovalMetadata;

  /**
   * The status of this purchase indent
   *
   * @generated from field: Scailo.STANDARD_LIFECYCLE_STATUS status = 4;
   */
  status = STANDARD_LIFECYCLE_STATUS.ANY_UNSPECIFIED;

  /**
   * Stores the logs of every operation performed on this purchase indent
   *
   * @generated from field: repeated Scailo.LogbookLogConciseSLC logs = 5;
   */
  logs: LogbookLogConciseSLC[] = [];

  /**
   * The timestamp of when this purchase indent was marked as completed
   *
   * @generated from field: uint64 completed_on = 6;
   */
  completedOn = protoInt64.zero;

  /**
   * The associated vault folder ID
   *
   * @generated from field: uint64 vault_folder_id = 9;
   */
  vaultFolderId = protoInt64.zero;

  /**
   * The reference ID of the purchase indent
   *
   * @generated from field: string reference_id = 10;
   */
  referenceId = "";

  /**
   * The unique reference number that has been automatically generated
   *
   * @generated from field: string final_ref_number = 11;
   */
  finalRefNumber = "";

  /**
   * The ID of the location
   *
   * @generated from field: uint64 consignee_location_id = 12;
   */
  consigneeLocationId = protoInt64.zero;

  /**
   * The list of associated purchase indent items
   *
   * @generated from field: repeated Scailo.PurchaseIndentItem list = 20;
   */
  list: PurchaseIndentItem[] = [];

  /**
   * The list of dynamic forms
   *
   * @generated from field: repeated Scailo.FormFieldDatum form_data = 30;
   */
  formData: FormFieldDatum[] = [];

  constructor(data?: PartialMessage<PurchaseIndent>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.PurchaseIndent";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "entity_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "metadata", kind: "message", T: EmployeeMetadata },
    { no: 3, name: "approval_metadata", kind: "message", T: ApprovalMetadata },
    { no: 4, name: "status", kind: "enum", T: proto3.getEnumType(STANDARD_LIFECYCLE_STATUS) },
    { no: 5, name: "logs", kind: "message", T: LogbookLogConciseSLC, repeated: true },
    { no: 6, name: "completed_on", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 9, name: "vault_folder_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 10, name: "reference_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 11, name: "final_ref_number", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 12, name: "consignee_location_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 20, name: "list", kind: "message", T: PurchaseIndentItem, repeated: true },
    { no: 30, name: "form_data", kind: "message", T: FormFieldDatum, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PurchaseIndent {
    return new PurchaseIndent().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PurchaseIndent {
    return new PurchaseIndent().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PurchaseIndent {
    return new PurchaseIndent().fromJsonString(jsonString, options);
  }

  static equals(a: PurchaseIndent | PlainMessage<PurchaseIndent> | undefined, b: PurchaseIndent | PlainMessage<PurchaseIndent> | undefined): boolean {
    return proto3.util.equals(PurchaseIndent, a, b);
  }
}

/**
 *
 * Describes the parameters required to add an item to a purchase indent
 *
 * @generated from message Scailo.PurchasesIndentsServiceItemCreateRequest
 */
export class PurchasesIndentsServiceItemCreateRequest extends Message<PurchasesIndentsServiceItemCreateRequest> {
  /**
   * Stores any comment that the user might add during this operation
   *
   * @generated from field: string user_comment = 1;
   */
  userComment = "";

  /**
   * Stores the purchase indent ID
   *
   * @generated from field: uint64 purchase_indent_id = 10;
   */
  purchaseIndentId = protoInt64.zero;

  /**
   * Stores the family ID
   *
   * @generated from field: uint64 family_id = 11;
   */
  familyId = protoInt64.zero;

  /**
   * The quantity of the item
   *
   * @generated from field: uint64 internal_quantity = 12;
   */
  internalQuantity = protoInt64.zero;

  /**
   * The delivery date of the item
   *
   * @generated from field: string delivery_date = 13;
   */
  deliveryDate = "";

  /**
   * Any extra specifications with regards to the item
   *
   * @generated from field: string specifications = 14;
   */
  specifications = "";

  constructor(data?: PartialMessage<PurchasesIndentsServiceItemCreateRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.PurchasesIndentsServiceItemCreateRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "user_comment", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 10, name: "purchase_indent_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 11, name: "family_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 12, name: "internal_quantity", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 13, name: "delivery_date", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 14, name: "specifications", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PurchasesIndentsServiceItemCreateRequest {
    return new PurchasesIndentsServiceItemCreateRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PurchasesIndentsServiceItemCreateRequest {
    return new PurchasesIndentsServiceItemCreateRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PurchasesIndentsServiceItemCreateRequest {
    return new PurchasesIndentsServiceItemCreateRequest().fromJsonString(jsonString, options);
  }

  static equals(a: PurchasesIndentsServiceItemCreateRequest | PlainMessage<PurchasesIndentsServiceItemCreateRequest> | undefined, b: PurchasesIndentsServiceItemCreateRequest | PlainMessage<PurchasesIndentsServiceItemCreateRequest> | undefined): boolean {
    return proto3.util.equals(PurchasesIndentsServiceItemCreateRequest, a, b);
  }
}

/**
 *
 * Describes the parameters required to add an individual item as part of multiple item addition to a purchase indent
 *
 * @generated from message Scailo.PurchasesIndentsServiceMultipleItemsSingleton
 */
export class PurchasesIndentsServiceMultipleItemsSingleton extends Message<PurchasesIndentsServiceMultipleItemsSingleton> {
  /**
   * Stores the family ID
   *
   * @generated from field: uint64 family_id = 11;
   */
  familyId = protoInt64.zero;

  /**
   * The quantity of the item
   *
   * @generated from field: uint64 internal_quantity = 12;
   */
  internalQuantity = protoInt64.zero;

  /**
   * The delivery date of the item
   *
   * @generated from field: string delivery_date = 13;
   */
  deliveryDate = "";

  /**
   * Any extra specifications with regards to the item
   *
   * @generated from field: string specifications = 14;
   */
  specifications = "";

  constructor(data?: PartialMessage<PurchasesIndentsServiceMultipleItemsSingleton>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.PurchasesIndentsServiceMultipleItemsSingleton";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 11, name: "family_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 12, name: "internal_quantity", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 13, name: "delivery_date", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 14, name: "specifications", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PurchasesIndentsServiceMultipleItemsSingleton {
    return new PurchasesIndentsServiceMultipleItemsSingleton().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PurchasesIndentsServiceMultipleItemsSingleton {
    return new PurchasesIndentsServiceMultipleItemsSingleton().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PurchasesIndentsServiceMultipleItemsSingleton {
    return new PurchasesIndentsServiceMultipleItemsSingleton().fromJsonString(jsonString, options);
  }

  static equals(a: PurchasesIndentsServiceMultipleItemsSingleton | PlainMessage<PurchasesIndentsServiceMultipleItemsSingleton> | undefined, b: PurchasesIndentsServiceMultipleItemsSingleton | PlainMessage<PurchasesIndentsServiceMultipleItemsSingleton> | undefined): boolean {
    return proto3.util.equals(PurchasesIndentsServiceMultipleItemsSingleton, a, b);
  }
}

/**
 *
 * Describes the parameters required to add multiple items to a purchase indent
 *
 * @generated from message Scailo.PurchasesIndentsServiceMultipleItemsCreateRequest
 */
export class PurchasesIndentsServiceMultipleItemsCreateRequest extends Message<PurchasesIndentsServiceMultipleItemsCreateRequest> {
  /**
   * Stores any comment that the user might add during this operation
   *
   * @generated from field: string user_comment = 1;
   */
  userComment = "";

  /**
   * Stores the purchase indent ID
   *
   * @generated from field: uint64 purchase_indent_id = 10;
   */
  purchaseIndentId = protoInt64.zero;

  /**
   * List of items
   *
   * @generated from field: repeated Scailo.PurchasesIndentsServiceMultipleItemsSingleton list = 11;
   */
  list: PurchasesIndentsServiceMultipleItemsSingleton[] = [];

  constructor(data?: PartialMessage<PurchasesIndentsServiceMultipleItemsCreateRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.PurchasesIndentsServiceMultipleItemsCreateRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "user_comment", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 10, name: "purchase_indent_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 11, name: "list", kind: "message", T: PurchasesIndentsServiceMultipleItemsSingleton, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PurchasesIndentsServiceMultipleItemsCreateRequest {
    return new PurchasesIndentsServiceMultipleItemsCreateRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PurchasesIndentsServiceMultipleItemsCreateRequest {
    return new PurchasesIndentsServiceMultipleItemsCreateRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PurchasesIndentsServiceMultipleItemsCreateRequest {
    return new PurchasesIndentsServiceMultipleItemsCreateRequest().fromJsonString(jsonString, options);
  }

  static equals(a: PurchasesIndentsServiceMultipleItemsCreateRequest | PlainMessage<PurchasesIndentsServiceMultipleItemsCreateRequest> | undefined, b: PurchasesIndentsServiceMultipleItemsCreateRequest | PlainMessage<PurchasesIndentsServiceMultipleItemsCreateRequest> | undefined): boolean {
    return proto3.util.equals(PurchasesIndentsServiceMultipleItemsCreateRequest, a, b);
  }
}

/**
 *
 * Describes the parameters required to update an item in a purchase indent
 *
 * @generated from message Scailo.PurchasesIndentsServiceItemUpdateRequest
 */
export class PurchasesIndentsServiceItemUpdateRequest extends Message<PurchasesIndentsServiceItemUpdateRequest> {
  /**
   * Stores any comment that the user might add during this operation
   *
   * @generated from field: string user_comment = 1;
   */
  userComment = "";

  /**
   * The ID of the record
   *
   * @generated from field: uint64 id = 2;
   */
  id = protoInt64.zero;

  /**
   * The quantity of the item
   *
   * @generated from field: uint64 internal_quantity = 12;
   */
  internalQuantity = protoInt64.zero;

  /**
   * The delivery date of the item
   *
   * @generated from field: string delivery_date = 13;
   */
  deliveryDate = "";

  /**
   * Any extra specifications with regards to the item
   *
   * @generated from field: string specifications = 14;
   */
  specifications = "";

  constructor(data?: PartialMessage<PurchasesIndentsServiceItemUpdateRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.PurchasesIndentsServiceItemUpdateRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "user_comment", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 12, name: "internal_quantity", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 13, name: "delivery_date", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 14, name: "specifications", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PurchasesIndentsServiceItemUpdateRequest {
    return new PurchasesIndentsServiceItemUpdateRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PurchasesIndentsServiceItemUpdateRequest {
    return new PurchasesIndentsServiceItemUpdateRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PurchasesIndentsServiceItemUpdateRequest {
    return new PurchasesIndentsServiceItemUpdateRequest().fromJsonString(jsonString, options);
  }

  static equals(a: PurchasesIndentsServiceItemUpdateRequest | PlainMessage<PurchasesIndentsServiceItemUpdateRequest> | undefined, b: PurchasesIndentsServiceItemUpdateRequest | PlainMessage<PurchasesIndentsServiceItemUpdateRequest> | undefined): boolean {
    return proto3.util.equals(PurchasesIndentsServiceItemUpdateRequest, a, b);
  }
}

/**
 *
 * Describes the parameters that constitute an item associated to a purchase indent
 *
 * @generated from message Scailo.PurchaseIndentItem
 */
export class PurchaseIndentItem extends Message<PurchaseIndentItem> {
  /**
   * Stores a globally unique entity UUID. This will be set at the organization level
   *
   * @generated from field: string entity_uuid = 1;
   */
  entityUuid = "";

  /**
   * Stores the metadata of this purchase indent
   *
   * @generated from field: Scailo.EmployeeMetadata metadata = 2;
   */
  metadata?: EmployeeMetadata;

  /**
   * Stores the approval metadata
   *
   * @generated from field: Scailo.ApprovalMetadata approval_metadata = 3;
   */
  approvalMetadata?: ApprovalMetadata;

  /**
   * Denotes if this record requires approval (or has been approved)
   *
   * @generated from field: bool need_approval = 4;
   */
  needApproval = false;

  /**
   * Stores any comment that the user might have added during an operation
   *
   * @generated from field: string user_comment = 5;
   */
  userComment = "";

  /**
   * Stores the purchase indent ID
   *
   * @generated from field: uint64 purchase_indent_id = 10;
   */
  purchaseIndentId = protoInt64.zero;

  /**
   * Stores the family ID
   *
   * @generated from field: uint64 family_id = 11;
   */
  familyId = protoInt64.zero;

  /**
   * The quantity of the item
   *
   * @generated from field: uint64 internal_quantity = 12;
   */
  internalQuantity = protoInt64.zero;

  /**
   * The delivery date of the item
   *
   * @generated from field: string delivery_date = 13;
   */
  deliveryDate = "";

  /**
   * Any extra specifications with regards to the item
   *
   * @generated from field: string specifications = 14;
   */
  specifications = "";

  constructor(data?: PartialMessage<PurchaseIndentItem>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.PurchaseIndentItem";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "entity_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "metadata", kind: "message", T: EmployeeMetadata },
    { no: 3, name: "approval_metadata", kind: "message", T: ApprovalMetadata },
    { no: 4, name: "need_approval", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 5, name: "user_comment", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 10, name: "purchase_indent_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 11, name: "family_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 12, name: "internal_quantity", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 13, name: "delivery_date", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 14, name: "specifications", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PurchaseIndentItem {
    return new PurchaseIndentItem().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PurchaseIndentItem {
    return new PurchaseIndentItem().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PurchaseIndentItem {
    return new PurchaseIndentItem().fromJsonString(jsonString, options);
  }

  static equals(a: PurchaseIndentItem | PlainMessage<PurchaseIndentItem> | undefined, b: PurchaseIndentItem | PlainMessage<PurchaseIndentItem> | undefined): boolean {
    return proto3.util.equals(PurchaseIndentItem, a, b);
  }
}

/**
 *
 * Describes the message consisting of the list of purchases indents
 *
 * @generated from message Scailo.PurchasesIndentsList
 */
export class PurchasesIndentsList extends Message<PurchasesIndentsList> {
  /**
   * List of records
   *
   * @generated from field: repeated Scailo.PurchaseIndent list = 1;
   */
  list: PurchaseIndent[] = [];

  constructor(data?: PartialMessage<PurchasesIndentsList>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.PurchasesIndentsList";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "list", kind: "message", T: PurchaseIndent, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PurchasesIndentsList {
    return new PurchasesIndentsList().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PurchasesIndentsList {
    return new PurchasesIndentsList().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PurchasesIndentsList {
    return new PurchasesIndentsList().fromJsonString(jsonString, options);
  }

  static equals(a: PurchasesIndentsList | PlainMessage<PurchasesIndentsList> | undefined, b: PurchasesIndentsList | PlainMessage<PurchasesIndentsList> | undefined): boolean {
    return proto3.util.equals(PurchasesIndentsList, a, b);
  }
}

/**
 *
 * Describes the message consisting of the list of purchase indent items
 *
 * @generated from message Scailo.PurchasesIndentsItemsList
 */
export class PurchasesIndentsItemsList extends Message<PurchasesIndentsItemsList> {
  /**
   * List of records
   *
   * @generated from field: repeated Scailo.PurchaseIndentItem list = 1;
   */
  list: PurchaseIndentItem[] = [];

  constructor(data?: PartialMessage<PurchasesIndentsItemsList>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.PurchasesIndentsItemsList";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "list", kind: "message", T: PurchaseIndentItem, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PurchasesIndentsItemsList {
    return new PurchasesIndentsItemsList().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PurchasesIndentsItemsList {
    return new PurchasesIndentsItemsList().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PurchasesIndentsItemsList {
    return new PurchasesIndentsItemsList().fromJsonString(jsonString, options);
  }

  static equals(a: PurchasesIndentsItemsList | PlainMessage<PurchasesIndentsItemsList> | undefined, b: PurchasesIndentsItemsList | PlainMessage<PurchasesIndentsItemsList> | undefined): boolean {
    return proto3.util.equals(PurchasesIndentsItemsList, a, b);
  }
}

/**
 *
 * Describes the parameters that are required to retrieve the history of the record
 *
 * @generated from message Scailo.PurchaseIndentItemHistoryRequest
 */
export class PurchaseIndentItemHistoryRequest extends Message<PurchaseIndentItemHistoryRequest> {
  /**
   * Stores the purchase indent ID
   *
   * @generated from field: uint64 purchase_indent_id = 10;
   */
  purchaseIndentId = protoInt64.zero;

  /**
   * Stores the family ID
   *
   * @generated from field: uint64 family_id = 11;
   */
  familyId = protoInt64.zero;

  constructor(data?: PartialMessage<PurchaseIndentItemHistoryRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.PurchaseIndentItemHistoryRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 10, name: "purchase_indent_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 11, name: "family_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PurchaseIndentItemHistoryRequest {
    return new PurchaseIndentItemHistoryRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PurchaseIndentItemHistoryRequest {
    return new PurchaseIndentItemHistoryRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PurchaseIndentItemHistoryRequest {
    return new PurchaseIndentItemHistoryRequest().fromJsonString(jsonString, options);
  }

  static equals(a: PurchaseIndentItemHistoryRequest | PlainMessage<PurchaseIndentItemHistoryRequest> | undefined, b: PurchaseIndentItemHistoryRequest | PlainMessage<PurchaseIndentItemHistoryRequest> | undefined): boolean {
    return proto3.util.equals(PurchaseIndentItemHistoryRequest, a, b);
  }
}

/**
 *
 * Describes the parameters that are required to retrieve the info of a prospective purchase indent item
 *
 * @generated from message Scailo.PurchaseIndentItemProspectiveInfoRequest
 */
export class PurchaseIndentItemProspectiveInfoRequest extends Message<PurchaseIndentItemProspectiveInfoRequest> {
  /**
   * Stores the purchase indent ID
   *
   * @generated from field: uint64 purchase_indent_id = 10;
   */
  purchaseIndentId = protoInt64.zero;

  /**
   * Stores the family ID
   *
   * @generated from field: uint64 family_id = 11;
   */
  familyId = protoInt64.zero;

  constructor(data?: PartialMessage<PurchaseIndentItemProspectiveInfoRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.PurchaseIndentItemProspectiveInfoRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 10, name: "purchase_indent_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 11, name: "family_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PurchaseIndentItemProspectiveInfoRequest {
    return new PurchaseIndentItemProspectiveInfoRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PurchaseIndentItemProspectiveInfoRequest {
    return new PurchaseIndentItemProspectiveInfoRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PurchaseIndentItemProspectiveInfoRequest {
    return new PurchaseIndentItemProspectiveInfoRequest().fromJsonString(jsonString, options);
  }

  static equals(a: PurchaseIndentItemProspectiveInfoRequest | PlainMessage<PurchaseIndentItemProspectiveInfoRequest> | undefined, b: PurchaseIndentItemProspectiveInfoRequest | PlainMessage<PurchaseIndentItemProspectiveInfoRequest> | undefined): boolean {
    return proto3.util.equals(PurchaseIndentItemProspectiveInfoRequest, a, b);
  }
}

/**
 *
 * Describes a pagination request to retrieve records
 *
 * @generated from message Scailo.PurchasesIndentsServicePaginationReq
 */
export class PurchasesIndentsServicePaginationReq extends Message<PurchasesIndentsServicePaginationReq> {
  /**
   * If true, then returns only active records. If false, then returns only inactive records
   *
   * @generated from field: Scailo.BOOL_FILTER is_active = 1;
   */
  isActive = BOOL_FILTER.BOOL_FILTER_ANY_UNSPECIFIED;

  /**
   * The number of records that need to be sent in the response
   *
   * @generated from field: int64 count = 2;
   */
  count = protoInt64.zero;

  /**
   * The number that need to be offset by before fetching the records
   *
   * @generated from field: uint64 offset = 3;
   */
  offset = protoInt64.zero;

  /**
   * The sort order that is to be used to fetch the pagination response
   *
   * @generated from field: Scailo.SORT_ORDER sort_order = 4;
   */
  sortOrder = SORT_ORDER.ASCENDING_UNSPECIFIED;

  /**
   * The sort key that is to be used to fetch the pagination response
   *
   * @generated from field: Scailo.PURCHASE_INDENT_SORT_KEY sort_key = 5;
   */
  sortKey = PURCHASE_INDENT_SORT_KEY.PURCHASE_INDENT_SORT_KEY_ID_UNSPECIFIED;

  /**
   * The status of this purchase indent
   *
   * @generated from field: Scailo.STANDARD_LIFECYCLE_STATUS status = 6;
   */
  status = STANDARD_LIFECYCLE_STATUS.ANY_UNSPECIFIED;

  constructor(data?: PartialMessage<PurchasesIndentsServicePaginationReq>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.PurchasesIndentsServicePaginationReq";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "is_active", kind: "enum", T: proto3.getEnumType(BOOL_FILTER) },
    { no: 2, name: "count", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "offset", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 4, name: "sort_order", kind: "enum", T: proto3.getEnumType(SORT_ORDER) },
    { no: 5, name: "sort_key", kind: "enum", T: proto3.getEnumType(PURCHASE_INDENT_SORT_KEY) },
    { no: 6, name: "status", kind: "enum", T: proto3.getEnumType(STANDARD_LIFECYCLE_STATUS) },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PurchasesIndentsServicePaginationReq {
    return new PurchasesIndentsServicePaginationReq().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PurchasesIndentsServicePaginationReq {
    return new PurchasesIndentsServicePaginationReq().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PurchasesIndentsServicePaginationReq {
    return new PurchasesIndentsServicePaginationReq().fromJsonString(jsonString, options);
  }

  static equals(a: PurchasesIndentsServicePaginationReq | PlainMessage<PurchasesIndentsServicePaginationReq> | undefined, b: PurchasesIndentsServicePaginationReq | PlainMessage<PurchasesIndentsServicePaginationReq> | undefined): boolean {
    return proto3.util.equals(PurchasesIndentsServicePaginationReq, a, b);
  }
}

/**
 *
 * Describes the response to a pagination request
 *
 * @generated from message Scailo.PurchasesIndentsServicePaginationResponse
 */
export class PurchasesIndentsServicePaginationResponse extends Message<PurchasesIndentsServicePaginationResponse> {
  /**
   * The number of records in this payload
   *
   * @generated from field: uint64 count = 1;
   */
  count = protoInt64.zero;

  /**
   * The number that has been offset before fetching the records. This is the same value that has been sent as part of the pagination request
   *
   * @generated from field: uint64 offset = 2;
   */
  offset = protoInt64.zero;

  /**
   * The total number of records that are available
   *
   * @generated from field: uint64 total = 3;
   */
  total = protoInt64.zero;

  /**
   * The list of records
   *
   * @generated from field: repeated Scailo.PurchaseIndent payload = 4;
   */
  payload: PurchaseIndent[] = [];

  constructor(data?: PartialMessage<PurchasesIndentsServicePaginationResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.PurchasesIndentsServicePaginationResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "count", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 2, name: "offset", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 3, name: "total", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 4, name: "payload", kind: "message", T: PurchaseIndent, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PurchasesIndentsServicePaginationResponse {
    return new PurchasesIndentsServicePaginationResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PurchasesIndentsServicePaginationResponse {
    return new PurchasesIndentsServicePaginationResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PurchasesIndentsServicePaginationResponse {
    return new PurchasesIndentsServicePaginationResponse().fromJsonString(jsonString, options);
  }

  static equals(a: PurchasesIndentsServicePaginationResponse | PlainMessage<PurchasesIndentsServicePaginationResponse> | undefined, b: PurchasesIndentsServicePaginationResponse | PlainMessage<PurchasesIndentsServicePaginationResponse> | undefined): boolean {
    return proto3.util.equals(PurchasesIndentsServicePaginationResponse, a, b);
  }
}

/**
 *
 * Describes the base request payload of a filter search
 *
 * @generated from message Scailo.PurchasesIndentsServiceFilterReq
 */
export class PurchasesIndentsServiceFilterReq extends Message<PurchasesIndentsServiceFilterReq> {
  /**
   * If true, then returns only active records. If false, then returns only inactive records
   *
   * @generated from field: Scailo.BOOL_FILTER is_active = 1;
   */
  isActive = BOOL_FILTER.BOOL_FILTER_ANY_UNSPECIFIED;

  /**
   * The number of records that need to be sent in the response. Returns all records if it is set to -1
   *
   * @generated from field: int64 count = 2;
   */
  count = protoInt64.zero;

  /**
   * The number that need to be offset by before fetching the records
   *
   * @generated from field: uint64 offset = 3;
   */
  offset = protoInt64.zero;

  /**
   * The sort order that is to be used to fetch the pagination response
   *
   * @generated from field: Scailo.SORT_ORDER sort_order = 4;
   */
  sortOrder = SORT_ORDER.ASCENDING_UNSPECIFIED;

  /**
   * The sort key that is to be used to fetch the pagination response
   *
   * @generated from field: Scailo.PURCHASE_INDENT_SORT_KEY sort_key = 5;
   */
  sortKey = PURCHASE_INDENT_SORT_KEY.PURCHASE_INDENT_SORT_KEY_ID_UNSPECIFIED;

  /**
   * The minimum timestamp that needs to be considered to filter by creation
   *
   * @generated from field: uint64 creation_timestamp_start = 101;
   */
  creationTimestampStart = protoInt64.zero;

  /**
   * The maximum timestamp that needs to be considered to filter by creation
   *
   * @generated from field: uint64 creation_timestamp_end = 102;
   */
  creationTimestampEnd = protoInt64.zero;

  /**
   * The minimum timestamp that needs to be considered to filter by modification
   *
   * @generated from field: uint64 modification_timestamp_start = 103;
   */
  modificationTimestampStart = protoInt64.zero;

  /**
   * The maximum timestamp that needs to be considered to filter by modification
   *
   * @generated from field: uint64 modification_timestamp_end = 104;
   */
  modificationTimestampEnd = protoInt64.zero;

  /**
   * The entity UUID that is to be used to filter records
   *
   * @generated from field: string entity_uuid = 8;
   */
  entityUuid = "";

  /**
   * The status of this purchase indent
   *
   * @generated from field: Scailo.STANDARD_LIFECYCLE_STATUS status = 10;
   */
  status = STANDARD_LIFECYCLE_STATUS.ANY_UNSPECIFIED;

  /**
   * The start range of approved timestamp
   *
   * @generated from field: uint64 approved_on_start = 11;
   */
  approvedOnStart = protoInt64.zero;

  /**
   * The end range of approved timestamp
   *
   * @generated from field: uint64 approved_on_end = 12;
   */
  approvedOnEnd = protoInt64.zero;

  /**
   * The ID of the approver
   *
   * @generated from field: uint64 approved_by_user_id = 13;
   */
  approvedByUserId = protoInt64.zero;

  /**
   * The role ID of the approver
   *
   * @generated from field: uint64 approver_role_id = 14;
   */
  approverRoleId = protoInt64.zero;

  /**
   * The start range of completed timestamp
   *
   * @generated from field: uint64 completed_on_start = 15;
   */
  completedOnStart = protoInt64.zero;

  /**
   * The end range of completed timestamp
   *
   * @generated from field: uint64 completed_on_end = 16;
   */
  completedOnEnd = protoInt64.zero;

  /**
   * The exact delivery date of any item in the purchase indent
   *
   * @generated from field: string delivery_date_exact = 17;
   */
  deliveryDateExact = "";

  /**
   * The start delivery date of any item in the purchase indent
   *
   * @generated from field: string delivery_date_start = 18;
   */
  deliveryDateStart = "";

  /**
   * The end delivery date of any item in the purchase indent
   *
   * @generated from field: string delivery_date_end = 19;
   */
  deliveryDateEnd = "";

  /**
   * The reference ID of the purchase indent
   *
   * @generated from field: string reference_id = 20;
   */
  referenceId = "";

  /**
   * The unique reference number that has been automatically generated
   *
   * @generated from field: string final_ref_number = 21;
   */
  finalRefNumber = "";

  /**
   * The ID of the location
   *
   * @generated from field: uint64 consignee_location_id = 22;
   */
  consigneeLocationId = protoInt64.zero;

  /**
   * The ID of the family
   *
   * @generated from field: uint64 family_id = 40;
   */
  familyId = protoInt64.zero;

  /**
   * The list of form data filters
   *
   * @generated from field: repeated Scailo.FormFieldDatumFilterRequest form_data = 500;
   */
  formData: FormFieldDatumFilterRequest[] = [];

  constructor(data?: PartialMessage<PurchasesIndentsServiceFilterReq>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.PurchasesIndentsServiceFilterReq";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "is_active", kind: "enum", T: proto3.getEnumType(BOOL_FILTER) },
    { no: 2, name: "count", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "offset", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 4, name: "sort_order", kind: "enum", T: proto3.getEnumType(SORT_ORDER) },
    { no: 5, name: "sort_key", kind: "enum", T: proto3.getEnumType(PURCHASE_INDENT_SORT_KEY) },
    { no: 101, name: "creation_timestamp_start", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 102, name: "creation_timestamp_end", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 103, name: "modification_timestamp_start", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 104, name: "modification_timestamp_end", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 8, name: "entity_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 10, name: "status", kind: "enum", T: proto3.getEnumType(STANDARD_LIFECYCLE_STATUS) },
    { no: 11, name: "approved_on_start", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 12, name: "approved_on_end", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 13, name: "approved_by_user_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 14, name: "approver_role_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 15, name: "completed_on_start", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 16, name: "completed_on_end", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 17, name: "delivery_date_exact", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 18, name: "delivery_date_start", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 19, name: "delivery_date_end", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 20, name: "reference_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 21, name: "final_ref_number", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 22, name: "consignee_location_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 40, name: "family_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 500, name: "form_data", kind: "message", T: FormFieldDatumFilterRequest, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PurchasesIndentsServiceFilterReq {
    return new PurchasesIndentsServiceFilterReq().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PurchasesIndentsServiceFilterReq {
    return new PurchasesIndentsServiceFilterReq().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PurchasesIndentsServiceFilterReq {
    return new PurchasesIndentsServiceFilterReq().fromJsonString(jsonString, options);
  }

  static equals(a: PurchasesIndentsServiceFilterReq | PlainMessage<PurchasesIndentsServiceFilterReq> | undefined, b: PurchasesIndentsServiceFilterReq | PlainMessage<PurchasesIndentsServiceFilterReq> | undefined): boolean {
    return proto3.util.equals(PurchasesIndentsServiceFilterReq, a, b);
  }
}

/**
 *
 * Describes the base request payload of a count search
 *
 * @generated from message Scailo.PurchasesIndentsServiceCountReq
 */
export class PurchasesIndentsServiceCountReq extends Message<PurchasesIndentsServiceCountReq> {
  /**
   * If true, then returns only active records. If false, then returns only inactive records
   *
   * @generated from field: Scailo.BOOL_FILTER is_active = 1;
   */
  isActive = BOOL_FILTER.BOOL_FILTER_ANY_UNSPECIFIED;

  /**
   * The minimum timestamp that needs to be considered to filter by creation
   *
   * @generated from field: uint64 creation_timestamp_start = 101;
   */
  creationTimestampStart = protoInt64.zero;

  /**
   * The maximum timestamp that needs to be considered to filter by creation
   *
   * @generated from field: uint64 creation_timestamp_end = 102;
   */
  creationTimestampEnd = protoInt64.zero;

  /**
   * The minimum timestamp that needs to be considered to filter by modification
   *
   * @generated from field: uint64 modification_timestamp_start = 103;
   */
  modificationTimestampStart = protoInt64.zero;

  /**
   * The maximum timestamp that needs to be considered to filter by modification
   *
   * @generated from field: uint64 modification_timestamp_end = 104;
   */
  modificationTimestampEnd = protoInt64.zero;

  /**
   * The entity UUID that is to be used to filter records
   *
   * @generated from field: string entity_uuid = 8;
   */
  entityUuid = "";

  /**
   * The status of this purchase indent
   *
   * @generated from field: Scailo.STANDARD_LIFECYCLE_STATUS status = 10;
   */
  status = STANDARD_LIFECYCLE_STATUS.ANY_UNSPECIFIED;

  /**
   * The start range of approved timestamp
   *
   * @generated from field: uint64 approved_on_start = 11;
   */
  approvedOnStart = protoInt64.zero;

  /**
   * The end range of approved timestamp
   *
   * @generated from field: uint64 approved_on_end = 12;
   */
  approvedOnEnd = protoInt64.zero;

  /**
   * The ID of the approver
   *
   * @generated from field: uint64 approved_by_user_id = 13;
   */
  approvedByUserId = protoInt64.zero;

  /**
   * The role ID of the approver
   *
   * @generated from field: uint64 approver_role_id = 14;
   */
  approverRoleId = protoInt64.zero;

  /**
   * The start range of completed timestamp
   *
   * @generated from field: uint64 completed_on_start = 15;
   */
  completedOnStart = protoInt64.zero;

  /**
   * The end range of completed timestamp
   *
   * @generated from field: uint64 completed_on_end = 16;
   */
  completedOnEnd = protoInt64.zero;

  /**
   * The exact delivery date of any item in the purchase indent
   *
   * @generated from field: string delivery_date_exact = 17;
   */
  deliveryDateExact = "";

  /**
   * The start delivery date of any item in the purchase indent
   *
   * @generated from field: string delivery_date_start = 18;
   */
  deliveryDateStart = "";

  /**
   * The end delivery date of any item in the purchase indent
   *
   * @generated from field: string delivery_date_end = 19;
   */
  deliveryDateEnd = "";

  /**
   * The reference ID of the purchase indent
   *
   * @generated from field: string reference_id = 20;
   */
  referenceId = "";

  /**
   * The unique reference number that has been automatically generated
   *
   * @generated from field: string final_ref_number = 21;
   */
  finalRefNumber = "";

  /**
   * The ID of the location
   *
   * @generated from field: uint64 consignee_location_id = 22;
   */
  consigneeLocationId = protoInt64.zero;

  /**
   * The ID of the family
   *
   * @generated from field: uint64 family_id = 40;
   */
  familyId = protoInt64.zero;

  /**
   * The list of form data filters
   *
   * @generated from field: repeated Scailo.FormFieldDatumFilterRequest form_data = 500;
   */
  formData: FormFieldDatumFilterRequest[] = [];

  constructor(data?: PartialMessage<PurchasesIndentsServiceCountReq>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.PurchasesIndentsServiceCountReq";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "is_active", kind: "enum", T: proto3.getEnumType(BOOL_FILTER) },
    { no: 101, name: "creation_timestamp_start", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 102, name: "creation_timestamp_end", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 103, name: "modification_timestamp_start", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 104, name: "modification_timestamp_end", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 8, name: "entity_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 10, name: "status", kind: "enum", T: proto3.getEnumType(STANDARD_LIFECYCLE_STATUS) },
    { no: 11, name: "approved_on_start", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 12, name: "approved_on_end", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 13, name: "approved_by_user_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 14, name: "approver_role_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 15, name: "completed_on_start", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 16, name: "completed_on_end", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 17, name: "delivery_date_exact", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 18, name: "delivery_date_start", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 19, name: "delivery_date_end", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 20, name: "reference_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 21, name: "final_ref_number", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 22, name: "consignee_location_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 40, name: "family_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 500, name: "form_data", kind: "message", T: FormFieldDatumFilterRequest, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PurchasesIndentsServiceCountReq {
    return new PurchasesIndentsServiceCountReq().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PurchasesIndentsServiceCountReq {
    return new PurchasesIndentsServiceCountReq().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PurchasesIndentsServiceCountReq {
    return new PurchasesIndentsServiceCountReq().fromJsonString(jsonString, options);
  }

  static equals(a: PurchasesIndentsServiceCountReq | PlainMessage<PurchasesIndentsServiceCountReq> | undefined, b: PurchasesIndentsServiceCountReq | PlainMessage<PurchasesIndentsServiceCountReq> | undefined): boolean {
    return proto3.util.equals(PurchasesIndentsServiceCountReq, a, b);
  }
}

/**
 *
 * Describes the request payload for performing a generic search operation on records
 *
 * @generated from message Scailo.PurchasesIndentsServiceSearchAllReq
 */
export class PurchasesIndentsServiceSearchAllReq extends Message<PurchasesIndentsServiceSearchAllReq> {
  /**
   * If true, then returns only active records. If false, then returns only inactive records
   *
   * @generated from field: Scailo.BOOL_FILTER is_active = 1;
   */
  isActive = BOOL_FILTER.BOOL_FILTER_ANY_UNSPECIFIED;

  /**
   * The number of records that need to be sent in the response. Returns all records if it is set to -1
   *
   * @generated from field: int64 count = 2;
   */
  count = protoInt64.zero;

  /**
   * The number that need to be offset by before fetching the records
   *
   * @generated from field: uint64 offset = 3;
   */
  offset = protoInt64.zero;

  /**
   * The sort order that is to be used to fetch the pagination response
   *
   * @generated from field: Scailo.SORT_ORDER sort_order = 4;
   */
  sortOrder = SORT_ORDER.ASCENDING_UNSPECIFIED;

  /**
   * The sort key that is to be used to fetch the pagination response
   *
   * @generated from field: Scailo.PURCHASE_INDENT_SORT_KEY sort_key = 5;
   */
  sortKey = PURCHASE_INDENT_SORT_KEY.PURCHASE_INDENT_SORT_KEY_ID_UNSPECIFIED;

  /**
   * The entity UUID that is to be used to filter records
   *
   * @generated from field: string entity_uuid = 6;
   */
  entityUuid = "";

  /**
   * Limit the search space to the given status
   *
   * @generated from field: Scailo.STANDARD_LIFECYCLE_STATUS status = 10;
   */
  status = STANDARD_LIFECYCLE_STATUS.ANY_UNSPECIFIED;

  /**
   * Describes the key with which the search operation needs to be performed
   *
   * @generated from field: string search_key = 11;
   */
  searchKey = "";

  /**
   * The ID of the location
   *
   * @generated from field: uint64 consignee_location_id = 20;
   */
  consigneeLocationId = protoInt64.zero;

  constructor(data?: PartialMessage<PurchasesIndentsServiceSearchAllReq>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.PurchasesIndentsServiceSearchAllReq";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "is_active", kind: "enum", T: proto3.getEnumType(BOOL_FILTER) },
    { no: 2, name: "count", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "offset", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 4, name: "sort_order", kind: "enum", T: proto3.getEnumType(SORT_ORDER) },
    { no: 5, name: "sort_key", kind: "enum", T: proto3.getEnumType(PURCHASE_INDENT_SORT_KEY) },
    { no: 6, name: "entity_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 10, name: "status", kind: "enum", T: proto3.getEnumType(STANDARD_LIFECYCLE_STATUS) },
    { no: 11, name: "search_key", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 20, name: "consignee_location_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PurchasesIndentsServiceSearchAllReq {
    return new PurchasesIndentsServiceSearchAllReq().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PurchasesIndentsServiceSearchAllReq {
    return new PurchasesIndentsServiceSearchAllReq().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PurchasesIndentsServiceSearchAllReq {
    return new PurchasesIndentsServiceSearchAllReq().fromJsonString(jsonString, options);
  }

  static equals(a: PurchasesIndentsServiceSearchAllReq | PlainMessage<PurchasesIndentsServiceSearchAllReq> | undefined, b: PurchasesIndentsServiceSearchAllReq | PlainMessage<PurchasesIndentsServiceSearchAllReq> | undefined): boolean {
    return proto3.util.equals(PurchasesIndentsServiceSearchAllReq, a, b);
  }
}

/**
 *
 * Describes the request payload to retrieve approved or unapproved items.
 *
 * @generated from message Scailo.PurchaseIndentItemsSearchRequest
 */
export class PurchaseIndentItemsSearchRequest extends Message<PurchaseIndentItemsSearchRequest> {
  /**
   * If true, then returns only active records. If false, then returns only inactive records
   *
   * @generated from field: Scailo.BOOL_FILTER is_active = 1;
   */
  isActive = BOOL_FILTER.BOOL_FILTER_ANY_UNSPECIFIED;

  /**
   * The number of records that need to be sent in the response. Returns all records if it is set to -1
   *
   * @generated from field: int64 count = 2;
   */
  count = protoInt64.zero;

  /**
   * The number that need to be offset by before fetching the records
   *
   * @generated from field: uint64 offset = 3;
   */
  offset = protoInt64.zero;

  /**
   * The sort order that is to be used to fetch the pagination response
   *
   * @generated from field: Scailo.SORT_ORDER sort_order = 4;
   */
  sortOrder = SORT_ORDER.ASCENDING_UNSPECIFIED;

  /**
   * The sort key that is to be used to fetch the pagination response
   *
   * @generated from field: Scailo.PURCHASE_INDENT_ITEM_SORT_KEY sort_key = 5;
   */
  sortKey = PURCHASE_INDENT_ITEM_SORT_KEY.PURCHASE_INDENT_ITEM_SORT_KEY_ID_UNSPECIFIED;

  /**
   * The entity UUID that is to be used to filter records
   *
   * @generated from field: string entity_uuid = 6;
   */
  entityUuid = "";

  /**
   * The status of the items
   *
   * @generated from field: Scailo.PURCHASE_INDENT_ITEM_STATUS status = 7;
   */
  status = PURCHASE_INDENT_ITEM_STATUS.PURCHASE_INDENT_ITEM_STATUS_ANY_UNSPECIFIED;

  /**
   * The start range of approved timestamp
   *
   * @generated from field: uint64 approved_on_start = 10;
   */
  approvedOnStart = protoInt64.zero;

  /**
   * The end range of approved timestamp
   *
   * @generated from field: uint64 approved_on_end = 11;
   */
  approvedOnEnd = protoInt64.zero;

  /**
   * The ID of the approver
   *
   * @generated from field: uint64 approved_by_user_id = 12;
   */
  approvedByUserId = protoInt64.zero;

  /**
   * The role ID of the approver
   *
   * @generated from field: uint64 approver_role_id = 13;
   */
  approverRoleId = protoInt64.zero;

  /**
   * The ID of the purchase indent
   *
   * @generated from field: uint64 purchase_indent_id = 20;
   */
  purchaseIndentId = protoInt64.zero;

  /**
   * The ID of the family
   *
   * @generated from field: uint64 family_id = 21;
   */
  familyId = protoInt64.zero;

  /**
   * The exact delivery date of the item in the purchase indent
   *
   * @generated from field: string delivery_date_exact = 28;
   */
  deliveryDateExact = "";

  /**
   * The start delivery date of the item in the purchase indent
   *
   * @generated from field: string delivery_date_start = 29;
   */
  deliveryDateStart = "";

  /**
   * The end delivery date of the item in the purchase indent
   *
   * @generated from field: string delivery_date_end = 30;
   */
  deliveryDateEnd = "";

  /**
   * Describes the key with which the search operation needs to be performed
   *
   * @generated from field: string search_key = 40;
   */
  searchKey = "";

  constructor(data?: PartialMessage<PurchaseIndentItemsSearchRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.PurchaseIndentItemsSearchRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "is_active", kind: "enum", T: proto3.getEnumType(BOOL_FILTER) },
    { no: 2, name: "count", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "offset", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 4, name: "sort_order", kind: "enum", T: proto3.getEnumType(SORT_ORDER) },
    { no: 5, name: "sort_key", kind: "enum", T: proto3.getEnumType(PURCHASE_INDENT_ITEM_SORT_KEY) },
    { no: 6, name: "entity_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 7, name: "status", kind: "enum", T: proto3.getEnumType(PURCHASE_INDENT_ITEM_STATUS) },
    { no: 10, name: "approved_on_start", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 11, name: "approved_on_end", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 12, name: "approved_by_user_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 13, name: "approver_role_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 20, name: "purchase_indent_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 21, name: "family_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 28, name: "delivery_date_exact", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 29, name: "delivery_date_start", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 30, name: "delivery_date_end", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 40, name: "search_key", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PurchaseIndentItemsSearchRequest {
    return new PurchaseIndentItemsSearchRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PurchaseIndentItemsSearchRequest {
    return new PurchaseIndentItemsSearchRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PurchaseIndentItemsSearchRequest {
    return new PurchaseIndentItemsSearchRequest().fromJsonString(jsonString, options);
  }

  static equals(a: PurchaseIndentItemsSearchRequest | PlainMessage<PurchaseIndentItemsSearchRequest> | undefined, b: PurchaseIndentItemsSearchRequest | PlainMessage<PurchaseIndentItemsSearchRequest> | undefined): boolean {
    return proto3.util.equals(PurchaseIndentItemsSearchRequest, a, b);
  }
}

/**
 *
 * Describes the response to a pagination items request
 *
 * @generated from message Scailo.PurchasesIndentsServicePaginatedItemsResponse
 */
export class PurchasesIndentsServicePaginatedItemsResponse extends Message<PurchasesIndentsServicePaginatedItemsResponse> {
  /**
   * The number of records in this payload
   *
   * @generated from field: uint64 count = 1;
   */
  count = protoInt64.zero;

  /**
   * The number that has been offset before fetching the records. This is the same value that has been sent as part of the pagination request
   *
   * @generated from field: uint64 offset = 2;
   */
  offset = protoInt64.zero;

  /**
   * The total number of records that are available
   *
   * @generated from field: uint64 total = 3;
   */
  total = protoInt64.zero;

  /**
   * The list of records
   *
   * @generated from field: repeated Scailo.PurchaseIndentItem payload = 4;
   */
  payload: PurchaseIndentItem[] = [];

  constructor(data?: PartialMessage<PurchasesIndentsServicePaginatedItemsResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.PurchasesIndentsServicePaginatedItemsResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "count", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 2, name: "offset", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 3, name: "total", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 4, name: "payload", kind: "message", T: PurchaseIndentItem, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PurchasesIndentsServicePaginatedItemsResponse {
    return new PurchasesIndentsServicePaginatedItemsResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PurchasesIndentsServicePaginatedItemsResponse {
    return new PurchasesIndentsServicePaginatedItemsResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PurchasesIndentsServicePaginatedItemsResponse {
    return new PurchasesIndentsServicePaginatedItemsResponse().fromJsonString(jsonString, options);
  }

  static equals(a: PurchasesIndentsServicePaginatedItemsResponse | PlainMessage<PurchasesIndentsServicePaginatedItemsResponse> | undefined, b: PurchasesIndentsServicePaginatedItemsResponse | PlainMessage<PurchasesIndentsServicePaginatedItemsResponse> | undefined): boolean {
    return proto3.util.equals(PurchasesIndentsServicePaginatedItemsResponse, a, b);
  }
}

/**
 *
 * Describes the ordered statistics of the purchase indent
 *
 * @generated from message Scailo.PurchaseIndentOrderedStatistics
 */
export class PurchaseIndentOrderedStatistics extends Message<PurchaseIndentOrderedStatistics> {
  /**
   * Stores the ID of the family
   *
   * @generated from field: uint64 family_id = 1;
   */
  familyId = protoInt64.zero;

  /**
   * Stores the indented quantity
   *
   * @generated from field: uint64 indented_quantity = 2;
   */
  indentedQuantity = protoInt64.zero;

  /**
   * Stores the ordered quantity
   *
   * @generated from field: uint64 ordered_quantity = 3;
   */
  orderedQuantity = protoInt64.zero;

  constructor(data?: PartialMessage<PurchaseIndentOrderedStatistics>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.PurchaseIndentOrderedStatistics";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "family_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 2, name: "indented_quantity", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 3, name: "ordered_quantity", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PurchaseIndentOrderedStatistics {
    return new PurchaseIndentOrderedStatistics().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PurchaseIndentOrderedStatistics {
    return new PurchaseIndentOrderedStatistics().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PurchaseIndentOrderedStatistics {
    return new PurchaseIndentOrderedStatistics().fromJsonString(jsonString, options);
  }

  static equals(a: PurchaseIndentOrderedStatistics | PlainMessage<PurchaseIndentOrderedStatistics> | undefined, b: PurchaseIndentOrderedStatistics | PlainMessage<PurchaseIndentOrderedStatistics> | undefined): boolean {
    return proto3.util.equals(PurchaseIndentOrderedStatistics, a, b);
  }
}

/**
 *
 * Describes the list of ordered statistics of the purchase indent
 *
 * @generated from message Scailo.PurchaseIndentOrderedStatisticsList
 */
export class PurchaseIndentOrderedStatisticsList extends Message<PurchaseIndentOrderedStatisticsList> {
  /**
   * @generated from field: repeated Scailo.PurchaseIndentOrderedStatistics list = 1;
   */
  list: PurchaseIndentOrderedStatistics[] = [];

  constructor(data?: PartialMessage<PurchaseIndentOrderedStatisticsList>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.PurchaseIndentOrderedStatisticsList";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "list", kind: "message", T: PurchaseIndentOrderedStatistics, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PurchaseIndentOrderedStatisticsList {
    return new PurchaseIndentOrderedStatisticsList().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PurchaseIndentOrderedStatisticsList {
    return new PurchaseIndentOrderedStatisticsList().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PurchaseIndentOrderedStatisticsList {
    return new PurchaseIndentOrderedStatisticsList().fromJsonString(jsonString, options);
  }

  static equals(a: PurchaseIndentOrderedStatisticsList | PlainMessage<PurchaseIndentOrderedStatisticsList> | undefined, b: PurchaseIndentOrderedStatisticsList | PlainMessage<PurchaseIndentOrderedStatisticsList> | undefined): boolean {
    return proto3.util.equals(PurchaseIndentOrderedStatisticsList, a, b);
  }
}

