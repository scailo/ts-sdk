// @generated by protoc-gen-es v1.5.1 with parameter "target=ts"
// @generated from file forms_sections.scailo.proto (package Scailo, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3, protoInt64 } from "@bufbuild/protobuf";
import { BOOL_FILTER, EmployeeMetadata, FORM_TYPE, SORT_ORDER } from "./base.scailo_pb.js";

/**
 *
 * Describes the available sort keys for retrieving forms sections
 *
 * @generated from enum Scailo.FORM_SECTION_SORT_KEY
 */
export enum FORM_SECTION_SORT_KEY {
  /**
   * Fetch ordered results by id
   *
   * @generated from enum value: FORM_SECTION_SORT_KEY_ID_UNSPECIFIED = 0;
   */
  FORM_SECTION_SORT_KEY_ID_UNSPECIFIED = 0,

  /**
   * Fetch ordered results by the creation timestamp
   *
   * @generated from enum value: FORM_SECTION_SORT_KEY_CREATED_AT = 1;
   */
  FORM_SECTION_SORT_KEY_CREATED_AT = 1,

  /**
   * Fetch ordered results by the modified timestamp
   *
   * @generated from enum value: FORM_SECTION_SORT_KEY_MODIFIED_AT = 2;
   */
  FORM_SECTION_SORT_KEY_MODIFIED_AT = 2,

  /**
   * Fetch ordered results by name
   *
   * @generated from enum value: FORM_SECTION_SORT_KEY_NAME = 10;
   */
  FORM_SECTION_SORT_KEY_NAME = 10,

  /**
   * Fetch ordered results by code
   *
   * @generated from enum value: FORM_SECTION_SORT_KEY_CODE = 11;
   */
  FORM_SECTION_SORT_KEY_CODE = 11,
}
// Retrieve enum metadata with: proto3.getEnumType(FORM_SECTION_SORT_KEY)
proto3.util.setEnumType(FORM_SECTION_SORT_KEY, "Scailo.FORM_SECTION_SORT_KEY", [
  { no: 0, name: "FORM_SECTION_SORT_KEY_ID_UNSPECIFIED" },
  { no: 1, name: "FORM_SECTION_SORT_KEY_CREATED_AT" },
  { no: 2, name: "FORM_SECTION_SORT_KEY_MODIFIED_AT" },
  { no: 10, name: "FORM_SECTION_SORT_KEY_NAME" },
  { no: 11, name: "FORM_SECTION_SORT_KEY_CODE" },
]);

/**
 *
 * Describes the data structure of each form section on the platform
 *
 * @generated from message Scailo.FormSection
 */
export class FormSection extends Message<FormSection> {
  /**
   * Stores a globally unique entity UUID. This will be set at the organization level
   *
   * @generated from field: string entity_uuid = 1;
   */
  entityUuid = "";

  /**
   * Stores the metadata of this resource
   *
   * @generated from field: Scailo.EmployeeMetadata metadata = 2;
   */
  metadata?: EmployeeMetadata;

  /**
   * The name of the form section
   *
   * @generated from field: string name = 10;
   */
  name = "";

  /**
   * The unique code by which the form section is classified
   *
   * @generated from field: string code = 21;
   */
  code = "";

  /**
   * The type of the form section
   *
   * @generated from field: Scailo.FORM_TYPE type = 11;
   */
  type = FORM_TYPE.FORM_TYPE_ANY_UNSPECIFIED;

  /**
   * A short description of the form section
   *
   * @generated from field: string description = 12;
   */
  description = "";

  /**
   * The width of the form section
   *
   * @generated from field: string width = 13;
   */
  width = "";

  constructor(data?: PartialMessage<FormSection>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.FormSection";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "entity_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "metadata", kind: "message", T: EmployeeMetadata },
    { no: 10, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 21, name: "code", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 11, name: "type", kind: "enum", T: proto3.getEnumType(FORM_TYPE) },
    { no: 12, name: "description", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 13, name: "width", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): FormSection {
    return new FormSection().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): FormSection {
    return new FormSection().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): FormSection {
    return new FormSection().fromJsonString(jsonString, options);
  }

  static equals(a: FormSection | PlainMessage<FormSection> | undefined, b: FormSection | PlainMessage<FormSection> | undefined): boolean {
    return proto3.util.equals(FormSection, a, b);
  }
}

/**
 *
 * Describes the data structure that stores a list of forms sections
 *
 * @generated from message Scailo.FormsSectionsList
 */
export class FormsSectionsList extends Message<FormsSectionsList> {
  /**
   * List of forms sections
   *
   * @generated from field: repeated Scailo.FormSection list = 1;
   */
  list: FormSection[] = [];

  constructor(data?: PartialMessage<FormsSectionsList>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.FormsSectionsList";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "list", kind: "message", T: FormSection, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): FormsSectionsList {
    return new FormsSectionsList().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): FormsSectionsList {
    return new FormsSectionsList().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): FormsSectionsList {
    return new FormsSectionsList().fromJsonString(jsonString, options);
  }

  static equals(a: FormsSectionsList | PlainMessage<FormsSectionsList> | undefined, b: FormsSectionsList | PlainMessage<FormsSectionsList> | undefined): boolean {
    return proto3.util.equals(FormsSectionsList, a, b);
  }
}

/**
 *
 * Describes the data structure that responds to a pagination request
 *
 * @generated from message Scailo.FormSectionPaginationResp
 */
export class FormSectionPaginationResp extends Message<FormSectionPaginationResp> {
  /**
   * The number of records in this payload
   *
   * @generated from field: uint64 count = 1;
   */
  count = protoInt64.zero;

  /**
   * The number that has been offset before fetching the records. This is the same value that has been sent as part of the pagination request
   *
   * @generated from field: uint64 offset = 2;
   */
  offset = protoInt64.zero;

  /**
   * The total number of records that are available
   *
   * @generated from field: uint64 total = 3;
   */
  total = protoInt64.zero;

  /**
   * The list of records
   *
   * @generated from field: repeated Scailo.FormSection payload = 4;
   */
  payload: FormSection[] = [];

  constructor(data?: PartialMessage<FormSectionPaginationResp>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.FormSectionPaginationResp";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "count", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 2, name: "offset", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 3, name: "total", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 4, name: "payload", kind: "message", T: FormSection, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): FormSectionPaginationResp {
    return new FormSectionPaginationResp().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): FormSectionPaginationResp {
    return new FormSectionPaginationResp().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): FormSectionPaginationResp {
    return new FormSectionPaginationResp().fromJsonString(jsonString, options);
  }

  static equals(a: FormSectionPaginationResp | PlainMessage<FormSectionPaginationResp> | undefined, b: FormSectionPaginationResp | PlainMessage<FormSectionPaginationResp> | undefined): boolean {
    return proto3.util.equals(FormSectionPaginationResp, a, b);
  }
}

/**
 *
 * Describes the necessary data structure during creation of a form section
 *
 * @generated from message Scailo.FormsSectionsServiceCreateRequest
 */
export class FormsSectionsServiceCreateRequest extends Message<FormsSectionsServiceCreateRequest> {
  /**
   * Stores a globally unique entity UUID. This will be set at the organization level
   *
   * @generated from field: string entity_uuid = 1;
   */
  entityUuid = "";

  /**
   * Stores any comment that the user might add during this operation
   *
   * @generated from field: string user_comment = 2;
   */
  userComment = "";

  /**
   * The name of the form section
   *
   * @generated from field: string name = 10;
   */
  name = "";

  /**
   * The unique code by which the form section is classified
   *
   * @generated from field: string code = 21;
   */
  code = "";

  /**
   * The type of the form section
   *
   * @generated from field: Scailo.FORM_TYPE type = 11;
   */
  type = FORM_TYPE.FORM_TYPE_ANY_UNSPECIFIED;

  /**
   * A short description of the form section
   *
   * @generated from field: string description = 12;
   */
  description = "";

  /**
   * The width of the form section
   *
   * @generated from field: string width = 13;
   */
  width = "";

  constructor(data?: PartialMessage<FormsSectionsServiceCreateRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.FormsSectionsServiceCreateRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "entity_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "user_comment", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 10, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 21, name: "code", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 11, name: "type", kind: "enum", T: proto3.getEnumType(FORM_TYPE) },
    { no: 12, name: "description", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 13, name: "width", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): FormsSectionsServiceCreateRequest {
    return new FormsSectionsServiceCreateRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): FormsSectionsServiceCreateRequest {
    return new FormsSectionsServiceCreateRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): FormsSectionsServiceCreateRequest {
    return new FormsSectionsServiceCreateRequest().fromJsonString(jsonString, options);
  }

  static equals(a: FormsSectionsServiceCreateRequest | PlainMessage<FormsSectionsServiceCreateRequest> | undefined, b: FormsSectionsServiceCreateRequest | PlainMessage<FormsSectionsServiceCreateRequest> | undefined): boolean {
    return proto3.util.equals(FormsSectionsServiceCreateRequest, a, b);
  }
}

/**
 *
 * Describes the data structure to perform the update (draft/revision) operation on a form section
 *
 * @generated from message Scailo.FormsSectionsServiceUpdateRequest
 */
export class FormsSectionsServiceUpdateRequest extends Message<FormsSectionsServiceUpdateRequest> {
  /**
   * Stores any comment that the user might add during this operation
   *
   * @generated from field: string user_comment = 1;
   */
  userComment = "";

  /**
   * The ID of the form section that needs to be updated
   *
   * @generated from field: uint64 id = 2;
   */
  id = protoInt64.zero;

  /**
   * The name of the form section
   *
   * @generated from field: string name = 10;
   */
  name = "";

  /**
   * The unique code by which the form section is classified
   *
   * @generated from field: string code = 21;
   */
  code = "";

  /**
   * A short description of the form section
   *
   * @generated from field: string description = 12;
   */
  description = "";

  /**
   * The width of the form section
   *
   * @generated from field: string width = 13;
   */
  width = "";

  constructor(data?: PartialMessage<FormsSectionsServiceUpdateRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.FormsSectionsServiceUpdateRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "user_comment", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 10, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 21, name: "code", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 12, name: "description", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 13, name: "width", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): FormsSectionsServiceUpdateRequest {
    return new FormsSectionsServiceUpdateRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): FormsSectionsServiceUpdateRequest {
    return new FormsSectionsServiceUpdateRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): FormsSectionsServiceUpdateRequest {
    return new FormsSectionsServiceUpdateRequest().fromJsonString(jsonString, options);
  }

  static equals(a: FormsSectionsServiceUpdateRequest | PlainMessage<FormsSectionsServiceUpdateRequest> | undefined, b: FormsSectionsServiceUpdateRequest | PlainMessage<FormsSectionsServiceUpdateRequest> | undefined): boolean {
    return proto3.util.equals(FormsSectionsServiceUpdateRequest, a, b);
  }
}

/**
 *
 * Describes a pagination request to retrieve records
 *
 * @generated from message Scailo.FormsSectionsServicePaginationReq
 */
export class FormsSectionsServicePaginationReq extends Message<FormsSectionsServicePaginationReq> {
  /**
   * If true, then returns only active records. If false, then returns only inactive records
   *
   * @generated from field: Scailo.BOOL_FILTER is_active = 1;
   */
  isActive = BOOL_FILTER.BOOL_FILTER_ANY_UNSPECIFIED;

  /**
   * The number of records that need to be sent in the response
   *
   * @generated from field: int64 count = 2;
   */
  count = protoInt64.zero;

  /**
   * The number that need to be offset by before fetching the records
   *
   * @generated from field: uint64 offset = 3;
   */
  offset = protoInt64.zero;

  /**
   * The sort order that is to be used to fetch the pagination response
   *
   * @generated from field: Scailo.SORT_ORDER sort_order = 4;
   */
  sortOrder = SORT_ORDER.ASCENDING_UNSPECIFIED;

  /**
   * The sort key that is to be used to fetch the pagination response
   *
   * @generated from field: Scailo.FORM_SECTION_SORT_KEY sort_key = 5;
   */
  sortKey = FORM_SECTION_SORT_KEY.FORM_SECTION_SORT_KEY_ID_UNSPECIFIED;

  constructor(data?: PartialMessage<FormsSectionsServicePaginationReq>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.FormsSectionsServicePaginationReq";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "is_active", kind: "enum", T: proto3.getEnumType(BOOL_FILTER) },
    { no: 2, name: "count", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "offset", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 4, name: "sort_order", kind: "enum", T: proto3.getEnumType(SORT_ORDER) },
    { no: 5, name: "sort_key", kind: "enum", T: proto3.getEnumType(FORM_SECTION_SORT_KEY) },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): FormsSectionsServicePaginationReq {
    return new FormsSectionsServicePaginationReq().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): FormsSectionsServicePaginationReq {
    return new FormsSectionsServicePaginationReq().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): FormsSectionsServicePaginationReq {
    return new FormsSectionsServicePaginationReq().fromJsonString(jsonString, options);
  }

  static equals(a: FormsSectionsServicePaginationReq | PlainMessage<FormsSectionsServicePaginationReq> | undefined, b: FormsSectionsServicePaginationReq | PlainMessage<FormsSectionsServicePaginationReq> | undefined): boolean {
    return proto3.util.equals(FormsSectionsServicePaginationReq, a, b);
  }
}

/**
 *
 * Describes the base request payload of a filter search
 *
 * @generated from message Scailo.FormsSectionsServiceFilterReq
 */
export class FormsSectionsServiceFilterReq extends Message<FormsSectionsServiceFilterReq> {
  /**
   * If true, then returns only active records. If false, then returns only inactive records
   *
   * @generated from field: Scailo.BOOL_FILTER is_active = 1;
   */
  isActive = BOOL_FILTER.BOOL_FILTER_ANY_UNSPECIFIED;

  /**
   * The number of records that need to be sent in the response. Returns all records if it is set to -1
   *
   * @generated from field: int64 count = 2;
   */
  count = protoInt64.zero;

  /**
   * The number that need to be offset by before fetching the records
   *
   * @generated from field: uint64 offset = 3;
   */
  offset = protoInt64.zero;

  /**
   * The sort order that is to be used to fetch the pagination response
   *
   * @generated from field: Scailo.SORT_ORDER sort_order = 4;
   */
  sortOrder = SORT_ORDER.ASCENDING_UNSPECIFIED;

  /**
   * The sort key that is to be used to fetch the pagination response
   *
   * @generated from field: Scailo.FORM_SECTION_SORT_KEY sort_key = 5;
   */
  sortKey = FORM_SECTION_SORT_KEY.FORM_SECTION_SORT_KEY_ID_UNSPECIFIED;

  /**
   * The minimum timestamp that needs to be considered to filter by creation
   *
   * @generated from field: uint64 creation_timestamp_start = 101;
   */
  creationTimestampStart = protoInt64.zero;

  /**
   * The maximum timestamp that needs to be considered to filter by creation
   *
   * @generated from field: uint64 creation_timestamp_end = 102;
   */
  creationTimestampEnd = protoInt64.zero;

  /**
   * The minimum timestamp that needs to be considered to filter by modification
   *
   * @generated from field: uint64 modification_timestamp_start = 103;
   */
  modificationTimestampStart = protoInt64.zero;

  /**
   * The maximum timestamp that needs to be considered to filter by modification
   *
   * @generated from field: uint64 modification_timestamp_end = 104;
   */
  modificationTimestampEnd = protoInt64.zero;

  /**
   * The entity UUID that is to be used to filter records
   *
   * @generated from field: string entity_uuid = 8;
   */
  entityUuid = "";

  /**
   * The name of the form section
   *
   * @generated from field: string name = 10;
   */
  name = "";

  /**
   * The type of the form section
   *
   * @generated from field: Scailo.FORM_TYPE type = 11;
   */
  type = FORM_TYPE.FORM_TYPE_ANY_UNSPECIFIED;

  /**
   * The unique code by which the form section is classified
   *
   * @generated from field: string code = 21;
   */
  code = "";

  constructor(data?: PartialMessage<FormsSectionsServiceFilterReq>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.FormsSectionsServiceFilterReq";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "is_active", kind: "enum", T: proto3.getEnumType(BOOL_FILTER) },
    { no: 2, name: "count", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "offset", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 4, name: "sort_order", kind: "enum", T: proto3.getEnumType(SORT_ORDER) },
    { no: 5, name: "sort_key", kind: "enum", T: proto3.getEnumType(FORM_SECTION_SORT_KEY) },
    { no: 101, name: "creation_timestamp_start", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 102, name: "creation_timestamp_end", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 103, name: "modification_timestamp_start", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 104, name: "modification_timestamp_end", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 8, name: "entity_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 10, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 11, name: "type", kind: "enum", T: proto3.getEnumType(FORM_TYPE) },
    { no: 21, name: "code", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): FormsSectionsServiceFilterReq {
    return new FormsSectionsServiceFilterReq().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): FormsSectionsServiceFilterReq {
    return new FormsSectionsServiceFilterReq().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): FormsSectionsServiceFilterReq {
    return new FormsSectionsServiceFilterReq().fromJsonString(jsonString, options);
  }

  static equals(a: FormsSectionsServiceFilterReq | PlainMessage<FormsSectionsServiceFilterReq> | undefined, b: FormsSectionsServiceFilterReq | PlainMessage<FormsSectionsServiceFilterReq> | undefined): boolean {
    return proto3.util.equals(FormsSectionsServiceFilterReq, a, b);
  }
}

/**
 *
 * Describes the base request payload of a count search
 *
 * @generated from message Scailo.FormsSectionsServiceCountReq
 */
export class FormsSectionsServiceCountReq extends Message<FormsSectionsServiceCountReq> {
  /**
   * If true, then returns only active records. If false, then returns only inactive records
   *
   * @generated from field: Scailo.BOOL_FILTER is_active = 1;
   */
  isActive = BOOL_FILTER.BOOL_FILTER_ANY_UNSPECIFIED;

  /**
   * The minimum timestamp that needs to be considered to filter by creation
   *
   * @generated from field: uint64 creation_timestamp_start = 101;
   */
  creationTimestampStart = protoInt64.zero;

  /**
   * The maximum timestamp that needs to be considered to filter by creation
   *
   * @generated from field: uint64 creation_timestamp_end = 102;
   */
  creationTimestampEnd = protoInt64.zero;

  /**
   * The minimum timestamp that needs to be considered to filter by modification
   *
   * @generated from field: uint64 modification_timestamp_start = 103;
   */
  modificationTimestampStart = protoInt64.zero;

  /**
   * The maximum timestamp that needs to be considered to filter by modification
   *
   * @generated from field: uint64 modification_timestamp_end = 104;
   */
  modificationTimestampEnd = protoInt64.zero;

  /**
   * The entity UUID that is to be used to filter records
   *
   * @generated from field: string entity_uuid = 8;
   */
  entityUuid = "";

  /**
   * The name of the form section
   *
   * @generated from field: string name = 10;
   */
  name = "";

  /**
   * The type of the form section
   *
   * @generated from field: Scailo.FORM_TYPE type = 11;
   */
  type = FORM_TYPE.FORM_TYPE_ANY_UNSPECIFIED;

  /**
   * The unique code by which the form section is classified
   *
   * @generated from field: string code = 21;
   */
  code = "";

  constructor(data?: PartialMessage<FormsSectionsServiceCountReq>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.FormsSectionsServiceCountReq";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "is_active", kind: "enum", T: proto3.getEnumType(BOOL_FILTER) },
    { no: 101, name: "creation_timestamp_start", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 102, name: "creation_timestamp_end", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 103, name: "modification_timestamp_start", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 104, name: "modification_timestamp_end", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 8, name: "entity_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 10, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 11, name: "type", kind: "enum", T: proto3.getEnumType(FORM_TYPE) },
    { no: 21, name: "code", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): FormsSectionsServiceCountReq {
    return new FormsSectionsServiceCountReq().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): FormsSectionsServiceCountReq {
    return new FormsSectionsServiceCountReq().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): FormsSectionsServiceCountReq {
    return new FormsSectionsServiceCountReq().fromJsonString(jsonString, options);
  }

  static equals(a: FormsSectionsServiceCountReq | PlainMessage<FormsSectionsServiceCountReq> | undefined, b: FormsSectionsServiceCountReq | PlainMessage<FormsSectionsServiceCountReq> | undefined): boolean {
    return proto3.util.equals(FormsSectionsServiceCountReq, a, b);
  }
}

/**
 *
 * Describes the request payload for performing a generic search operation on forms sections
 *
 * @generated from message Scailo.FormsSectionsServiceSearchAllReq
 */
export class FormsSectionsServiceSearchAllReq extends Message<FormsSectionsServiceSearchAllReq> {
  /**
   * If true, then returns only active records. If false, then returns only inactive records
   *
   * @generated from field: Scailo.BOOL_FILTER is_active = 1;
   */
  isActive = BOOL_FILTER.BOOL_FILTER_ANY_UNSPECIFIED;

  /**
   * The number of records that need to be sent in the response. Returns all records if it is set to -1
   *
   * @generated from field: int64 count = 2;
   */
  count = protoInt64.zero;

  /**
   * The number that need to be offset by before fetching the records
   *
   * @generated from field: uint64 offset = 3;
   */
  offset = protoInt64.zero;

  /**
   * The sort order that is to be used to fetch the pagination response
   *
   * @generated from field: Scailo.SORT_ORDER sort_order = 4;
   */
  sortOrder = SORT_ORDER.ASCENDING_UNSPECIFIED;

  /**
   * The sort key that is to be used to fetch the response
   *
   * @generated from field: Scailo.FORM_SECTION_SORT_KEY sort_key = 5;
   */
  sortKey = FORM_SECTION_SORT_KEY.FORM_SECTION_SORT_KEY_ID_UNSPECIFIED;

  /**
   * The entity UUID that is to be used to filter forms sections
   *
   * @generated from field: string entity_uuid = 6;
   */
  entityUuid = "";

  /**
   * Describes the key with which the search operation needs to be performed
   *
   * @generated from field: string search_key = 10;
   */
  searchKey = "";

  /**
   * The type of the form section
   *
   * @generated from field: Scailo.FORM_TYPE type = 11;
   */
  type = FORM_TYPE.FORM_TYPE_ANY_UNSPECIFIED;

  constructor(data?: PartialMessage<FormsSectionsServiceSearchAllReq>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.FormsSectionsServiceSearchAllReq";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "is_active", kind: "enum", T: proto3.getEnumType(BOOL_FILTER) },
    { no: 2, name: "count", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "offset", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 4, name: "sort_order", kind: "enum", T: proto3.getEnumType(SORT_ORDER) },
    { no: 5, name: "sort_key", kind: "enum", T: proto3.getEnumType(FORM_SECTION_SORT_KEY) },
    { no: 6, name: "entity_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 10, name: "search_key", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 11, name: "type", kind: "enum", T: proto3.getEnumType(FORM_TYPE) },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): FormsSectionsServiceSearchAllReq {
    return new FormsSectionsServiceSearchAllReq().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): FormsSectionsServiceSearchAllReq {
    return new FormsSectionsServiceSearchAllReq().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): FormsSectionsServiceSearchAllReq {
    return new FormsSectionsServiceSearchAllReq().fromJsonString(jsonString, options);
  }

  static equals(a: FormsSectionsServiceSearchAllReq | PlainMessage<FormsSectionsServiceSearchAllReq> | undefined, b: FormsSectionsServiceSearchAllReq | PlainMessage<FormsSectionsServiceSearchAllReq> | undefined): boolean {
    return proto3.util.equals(FormsSectionsServiceSearchAllReq, a, b);
  }
}

