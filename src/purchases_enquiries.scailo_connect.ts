// @generated by protoc-gen-connect-es v0.12.0 with parameter "target=ts"
// @generated from file purchases_enquiries.scailo.proto (package Scailo, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { PurchaseEnquiriesServicePaginatedItemsResponse, PurchaseEnquiry, PurchaseEnquiryItem, PurchaseEnquiryItemHistoryRequest, PurchaseEnquiryItemsSearchRequest, PurchasesEnquiriesItemsList, PurchasesEnquiriesList, PurchasesEnquiriesServiceCountReq, PurchasesEnquiriesServiceCreateRequest, PurchasesEnquiriesServiceFilterReq, PurchasesEnquiriesServiceItemCreateRequest, PurchasesEnquiriesServiceItemUpdateRequest, PurchasesEnquiriesServicePaginationReq, PurchasesEnquiriesServicePaginationResponse, PurchasesEnquiriesServiceSearchAllReq, PurchasesEnquiriesServiceUpdateRequest } from "./purchases_enquiries.scailo_pb.js";
import { ActiveStatus, BooleanResponse, CountInSLCStatusRequest, CountResponse, Empty, Identifier, IdentifierResponse, IdentifiersList, IdentifierUUID, IdentifierUUIDWithFile, IdentifierUUIDWithUserComment, IdentifierWithSearchKey, IdentifierWithUserComment, ReorderItemsRequest, SimpleSearchReq, StandardFile } from "./base.scailo_pb.js";
import { MethodKind } from "@bufbuild/protobuf";
import { MagicLink, MagicLinksServiceCreateRequestForSpecificResource } from "./magic_links.scailo_pb.js";

/**
 *
 * Describes the common methods applicable on each purchase enquiry
 *
 * @generated from service Scailo.PurchasesEnquiriesService
 */
export const PurchasesEnquiriesService = {
  typeName: "Scailo.PurchasesEnquiriesService",
  methods: {
    /**
     * Create and send for verification
     *
     * @generated from rpc Scailo.PurchasesEnquiriesService.Create
     */
    create: {
      name: "Create",
      I: PurchasesEnquiriesServiceCreateRequest,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Create and save as draft
     *
     * @generated from rpc Scailo.PurchasesEnquiriesService.Draft
     */
    draft: {
      name: "Draft",
      I: PurchasesEnquiriesServiceCreateRequest,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Update draft
     *
     * @generated from rpc Scailo.PurchasesEnquiriesService.DraftUpdate
     */
    draftUpdate: {
      name: "DraftUpdate",
      I: PurchasesEnquiriesServiceUpdateRequest,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Send for verification
     *
     * @generated from rpc Scailo.PurchasesEnquiriesService.SendForVerification
     */
    sendForVerification: {
      name: "SendForVerification",
      I: IdentifierUUIDWithUserComment,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Verify
     *
     * @generated from rpc Scailo.PurchasesEnquiriesService.Verify
     */
    verify: {
      name: "Verify",
      I: IdentifierUUIDWithUserComment,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Approve
     *
     * @generated from rpc Scailo.PurchasesEnquiriesService.Approve
     */
    approve: {
      name: "Approve",
      I: IdentifierUUIDWithUserComment,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Send For Revision
     *
     * @generated from rpc Scailo.PurchasesEnquiriesService.SendForRevision
     */
    sendForRevision: {
      name: "SendForRevision",
      I: IdentifierUUIDWithUserComment,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Update revision
     *
     * @generated from rpc Scailo.PurchasesEnquiriesService.RevisionUpdate
     */
    revisionUpdate: {
      name: "RevisionUpdate",
      I: PurchasesEnquiriesServiceUpdateRequest,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Halt
     *
     * @generated from rpc Scailo.PurchasesEnquiriesService.Halt
     */
    halt: {
      name: "Halt",
      I: IdentifierUUIDWithUserComment,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Discard
     *
     * @generated from rpc Scailo.PurchasesEnquiriesService.Discard
     */
    discard: {
      name: "Discard",
      I: IdentifierUUIDWithUserComment,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Restore
     *
     * @generated from rpc Scailo.PurchasesEnquiriesService.Restore
     */
    restore: {
      name: "Restore",
      I: IdentifierUUIDWithUserComment,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Complete
     *
     * @generated from rpc Scailo.PurchasesEnquiriesService.Complete
     */
    complete: {
      name: "Complete",
      I: IdentifierUUIDWithUserComment,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Repeat
     *
     * @generated from rpc Scailo.PurchasesEnquiriesService.Repeat
     */
    repeat: {
      name: "Repeat",
      I: IdentifierUUIDWithUserComment,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Reopen
     *
     * @generated from rpc Scailo.PurchasesEnquiriesService.Reopen
     */
    reopen: {
      name: "Reopen",
      I: IdentifierUUIDWithUserComment,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Add comment
     *
     * @generated from rpc Scailo.PurchasesEnquiriesService.CommentAdd
     */
    commentAdd: {
      name: "CommentAdd",
      I: IdentifierUUIDWithUserComment,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Create a magic link
     *
     * @generated from rpc Scailo.PurchasesEnquiriesService.CreateMagicLink
     */
    createMagicLink: {
      name: "CreateMagicLink",
      I: MagicLinksServiceCreateRequestForSpecificResource,
      O: MagicLink,
      kind: MethodKind.Unary,
    },
    /**
     * Add an item to a purchase enquiry
     *
     * @generated from rpc Scailo.PurchasesEnquiriesService.AddPurchaseEnquiryItem
     */
    addPurchaseEnquiryItem: {
      name: "AddPurchaseEnquiryItem",
      I: PurchasesEnquiriesServiceItemCreateRequest,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Modify an item in a purchase enquiry
     *
     * @generated from rpc Scailo.PurchasesEnquiriesService.ModifyPurchaseEnquiryItem
     */
    modifyPurchaseEnquiryItem: {
      name: "ModifyPurchaseEnquiryItem",
      I: PurchasesEnquiriesServiceItemUpdateRequest,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Approve an item in a purchase enquiry
     *
     * @generated from rpc Scailo.PurchasesEnquiriesService.ApprovePurchaseEnquiryItem
     */
    approvePurchaseEnquiryItem: {
      name: "ApprovePurchaseEnquiryItem",
      I: IdentifierWithUserComment,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Delete an item in a purchase enquiry
     *
     * @generated from rpc Scailo.PurchasesEnquiriesService.DeletePurchaseEnquiryItem
     */
    deletePurchaseEnquiryItem: {
      name: "DeletePurchaseEnquiryItem",
      I: IdentifierWithUserComment,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Reorder items in a purchase enquiry
     *
     * @generated from rpc Scailo.PurchasesEnquiriesService.ReorderPurchaseEnquiryItems
     */
    reorderPurchaseEnquiryItems: {
      name: "ReorderPurchaseEnquiryItems",
      I: ReorderItemsRequest,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * View purchase enquiry Item by ID
     *
     * @generated from rpc Scailo.PurchasesEnquiriesService.ViewPurchaseEnquiryItemByID
     */
    viewPurchaseEnquiryItemByID: {
      name: "ViewPurchaseEnquiryItemByID",
      I: Identifier,
      O: PurchaseEnquiryItem,
      kind: MethodKind.Unary,
    },
    /**
     * View approved purchase enquiry items for given purchase enquiry ID
     *
     * @generated from rpc Scailo.PurchasesEnquiriesService.ViewApprovedPurchaseEnquiryItems
     */
    viewApprovedPurchaseEnquiryItems: {
      name: "ViewApprovedPurchaseEnquiryItems",
      I: IdentifierWithSearchKey,
      O: PurchasesEnquiriesItemsList,
      kind: MethodKind.Unary,
    },
    /**
     * View unapproved purchase enquiry items for given purchase enquiry ID
     *
     * @generated from rpc Scailo.PurchasesEnquiriesService.ViewUnapprovedPurchaseEnquiryItems
     */
    viewUnapprovedPurchaseEnquiryItems: {
      name: "ViewUnapprovedPurchaseEnquiryItems",
      I: IdentifierWithSearchKey,
      O: PurchasesEnquiriesItemsList,
      kind: MethodKind.Unary,
    },
    /**
     * View the history of the purchase enquiry item
     *
     * @generated from rpc Scailo.PurchasesEnquiriesService.ViewPurchaseEnquiryItemHistory
     */
    viewPurchaseEnquiryItemHistory: {
      name: "ViewPurchaseEnquiryItemHistory",
      I: PurchaseEnquiryItemHistoryRequest,
      O: PurchasesEnquiriesItemsList,
      kind: MethodKind.Unary,
    },
    /**
     * View approved purchase enquiry items for given purchase enquiry ID with pagination
     *
     * @generated from rpc Scailo.PurchasesEnquiriesService.ViewPaginatedApprovedPurchaseEnquiryItems
     */
    viewPaginatedApprovedPurchaseEnquiryItems: {
      name: "ViewPaginatedApprovedPurchaseEnquiryItems",
      I: PurchaseEnquiryItemsSearchRequest,
      O: PurchaseEnquiriesServicePaginatedItemsResponse,
      kind: MethodKind.Unary,
    },
    /**
     * View unapproved purchase enquiry items for given purchase enquiry ID with pagination
     *
     * @generated from rpc Scailo.PurchasesEnquiriesService.ViewPaginatedUnapprovedPurchaseEnquiryItems
     */
    viewPaginatedUnapprovedPurchaseEnquiryItems: {
      name: "ViewPaginatedUnapprovedPurchaseEnquiryItems",
      I: PurchaseEnquiryItemsSearchRequest,
      O: PurchaseEnquiriesServicePaginatedItemsResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Search through purchase enquiry items with pagination
     *
     * @generated from rpc Scailo.PurchasesEnquiriesService.SearchItemsWithPagination
     */
    searchItemsWithPagination: {
      name: "SearchItemsWithPagination",
      I: PurchaseEnquiryItemsSearchRequest,
      O: PurchaseEnquiriesServicePaginatedItemsResponse,
      kind: MethodKind.Unary,
    },
    /**
     * CSV operations
     * Download the CSV file with the associated line items. The same file could then be used to upload line items.
     *
     * @generated from rpc Scailo.PurchasesEnquiriesService.DownloadItemsAsCSV
     */
    downloadItemsAsCSV: {
      name: "DownloadItemsAsCSV",
      I: IdentifierUUID,
      O: StandardFile,
      kind: MethodKind.Unary,
    },
    /**
     * Download the CSV template that could be used to upload items
     *
     * @generated from rpc Scailo.PurchasesEnquiriesService.DownloadItemsTemplateAsCSV
     */
    downloadItemsTemplateAsCSV: {
      name: "DownloadItemsTemplateAsCSV",
      I: Empty,
      O: StandardFile,
      kind: MethodKind.Unary,
    },
    /**
     * Upload items using a CSV file. This is an idempotent operation. All the existing items are deleted before adding the items from the file.
     *
     * @generated from rpc Scailo.PurchasesEnquiriesService.UploadPurchaseEnquiryItems
     */
    uploadPurchaseEnquiryItems: {
      name: "UploadPurchaseEnquiryItems",
      I: IdentifierUUIDWithFile,
      O: IdentifiersList,
      kind: MethodKind.Unary,
    },
    /**
     * View by ID
     *
     * @generated from rpc Scailo.PurchasesEnquiriesService.ViewByID
     */
    viewByID: {
      name: "ViewByID",
      I: Identifier,
      O: PurchaseEnquiry,
      kind: MethodKind.Unary,
    },
    /**
     * View by UUID
     *
     * @generated from rpc Scailo.PurchasesEnquiriesService.ViewByUUID
     */
    viewByUUID: {
      name: "ViewByUUID",
      I: IdentifierUUID,
      O: PurchaseEnquiry,
      kind: MethodKind.Unary,
    },
    /**
     * View by Reference ID (returns the latest record in case of duplicates)
     *
     * @generated from rpc Scailo.PurchasesEnquiriesService.ViewByReferenceID
     */
    viewByReferenceID: {
      name: "ViewByReferenceID",
      I: SimpleSearchReq,
      O: PurchaseEnquiry,
      kind: MethodKind.Unary,
    },
    /**
     * View only essential components by ID (without logs)
     *
     * @generated from rpc Scailo.PurchasesEnquiriesService.ViewEssentialByID
     */
    viewEssentialByID: {
      name: "ViewEssentialByID",
      I: Identifier,
      O: PurchaseEnquiry,
      kind: MethodKind.Unary,
    },
    /**
     * View only essential components (without logs) that matches the given UUID
     *
     * @generated from rpc Scailo.PurchasesEnquiriesService.ViewEssentialByUUID
     */
    viewEssentialByUUID: {
      name: "ViewEssentialByUUID",
      I: IdentifierUUID,
      O: PurchaseEnquiry,
      kind: MethodKind.Unary,
    },
    /**
     * View all records with the given IDs
     *
     * @generated from rpc Scailo.PurchasesEnquiriesService.ViewFromIDs
     */
    viewFromIDs: {
      name: "ViewFromIDs",
      I: IdentifiersList,
      O: PurchasesEnquiriesList,
      kind: MethodKind.Unary,
    },
    /**
     * View all
     *
     * @generated from rpc Scailo.PurchasesEnquiriesService.ViewAll
     */
    viewAll: {
      name: "ViewAll",
      I: ActiveStatus,
      O: PurchasesEnquiriesList,
      kind: MethodKind.Unary,
    },
    /**
     * View all with the given entity UUID
     *
     * @generated from rpc Scailo.PurchasesEnquiriesService.ViewAllForEntityUUID
     */
    viewAllForEntityUUID: {
      name: "ViewAllForEntityUUID",
      I: IdentifierUUID,
      O: PurchasesEnquiriesList,
      kind: MethodKind.Unary,
    },
    /**
     * View with pagination
     *
     * @generated from rpc Scailo.PurchasesEnquiriesService.ViewWithPagination
     */
    viewWithPagination: {
      name: "ViewWithPagination",
      I: PurchasesEnquiriesServicePaginationReq,
      O: PurchasesEnquiriesServicePaginationResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Checks if the record is downloadable (checks if the custom download function has been implemented)
     *
     * @generated from rpc Scailo.PurchasesEnquiriesService.IsDownloadable
     */
    isDownloadable: {
      name: "IsDownloadable",
      I: IdentifierUUID,
      O: BooleanResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Download purchase enquiry with the given IdentifierUUID (can be used to allow public downloads)
     *
     * @generated from rpc Scailo.PurchasesEnquiriesService.DownloadByUUID
     */
    downloadByUUID: {
      name: "DownloadByUUID",
      I: IdentifierUUID,
      O: StandardFile,
      kind: MethodKind.Unary,
    },
    /**
     * View all that match the given search key
     *
     * @generated from rpc Scailo.PurchasesEnquiriesService.SearchAll
     */
    searchAll: {
      name: "SearchAll",
      I: PurchasesEnquiriesServiceSearchAllReq,
      O: PurchasesEnquiriesList,
      kind: MethodKind.Unary,
    },
    /**
     * View all that match the given filter criteria
     *
     * @generated from rpc Scailo.PurchasesEnquiriesService.Filter
     */
    filter: {
      name: "Filter",
      I: PurchasesEnquiriesServiceFilterReq,
      O: PurchasesEnquiriesList,
      kind: MethodKind.Unary,
    },
    /**
     * Count in status
     *
     * @generated from rpc Scailo.PurchasesEnquiriesService.CountInStatus
     */
    countInStatus: {
      name: "CountInStatus",
      I: CountInSLCStatusRequest,
      O: CountResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Count all that match the given criteria
     *
     * @generated from rpc Scailo.PurchasesEnquiriesService.Count
     */
    count: {
      name: "Count",
      I: PurchasesEnquiriesServiceCountReq,
      O: CountResponse,
      kind: MethodKind.Unary,
    },
    /**
     * CSV operations
     * Download the CSV file that consists of the list of records according to the given filter request. The same file could also be used as a template for uploading records
     *
     * @generated from rpc Scailo.PurchasesEnquiriesService.DownloadAsCSV
     */
    downloadAsCSV: {
      name: "DownloadAsCSV",
      I: PurchasesEnquiriesServiceFilterReq,
      O: StandardFile,
      kind: MethodKind.Unary,
    },
  }
} as const;

