// addHolidayShiftGroup
// modifyHolidayShiftGroup
// reorderHolidayShiftsGroups
// deleteHolidayShiftGroup
// approveHolidayShiftGroup

// @generated by protoc-gen-es v1.5.1 with parameter "target=ts"
// @generated from file holidays.scailo.proto (package Scailo, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3, protoInt64 } from "@bufbuild/protobuf";
import { ApprovalMetadata, BOOL_FILTER, EmployeeMetadata, LogbookLogConciseSLC, SORT_ORDER, STANDARD_LIFECYCLE_STATUS } from "./base.scailo_pb.js";

/**
 *
 * Describes the available sort keys
 *
 * @generated from enum Scailo.HOLIDAY_SORT_KEY
 */
export enum HOLIDAY_SORT_KEY {
  /**
   * Fetch ordered results by id
   *
   * @generated from enum value: HOLIDAY_SORT_KEY_ID_UNSPECIFIED = 0;
   */
  HOLIDAY_SORT_KEY_ID_UNSPECIFIED = 0,

  /**
   * Fetch ordered results by the creation timestamp
   *
   * @generated from enum value: HOLIDAY_SORT_KEY_CREATED_AT = 1;
   */
  HOLIDAY_SORT_KEY_CREATED_AT = 1,

  /**
   * Fetch ordered results by the modified timestamp
   *
   * @generated from enum value: HOLIDAY_SORT_KEY_MODIFIED_AT = 2;
   */
  HOLIDAY_SORT_KEY_MODIFIED_AT = 2,

  /**
   * Fetch ordered results by the approved on timestamp
   *
   * @generated from enum value: HOLIDAY_SORT_KEY_APPROVED_ON = 3;
   */
  HOLIDAY_SORT_KEY_APPROVED_ON = 3,

  /**
   * Fetch ordered results by the approved by field
   *
   * @generated from enum value: HOLIDAY_SORT_KEY_APPROVED_BY = 4;
   */
  HOLIDAY_SORT_KEY_APPROVED_BY = 4,

  /**
   * Fetch ordered results by the approver's role ID
   *
   * @generated from enum value: HOLIDAY_SORT_KEY_APPROVER_ROLE_ID = 5;
   */
  HOLIDAY_SORT_KEY_APPROVER_ROLE_ID = 5,

  /**
   * Fetch ordered results by the approver's completed on timestamp
   *
   * @generated from enum value: HOLIDAY_SORT_KEY_COMPLETED_ON = 6;
   */
  HOLIDAY_SORT_KEY_COMPLETED_ON = 6,

  /**
   * Fetch ordered results by the title
   *
   * @generated from enum value: HOLIDAY_SORT_KEY_TITLE = 10;
   */
  HOLIDAY_SORT_KEY_TITLE = 10,

  /**
   * Fetch ordered results by the description
   *
   * @generated from enum value: HOLIDAY_SORT_KEY_DESCRIPTION = 11;
   */
  HOLIDAY_SORT_KEY_DESCRIPTION = 11,

  /**
   * Fetch ordered results by the start on timestamp
   *
   * @generated from enum value: HOLIDAY_SORT_KEY_START_ON = 12;
   */
  HOLIDAY_SORT_KEY_START_ON = 12,

  /**
   * Fetch ordered results by the end on timestamp
   *
   * @generated from enum value: HOLIDAY_SORT_KEY_END_ON = 13;
   */
  HOLIDAY_SORT_KEY_END_ON = 13,
}
// Retrieve enum metadata with: proto3.getEnumType(HOLIDAY_SORT_KEY)
proto3.util.setEnumType(HOLIDAY_SORT_KEY, "Scailo.HOLIDAY_SORT_KEY", [
  { no: 0, name: "HOLIDAY_SORT_KEY_ID_UNSPECIFIED" },
  { no: 1, name: "HOLIDAY_SORT_KEY_CREATED_AT" },
  { no: 2, name: "HOLIDAY_SORT_KEY_MODIFIED_AT" },
  { no: 3, name: "HOLIDAY_SORT_KEY_APPROVED_ON" },
  { no: 4, name: "HOLIDAY_SORT_KEY_APPROVED_BY" },
  { no: 5, name: "HOLIDAY_SORT_KEY_APPROVER_ROLE_ID" },
  { no: 6, name: "HOLIDAY_SORT_KEY_COMPLETED_ON" },
  { no: 10, name: "HOLIDAY_SORT_KEY_TITLE" },
  { no: 11, name: "HOLIDAY_SORT_KEY_DESCRIPTION" },
  { no: 12, name: "HOLIDAY_SORT_KEY_START_ON" },
  { no: 13, name: "HOLIDAY_SORT_KEY_END_ON" },
]);

/**
 *
 * Describes the parameters necessary to create a record
 *
 * @generated from message Scailo.HolidaysServiceCreateRequest
 */
export class HolidaysServiceCreateRequest extends Message<HolidaysServiceCreateRequest> {
  /**
   * Stores a globally unique entity UUID. This will be set at the organization level
   *
   * @generated from field: string entity_uuid = 1;
   */
  entityUuid = "";

  /**
   * Stores any comment that the user might add during this operation
   *
   * @generated from field: string user_comment = 2;
   */
  userComment = "";

  /**
   * The associated vault folder ID
   *
   * @generated from field: uint64 vault_folder_id = 9;
   */
  vaultFolderId = protoInt64.zero;

  /**
   * The title of the holiday
   *
   * @generated from field: string title = 10;
   */
  title = "";

  /**
   * The description of the holiday
   *
   * @generated from field: string description = 11;
   */
  description = "";

  /**
   * The start timestamp
   *
   * @generated from field: uint64 start_on = 12;
   */
  startOn = protoInt64.zero;

  /**
   * The end timestamp
   *
   * @generated from field: uint64 end_on = 13;
   */
  endOn = protoInt64.zero;

  constructor(data?: PartialMessage<HolidaysServiceCreateRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.HolidaysServiceCreateRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "entity_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "user_comment", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 9, name: "vault_folder_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 10, name: "title", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 11, name: "description", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 12, name: "start_on", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 13, name: "end_on", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): HolidaysServiceCreateRequest {
    return new HolidaysServiceCreateRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): HolidaysServiceCreateRequest {
    return new HolidaysServiceCreateRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): HolidaysServiceCreateRequest {
    return new HolidaysServiceCreateRequest().fromJsonString(jsonString, options);
  }

  static equals(a: HolidaysServiceCreateRequest | PlainMessage<HolidaysServiceCreateRequest> | undefined, b: HolidaysServiceCreateRequest | PlainMessage<HolidaysServiceCreateRequest> | undefined): boolean {
    return proto3.util.equals(HolidaysServiceCreateRequest, a, b);
  }
}

/**
 *
 * Describes the parameters necessary to update a record
 *
 * @generated from message Scailo.HolidaysServiceUpdateRequest
 */
export class HolidaysServiceUpdateRequest extends Message<HolidaysServiceUpdateRequest> {
  /**
   * Stores any comment that the user might add during this operation
   *
   * @generated from field: string user_comment = 1;
   */
  userComment = "";

  /**
   * The ID of the record that needs to be updated
   *
   * @generated from field: uint64 id = 2;
   */
  id = protoInt64.zero;

  /**
   * Optional boolean value that stores if a notification needs to be sent to users about the update to the record. This is useful when a subsequent operation needs to be performed immediately (such as send to verification after updating the revision)
   *
   * @generated from field: bool notify_users = 3;
   */
  notifyUsers = false;

  /**
   * The associated vault folder ID
   *
   * @generated from field: uint64 vault_folder_id = 9;
   */
  vaultFolderId = protoInt64.zero;

  /**
   * The title of the holiday
   *
   * @generated from field: string title = 10;
   */
  title = "";

  /**
   * The description of the holiday
   *
   * @generated from field: string description = 11;
   */
  description = "";

  /**
   * The start timestamp
   *
   * @generated from field: uint64 start_on = 12;
   */
  startOn = protoInt64.zero;

  /**
   * The end timestamp
   *
   * @generated from field: uint64 end_on = 13;
   */
  endOn = protoInt64.zero;

  constructor(data?: PartialMessage<HolidaysServiceUpdateRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.HolidaysServiceUpdateRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "user_comment", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 3, name: "notify_users", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 9, name: "vault_folder_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 10, name: "title", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 11, name: "description", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 12, name: "start_on", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 13, name: "end_on", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): HolidaysServiceUpdateRequest {
    return new HolidaysServiceUpdateRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): HolidaysServiceUpdateRequest {
    return new HolidaysServiceUpdateRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): HolidaysServiceUpdateRequest {
    return new HolidaysServiceUpdateRequest().fromJsonString(jsonString, options);
  }

  static equals(a: HolidaysServiceUpdateRequest | PlainMessage<HolidaysServiceUpdateRequest> | undefined, b: HolidaysServiceUpdateRequest | PlainMessage<HolidaysServiceUpdateRequest> | undefined): boolean {
    return proto3.util.equals(HolidaysServiceUpdateRequest, a, b);
  }
}

/**
 *
 * Describes the parameters that are part of a standard response
 *
 * @generated from message Scailo.Holiday
 */
export class Holiday extends Message<Holiday> {
  /**
   * Stores a globally unique entity UUID. This will be set at the organization level
   *
   * @generated from field: string entity_uuid = 1;
   */
  entityUuid = "";

  /**
   * Stores the metadata of this shift group
   *
   * @generated from field: Scailo.EmployeeMetadata metadata = 2;
   */
  metadata?: EmployeeMetadata;

  /**
   * Stores the approval metadata
   *
   * @generated from field: Scailo.ApprovalMetadata approval_metadata = 3;
   */
  approvalMetadata?: ApprovalMetadata;

  /**
   * The status of this shift group
   *
   * @generated from field: Scailo.STANDARD_LIFECYCLE_STATUS status = 4;
   */
  status = STANDARD_LIFECYCLE_STATUS.ANY_UNSPECIFIED;

  /**
   * Stores the logs of every operation performed on this shift group
   *
   * @generated from field: repeated Scailo.LogbookLogConciseSLC logs = 5;
   */
  logs: LogbookLogConciseSLC[] = [];

  /**
   * The timestamp of when this shift group was marked as completed
   *
   * @generated from field: uint64 completed_on = 6;
   */
  completedOn = protoInt64.zero;

  /**
   * The associated vault folder ID
   *
   * @generated from field: uint64 vault_folder_id = 9;
   */
  vaultFolderId = protoInt64.zero;

  /**
   * The title of the holiday
   *
   * @generated from field: string title = 10;
   */
  title = "";

  /**
   * The description of the holiday
   *
   * @generated from field: string description = 11;
   */
  description = "";

  /**
   * The start timestamp
   *
   * @generated from field: uint64 start_on = 12;
   */
  startOn = protoInt64.zero;

  /**
   * The end timestamp
   *
   * @generated from field: uint64 end_on = 13;
   */
  endOn = protoInt64.zero;

  /**
   * The list of associated holiday shift groups
   *
   * @generated from field: repeated Scailo.HolidayShiftGroup list = 20;
   */
  list: HolidayShiftGroup[] = [];

  constructor(data?: PartialMessage<Holiday>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.Holiday";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "entity_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "metadata", kind: "message", T: EmployeeMetadata },
    { no: 3, name: "approval_metadata", kind: "message", T: ApprovalMetadata },
    { no: 4, name: "status", kind: "enum", T: proto3.getEnumType(STANDARD_LIFECYCLE_STATUS) },
    { no: 5, name: "logs", kind: "message", T: LogbookLogConciseSLC, repeated: true },
    { no: 6, name: "completed_on", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 9, name: "vault_folder_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 10, name: "title", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 11, name: "description", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 12, name: "start_on", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 13, name: "end_on", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 20, name: "list", kind: "message", T: HolidayShiftGroup, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Holiday {
    return new Holiday().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Holiday {
    return new Holiday().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Holiday {
    return new Holiday().fromJsonString(jsonString, options);
  }

  static equals(a: Holiday | PlainMessage<Holiday> | undefined, b: Holiday | PlainMessage<Holiday> | undefined): boolean {
    return proto3.util.equals(Holiday, a, b);
  }
}

/**
 *
 * Describes the parameters required to add a shift to a shift group
 *
 * @generated from message Scailo.HolidaysServiceShiftGroupCreateRequest
 */
export class HolidaysServiceShiftGroupCreateRequest extends Message<HolidaysServiceShiftGroupCreateRequest> {
  /**
   * Stores any comment that the user might add during this operation
   *
   * @generated from field: string user_comment = 1;
   */
  userComment = "";

  /**
   * Stores the holiday ID
   *
   * @generated from field: uint64 holiday_id = 10;
   */
  holidayId = protoInt64.zero;

  /**
   * Stores the shift group ID
   *
   * @generated from field: uint64 shift_group_id = 11;
   */
  shiftGroupId = protoInt64.zero;

  constructor(data?: PartialMessage<HolidaysServiceShiftGroupCreateRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.HolidaysServiceShiftGroupCreateRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "user_comment", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 10, name: "holiday_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 11, name: "shift_group_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): HolidaysServiceShiftGroupCreateRequest {
    return new HolidaysServiceShiftGroupCreateRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): HolidaysServiceShiftGroupCreateRequest {
    return new HolidaysServiceShiftGroupCreateRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): HolidaysServiceShiftGroupCreateRequest {
    return new HolidaysServiceShiftGroupCreateRequest().fromJsonString(jsonString, options);
  }

  static equals(a: HolidaysServiceShiftGroupCreateRequest | PlainMessage<HolidaysServiceShiftGroupCreateRequest> | undefined, b: HolidaysServiceShiftGroupCreateRequest | PlainMessage<HolidaysServiceShiftGroupCreateRequest> | undefined): boolean {
    return proto3.util.equals(HolidaysServiceShiftGroupCreateRequest, a, b);
  }
}

/**
 *
 * Describes the parameters required to update a shift in a shift group
 *
 * @generated from message Scailo.HolidaysServiceShiftGroupUpdateRequest
 */
export class HolidaysServiceShiftGroupUpdateRequest extends Message<HolidaysServiceShiftGroupUpdateRequest> {
  /**
   * Stores any comment that the user might add during this operation
   *
   * @generated from field: string user_comment = 1;
   */
  userComment = "";

  /**
   * The ID of the record
   *
   * @generated from field: uint64 id = 2;
   */
  id = protoInt64.zero;

  /**
   * Stores the holiday ID
   *
   * @generated from field: uint64 holiday_id = 10;
   */
  holidayId = protoInt64.zero;

  /**
   * Stores the shift group ID
   *
   * @generated from field: uint64 shift_group_id = 11;
   */
  shiftGroupId = protoInt64.zero;

  constructor(data?: PartialMessage<HolidaysServiceShiftGroupUpdateRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.HolidaysServiceShiftGroupUpdateRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "user_comment", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 10, name: "holiday_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 11, name: "shift_group_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): HolidaysServiceShiftGroupUpdateRequest {
    return new HolidaysServiceShiftGroupUpdateRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): HolidaysServiceShiftGroupUpdateRequest {
    return new HolidaysServiceShiftGroupUpdateRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): HolidaysServiceShiftGroupUpdateRequest {
    return new HolidaysServiceShiftGroupUpdateRequest().fromJsonString(jsonString, options);
  }

  static equals(a: HolidaysServiceShiftGroupUpdateRequest | PlainMessage<HolidaysServiceShiftGroupUpdateRequest> | undefined, b: HolidaysServiceShiftGroupUpdateRequest | PlainMessage<HolidaysServiceShiftGroupUpdateRequest> | undefined): boolean {
    return proto3.util.equals(HolidaysServiceShiftGroupUpdateRequest, a, b);
  }
}

/**
 *
 * Describes the parameters that constitute a shift associated to a shift group
 *
 * @generated from message Scailo.HolidayShiftGroup
 */
export class HolidayShiftGroup extends Message<HolidayShiftGroup> {
  /**
   * Stores a globally unique entity UUID. This will be set at the organization level
   *
   * @generated from field: string entity_uuid = 1;
   */
  entityUuid = "";

  /**
   * Stores the metadata of this shift group
   *
   * @generated from field: Scailo.EmployeeMetadata metadata = 2;
   */
  metadata?: EmployeeMetadata;

  /**
   * Stores the approval metadata
   *
   * @generated from field: Scailo.ApprovalMetadata approval_metadata = 3;
   */
  approvalMetadata?: ApprovalMetadata;

  /**
   * Denotes if this record requires approval (or has been approved)
   *
   * @generated from field: bool need_approval = 4;
   */
  needApproval = false;

  /**
   * Stores any comment that the user might have added during an operation
   *
   * @generated from field: string user_comment = 5;
   */
  userComment = "";

  /**
   * Stores the holiday ID
   *
   * @generated from field: uint64 holiday_id = 10;
   */
  holidayId = protoInt64.zero;

  /**
   * Stores the shift group ID
   *
   * @generated from field: uint64 shift_group_id = 11;
   */
  shiftGroupId = protoInt64.zero;

  constructor(data?: PartialMessage<HolidayShiftGroup>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.HolidayShiftGroup";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "entity_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "metadata", kind: "message", T: EmployeeMetadata },
    { no: 3, name: "approval_metadata", kind: "message", T: ApprovalMetadata },
    { no: 4, name: "need_approval", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 5, name: "user_comment", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 10, name: "holiday_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 11, name: "shift_group_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): HolidayShiftGroup {
    return new HolidayShiftGroup().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): HolidayShiftGroup {
    return new HolidayShiftGroup().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): HolidayShiftGroup {
    return new HolidayShiftGroup().fromJsonString(jsonString, options);
  }

  static equals(a: HolidayShiftGroup | PlainMessage<HolidayShiftGroup> | undefined, b: HolidayShiftGroup | PlainMessage<HolidayShiftGroup> | undefined): boolean {
    return proto3.util.equals(HolidayShiftGroup, a, b);
  }
}

/**
 *
 * Describes the message consisting of the list of shift groups
 *
 * @generated from message Scailo.HolidaysList
 */
export class HolidaysList extends Message<HolidaysList> {
  /**
   * List of records
   *
   * @generated from field: repeated Scailo.Holiday list = 1;
   */
  list: Holiday[] = [];

  constructor(data?: PartialMessage<HolidaysList>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.HolidaysList";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "list", kind: "message", T: Holiday, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): HolidaysList {
    return new HolidaysList().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): HolidaysList {
    return new HolidaysList().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): HolidaysList {
    return new HolidaysList().fromJsonString(jsonString, options);
  }

  static equals(a: HolidaysList | PlainMessage<HolidaysList> | undefined, b: HolidaysList | PlainMessage<HolidaysList> | undefined): boolean {
    return proto3.util.equals(HolidaysList, a, b);
  }
}

/**
 *
 * Describes the message consisting of the list of holiday shift groups
 *
 * @generated from message Scailo.HolidaysShiftsGroupsList
 */
export class HolidaysShiftsGroupsList extends Message<HolidaysShiftsGroupsList> {
  /**
   * List of records
   *
   * @generated from field: repeated Scailo.HolidayShiftGroup list = 1;
   */
  list: HolidayShiftGroup[] = [];

  constructor(data?: PartialMessage<HolidaysShiftsGroupsList>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.HolidaysShiftsGroupsList";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "list", kind: "message", T: HolidayShiftGroup, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): HolidaysShiftsGroupsList {
    return new HolidaysShiftsGroupsList().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): HolidaysShiftsGroupsList {
    return new HolidaysShiftsGroupsList().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): HolidaysShiftsGroupsList {
    return new HolidaysShiftsGroupsList().fromJsonString(jsonString, options);
  }

  static equals(a: HolidaysShiftsGroupsList | PlainMessage<HolidaysShiftsGroupsList> | undefined, b: HolidaysShiftsGroupsList | PlainMessage<HolidaysShiftsGroupsList> | undefined): boolean {
    return proto3.util.equals(HolidaysShiftsGroupsList, a, b);
  }
}

/**
 *
 * Describes the parameters that are required to retrieve the history of the record
 *
 * @generated from message Scailo.HolidaysShiftsGroupsHistoryRequest
 */
export class HolidaysShiftsGroupsHistoryRequest extends Message<HolidaysShiftsGroupsHistoryRequest> {
  /**
   * Stores the holiday ID
   *
   * @generated from field: uint64 holiday_id = 10;
   */
  holidayId = protoInt64.zero;

  /**
   * Stores the shift group ID
   *
   * @generated from field: uint64 shift_group_id = 11;
   */
  shiftGroupId = protoInt64.zero;

  constructor(data?: PartialMessage<HolidaysShiftsGroupsHistoryRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.HolidaysShiftsGroupsHistoryRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 10, name: "holiday_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 11, name: "shift_group_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): HolidaysShiftsGroupsHistoryRequest {
    return new HolidaysShiftsGroupsHistoryRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): HolidaysShiftsGroupsHistoryRequest {
    return new HolidaysShiftsGroupsHistoryRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): HolidaysShiftsGroupsHistoryRequest {
    return new HolidaysShiftsGroupsHistoryRequest().fromJsonString(jsonString, options);
  }

  static equals(a: HolidaysShiftsGroupsHistoryRequest | PlainMessage<HolidaysShiftsGroupsHistoryRequest> | undefined, b: HolidaysShiftsGroupsHistoryRequest | PlainMessage<HolidaysShiftsGroupsHistoryRequest> | undefined): boolean {
    return proto3.util.equals(HolidaysShiftsGroupsHistoryRequest, a, b);
  }
}

/**
 *
 * Describes a pagination request to retrieve records
 *
 * @generated from message Scailo.HolidaysServicePaginationReq
 */
export class HolidaysServicePaginationReq extends Message<HolidaysServicePaginationReq> {
  /**
   * If true, then returns only active records. If false, then returns only inactive records
   *
   * @generated from field: Scailo.BOOL_FILTER is_active = 1;
   */
  isActive = BOOL_FILTER.BOOL_FILTER_ANY_UNSPECIFIED;

  /**
   * The number of records that need to be sent in the response
   *
   * @generated from field: int64 count = 2;
   */
  count = protoInt64.zero;

  /**
   * The number that need to be offset by before fetching the records
   *
   * @generated from field: uint64 offset = 3;
   */
  offset = protoInt64.zero;

  /**
   * The sort order that is to be used to fetch the pagination response
   *
   * @generated from field: Scailo.SORT_ORDER sort_order = 4;
   */
  sortOrder = SORT_ORDER.ASCENDING_UNSPECIFIED;

  /**
   * The sort key that is to be used to fetch the pagination response
   *
   * @generated from field: Scailo.HOLIDAY_SORT_KEY sort_key = 5;
   */
  sortKey = HOLIDAY_SORT_KEY.HOLIDAY_SORT_KEY_ID_UNSPECIFIED;

  /**
   * The status of this shift group
   *
   * @generated from field: Scailo.STANDARD_LIFECYCLE_STATUS status = 6;
   */
  status = STANDARD_LIFECYCLE_STATUS.ANY_UNSPECIFIED;

  constructor(data?: PartialMessage<HolidaysServicePaginationReq>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.HolidaysServicePaginationReq";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "is_active", kind: "enum", T: proto3.getEnumType(BOOL_FILTER) },
    { no: 2, name: "count", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "offset", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 4, name: "sort_order", kind: "enum", T: proto3.getEnumType(SORT_ORDER) },
    { no: 5, name: "sort_key", kind: "enum", T: proto3.getEnumType(HOLIDAY_SORT_KEY) },
    { no: 6, name: "status", kind: "enum", T: proto3.getEnumType(STANDARD_LIFECYCLE_STATUS) },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): HolidaysServicePaginationReq {
    return new HolidaysServicePaginationReq().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): HolidaysServicePaginationReq {
    return new HolidaysServicePaginationReq().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): HolidaysServicePaginationReq {
    return new HolidaysServicePaginationReq().fromJsonString(jsonString, options);
  }

  static equals(a: HolidaysServicePaginationReq | PlainMessage<HolidaysServicePaginationReq> | undefined, b: HolidaysServicePaginationReq | PlainMessage<HolidaysServicePaginationReq> | undefined): boolean {
    return proto3.util.equals(HolidaysServicePaginationReq, a, b);
  }
}

/**
 *
 * Describes the response to a pagination request
 *
 * @generated from message Scailo.HolidaysServicePaginationResponse
 */
export class HolidaysServicePaginationResponse extends Message<HolidaysServicePaginationResponse> {
  /**
   * The number of records in this payload
   *
   * @generated from field: uint64 count = 1;
   */
  count = protoInt64.zero;

  /**
   * The number that has been offset before fetching the records. This is the same value that has been sent as part of the pagination request
   *
   * @generated from field: uint64 offset = 2;
   */
  offset = protoInt64.zero;

  /**
   * The total number of records that are available
   *
   * @generated from field: uint64 total = 3;
   */
  total = protoInt64.zero;

  /**
   * The list of records
   *
   * @generated from field: repeated Scailo.Holiday payload = 4;
   */
  payload: Holiday[] = [];

  constructor(data?: PartialMessage<HolidaysServicePaginationResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.HolidaysServicePaginationResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "count", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 2, name: "offset", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 3, name: "total", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 4, name: "payload", kind: "message", T: Holiday, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): HolidaysServicePaginationResponse {
    return new HolidaysServicePaginationResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): HolidaysServicePaginationResponse {
    return new HolidaysServicePaginationResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): HolidaysServicePaginationResponse {
    return new HolidaysServicePaginationResponse().fromJsonString(jsonString, options);
  }

  static equals(a: HolidaysServicePaginationResponse | PlainMessage<HolidaysServicePaginationResponse> | undefined, b: HolidaysServicePaginationResponse | PlainMessage<HolidaysServicePaginationResponse> | undefined): boolean {
    return proto3.util.equals(HolidaysServicePaginationResponse, a, b);
  }
}

/**
 *
 * Describes the base request payload of a filter search
 *
 * @generated from message Scailo.HolidaysServiceFilterReq
 */
export class HolidaysServiceFilterReq extends Message<HolidaysServiceFilterReq> {
  /**
   * If true, then returns only active records. If false, then returns only inactive records
   *
   * @generated from field: Scailo.BOOL_FILTER is_active = 1;
   */
  isActive = BOOL_FILTER.BOOL_FILTER_ANY_UNSPECIFIED;

  /**
   * The number of records that need to be sent in the response. Returns all records if it is set to -1
   *
   * @generated from field: int64 count = 2;
   */
  count = protoInt64.zero;

  /**
   * The number that need to be offset by before fetching the records
   *
   * @generated from field: uint64 offset = 3;
   */
  offset = protoInt64.zero;

  /**
   * The sort order that is to be used to fetch the pagination response
   *
   * @generated from field: Scailo.SORT_ORDER sort_order = 4;
   */
  sortOrder = SORT_ORDER.ASCENDING_UNSPECIFIED;

  /**
   * The sort key that is to be used to fetch the pagination response
   *
   * @generated from field: Scailo.HOLIDAY_SORT_KEY sort_key = 5;
   */
  sortKey = HOLIDAY_SORT_KEY.HOLIDAY_SORT_KEY_ID_UNSPECIFIED;

  /**
   * The minimum timestamp that needs to be considered to filter by creation
   *
   * @generated from field: uint64 creation_timestamp_start = 101;
   */
  creationTimestampStart = protoInt64.zero;

  /**
   * The maximum timestamp that needs to be considered to filter by creation
   *
   * @generated from field: uint64 creation_timestamp_end = 102;
   */
  creationTimestampEnd = protoInt64.zero;

  /**
   * The minimum timestamp that needs to be considered to filter by modification
   *
   * @generated from field: uint64 modification_timestamp_start = 103;
   */
  modificationTimestampStart = protoInt64.zero;

  /**
   * The maximum timestamp that needs to be considered to filter by modification
   *
   * @generated from field: uint64 modification_timestamp_end = 104;
   */
  modificationTimestampEnd = protoInt64.zero;

  /**
   * The entity UUID that is to be used to filter records
   *
   * @generated from field: string entity_uuid = 8;
   */
  entityUuid = "";

  /**
   * The status of this shift group
   *
   * @generated from field: Scailo.STANDARD_LIFECYCLE_STATUS status = 10;
   */
  status = STANDARD_LIFECYCLE_STATUS.ANY_UNSPECIFIED;

  /**
   * The start range of approved timestamp
   *
   * @generated from field: uint64 approved_on_start = 11;
   */
  approvedOnStart = protoInt64.zero;

  /**
   * The end range of approved timestamp
   *
   * @generated from field: uint64 approved_on_end = 12;
   */
  approvedOnEnd = protoInt64.zero;

  /**
   * The ID of the approver
   *
   * @generated from field: uint64 approved_by_user_id = 13;
   */
  approvedByUserId = protoInt64.zero;

  /**
   * The role ID of the approver
   *
   * @generated from field: uint64 approver_role_id = 14;
   */
  approverRoleId = protoInt64.zero;

  /**
   * The start range of completed timestamp
   *
   * @generated from field: uint64 completed_on_start = 15;
   */
  completedOnStart = protoInt64.zero;

  /**
   * The end range of completed timestamp
   *
   * @generated from field: uint64 completed_on_end = 16;
   */
  completedOnEnd = protoInt64.zero;

  /**
   * The title of the holiday
   *
   * @generated from field: string title = 20;
   */
  title = "";

  /**
   * The description of the holiday
   *
   * @generated from field: string description = 21;
   */
  description = "";

  /**
   * The start range of start timestamp
   *
   * @generated from field: uint64 start_on_start = 22;
   */
  startOnStart = protoInt64.zero;

  /**
   * The end range of start timestamp
   *
   * @generated from field: uint64 start_on_end = 23;
   */
  startOnEnd = protoInt64.zero;

  /**
   * The start range of end timestamp
   *
   * @generated from field: uint64 end_on_start = 24;
   */
  endOnStart = protoInt64.zero;

  /**
   * The end range of end timestamp
   *
   * @generated from field: uint64 end_on_end = 25;
   */
  endOnEnd = protoInt64.zero;

  constructor(data?: PartialMessage<HolidaysServiceFilterReq>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.HolidaysServiceFilterReq";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "is_active", kind: "enum", T: proto3.getEnumType(BOOL_FILTER) },
    { no: 2, name: "count", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "offset", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 4, name: "sort_order", kind: "enum", T: proto3.getEnumType(SORT_ORDER) },
    { no: 5, name: "sort_key", kind: "enum", T: proto3.getEnumType(HOLIDAY_SORT_KEY) },
    { no: 101, name: "creation_timestamp_start", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 102, name: "creation_timestamp_end", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 103, name: "modification_timestamp_start", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 104, name: "modification_timestamp_end", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 8, name: "entity_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 10, name: "status", kind: "enum", T: proto3.getEnumType(STANDARD_LIFECYCLE_STATUS) },
    { no: 11, name: "approved_on_start", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 12, name: "approved_on_end", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 13, name: "approved_by_user_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 14, name: "approver_role_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 15, name: "completed_on_start", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 16, name: "completed_on_end", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 20, name: "title", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 21, name: "description", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 22, name: "start_on_start", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 23, name: "start_on_end", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 24, name: "end_on_start", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 25, name: "end_on_end", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): HolidaysServiceFilterReq {
    return new HolidaysServiceFilterReq().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): HolidaysServiceFilterReq {
    return new HolidaysServiceFilterReq().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): HolidaysServiceFilterReq {
    return new HolidaysServiceFilterReq().fromJsonString(jsonString, options);
  }

  static equals(a: HolidaysServiceFilterReq | PlainMessage<HolidaysServiceFilterReq> | undefined, b: HolidaysServiceFilterReq | PlainMessage<HolidaysServiceFilterReq> | undefined): boolean {
    return proto3.util.equals(HolidaysServiceFilterReq, a, b);
  }
}

/**
 *
 * Describes the base request payload of a count search
 *
 * @generated from message Scailo.HolidaysServiceCountReq
 */
export class HolidaysServiceCountReq extends Message<HolidaysServiceCountReq> {
  /**
   * If true, then returns only active records. If false, then returns only inactive records
   *
   * @generated from field: Scailo.BOOL_FILTER is_active = 1;
   */
  isActive = BOOL_FILTER.BOOL_FILTER_ANY_UNSPECIFIED;

  /**
   * The minimum timestamp that needs to be considered to filter by creation
   *
   * @generated from field: uint64 creation_timestamp_start = 101;
   */
  creationTimestampStart = protoInt64.zero;

  /**
   * The maximum timestamp that needs to be considered to filter by creation
   *
   * @generated from field: uint64 creation_timestamp_end = 102;
   */
  creationTimestampEnd = protoInt64.zero;

  /**
   * The minimum timestamp that needs to be considered to filter by modification
   *
   * @generated from field: uint64 modification_timestamp_start = 103;
   */
  modificationTimestampStart = protoInt64.zero;

  /**
   * The maximum timestamp that needs to be considered to filter by modification
   *
   * @generated from field: uint64 modification_timestamp_end = 104;
   */
  modificationTimestampEnd = protoInt64.zero;

  /**
   * The entity UUID that is to be used to filter records
   *
   * @generated from field: string entity_uuid = 8;
   */
  entityUuid = "";

  /**
   * The status of this shift group
   *
   * @generated from field: Scailo.STANDARD_LIFECYCLE_STATUS status = 10;
   */
  status = STANDARD_LIFECYCLE_STATUS.ANY_UNSPECIFIED;

  /**
   * The start range of approved timestamp
   *
   * @generated from field: uint64 approved_on_start = 11;
   */
  approvedOnStart = protoInt64.zero;

  /**
   * The end range of approved timestamp
   *
   * @generated from field: uint64 approved_on_end = 12;
   */
  approvedOnEnd = protoInt64.zero;

  /**
   * The ID of the approver
   *
   * @generated from field: uint64 approved_by_user_id = 13;
   */
  approvedByUserId = protoInt64.zero;

  /**
   * The role ID of the approver
   *
   * @generated from field: uint64 approver_role_id = 14;
   */
  approverRoleId = protoInt64.zero;

  /**
   * The start range of completed timestamp
   *
   * @generated from field: uint64 completed_on_start = 15;
   */
  completedOnStart = protoInt64.zero;

  /**
   * The end range of completed timestamp
   *
   * @generated from field: uint64 completed_on_end = 16;
   */
  completedOnEnd = protoInt64.zero;

  /**
   * The title of the holiday
   *
   * @generated from field: string title = 20;
   */
  title = "";

  /**
   * The description of the holiday
   *
   * @generated from field: string description = 21;
   */
  description = "";

  /**
   * The start range of start timestamp
   *
   * @generated from field: uint64 start_on_start = 22;
   */
  startOnStart = protoInt64.zero;

  /**
   * The end range of start timestamp
   *
   * @generated from field: uint64 start_on_end = 23;
   */
  startOnEnd = protoInt64.zero;

  /**
   * The start range of end timestamp
   *
   * @generated from field: uint64 end_on_start = 24;
   */
  endOnStart = protoInt64.zero;

  /**
   * The end range of end timestamp
   *
   * @generated from field: uint64 end_on_end = 25;
   */
  endOnEnd = protoInt64.zero;

  constructor(data?: PartialMessage<HolidaysServiceCountReq>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.HolidaysServiceCountReq";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "is_active", kind: "enum", T: proto3.getEnumType(BOOL_FILTER) },
    { no: 101, name: "creation_timestamp_start", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 102, name: "creation_timestamp_end", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 103, name: "modification_timestamp_start", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 104, name: "modification_timestamp_end", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 8, name: "entity_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 10, name: "status", kind: "enum", T: proto3.getEnumType(STANDARD_LIFECYCLE_STATUS) },
    { no: 11, name: "approved_on_start", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 12, name: "approved_on_end", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 13, name: "approved_by_user_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 14, name: "approver_role_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 15, name: "completed_on_start", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 16, name: "completed_on_end", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 20, name: "title", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 21, name: "description", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 22, name: "start_on_start", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 23, name: "start_on_end", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 24, name: "end_on_start", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 25, name: "end_on_end", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): HolidaysServiceCountReq {
    return new HolidaysServiceCountReq().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): HolidaysServiceCountReq {
    return new HolidaysServiceCountReq().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): HolidaysServiceCountReq {
    return new HolidaysServiceCountReq().fromJsonString(jsonString, options);
  }

  static equals(a: HolidaysServiceCountReq | PlainMessage<HolidaysServiceCountReq> | undefined, b: HolidaysServiceCountReq | PlainMessage<HolidaysServiceCountReq> | undefined): boolean {
    return proto3.util.equals(HolidaysServiceCountReq, a, b);
  }
}

/**
 *
 * Describes the request payload for performing a generic search operation on records
 *
 * @generated from message Scailo.HolidaysServiceSearchAllReq
 */
export class HolidaysServiceSearchAllReq extends Message<HolidaysServiceSearchAllReq> {
  /**
   * If true, then returns only active records. If false, then returns only inactive records
   *
   * @generated from field: Scailo.BOOL_FILTER is_active = 1;
   */
  isActive = BOOL_FILTER.BOOL_FILTER_ANY_UNSPECIFIED;

  /**
   * The number of records that need to be sent in the response. Returns all records if it is set to -1
   *
   * @generated from field: int64 count = 2;
   */
  count = protoInt64.zero;

  /**
   * The number that need to be offset by before fetching the records
   *
   * @generated from field: uint64 offset = 3;
   */
  offset = protoInt64.zero;

  /**
   * The sort order that is to be used to fetch the pagination response
   *
   * @generated from field: Scailo.SORT_ORDER sort_order = 4;
   */
  sortOrder = SORT_ORDER.ASCENDING_UNSPECIFIED;

  /**
   * The sort key that is to be used to fetch the pagination response
   *
   * @generated from field: Scailo.HOLIDAY_SORT_KEY sort_key = 5;
   */
  sortKey = HOLIDAY_SORT_KEY.HOLIDAY_SORT_KEY_ID_UNSPECIFIED;

  /**
   * The entity UUID that is to be used to filter records
   *
   * @generated from field: string entity_uuid = 6;
   */
  entityUuid = "";

  /**
   * Limit the search space to the given status
   *
   * @generated from field: Scailo.STANDARD_LIFECYCLE_STATUS status = 10;
   */
  status = STANDARD_LIFECYCLE_STATUS.ANY_UNSPECIFIED;

  /**
   * Describes the key with which the search operation needs to be performed
   *
   * @generated from field: string search_key = 11;
   */
  searchKey = "";

  constructor(data?: PartialMessage<HolidaysServiceSearchAllReq>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.HolidaysServiceSearchAllReq";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "is_active", kind: "enum", T: proto3.getEnumType(BOOL_FILTER) },
    { no: 2, name: "count", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "offset", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 4, name: "sort_order", kind: "enum", T: proto3.getEnumType(SORT_ORDER) },
    { no: 5, name: "sort_key", kind: "enum", T: proto3.getEnumType(HOLIDAY_SORT_KEY) },
    { no: 6, name: "entity_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 10, name: "status", kind: "enum", T: proto3.getEnumType(STANDARD_LIFECYCLE_STATUS) },
    { no: 11, name: "search_key", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): HolidaysServiceSearchAllReq {
    return new HolidaysServiceSearchAllReq().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): HolidaysServiceSearchAllReq {
    return new HolidaysServiceSearchAllReq().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): HolidaysServiceSearchAllReq {
    return new HolidaysServiceSearchAllReq().fromJsonString(jsonString, options);
  }

  static equals(a: HolidaysServiceSearchAllReq | PlainMessage<HolidaysServiceSearchAllReq> | undefined, b: HolidaysServiceSearchAllReq | PlainMessage<HolidaysServiceSearchAllReq> | undefined): boolean {
    return proto3.util.equals(HolidaysServiceSearchAllReq, a, b);
  }
}

/**
 *
 * Describes the request payload to query if the given timestamp is a holiday for the given shift group ID
 *
 * @generated from message Scailo.HolidaysServiceViewHolidaysOnTimestampRequest
 */
export class HolidaysServiceViewHolidaysOnTimestampRequest extends Message<HolidaysServiceViewHolidaysOnTimestampRequest> {
  /**
   * Stores the timestamp
   *
   * @generated from field: uint64 timestamp = 10;
   */
  timestamp = protoInt64.zero;

  /**
   * Stores the shift group ID
   *
   * @generated from field: uint64 shift_group_id = 11;
   */
  shiftGroupId = protoInt64.zero;

  constructor(data?: PartialMessage<HolidaysServiceViewHolidaysOnTimestampRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.HolidaysServiceViewHolidaysOnTimestampRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 10, name: "timestamp", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 11, name: "shift_group_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): HolidaysServiceViewHolidaysOnTimestampRequest {
    return new HolidaysServiceViewHolidaysOnTimestampRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): HolidaysServiceViewHolidaysOnTimestampRequest {
    return new HolidaysServiceViewHolidaysOnTimestampRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): HolidaysServiceViewHolidaysOnTimestampRequest {
    return new HolidaysServiceViewHolidaysOnTimestampRequest().fromJsonString(jsonString, options);
  }

  static equals(a: HolidaysServiceViewHolidaysOnTimestampRequest | PlainMessage<HolidaysServiceViewHolidaysOnTimestampRequest> | undefined, b: HolidaysServiceViewHolidaysOnTimestampRequest | PlainMessage<HolidaysServiceViewHolidaysOnTimestampRequest> | undefined): boolean {
    return proto3.util.equals(HolidaysServiceViewHolidaysOnTimestampRequest, a, b);
  }
}

