// @generated by protoc-gen-connect-es v0.12.0 with parameter "target=ts"
// @generated from file tax_groups.scailo.proto (package Scailo, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { TaxGroup, TaxGroupItem, TaxGroupItemHistoryRequest, TaxGroupsItemsList, TaxGroupsList, TaxGroupsServiceCountReq, TaxGroupsServiceCreateRequest, TaxGroupsServiceFilterReq, TaxGroupsServiceItemCreateRequest, TaxGroupsServiceItemUpdateRequest, TaxGroupsServicePaginationReq, TaxGroupsServicePaginationResponse, TaxGroupsServiceSearchAllReq, TaxGroupsServiceUpdateRequest } from "./tax_groups.scailo_pb.js";
import { ActiveStatus, CountInSLCStatusRequest, CountResponse, Identifier, IdentifierUUID, IdentifierWithSearchKey, IdentifierWithUserComment, ReorderItemsRequest } from "./base.scailo_pb.js";
import { MethodKind } from "@bufbuild/protobuf";

/**
 *
 * Describes the common methods applicable on each tax group
 *
 * @generated from service Scailo.TaxGroupsService
 */
export const TaxGroupsService = {
  typeName: "Scailo.TaxGroupsService",
  methods: {
    /**
     * Create and send for verification
     *
     * @generated from rpc Scailo.TaxGroupsService.Create
     */
    create: {
      name: "Create",
      I: TaxGroupsServiceCreateRequest,
      O: Identifier,
      kind: MethodKind.Unary,
    },
    /**
     * Create and save as draft
     *
     * @generated from rpc Scailo.TaxGroupsService.Draft
     */
    draft: {
      name: "Draft",
      I: TaxGroupsServiceCreateRequest,
      O: Identifier,
      kind: MethodKind.Unary,
    },
    /**
     * Update draft
     *
     * @generated from rpc Scailo.TaxGroupsService.DraftUpdate
     */
    draftUpdate: {
      name: "DraftUpdate",
      I: TaxGroupsServiceUpdateRequest,
      O: Identifier,
      kind: MethodKind.Unary,
    },
    /**
     * Send for verification
     *
     * @generated from rpc Scailo.TaxGroupsService.SendForVerification
     */
    sendForVerification: {
      name: "SendForVerification",
      I: IdentifierWithUserComment,
      O: Identifier,
      kind: MethodKind.Unary,
    },
    /**
     * Verify
     *
     * @generated from rpc Scailo.TaxGroupsService.Verify
     */
    verify: {
      name: "Verify",
      I: IdentifierWithUserComment,
      O: Identifier,
      kind: MethodKind.Unary,
    },
    /**
     * Approve
     *
     * @generated from rpc Scailo.TaxGroupsService.Approve
     */
    approve: {
      name: "Approve",
      I: IdentifierWithUserComment,
      O: Identifier,
      kind: MethodKind.Unary,
    },
    /**
     * Send For Revision
     *
     * @generated from rpc Scailo.TaxGroupsService.SendForRevision
     */
    sendForRevision: {
      name: "SendForRevision",
      I: IdentifierWithUserComment,
      O: Identifier,
      kind: MethodKind.Unary,
    },
    /**
     * Update revision
     *
     * @generated from rpc Scailo.TaxGroupsService.RevisionUpdate
     */
    revisionUpdate: {
      name: "RevisionUpdate",
      I: TaxGroupsServiceUpdateRequest,
      O: Identifier,
      kind: MethodKind.Unary,
    },
    /**
     * Halt
     *
     * @generated from rpc Scailo.TaxGroupsService.Halt
     */
    halt: {
      name: "Halt",
      I: IdentifierWithUserComment,
      O: Identifier,
      kind: MethodKind.Unary,
    },
    /**
     * Discard
     *
     * @generated from rpc Scailo.TaxGroupsService.Discard
     */
    discard: {
      name: "Discard",
      I: IdentifierWithUserComment,
      O: Identifier,
      kind: MethodKind.Unary,
    },
    /**
     * Restore
     *
     * @generated from rpc Scailo.TaxGroupsService.Restore
     */
    restore: {
      name: "Restore",
      I: IdentifierWithUserComment,
      O: Identifier,
      kind: MethodKind.Unary,
    },
    /**
     * Add comment
     *
     * Send Email
     * rpc SendEmail (Identifier) returns (Identifier);
     *
     * @generated from rpc Scailo.TaxGroupsService.CommentAdd
     */
    commentAdd: {
      name: "CommentAdd",
      I: IdentifierWithUserComment,
      O: Identifier,
      kind: MethodKind.Unary,
    },
    /**
     * Add a param to a tax group
     *
     * @generated from rpc Scailo.TaxGroupsService.AddTaxGroupItem
     */
    addTaxGroupItem: {
      name: "AddTaxGroupItem",
      I: TaxGroupsServiceItemCreateRequest,
      O: Identifier,
      kind: MethodKind.Unary,
    },
    /**
     * Modify a param in a tax group
     *
     * @generated from rpc Scailo.TaxGroupsService.ModifyTaxGroupItem
     */
    modifyTaxGroupItem: {
      name: "ModifyTaxGroupItem",
      I: TaxGroupsServiceItemUpdateRequest,
      O: Identifier,
      kind: MethodKind.Unary,
    },
    /**
     * Approve a param in a tax group
     *
     * @generated from rpc Scailo.TaxGroupsService.ApproveTaxGroupItem
     */
    approveTaxGroupItem: {
      name: "ApproveTaxGroupItem",
      I: IdentifierWithUserComment,
      O: Identifier,
      kind: MethodKind.Unary,
    },
    /**
     * Delete a param in a tax group
     *
     * @generated from rpc Scailo.TaxGroupsService.DeleteTaxGroupItem
     */
    deleteTaxGroupItem: {
      name: "DeleteTaxGroupItem",
      I: IdentifierWithUserComment,
      O: Identifier,
      kind: MethodKind.Unary,
    },
    /**
     * Reorder params in a tax group
     *
     * @generated from rpc Scailo.TaxGroupsService.ReorderTaxGroupItems
     */
    reorderTaxGroupItems: {
      name: "ReorderTaxGroupItems",
      I: ReorderItemsRequest,
      O: Identifier,
      kind: MethodKind.Unary,
    },
    /**
     * View Tax Group Item by ID
     *
     * @generated from rpc Scailo.TaxGroupsService.ViewTaxGroupItemByID
     */
    viewTaxGroupItemByID: {
      name: "ViewTaxGroupItemByID",
      I: Identifier,
      O: TaxGroupItem,
      kind: MethodKind.Unary,
    },
    /**
     * View approved tax group params for given tax group ID
     *
     * @generated from rpc Scailo.TaxGroupsService.ViewApprovedTaxGroupItems
     */
    viewApprovedTaxGroupItems: {
      name: "ViewApprovedTaxGroupItems",
      I: IdentifierWithSearchKey,
      O: TaxGroupsItemsList,
      kind: MethodKind.Unary,
    },
    /**
     * View unapproved tax group params for given tax group ID
     *
     * @generated from rpc Scailo.TaxGroupsService.ViewUnapprovedTaxGroupItems
     */
    viewUnapprovedTaxGroupItems: {
      name: "ViewUnapprovedTaxGroupItems",
      I: IdentifierWithSearchKey,
      O: TaxGroupsItemsList,
      kind: MethodKind.Unary,
    },
    /**
     * View the history of the tax group item
     *
     * @generated from rpc Scailo.TaxGroupsService.ViewTaxGroupItemHistory
     */
    viewTaxGroupItemHistory: {
      name: "ViewTaxGroupItemHistory",
      I: TaxGroupItemHistoryRequest,
      O: TaxGroupsItemsList,
      kind: MethodKind.Unary,
    },
    /**
     * View by ID
     *
     * @generated from rpc Scailo.TaxGroupsService.ViewByID
     */
    viewByID: {
      name: "ViewByID",
      I: Identifier,
      O: TaxGroup,
      kind: MethodKind.Unary,
    },
    /**
     * View all
     *
     * @generated from rpc Scailo.TaxGroupsService.ViewAll
     */
    viewAll: {
      name: "ViewAll",
      I: ActiveStatus,
      O: TaxGroupsList,
      kind: MethodKind.Unary,
    },
    /**
     * View all with the given entity UUID
     *
     * @generated from rpc Scailo.TaxGroupsService.ViewAllForEntityUUID
     */
    viewAllForEntityUUID: {
      name: "ViewAllForEntityUUID",
      I: IdentifierUUID,
      O: TaxGroupsList,
      kind: MethodKind.Unary,
    },
    /**
     * View with pagination
     *
     * @generated from rpc Scailo.TaxGroupsService.ViewWithPagination
     */
    viewWithPagination: {
      name: "ViewWithPagination",
      I: TaxGroupsServicePaginationReq,
      O: TaxGroupsServicePaginationResponse,
      kind: MethodKind.Unary,
    },
    /**
     * View all that match the given search key
     *
     * @generated from rpc Scailo.TaxGroupsService.SearchAll
     */
    searchAll: {
      name: "SearchAll",
      I: TaxGroupsServiceSearchAllReq,
      O: TaxGroupsList,
      kind: MethodKind.Unary,
    },
    /**
     * View all that match the given filter criteria
     *
     * @generated from rpc Scailo.TaxGroupsService.Filter
     */
    filter: {
      name: "Filter",
      I: TaxGroupsServiceFilterReq,
      O: TaxGroupsList,
      kind: MethodKind.Unary,
    },
    /**
     * Count in status
     *
     * @generated from rpc Scailo.TaxGroupsService.CountInStatus
     */
    countInStatus: {
      name: "CountInStatus",
      I: CountInSLCStatusRequest,
      O: CountResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Count all that match the given criteria
     *
     * @generated from rpc Scailo.TaxGroupsService.Count
     */
    count: {
      name: "Count",
      I: TaxGroupsServiceCountReq,
      O: CountResponse,
      kind: MethodKind.Unary,
    },
  }
} as const;

