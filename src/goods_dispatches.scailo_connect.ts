// @generated by protoc-gen-connect-es v0.12.0 with parameter "target=ts"
// @generated from file goods_dispatches.scailo.proto (package Scailo, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { GoodsDispatch, GoodsDispatchAncillaryParameters, GoodsDispatchesItemsList, GoodsDispatchesList, GoodsDispatchesServiceAlreadyAddedQuantityForSourceRequest, GoodsDispatchesServiceAutofillRequest, GoodsDispatchesServiceCountReq, GoodsDispatchesServiceCreateRequest, GoodsDispatchesServiceFilterReq, GoodsDispatchesServiceItemCreateRequest, GoodsDispatchesServiceItemUpdateRequest, GoodsDispatchesServicePaginatedItemsResponse, GoodsDispatchesServicePaginationReq, GoodsDispatchesServicePaginationResponse, GoodsDispatchesServiceSearchAllReq, GoodsDispatchesServiceUpdateRequest, GoodsDispatchItem, GoodsDispatchItemHistoryRequest, GoodsDispatchItemProspectiveInfoRequest, GoodsDispatchItemsSearchRequest } from "./goods_dispatches.scailo_pb.js";
import { ActiveStatus, BooleanResponse, CountInSLCStatusRequest, CountResponse, DualQuantitiesResponse, Empty, Identifier, IdentifierResponse, IdentifiersList, IdentifierUUID, IdentifierUUIDWithUserComment, IdentifierWithEmailAttributes, IdentifierWithSearchKey, IdentifierWithUserComment, ReorderItemsRequest, SimpleSearchReq, StandardFile } from "./base.scailo_pb.js";
import { MethodKind } from "@bufbuild/protobuf";
import { MagicLink, MagicLinksServiceCreateRequestForSpecificResource } from "./magic_links.scailo_pb.js";
import { FamiliesList, FilterFamiliesReqForIdentifier } from "./families.scailo_pb.js";

/**
 *
 * Describes the common methods applicable on each goods dispatch
 *
 * @generated from service Scailo.GoodsDispatchesService
 */
export const GoodsDispatchesService = {
  typeName: "Scailo.GoodsDispatchesService",
  methods: {
    /**
     * Create and send for verification
     *
     * @generated from rpc Scailo.GoodsDispatchesService.Create
     */
    create: {
      name: "Create",
      I: GoodsDispatchesServiceCreateRequest,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Create and save as draft
     *
     * @generated from rpc Scailo.GoodsDispatchesService.Draft
     */
    draft: {
      name: "Draft",
      I: GoodsDispatchesServiceCreateRequest,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Update draft
     *
     * @generated from rpc Scailo.GoodsDispatchesService.DraftUpdate
     */
    draftUpdate: {
      name: "DraftUpdate",
      I: GoodsDispatchesServiceUpdateRequest,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Send for verification
     *
     * @generated from rpc Scailo.GoodsDispatchesService.SendForVerification
     */
    sendForVerification: {
      name: "SendForVerification",
      I: IdentifierUUIDWithUserComment,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Verify
     *
     * @generated from rpc Scailo.GoodsDispatchesService.Verify
     */
    verify: {
      name: "Verify",
      I: IdentifierUUIDWithUserComment,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Approve
     *
     * @generated from rpc Scailo.GoodsDispatchesService.Approve
     */
    approve: {
      name: "Approve",
      I: IdentifierUUIDWithUserComment,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Send For Revision
     *
     * @generated from rpc Scailo.GoodsDispatchesService.SendForRevision
     */
    sendForRevision: {
      name: "SendForRevision",
      I: IdentifierUUIDWithUserComment,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Update revision
     *
     * @generated from rpc Scailo.GoodsDispatchesService.RevisionUpdate
     */
    revisionUpdate: {
      name: "RevisionUpdate",
      I: GoodsDispatchesServiceUpdateRequest,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Halt
     *
     * @generated from rpc Scailo.GoodsDispatchesService.Halt
     */
    halt: {
      name: "Halt",
      I: IdentifierUUIDWithUserComment,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Discard
     *
     * @generated from rpc Scailo.GoodsDispatchesService.Discard
     */
    discard: {
      name: "Discard",
      I: IdentifierUUIDWithUserComment,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Restore
     *
     * @generated from rpc Scailo.GoodsDispatchesService.Restore
     */
    restore: {
      name: "Restore",
      I: IdentifierUUIDWithUserComment,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Complete
     *
     * @generated from rpc Scailo.GoodsDispatchesService.Complete
     */
    complete: {
      name: "Complete",
      I: IdentifierUUIDWithUserComment,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Repeat
     *
     * @generated from rpc Scailo.GoodsDispatchesService.Repeat
     */
    repeat: {
      name: "Repeat",
      I: IdentifierUUIDWithUserComment,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Reopen
     *
     * @generated from rpc Scailo.GoodsDispatchesService.Reopen
     */
    reopen: {
      name: "Reopen",
      I: IdentifierUUIDWithUserComment,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Add comment
     *
     * @generated from rpc Scailo.GoodsDispatchesService.CommentAdd
     */
    commentAdd: {
      name: "CommentAdd",
      I: IdentifierUUIDWithUserComment,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Send Email
     *
     * @generated from rpc Scailo.GoodsDispatchesService.SendEmail
     */
    sendEmail: {
      name: "SendEmail",
      I: IdentifierWithEmailAttributes,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Autofill the goods dispatch
     *
     * @generated from rpc Scailo.GoodsDispatchesService.Autofill
     */
    autofill: {
      name: "Autofill",
      I: GoodsDispatchesServiceAutofillRequest,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Checks if the Goods Dispatch can be marked as completed
     *
     * @generated from rpc Scailo.GoodsDispatchesService.IsCompletable
     */
    isCompletable: {
      name: "IsCompletable",
      I: IdentifierUUID,
      O: BooleanResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Create a magic link
     *
     * @generated from rpc Scailo.GoodsDispatchesService.CreateMagicLink
     */
    createMagicLink: {
      name: "CreateMagicLink",
      I: MagicLinksServiceCreateRequestForSpecificResource,
      O: MagicLink,
      kind: MethodKind.Unary,
    },
    /**
     * Add an item to a goods dispatch
     *
     * @generated from rpc Scailo.GoodsDispatchesService.AddGoodsDispatchItem
     */
    addGoodsDispatchItem: {
      name: "AddGoodsDispatchItem",
      I: GoodsDispatchesServiceItemCreateRequest,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Modify an item in a goods dispatch
     *
     * @generated from rpc Scailo.GoodsDispatchesService.ModifyGoodsDispatchItem
     */
    modifyGoodsDispatchItem: {
      name: "ModifyGoodsDispatchItem",
      I: GoodsDispatchesServiceItemUpdateRequest,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Approve an item in a goods dispatch
     *
     * @generated from rpc Scailo.GoodsDispatchesService.ApproveGoodsDispatchItem
     */
    approveGoodsDispatchItem: {
      name: "ApproveGoodsDispatchItem",
      I: IdentifierWithUserComment,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Delete an item in a goods dispatch
     *
     * @generated from rpc Scailo.GoodsDispatchesService.DeleteGoodsDispatchItem
     */
    deleteGoodsDispatchItem: {
      name: "DeleteGoodsDispatchItem",
      I: IdentifierWithUserComment,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Reorder items in a goods dispatch
     *
     * @generated from rpc Scailo.GoodsDispatchesService.ReorderGoodsDispatchItems
     */
    reorderGoodsDispatchItems: {
      name: "ReorderGoodsDispatchItems",
      I: ReorderItemsRequest,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * View Goods Dispatch Item by ID
     *
     * @generated from rpc Scailo.GoodsDispatchesService.ViewGoodsDispatchItemByID
     */
    viewGoodsDispatchItemByID: {
      name: "ViewGoodsDispatchItemByID",
      I: Identifier,
      O: GoodsDispatchItem,
      kind: MethodKind.Unary,
    },
    /**
     * View Goods Dispatch Item by Inventory Hash
     *
     * @generated from rpc Scailo.GoodsDispatchesService.ViewGoodsDispatchItemByInventoryHash
     */
    viewGoodsDispatchItemByInventoryHash: {
      name: "ViewGoodsDispatchItemByInventoryHash",
      I: SimpleSearchReq,
      O: GoodsDispatchItem,
      kind: MethodKind.Unary,
    },
    /**
     * View approved goods dispatch items for given goods dispatch ID
     *
     * @generated from rpc Scailo.GoodsDispatchesService.ViewApprovedGoodsDispatchItems
     */
    viewApprovedGoodsDispatchItems: {
      name: "ViewApprovedGoodsDispatchItems",
      I: IdentifierWithSearchKey,
      O: GoodsDispatchesItemsList,
      kind: MethodKind.Unary,
    },
    /**
     * View unapproved goods dispatch items for given goods dispatch ID
     *
     * @generated from rpc Scailo.GoodsDispatchesService.ViewUnapprovedGoodsDispatchItems
     */
    viewUnapprovedGoodsDispatchItems: {
      name: "ViewUnapprovedGoodsDispatchItems",
      I: IdentifierWithSearchKey,
      O: GoodsDispatchesItemsList,
      kind: MethodKind.Unary,
    },
    /**
     * View the history of the goods dispatch item
     *
     * @generated from rpc Scailo.GoodsDispatchesService.ViewGoodsDispatchItemHistory
     */
    viewGoodsDispatchItemHistory: {
      name: "ViewGoodsDispatchItemHistory",
      I: GoodsDispatchItemHistoryRequest,
      O: GoodsDispatchesItemsList,
      kind: MethodKind.Unary,
    },
    /**
     * View approved goods dispatch items for given goods dispatch ID with pagination
     *
     * @generated from rpc Scailo.GoodsDispatchesService.ViewPaginatedApprovedGoodsDispatchItems
     */
    viewPaginatedApprovedGoodsDispatchItems: {
      name: "ViewPaginatedApprovedGoodsDispatchItems",
      I: GoodsDispatchItemsSearchRequest,
      O: GoodsDispatchesServicePaginatedItemsResponse,
      kind: MethodKind.Unary,
    },
    /**
     * View unapproved goods dispatch items for given goods dispatch ID with pagination
     *
     * @generated from rpc Scailo.GoodsDispatchesService.ViewPaginatedUnapprovedGoodsDispatchItems
     */
    viewPaginatedUnapprovedGoodsDispatchItems: {
      name: "ViewPaginatedUnapprovedGoodsDispatchItems",
      I: GoodsDispatchItemsSearchRequest,
      O: GoodsDispatchesServicePaginatedItemsResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Search through goods dispatch items with pagination
     *
     * @generated from rpc Scailo.GoodsDispatchesService.SearchItemsWithPagination
     */
    searchItemsWithPagination: {
      name: "SearchItemsWithPagination",
      I: GoodsDispatchItemsSearchRequest,
      O: GoodsDispatchesServicePaginatedItemsResponse,
      kind: MethodKind.Unary,
    },
    /**
     * CSV operations
     * Download the CSV file with the associated line items. The same file could then be used to upload line items.
     *
     * @generated from rpc Scailo.GoodsDispatchesService.DownloadItemsAsCSV
     */
    downloadItemsAsCSV: {
      name: "DownloadItemsAsCSV",
      I: IdentifierUUID,
      O: StandardFile,
      kind: MethodKind.Unary,
    },
    /**
     * Download the CSV template that could be used to upload items
     *
     * @generated from rpc Scailo.GoodsDispatchesService.DownloadItemsTemplateAsCSV
     */
    downloadItemsTemplateAsCSV: {
      name: "DownloadItemsTemplateAsCSV",
      I: Empty,
      O: StandardFile,
      kind: MethodKind.Unary,
    },
    /**
     * View by ID
     *
     * @generated from rpc Scailo.GoodsDispatchesService.ViewByID
     */
    viewByID: {
      name: "ViewByID",
      I: Identifier,
      O: GoodsDispatch,
      kind: MethodKind.Unary,
    },
    /**
     * View by UUID
     *
     * @generated from rpc Scailo.GoodsDispatchesService.ViewByUUID
     */
    viewByUUID: {
      name: "ViewByUUID",
      I: IdentifierUUID,
      O: GoodsDispatch,
      kind: MethodKind.Unary,
    },
    /**
     * View by Reference ID (returns the latest record in case of duplicates)
     *
     * @generated from rpc Scailo.GoodsDispatchesService.ViewByReferenceID
     */
    viewByReferenceID: {
      name: "ViewByReferenceID",
      I: SimpleSearchReq,
      O: GoodsDispatch,
      kind: MethodKind.Unary,
    },
    /**
     * View only essential components by ID (without logs)
     *
     * @generated from rpc Scailo.GoodsDispatchesService.ViewEssentialByID
     */
    viewEssentialByID: {
      name: "ViewEssentialByID",
      I: Identifier,
      O: GoodsDispatch,
      kind: MethodKind.Unary,
    },
    /**
     * View only essential components (without logs) that matches the given UUID
     *
     * @generated from rpc Scailo.GoodsDispatchesService.ViewEssentialByUUID
     */
    viewEssentialByUUID: {
      name: "ViewEssentialByUUID",
      I: IdentifierUUID,
      O: GoodsDispatch,
      kind: MethodKind.Unary,
    },
    /**
     * View all records with the given IDs
     *
     * @generated from rpc Scailo.GoodsDispatchesService.ViewFromIDs
     */
    viewFromIDs: {
      name: "ViewFromIDs",
      I: IdentifiersList,
      O: GoodsDispatchesList,
      kind: MethodKind.Unary,
    },
    /**
     * View the ancillary parameters (UUIDs of the internal references) by UUID
     *
     * @generated from rpc Scailo.GoodsDispatchesService.ViewAncillaryParametersByUUID
     */
    viewAncillaryParametersByUUID: {
      name: "ViewAncillaryParametersByUUID",
      I: IdentifierUUID,
      O: GoodsDispatchAncillaryParameters,
      kind: MethodKind.Unary,
    },
    /**
     * View all
     *
     * @generated from rpc Scailo.GoodsDispatchesService.ViewAll
     */
    viewAll: {
      name: "ViewAll",
      I: ActiveStatus,
      O: GoodsDispatchesList,
      kind: MethodKind.Unary,
    },
    /**
     * View all with the given entity UUID
     *
     * @generated from rpc Scailo.GoodsDispatchesService.ViewAllForEntityUUID
     */
    viewAllForEntityUUID: {
      name: "ViewAllForEntityUUID",
      I: IdentifierUUID,
      O: GoodsDispatchesList,
      kind: MethodKind.Unary,
    },
    /**
     * View with pagination
     *
     * @generated from rpc Scailo.GoodsDispatchesService.ViewWithPagination
     */
    viewWithPagination: {
      name: "ViewWithPagination",
      I: GoodsDispatchesServicePaginationReq,
      O: GoodsDispatchesServicePaginationResponse,
      kind: MethodKind.Unary,
    },
    /**
     * View prospective families for the given goods dispatch
     *
     * @generated from rpc Scailo.GoodsDispatchesService.ViewProspectiveFamilies
     */
    viewProspectiveFamilies: {
      name: "ViewProspectiveFamilies",
      I: IdentifierWithSearchKey,
      O: FamiliesList,
      kind: MethodKind.Unary,
    },
    /**
     * Filter prospective families for the record represented by the given UUID identifier
     *
     * @generated from rpc Scailo.GoodsDispatchesService.FilterProspectiveFamilies
     */
    filterProspectiveFamilies: {
      name: "FilterProspectiveFamilies",
      I: FilterFamiliesReqForIdentifier,
      O: FamiliesList,
      kind: MethodKind.Unary,
    },
    /**
     * View prospective goods dispatch item info for the given family ID and goods dispatch ID
     *
     * @generated from rpc Scailo.GoodsDispatchesService.ViewProspectiveGoodsDispatchItem
     */
    viewProspectiveGoodsDispatchItem: {
      name: "ViewProspectiveGoodsDispatchItem",
      I: GoodsDispatchItemProspectiveInfoRequest,
      O: GoodsDispatchesServiceItemCreateRequest,
      kind: MethodKind.Unary,
    },
    /**
     * Other view operations
     * Download goods dispatch with the given IdentifierUUID (can be used to allow public downloads)
     *
     * @generated from rpc Scailo.GoodsDispatchesService.DownloadByUUID
     */
    downloadByUUID: {
      name: "DownloadByUUID",
      I: IdentifierUUID,
      O: StandardFile,
      kind: MethodKind.Unary,
    },
    /**
     * Download the label for the goods dispatch with the given IdentifierUUID
     *
     * @generated from rpc Scailo.GoodsDispatchesService.DownloadLabelByUUID
     */
    downloadLabelByUUID: {
      name: "DownloadLabelByUUID",
      I: IdentifierUUID,
      O: StandardFile,
      kind: MethodKind.Unary,
    },
    /**
     * View the associated sales invoice information that is denoted by the identifier in the response for the goods dispatch that is denoted by the identifier UUID in the request
     *
     * @generated from rpc Scailo.GoodsDispatchesService.ViewAssociatedSalesInvoiceInfo
     */
    viewAssociatedSalesInvoiceInfo: {
      name: "ViewAssociatedSalesInvoiceInfo",
      I: IdentifierUUID,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Checks if the Goods Dispatch has been billed
     *
     * @generated from rpc Scailo.GoodsDispatchesService.IsBilled
     */
    isBilled: {
      name: "IsBilled",
      I: IdentifierUUID,
      O: BooleanResponse,
      kind: MethodKind.Unary,
    },
    /**
     * View already added quantities
     *
     * @generated from rpc Scailo.GoodsDispatchesService.ViewAddedFamilyQuantityForSource
     */
    viewAddedFamilyQuantityForSource: {
      name: "ViewAddedFamilyQuantityForSource",
      I: GoodsDispatchesServiceAlreadyAddedQuantityForSourceRequest,
      O: DualQuantitiesResponse,
      kind: MethodKind.Unary,
    },
    /**
     * View all that match the given search key
     *
     * @generated from rpc Scailo.GoodsDispatchesService.SearchAll
     */
    searchAll: {
      name: "SearchAll",
      I: GoodsDispatchesServiceSearchAllReq,
      O: GoodsDispatchesList,
      kind: MethodKind.Unary,
    },
    /**
     * View all that match the given filter criteria
     *
     * @generated from rpc Scailo.GoodsDispatchesService.Filter
     */
    filter: {
      name: "Filter",
      I: GoodsDispatchesServiceFilterReq,
      O: GoodsDispatchesList,
      kind: MethodKind.Unary,
    },
    /**
     * Count in status
     *
     * @generated from rpc Scailo.GoodsDispatchesService.CountInStatus
     */
    countInStatus: {
      name: "CountInStatus",
      I: CountInSLCStatusRequest,
      O: CountResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Count all that match the given criteria
     *
     * @generated from rpc Scailo.GoodsDispatchesService.Count
     */
    count: {
      name: "Count",
      I: GoodsDispatchesServiceCountReq,
      O: CountResponse,
      kind: MethodKind.Unary,
    },
    /**
     * CSV operations
     * Download the CSV file that consists of the list of records according to the given filter request. The same file could also be used as a template for uploading records
     *
     * @generated from rpc Scailo.GoodsDispatchesService.DownloadAsCSV
     */
    downloadAsCSV: {
      name: "DownloadAsCSV",
      I: GoodsDispatchesServiceFilterReq,
      O: StandardFile,
      kind: MethodKind.Unary,
    },
  }
} as const;

