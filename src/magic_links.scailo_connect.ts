// @generated by protoc-gen-connect-es v0.12.0 with parameter "target=ts"
// @generated from file magic_links.scailo.proto (package Scailo, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { MagicLink, MagicLinkAccessLogsList, MagicLinkPaginationResp, MagicLinkServiceSearchByCodeReq, MagicLinksList, MagicLinksServiceCountReq, MagicLinksServiceCreateRequest, MagicLinksServiceFilterReq, MagicLinksServicePaginationReq, MagicLinksServiceSearchAllReq, MagicLinksServiceUpdateRequest } from "./magic_links.scailo_pb.js";
import { MethodKind } from "@bufbuild/protobuf";
import { ActiveStatus, CountResponse, Identifier, IdentifierResponse, IdentifiersList, IdentifierUUID, IdentifierUUIDWithUserComment, StandardFile } from "./base.scailo_pb.js";

/**
 *
 * Describes the methods applicable on each magic link
 *
 * @generated from service Scailo.MagicLinksService
 */
export const MagicLinksService = {
  typeName: "Scailo.MagicLinksService",
  methods: {
    /**
     * Create a magic link
     *
     * @generated from rpc Scailo.MagicLinksService.Create
     */
    create: {
      name: "Create",
      I: MagicLinksServiceCreateRequest,
      O: MagicLink,
      kind: MethodKind.Unary,
    },
    /**
     * Update a magic link
     *
     * @generated from rpc Scailo.MagicLinksService.Update
     */
    update: {
      name: "Update",
      I: MagicLinksServiceUpdateRequest,
      O: MagicLink,
      kind: MethodKind.Unary,
    },
    /**
     * Discard the magic link
     *
     * @generated from rpc Scailo.MagicLinksService.Discard
     */
    discard: {
      name: "Discard",
      I: IdentifierUUIDWithUserComment,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Restore the magic link
     *
     * @generated from rpc Scailo.MagicLinksService.Restore
     */
    restore: {
      name: "Restore",
      I: IdentifierUUIDWithUserComment,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * View by ID
     *
     * @generated from rpc Scailo.MagicLinksService.ViewByID
     */
    viewByID: {
      name: "ViewByID",
      I: Identifier,
      O: MagicLink,
      kind: MethodKind.Unary,
    },
    /**
     * View by UUID
     *
     * @generated from rpc Scailo.MagicLinksService.ViewByUUID
     */
    viewByUUID: {
      name: "ViewByUUID",
      I: IdentifierUUID,
      O: MagicLink,
      kind: MethodKind.Unary,
    },
    /**
     * View only essential components that matches the given code
     *
     * @generated from rpc Scailo.MagicLinksService.ViewByCode
     */
    viewByCode: {
      name: "ViewByCode",
      I: MagicLinkServiceSearchByCodeReq,
      O: MagicLink,
      kind: MethodKind.Unary,
    },
    /**
     * View all records with the given IDs
     *
     * @generated from rpc Scailo.MagicLinksService.ViewFromIDs
     */
    viewFromIDs: {
      name: "ViewFromIDs",
      I: IdentifiersList,
      O: MagicLinksList,
      kind: MethodKind.Unary,
    },
    /**
     * View all magic links
     *
     * @generated from rpc Scailo.MagicLinksService.ViewAll
     */
    viewAll: {
      name: "ViewAll",
      I: ActiveStatus,
      O: MagicLinksList,
      kind: MethodKind.Unary,
    },
    /**
     * View all magic links with the given entity UUID
     *
     * @generated from rpc Scailo.MagicLinksService.ViewAllForEntityUUID
     */
    viewAllForEntityUUID: {
      name: "ViewAllForEntityUUID",
      I: IdentifierUUID,
      O: MagicLinksList,
      kind: MethodKind.Unary,
    },
    /**
     * View magic links with pagination
     *
     * @generated from rpc Scailo.MagicLinksService.ViewWithPagination
     */
    viewWithPagination: {
      name: "ViewWithPagination",
      I: MagicLinksServicePaginationReq,
      O: MagicLinkPaginationResp,
      kind: MethodKind.Unary,
    },
    /**
     * View access logs of magic link
     *
     * @generated from rpc Scailo.MagicLinksService.ViewAccessLogs
     */
    viewAccessLogs: {
      name: "ViewAccessLogs",
      I: IdentifierUUID,
      O: MagicLinkAccessLogsList,
      kind: MethodKind.Unary,
    },
    /**
     * View all magic links that match the given search key
     *
     * @generated from rpc Scailo.MagicLinksService.SearchAll
     */
    searchAll: {
      name: "SearchAll",
      I: MagicLinksServiceSearchAllReq,
      O: MagicLinksList,
      kind: MethodKind.Unary,
    },
    /**
     * View all that match the given filter criteria
     *
     * @generated from rpc Scailo.MagicLinksService.Filter
     */
    filter: {
      name: "Filter",
      I: MagicLinksServiceFilterReq,
      O: MagicLinksList,
      kind: MethodKind.Unary,
    },
    /**
     * Count all that match the given criteria
     *
     * @generated from rpc Scailo.MagicLinksService.Count
     */
    count: {
      name: "Count",
      I: MagicLinksServiceCountReq,
      O: CountResponse,
      kind: MethodKind.Unary,
    },
    /**
     * CSV operations
     * Download the CSV file that consists of the list of records according to the given filter request. The same file could also be used as a template for uploading records
     *
     * @generated from rpc Scailo.MagicLinksService.DownloadAsCSV
     */
    downloadAsCSV: {
      name: "DownloadAsCSV",
      I: MagicLinksServiceFilterReq,
      O: StandardFile,
      kind: MethodKind.Unary,
    },
  }
} as const;

