// @generated by protoc-gen-connect-es v0.12.0 with parameter "target=ts"
// @generated from file proforma_invoices.scailo.proto (package Scailo, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { ProformaInvoice, ProformaInvoiceAncillaryParameters, ProformaInvoiceItem, ProformaInvoiceItemHistoryRequest, ProformaInvoiceItemProspectiveInfoRequest, ProformaInvoiceItemsList, ProformaInvoiceItemsSearchRequest, ProformaInvoicesList, ProformaInvoicesServiceAlreadyAddedQuantityForSourceRequest, ProformaInvoicesServiceAutofillRequest, ProformaInvoicesServiceCountReq, ProformaInvoicesServiceCreateRequest, ProformaInvoicesServiceFilterReq, ProformaInvoicesServiceItemCreateRequest, ProformaInvoicesServiceItemUpdateRequest, ProformaInvoicesServicePaginatedItemsResponse, ProformaInvoicesServicePaginationReq, ProformaInvoicesServicePaginationResponse, ProformaInvoicesServiceSearchAllReq, ProformaInvoicesServiceUpdateRequest } from "./proforma_invoices.scailo_pb.js";
import { ActiveStatus, AmendmentLogsList, BooleanResponse, CountInSLCStatusRequest, CountResponse, DualQuantitiesResponse, Identifier, IdentifierResponse, IdentifiersList, IdentifierUUID, IdentifierUUIDWithFile, IdentifierUUIDWithUserComment, IdentifierWithEmailAttributes, IdentifierWithSearchKey, IdentifierWithUserComment, ReorderItemsRequest, StandardFile, SumResponse } from "./base.scailo_pb.js";
import { MethodKind } from "@bufbuild/protobuf";
import { FamiliesList, FilterFamiliesReqForIdentifier } from "./families.scailo_pb.js";

/**
 *
 * Describes the common methods applicable on each proforma invoice
 *
 * @generated from service Scailo.ProformaInvoicesService
 */
export const ProformaInvoicesService = {
  typeName: "Scailo.ProformaInvoicesService",
  methods: {
    /**
     * Create and send for verification
     *
     * @generated from rpc Scailo.ProformaInvoicesService.Create
     */
    create: {
      name: "Create",
      I: ProformaInvoicesServiceCreateRequest,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Create and save as draft
     *
     * @generated from rpc Scailo.ProformaInvoicesService.Draft
     */
    draft: {
      name: "Draft",
      I: ProformaInvoicesServiceCreateRequest,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Update draft
     *
     * @generated from rpc Scailo.ProformaInvoicesService.DraftUpdate
     */
    draftUpdate: {
      name: "DraftUpdate",
      I: ProformaInvoicesServiceUpdateRequest,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Send for verification
     *
     * @generated from rpc Scailo.ProformaInvoicesService.SendForVerification
     */
    sendForVerification: {
      name: "SendForVerification",
      I: IdentifierUUIDWithUserComment,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Verify
     *
     * @generated from rpc Scailo.ProformaInvoicesService.Verify
     */
    verify: {
      name: "Verify",
      I: IdentifierUUIDWithUserComment,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Approve
     *
     * @generated from rpc Scailo.ProformaInvoicesService.Approve
     */
    approve: {
      name: "Approve",
      I: IdentifierUUIDWithUserComment,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Send For Revision
     *
     * @generated from rpc Scailo.ProformaInvoicesService.SendForRevision
     */
    sendForRevision: {
      name: "SendForRevision",
      I: IdentifierUUIDWithUserComment,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Update revision
     *
     * @generated from rpc Scailo.ProformaInvoicesService.RevisionUpdate
     */
    revisionUpdate: {
      name: "RevisionUpdate",
      I: ProformaInvoicesServiceUpdateRequest,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Halt
     *
     * @generated from rpc Scailo.ProformaInvoicesService.Halt
     */
    halt: {
      name: "Halt",
      I: IdentifierUUIDWithUserComment,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Discard
     *
     * @generated from rpc Scailo.ProformaInvoicesService.Discard
     */
    discard: {
      name: "Discard",
      I: IdentifierUUIDWithUserComment,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Restore
     *
     * @generated from rpc Scailo.ProformaInvoicesService.Restore
     */
    restore: {
      name: "Restore",
      I: IdentifierUUIDWithUserComment,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Complete
     *
     * @generated from rpc Scailo.ProformaInvoicesService.Complete
     */
    complete: {
      name: "Complete",
      I: IdentifierUUIDWithUserComment,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Repeat
     *
     * @generated from rpc Scailo.ProformaInvoicesService.Repeat
     */
    repeat: {
      name: "Repeat",
      I: IdentifierUUIDWithUserComment,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Reopen
     *
     * @generated from rpc Scailo.ProformaInvoicesService.Reopen
     */
    reopen: {
      name: "Reopen",
      I: IdentifierUUIDWithUserComment,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Add comment
     *
     * @generated from rpc Scailo.ProformaInvoicesService.CommentAdd
     */
    commentAdd: {
      name: "CommentAdd",
      I: IdentifierUUIDWithUserComment,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Send Email
     *
     * @generated from rpc Scailo.ProformaInvoicesService.SendEmail
     */
    sendEmail: {
      name: "SendEmail",
      I: IdentifierWithEmailAttributes,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Autofill the proforma invoice
     *
     * @generated from rpc Scailo.ProformaInvoicesService.Autofill
     */
    autofill: {
      name: "Autofill",
      I: ProformaInvoicesServiceAutofillRequest,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Amend the proforma invoice and send for revision
     *
     * @generated from rpc Scailo.ProformaInvoicesService.Amend
     */
    amend: {
      name: "Amend",
      I: IdentifierUUIDWithUserComment,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Add an item to a proforma invoice
     *
     * @generated from rpc Scailo.ProformaInvoicesService.AddProformaInvoiceItem
     */
    addProformaInvoiceItem: {
      name: "AddProformaInvoiceItem",
      I: ProformaInvoicesServiceItemCreateRequest,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Modify an item in a proforma invoice
     *
     * @generated from rpc Scailo.ProformaInvoicesService.ModifyProformaInvoiceItem
     */
    modifyProformaInvoiceItem: {
      name: "ModifyProformaInvoiceItem",
      I: ProformaInvoicesServiceItemUpdateRequest,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Approve an item in a proforma invoice
     *
     * @generated from rpc Scailo.ProformaInvoicesService.ApproveProformaInvoiceItem
     */
    approveProformaInvoiceItem: {
      name: "ApproveProformaInvoiceItem",
      I: IdentifierWithUserComment,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Delete an item in a proforma invoice
     *
     * @generated from rpc Scailo.ProformaInvoicesService.DeleteProformaInvoiceItem
     */
    deleteProformaInvoiceItem: {
      name: "DeleteProformaInvoiceItem",
      I: IdentifierWithUserComment,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Reorder items in a proforma invoice
     *
     * @generated from rpc Scailo.ProformaInvoicesService.ReorderProformaInvoiceItems
     */
    reorderProformaInvoiceItems: {
      name: "ReorderProformaInvoiceItems",
      I: ReorderItemsRequest,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * View Proforma Invoice Item by ID
     *
     * @generated from rpc Scailo.ProformaInvoicesService.ViewProformaInvoiceItemByID
     */
    viewProformaInvoiceItemByID: {
      name: "ViewProformaInvoiceItemByID",
      I: Identifier,
      O: ProformaInvoiceItem,
      kind: MethodKind.Unary,
    },
    /**
     * View approved proforma invoice items for given proforma invoice ID
     *
     * @generated from rpc Scailo.ProformaInvoicesService.ViewApprovedProformaInvoiceItems
     */
    viewApprovedProformaInvoiceItems: {
      name: "ViewApprovedProformaInvoiceItems",
      I: IdentifierWithSearchKey,
      O: ProformaInvoiceItemsList,
      kind: MethodKind.Unary,
    },
    /**
     * View unapproved proforma invoice items for given proforma invoice ID
     *
     * @generated from rpc Scailo.ProformaInvoicesService.ViewUnapprovedProformaInvoiceItems
     */
    viewUnapprovedProformaInvoiceItems: {
      name: "ViewUnapprovedProformaInvoiceItems",
      I: IdentifierWithSearchKey,
      O: ProformaInvoiceItemsList,
      kind: MethodKind.Unary,
    },
    /**
     * View the history of the proforma invoice item
     *
     * @generated from rpc Scailo.ProformaInvoicesService.ViewProformaInvoiceItemHistory
     */
    viewProformaInvoiceItemHistory: {
      name: "ViewProformaInvoiceItemHistory",
      I: ProformaInvoiceItemHistoryRequest,
      O: ProformaInvoiceItemsList,
      kind: MethodKind.Unary,
    },
    /**
     * View approved proforma invoice items for given proforma invoice ID with pagination
     *
     * @generated from rpc Scailo.ProformaInvoicesService.ViewPaginatedApprovedProformaInvoiceItems
     */
    viewPaginatedApprovedProformaInvoiceItems: {
      name: "ViewPaginatedApprovedProformaInvoiceItems",
      I: ProformaInvoiceItemsSearchRequest,
      O: ProformaInvoicesServicePaginatedItemsResponse,
      kind: MethodKind.Unary,
    },
    /**
     * View unapproved proforma invoice items for given proforma invoice ID with pagination
     *
     * @generated from rpc Scailo.ProformaInvoicesService.ViewPaginatedUnapprovedProformaInvoiceItems
     */
    viewPaginatedUnapprovedProformaInvoiceItems: {
      name: "ViewPaginatedUnapprovedProformaInvoiceItems",
      I: ProformaInvoiceItemsSearchRequest,
      O: ProformaInvoicesServicePaginatedItemsResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Search through proforma invoice items with pagination
     *
     * @generated from rpc Scailo.ProformaInvoicesService.SearchItemsWithPagination
     */
    searchItemsWithPagination: {
      name: "SearchItemsWithPagination",
      I: ProformaInvoiceItemsSearchRequest,
      O: ProformaInvoicesServicePaginatedItemsResponse,
      kind: MethodKind.Unary,
    },
    /**
     * CSV operations
     * Download the CSV file that could be used to upload items from the filled CSV file. The same file can also be used as a template when there are no existing records
     *
     * @generated from rpc Scailo.ProformaInvoicesService.DownloadItemsAsCSV
     */
    downloadItemsAsCSV: {
      name: "DownloadItemsAsCSV",
      I: IdentifierUUID,
      O: StandardFile,
      kind: MethodKind.Unary,
    },
    /**
     * Upload items using a CSV file. This is an idempotent operation. All the existing items are deleted before adding the items from the file.
     *
     * @generated from rpc Scailo.ProformaInvoicesService.UploadProformaInvoiceItems
     */
    uploadProformaInvoiceItems: {
      name: "UploadProformaInvoiceItems",
      I: IdentifierUUIDWithFile,
      O: IdentifiersList,
      kind: MethodKind.Unary,
    },
    /**
     * View by ID
     *
     * @generated from rpc Scailo.ProformaInvoicesService.ViewByID
     */
    viewByID: {
      name: "ViewByID",
      I: Identifier,
      O: ProformaInvoice,
      kind: MethodKind.Unary,
    },
    /**
     * View by UUID
     *
     * @generated from rpc Scailo.ProformaInvoicesService.ViewByUUID
     */
    viewByUUID: {
      name: "ViewByUUID",
      I: IdentifierUUID,
      O: ProformaInvoice,
      kind: MethodKind.Unary,
    },
    /**
     * View only essential components by ID (without logs)
     *
     * @generated from rpc Scailo.ProformaInvoicesService.ViewEssentialByID
     */
    viewEssentialByID: {
      name: "ViewEssentialByID",
      I: Identifier,
      O: ProformaInvoice,
      kind: MethodKind.Unary,
    },
    /**
     * View only essential components (without logs) that matches the given UUID
     *
     * @generated from rpc Scailo.ProformaInvoicesService.ViewEssentialByUUID
     */
    viewEssentialByUUID: {
      name: "ViewEssentialByUUID",
      I: IdentifierUUID,
      O: ProformaInvoice,
      kind: MethodKind.Unary,
    },
    /**
     * View all records with the given IDs
     *
     * @generated from rpc Scailo.ProformaInvoicesService.ViewFromIDs
     */
    viewFromIDs: {
      name: "ViewFromIDs",
      I: IdentifiersList,
      O: ProformaInvoicesList,
      kind: MethodKind.Unary,
    },
    /**
     * View the ancillary parameters (UUIDs of the internal references) by UUID
     *
     * @generated from rpc Scailo.ProformaInvoicesService.ViewAncillaryParametersByUUID
     */
    viewAncillaryParametersByUUID: {
      name: "ViewAncillaryParametersByUUID",
      I: IdentifierUUID,
      O: ProformaInvoiceAncillaryParameters,
      kind: MethodKind.Unary,
    },
    /**
     * View all
     *
     * @generated from rpc Scailo.ProformaInvoicesService.ViewAll
     */
    viewAll: {
      name: "ViewAll",
      I: ActiveStatus,
      O: ProformaInvoicesList,
      kind: MethodKind.Unary,
    },
    /**
     * View all with the given entity UUID
     *
     * @generated from rpc Scailo.ProformaInvoicesService.ViewAllForEntityUUID
     */
    viewAllForEntityUUID: {
      name: "ViewAllForEntityUUID",
      I: IdentifierUUID,
      O: ProformaInvoicesList,
      kind: MethodKind.Unary,
    },
    /**
     * View with pagination
     *
     * @generated from rpc Scailo.ProformaInvoicesService.ViewWithPagination
     */
    viewWithPagination: {
      name: "ViewWithPagination",
      I: ProformaInvoicesServicePaginationReq,
      O: ProformaInvoicesServicePaginationResponse,
      kind: MethodKind.Unary,
    },
    /**
     * View all the amendments made
     *
     * @generated from rpc Scailo.ProformaInvoicesService.ViewAmendments
     */
    viewAmendments: {
      name: "ViewAmendments",
      I: Identifier,
      O: AmendmentLogsList,
      kind: MethodKind.Unary,
    },
    /**
     * View prospective families for the given proforma invoice
     *
     * @generated from rpc Scailo.ProformaInvoicesService.ViewProspectiveFamilies
     */
    viewProspectiveFamilies: {
      name: "ViewProspectiveFamilies",
      I: IdentifierWithSearchKey,
      O: FamiliesList,
      kind: MethodKind.Unary,
    },
    /**
     * Filter prospective families for the record represented by the given UUID identifier
     *
     * @generated from rpc Scailo.ProformaInvoicesService.FilterProspectiveFamilies
     */
    filterProspectiveFamilies: {
      name: "FilterProspectiveFamilies",
      I: FilterFamiliesReqForIdentifier,
      O: FamiliesList,
      kind: MethodKind.Unary,
    },
    /**
     * View prospective proforma invoice item info for the given family ID and proforma invoice ID
     *
     * @generated from rpc Scailo.ProformaInvoicesService.ViewProspectiveProformaInvoiceItem
     */
    viewProspectiveProformaInvoiceItem: {
      name: "ViewProspectiveProformaInvoiceItem",
      I: ProformaInvoiceItemProspectiveInfoRequest,
      O: ProformaInvoicesServiceItemCreateRequest,
      kind: MethodKind.Unary,
    },
    /**
     * Download proforma invoice with the given IdentifierUUID (can be used to allow public downloads)
     *
     * @generated from rpc Scailo.ProformaInvoicesService.DownloadByUUID
     */
    downloadByUUID: {
      name: "DownloadByUUID",
      I: IdentifierUUID,
      O: StandardFile,
      kind: MethodKind.Unary,
    },
    /**
     * View the associated sales invoice information that is denoted by the identifier in the response for the proforma invoice that is denoted by the identifier UUID in the request
     *
     * @generated from rpc Scailo.ProformaInvoicesService.ViewAssociatedSalesInvoiceInfo
     */
    viewAssociatedSalesInvoiceInfo: {
      name: "ViewAssociatedSalesInvoiceInfo",
      I: IdentifierUUID,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Checks if the Goods Dispatch has been billed
     *
     * @generated from rpc Scailo.ProformaInvoicesService.IsBilled
     */
    isBilled: {
      name: "IsBilled",
      I: IdentifierUUID,
      O: BooleanResponse,
      kind: MethodKind.Unary,
    },
    /**
     * View already added quantities
     *
     * @generated from rpc Scailo.ProformaInvoicesService.ViewAddedFamilyQuantityForSource
     */
    viewAddedFamilyQuantityForSource: {
      name: "ViewAddedFamilyQuantityForSource",
      I: ProformaInvoicesServiceAlreadyAddedQuantityForSourceRequest,
      O: DualQuantitiesResponse,
      kind: MethodKind.Unary,
    },
    /**
     * View all that match the given search key
     *
     * @generated from rpc Scailo.ProformaInvoicesService.SearchAll
     */
    searchAll: {
      name: "SearchAll",
      I: ProformaInvoicesServiceSearchAllReq,
      O: ProformaInvoicesList,
      kind: MethodKind.Unary,
    },
    /**
     * View all that match the given filter criteria
     *
     * @generated from rpc Scailo.ProformaInvoicesService.Filter
     */
    filter: {
      name: "Filter",
      I: ProformaInvoicesServiceFilterReq,
      O: ProformaInvoicesList,
      kind: MethodKind.Unary,
    },
    /**
     * Count in status
     *
     * @generated from rpc Scailo.ProformaInvoicesService.CountInStatus
     */
    countInStatus: {
      name: "CountInStatus",
      I: CountInSLCStatusRequest,
      O: CountResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Count all that match the given criteria
     *
     * @generated from rpc Scailo.ProformaInvoicesService.Count
     */
    count: {
      name: "Count",
      I: ProformaInvoicesServiceCountReq,
      O: CountResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Returns the sum of the total value of all the records that match the given criteria
     *
     * @generated from rpc Scailo.ProformaInvoicesService.AccruedValue
     */
    accruedValue: {
      name: "AccruedValue",
      I: ProformaInvoicesServiceCountReq,
      O: SumResponse,
      kind: MethodKind.Unary,
    },
    /**
     * CSV operations
     * Download the CSV file that consists of the list of records according to the given filter request. The same file could also be used as a template for uploading records
     *
     * @generated from rpc Scailo.ProformaInvoicesService.DownloadAsCSV
     */
    downloadAsCSV: {
      name: "DownloadAsCSV",
      I: ProformaInvoicesServiceFilterReq,
      O: StandardFile,
      kind: MethodKind.Unary,
    },
  }
} as const;

