// @generated by protoc-gen-es v1.5.1 with parameter "target=ts"
// @generated from file equations_work_orders.scailo.proto (package Scailo, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3, protoInt64 } from "@bufbuild/protobuf";
import { ApprovalMetadata, BOOL_FILTER, EmployeeMetadata, LogbookLogConciseSLC, SORT_ORDER, STANDARD_LIFECYCLE_STATUS } from "./base.scailo_pb.js";

/**
 *
 * Describes the available sort keys
 *
 * @generated from enum Scailo.EQUATION_WORK_ORDER_ITEM_SORT_KEY
 */
export enum EQUATION_WORK_ORDER_ITEM_SORT_KEY {
  /**
   * Fetch results by id
   *
   * @generated from enum value: EQUATION_WORK_ORDER_ITEM_SORT_KEY_ID_UNSPECIFIED = 0;
   */
  EQUATION_WORK_ORDER_ITEM_SORT_KEY_ID_UNSPECIFIED = 0,

  /**
   * Fetch results by the creation timestamp
   *
   * @generated from enum value: EQUATION_WORK_ORDER_ITEM_SORT_KEY_CREATED_AT = 1;
   */
  EQUATION_WORK_ORDER_ITEM_SORT_KEY_CREATED_AT = 1,

  /**
   * Fetch results by the modified timestamp
   *
   * @generated from enum value: EQUATION_WORK_ORDER_ITEM_SORT_KEY_MODIFIED_AT = 2;
   */
  EQUATION_WORK_ORDER_ITEM_SORT_KEY_MODIFIED_AT = 2,

  /**
   * Fetch results by the approved on timestamp
   *
   * @generated from enum value: EQUATION_WORK_ORDER_ITEM_SORT_KEY_APPROVED_ON = 3;
   */
  EQUATION_WORK_ORDER_ITEM_SORT_KEY_APPROVED_ON = 3,

  /**
   * Fetch results by the approved by field
   *
   * @generated from enum value: EQUATION_WORK_ORDER_ITEM_SORT_KEY_APPROVED_BY = 4;
   */
  EQUATION_WORK_ORDER_ITEM_SORT_KEY_APPROVED_BY = 4,

  /**
   * Fetch results by the approver's role ID
   *
   * @generated from enum value: EQUATION_WORK_ORDER_ITEM_SORT_KEY_APPROVER_ROLE_ID = 5;
   */
  EQUATION_WORK_ORDER_ITEM_SORT_KEY_APPROVER_ROLE_ID = 5,

  /**
   * Fetch results by the family ID
   *
   * @generated from enum value: EQUATION_WORK_ORDER_ITEM_SORT_KEY_FAMILY_ID = 10;
   */
  EQUATION_WORK_ORDER_ITEM_SORT_KEY_FAMILY_ID = 10,

  /**
   * Fetch results by the quantity
   *
   * @generated from enum value: EQUATION_WORK_ORDER_ITEM_SORT_KEY_QUANTITY = 11;
   */
  EQUATION_WORK_ORDER_ITEM_SORT_KEY_QUANTITY = 11,

  /**
   * Fetch ordered results by the unit price
   *
   * @generated from enum value: EQUATION_WORK_ORDER_ITEM_SORT_KEY_UNIT_PRICE = 12;
   */
  EQUATION_WORK_ORDER_ITEM_SORT_KEY_UNIT_PRICE = 12,
}
// Retrieve enum metadata with: proto3.getEnumType(EQUATION_WORK_ORDER_ITEM_SORT_KEY)
proto3.util.setEnumType(EQUATION_WORK_ORDER_ITEM_SORT_KEY, "Scailo.EQUATION_WORK_ORDER_ITEM_SORT_KEY", [
  { no: 0, name: "EQUATION_WORK_ORDER_ITEM_SORT_KEY_ID_UNSPECIFIED" },
  { no: 1, name: "EQUATION_WORK_ORDER_ITEM_SORT_KEY_CREATED_AT" },
  { no: 2, name: "EQUATION_WORK_ORDER_ITEM_SORT_KEY_MODIFIED_AT" },
  { no: 3, name: "EQUATION_WORK_ORDER_ITEM_SORT_KEY_APPROVED_ON" },
  { no: 4, name: "EQUATION_WORK_ORDER_ITEM_SORT_KEY_APPROVED_BY" },
  { no: 5, name: "EQUATION_WORK_ORDER_ITEM_SORT_KEY_APPROVER_ROLE_ID" },
  { no: 10, name: "EQUATION_WORK_ORDER_ITEM_SORT_KEY_FAMILY_ID" },
  { no: 11, name: "EQUATION_WORK_ORDER_ITEM_SORT_KEY_QUANTITY" },
  { no: 12, name: "EQUATION_WORK_ORDER_ITEM_SORT_KEY_UNIT_PRICE" },
]);

/**
 *
 * Describes the applicable statuses of equation work order items
 *
 * @generated from enum Scailo.EQUATION_WORK_ORDER_ITEM_STATUS
 */
export enum EQUATION_WORK_ORDER_ITEM_STATUS {
  /**
   * Denotes that status be disregarded. This is used only within search APIs
   *
   * @generated from enum value: EQUATION_WORK_ORDER_ITEM_STATUS_ANY_UNSPECIFIED = 0;
   */
  EQUATION_WORK_ORDER_ITEM_STATUS_ANY_UNSPECIFIED = 0,

  /**
   * Denotes that the equation work order items must have been approved
   *
   * @generated from enum value: EQUATION_WORK_ORDER_ITEM_STATUS_APPROVED = 1;
   */
  EQUATION_WORK_ORDER_ITEM_STATUS_APPROVED = 1,

  /**
   * Denotes that the equation work order items must be waiting for approval
   *
   * @generated from enum value: EQUATION_WORK_ORDER_ITEM_STATUS_UNAPPROVED = 2;
   */
  EQUATION_WORK_ORDER_ITEM_STATUS_UNAPPROVED = 2,
}
// Retrieve enum metadata with: proto3.getEnumType(EQUATION_WORK_ORDER_ITEM_STATUS)
proto3.util.setEnumType(EQUATION_WORK_ORDER_ITEM_STATUS, "Scailo.EQUATION_WORK_ORDER_ITEM_STATUS", [
  { no: 0, name: "EQUATION_WORK_ORDER_ITEM_STATUS_ANY_UNSPECIFIED" },
  { no: 1, name: "EQUATION_WORK_ORDER_ITEM_STATUS_APPROVED" },
  { no: 2, name: "EQUATION_WORK_ORDER_ITEM_STATUS_UNAPPROVED" },
]);

/**
 *
 * Describes the available sort keys
 *
 * @generated from enum Scailo.EQUATION_WORK_ORDER_SORT_KEY
 */
export enum EQUATION_WORK_ORDER_SORT_KEY {
  /**
   * Fetch ordered results by id
   *
   * @generated from enum value: EQUATION_WORK_ORDER_SORT_KEY_ID_UNSPECIFIED = 0;
   */
  EQUATION_WORK_ORDER_SORT_KEY_ID_UNSPECIFIED = 0,

  /**
   * Fetch ordered results by the creation timestamp
   *
   * @generated from enum value: EQUATION_WORK_ORDER_SORT_KEY_CREATED_AT = 1;
   */
  EQUATION_WORK_ORDER_SORT_KEY_CREATED_AT = 1,

  /**
   * Fetch ordered results by the modified timestamp
   *
   * @generated from enum value: EQUATION_WORK_ORDER_SORT_KEY_MODIFIED_AT = 2;
   */
  EQUATION_WORK_ORDER_SORT_KEY_MODIFIED_AT = 2,

  /**
   * Fetch ordered results by the approved on timestamp
   *
   * @generated from enum value: EQUATION_WORK_ORDER_SORT_KEY_APPROVED_ON = 3;
   */
  EQUATION_WORK_ORDER_SORT_KEY_APPROVED_ON = 3,

  /**
   * Fetch ordered results by the approved by field
   *
   * @generated from enum value: EQUATION_WORK_ORDER_SORT_KEY_APPROVED_BY = 4;
   */
  EQUATION_WORK_ORDER_SORT_KEY_APPROVED_BY = 4,

  /**
   * Fetch ordered results by the approver's role ID
   *
   * @generated from enum value: EQUATION_WORK_ORDER_SORT_KEY_APPROVER_ROLE_ID = 5;
   */
  EQUATION_WORK_ORDER_SORT_KEY_APPROVER_ROLE_ID = 5,

  /**
   * Fetch ordered results by the approver's completed on timestamp
   *
   * @generated from enum value: EQUATION_WORK_ORDER_SORT_KEY_COMPLETED_ON = 6;
   */
  EQUATION_WORK_ORDER_SORT_KEY_COMPLETED_ON = 6,

  /**
   * Fetch ordered results by the name
   *
   * @generated from enum value: EQUATION_WORK_ORDER_SORT_KEY_NAME = 10;
   */
  EQUATION_WORK_ORDER_SORT_KEY_NAME = 10,

  /**
   * Fetch ordered results by the work order ID
   *
   * @generated from enum value: EQUATION_WORK_ORDER_SORT_KEY_WORK_ORDER_ID = 11;
   */
  EQUATION_WORK_ORDER_SORT_KEY_WORK_ORDER_ID = 11,
}
// Retrieve enum metadata with: proto3.getEnumType(EQUATION_WORK_ORDER_SORT_KEY)
proto3.util.setEnumType(EQUATION_WORK_ORDER_SORT_KEY, "Scailo.EQUATION_WORK_ORDER_SORT_KEY", [
  { no: 0, name: "EQUATION_WORK_ORDER_SORT_KEY_ID_UNSPECIFIED" },
  { no: 1, name: "EQUATION_WORK_ORDER_SORT_KEY_CREATED_AT" },
  { no: 2, name: "EQUATION_WORK_ORDER_SORT_KEY_MODIFIED_AT" },
  { no: 3, name: "EQUATION_WORK_ORDER_SORT_KEY_APPROVED_ON" },
  { no: 4, name: "EQUATION_WORK_ORDER_SORT_KEY_APPROVED_BY" },
  { no: 5, name: "EQUATION_WORK_ORDER_SORT_KEY_APPROVER_ROLE_ID" },
  { no: 6, name: "EQUATION_WORK_ORDER_SORT_KEY_COMPLETED_ON" },
  { no: 10, name: "EQUATION_WORK_ORDER_SORT_KEY_NAME" },
  { no: 11, name: "EQUATION_WORK_ORDER_SORT_KEY_WORK_ORDER_ID" },
]);

/**
 *
 * Describes the parameters necessary to create a record
 *
 * @generated from message Scailo.EquationsWorkOrdersServiceCreateRequest
 */
export class EquationsWorkOrdersServiceCreateRequest extends Message<EquationsWorkOrdersServiceCreateRequest> {
  /**
   * Stores a globally unique entity UUID. This will be set at the organization level
   *
   * @generated from field: string entity_uuid = 1;
   */
  entityUuid = "";

  /**
   * Stores any comment that the user might add during this operation
   *
   * @generated from field: string user_comment = 2;
   */
  userComment = "";

  /**
   * The associated vault folder ID
   *
   * @generated from field: uint64 vault_folder_id = 9;
   */
  vaultFolderId = protoInt64.zero;

  /**
   * The name of the equation work order
   *
   * @generated from field: string name = 10;
   */
  name = "";

  /**
   * The ID of the work order that this equation belongs to
   *
   * @generated from field: uint64 work_order_id = 12;
   */
  workOrderId = protoInt64.zero;

  /**
   * The description of the equation work order
   *
   * @generated from field: string description = 13;
   */
  description = "";

  constructor(data?: PartialMessage<EquationsWorkOrdersServiceCreateRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.EquationsWorkOrdersServiceCreateRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "entity_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "user_comment", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 9, name: "vault_folder_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 10, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 12, name: "work_order_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 13, name: "description", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): EquationsWorkOrdersServiceCreateRequest {
    return new EquationsWorkOrdersServiceCreateRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): EquationsWorkOrdersServiceCreateRequest {
    return new EquationsWorkOrdersServiceCreateRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): EquationsWorkOrdersServiceCreateRequest {
    return new EquationsWorkOrdersServiceCreateRequest().fromJsonString(jsonString, options);
  }

  static equals(a: EquationsWorkOrdersServiceCreateRequest | PlainMessage<EquationsWorkOrdersServiceCreateRequest> | undefined, b: EquationsWorkOrdersServiceCreateRequest | PlainMessage<EquationsWorkOrdersServiceCreateRequest> | undefined): boolean {
    return proto3.util.equals(EquationsWorkOrdersServiceCreateRequest, a, b);
  }
}

/**
 *
 * Describes the parameters necessary to update a record
 *
 * @generated from message Scailo.EquationsWorkOrdersServiceUpdateRequest
 */
export class EquationsWorkOrdersServiceUpdateRequest extends Message<EquationsWorkOrdersServiceUpdateRequest> {
  /**
   * Stores any comment that the user might add during this operation
   *
   * @generated from field: string user_comment = 1;
   */
  userComment = "";

  /**
   * The ID of the record that needs to be updated
   *
   * @generated from field: uint64 id = 2;
   */
  id = protoInt64.zero;

  /**
   * Optional boolean value that stores if a notification needs to be sent to users about the update to the record. This is useful when a subsequent operation needs to be performed immediately (such as send to verification after updating the revision)
   *
   * @generated from field: bool notify_users = 3;
   */
  notifyUsers = false;

  /**
   * The associated vault folder ID
   *
   * @generated from field: uint64 vault_folder_id = 9;
   */
  vaultFolderId = protoInt64.zero;

  /**
   * The name of the equation work order
   *
   * @generated from field: string name = 10;
   */
  name = "";

  /**
   * The description of the equation work order
   *
   * @generated from field: string description = 13;
   */
  description = "";

  constructor(data?: PartialMessage<EquationsWorkOrdersServiceUpdateRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.EquationsWorkOrdersServiceUpdateRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "user_comment", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 3, name: "notify_users", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 9, name: "vault_folder_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 10, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 13, name: "description", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): EquationsWorkOrdersServiceUpdateRequest {
    return new EquationsWorkOrdersServiceUpdateRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): EquationsWorkOrdersServiceUpdateRequest {
    return new EquationsWorkOrdersServiceUpdateRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): EquationsWorkOrdersServiceUpdateRequest {
    return new EquationsWorkOrdersServiceUpdateRequest().fromJsonString(jsonString, options);
  }

  static equals(a: EquationsWorkOrdersServiceUpdateRequest | PlainMessage<EquationsWorkOrdersServiceUpdateRequest> | undefined, b: EquationsWorkOrdersServiceUpdateRequest | PlainMessage<EquationsWorkOrdersServiceUpdateRequest> | undefined): boolean {
    return proto3.util.equals(EquationsWorkOrdersServiceUpdateRequest, a, b);
  }
}

/**
 *
 * Describes the parameters that are part of a standard response
 *
 * @generated from message Scailo.EquationWorkOrder
 */
export class EquationWorkOrder extends Message<EquationWorkOrder> {
  /**
   * Stores a globally unique entity UUID. This will be set at the organization level
   *
   * @generated from field: string entity_uuid = 1;
   */
  entityUuid = "";

  /**
   * Stores the metadata of this equation work order
   *
   * @generated from field: Scailo.EmployeeMetadata metadata = 2;
   */
  metadata?: EmployeeMetadata;

  /**
   * Stores the approval metadata
   *
   * @generated from field: Scailo.ApprovalMetadata approval_metadata = 3;
   */
  approvalMetadata?: ApprovalMetadata;

  /**
   * The status of this equation work order
   *
   * @generated from field: Scailo.STANDARD_LIFECYCLE_STATUS status = 4;
   */
  status = STANDARD_LIFECYCLE_STATUS.ANY_UNSPECIFIED;

  /**
   * Stores the logs of every operation performed on this equation work order
   *
   * @generated from field: repeated Scailo.LogbookLogConciseSLC logs = 5;
   */
  logs: LogbookLogConciseSLC[] = [];

  /**
   * The timestamp of when this equation work order was marked as completed
   *
   * @generated from field: uint64 completed_on = 6;
   */
  completedOn = protoInt64.zero;

  /**
   * The associated vault folder ID
   *
   * @generated from field: uint64 vault_folder_id = 9;
   */
  vaultFolderId = protoInt64.zero;

  /**
   * The name of the equation work order
   *
   * @generated from field: string name = 10;
   */
  name = "";

  /**
   * The ID of the work order that this equation belongs to
   *
   * @generated from field: uint64 work_order_id = 12;
   */
  workOrderId = protoInt64.zero;

  /**
   * The description of the equation work order
   *
   * @generated from field: string description = 13;
   */
  description = "";

  /**
   * The list of associated equation work order items
   *
   * @generated from field: repeated Scailo.EquationWorkOrderItem list = 20;
   */
  list: EquationWorkOrderItem[] = [];

  /**
   * The total price of the equation work order
   *
   * @generated from field: double total_price = 40;
   */
  totalPrice = 0;

  constructor(data?: PartialMessage<EquationWorkOrder>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.EquationWorkOrder";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "entity_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "metadata", kind: "message", T: EmployeeMetadata },
    { no: 3, name: "approval_metadata", kind: "message", T: ApprovalMetadata },
    { no: 4, name: "status", kind: "enum", T: proto3.getEnumType(STANDARD_LIFECYCLE_STATUS) },
    { no: 5, name: "logs", kind: "message", T: LogbookLogConciseSLC, repeated: true },
    { no: 6, name: "completed_on", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 9, name: "vault_folder_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 10, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 12, name: "work_order_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 13, name: "description", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 20, name: "list", kind: "message", T: EquationWorkOrderItem, repeated: true },
    { no: 40, name: "total_price", kind: "scalar", T: 1 /* ScalarType.DOUBLE */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): EquationWorkOrder {
    return new EquationWorkOrder().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): EquationWorkOrder {
    return new EquationWorkOrder().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): EquationWorkOrder {
    return new EquationWorkOrder().fromJsonString(jsonString, options);
  }

  static equals(a: EquationWorkOrder | PlainMessage<EquationWorkOrder> | undefined, b: EquationWorkOrder | PlainMessage<EquationWorkOrder> | undefined): boolean {
    return proto3.util.equals(EquationWorkOrder, a, b);
  }
}

/**
 *
 * Describes the parameters required to add an item to a equation work order
 *
 * @generated from message Scailo.EquationsWorkOrdersServiceItemCreateRequest
 */
export class EquationsWorkOrdersServiceItemCreateRequest extends Message<EquationsWorkOrdersServiceItemCreateRequest> {
  /**
   * Stores any comment that the user might add during this operation
   *
   * @generated from field: string user_comment = 1;
   */
  userComment = "";

  /**
   * Stores the ID of the equation work order
   *
   * @generated from field: uint64 equation_id = 10;
   */
  equationId = protoInt64.zero;

  /**
   * The ID of the family that the equation depends upon
   *
   * @generated from field: uint64 family_id = 11;
   */
  familyId = protoInt64.zero;

  /**
   * The quantity of the associated family to be used as the multiplier
   *
   * @generated from field: uint64 quantity = 12;
   */
  quantity = protoInt64.zero;

  /**
   * The optional unit price of this family
   *
   * @generated from field: uint64 unit_price = 13;
   */
  unitPrice = protoInt64.zero;

  /**
   * The optional specifications
   *
   * @generated from field: string specifications = 14;
   */
  specifications = "";

  constructor(data?: PartialMessage<EquationsWorkOrdersServiceItemCreateRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.EquationsWorkOrdersServiceItemCreateRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "user_comment", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 10, name: "equation_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 11, name: "family_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 12, name: "quantity", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 13, name: "unit_price", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 14, name: "specifications", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): EquationsWorkOrdersServiceItemCreateRequest {
    return new EquationsWorkOrdersServiceItemCreateRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): EquationsWorkOrdersServiceItemCreateRequest {
    return new EquationsWorkOrdersServiceItemCreateRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): EquationsWorkOrdersServiceItemCreateRequest {
    return new EquationsWorkOrdersServiceItemCreateRequest().fromJsonString(jsonString, options);
  }

  static equals(a: EquationsWorkOrdersServiceItemCreateRequest | PlainMessage<EquationsWorkOrdersServiceItemCreateRequest> | undefined, b: EquationsWorkOrdersServiceItemCreateRequest | PlainMessage<EquationsWorkOrdersServiceItemCreateRequest> | undefined): boolean {
    return proto3.util.equals(EquationsWorkOrdersServiceItemCreateRequest, a, b);
  }
}

/**
 *
 * Describes the parameters required to update an item in a equation work order
 *
 * @generated from message Scailo.EquationsWorkOrdersServiceItemUpdateRequest
 */
export class EquationsWorkOrdersServiceItemUpdateRequest extends Message<EquationsWorkOrdersServiceItemUpdateRequest> {
  /**
   * Stores any comment that the user might add during this operation
   *
   * @generated from field: string user_comment = 1;
   */
  userComment = "";

  /**
   * The ID of the record
   *
   * @generated from field: uint64 id = 2;
   */
  id = protoInt64.zero;

  /**
   * The quantity of the associated family to be used as the multiplier
   *
   * @generated from field: uint64 quantity = 12;
   */
  quantity = protoInt64.zero;

  /**
   * The optional unit price of this family
   *
   * @generated from field: uint64 unit_price = 13;
   */
  unitPrice = protoInt64.zero;

  /**
   * The optional specifications
   *
   * @generated from field: string specifications = 14;
   */
  specifications = "";

  constructor(data?: PartialMessage<EquationsWorkOrdersServiceItemUpdateRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.EquationsWorkOrdersServiceItemUpdateRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "user_comment", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 12, name: "quantity", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 13, name: "unit_price", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 14, name: "specifications", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): EquationsWorkOrdersServiceItemUpdateRequest {
    return new EquationsWorkOrdersServiceItemUpdateRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): EquationsWorkOrdersServiceItemUpdateRequest {
    return new EquationsWorkOrdersServiceItemUpdateRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): EquationsWorkOrdersServiceItemUpdateRequest {
    return new EquationsWorkOrdersServiceItemUpdateRequest().fromJsonString(jsonString, options);
  }

  static equals(a: EquationsWorkOrdersServiceItemUpdateRequest | PlainMessage<EquationsWorkOrdersServiceItemUpdateRequest> | undefined, b: EquationsWorkOrdersServiceItemUpdateRequest | PlainMessage<EquationsWorkOrdersServiceItemUpdateRequest> | undefined): boolean {
    return proto3.util.equals(EquationsWorkOrdersServiceItemUpdateRequest, a, b);
  }
}

/**
 *
 * Describes the parameters that constitute an item associated to a equation work order
 *
 * @generated from message Scailo.EquationWorkOrderItem
 */
export class EquationWorkOrderItem extends Message<EquationWorkOrderItem> {
  /**
   * Stores a globally unique entity UUID. This will be set at the organization level
   *
   * @generated from field: string entity_uuid = 1;
   */
  entityUuid = "";

  /**
   * Stores the metadata of this equation work order
   *
   * @generated from field: Scailo.EmployeeMetadata metadata = 2;
   */
  metadata?: EmployeeMetadata;

  /**
   * Stores the approval metadata
   *
   * @generated from field: Scailo.ApprovalMetadata approval_metadata = 3;
   */
  approvalMetadata?: ApprovalMetadata;

  /**
   * Denotes if this record requires approval (or has been approved)
   *
   * @generated from field: bool need_approval = 4;
   */
  needApproval = false;

  /**
   * Stores any comment that the user might have added during an operation
   *
   * @generated from field: string user_comment = 5;
   */
  userComment = "";

  /**
   * Stores the ID of the equation work order
   *
   * @generated from field: uint64 equation_id = 10;
   */
  equationId = protoInt64.zero;

  /**
   * The ID of the family that the equation depends upon
   *
   * @generated from field: uint64 family_id = 11;
   */
  familyId = protoInt64.zero;

  /**
   * The quantity of the associated family to be used as the multiplier
   *
   * @generated from field: uint64 quantity = 12;
   */
  quantity = protoInt64.zero;

  /**
   * The optional unit price of this family
   *
   * @generated from field: uint64 unit_price = 13;
   */
  unitPrice = protoInt64.zero;

  /**
   * The optional specifications
   *
   * @generated from field: string specifications = 14;
   */
  specifications = "";

  constructor(data?: PartialMessage<EquationWorkOrderItem>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.EquationWorkOrderItem";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "entity_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "metadata", kind: "message", T: EmployeeMetadata },
    { no: 3, name: "approval_metadata", kind: "message", T: ApprovalMetadata },
    { no: 4, name: "need_approval", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 5, name: "user_comment", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 10, name: "equation_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 11, name: "family_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 12, name: "quantity", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 13, name: "unit_price", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 14, name: "specifications", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): EquationWorkOrderItem {
    return new EquationWorkOrderItem().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): EquationWorkOrderItem {
    return new EquationWorkOrderItem().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): EquationWorkOrderItem {
    return new EquationWorkOrderItem().fromJsonString(jsonString, options);
  }

  static equals(a: EquationWorkOrderItem | PlainMessage<EquationWorkOrderItem> | undefined, b: EquationWorkOrderItem | PlainMessage<EquationWorkOrderItem> | undefined): boolean {
    return proto3.util.equals(EquationWorkOrderItem, a, b);
  }
}

/**
 *
 * Describes the message consisting of the list of equations work orders
 *
 * @generated from message Scailo.EquationsWorkOrdersList
 */
export class EquationsWorkOrdersList extends Message<EquationsWorkOrdersList> {
  /**
   * List of records
   *
   * @generated from field: repeated Scailo.EquationWorkOrder list = 1;
   */
  list: EquationWorkOrder[] = [];

  constructor(data?: PartialMessage<EquationsWorkOrdersList>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.EquationsWorkOrdersList";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "list", kind: "message", T: EquationWorkOrder, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): EquationsWorkOrdersList {
    return new EquationsWorkOrdersList().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): EquationsWorkOrdersList {
    return new EquationsWorkOrdersList().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): EquationsWorkOrdersList {
    return new EquationsWorkOrdersList().fromJsonString(jsonString, options);
  }

  static equals(a: EquationsWorkOrdersList | PlainMessage<EquationsWorkOrdersList> | undefined, b: EquationsWorkOrdersList | PlainMessage<EquationsWorkOrdersList> | undefined): boolean {
    return proto3.util.equals(EquationsWorkOrdersList, a, b);
  }
}

/**
 *
 * Describes the message consisting of the list of equation work order items
 *
 * @generated from message Scailo.EquationsWorkOrdersItemsList
 */
export class EquationsWorkOrdersItemsList extends Message<EquationsWorkOrdersItemsList> {
  /**
   * List of records
   *
   * @generated from field: repeated Scailo.EquationWorkOrderItem list = 1;
   */
  list: EquationWorkOrderItem[] = [];

  constructor(data?: PartialMessage<EquationsWorkOrdersItemsList>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.EquationsWorkOrdersItemsList";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "list", kind: "message", T: EquationWorkOrderItem, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): EquationsWorkOrdersItemsList {
    return new EquationsWorkOrdersItemsList().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): EquationsWorkOrdersItemsList {
    return new EquationsWorkOrdersItemsList().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): EquationsWorkOrdersItemsList {
    return new EquationsWorkOrdersItemsList().fromJsonString(jsonString, options);
  }

  static equals(a: EquationsWorkOrdersItemsList | PlainMessage<EquationsWorkOrdersItemsList> | undefined, b: EquationsWorkOrdersItemsList | PlainMessage<EquationsWorkOrdersItemsList> | undefined): boolean {
    return proto3.util.equals(EquationsWorkOrdersItemsList, a, b);
  }
}

/**
 *
 * Describes the parameters that are required to retrieve the history of the record
 *
 * @generated from message Scailo.EquationWorkOrderItemHistoryRequest
 */
export class EquationWorkOrderItemHistoryRequest extends Message<EquationWorkOrderItemHistoryRequest> {
  /**
   * Stores the ID of the equation work order
   *
   * @generated from field: uint64 equation_id = 10;
   */
  equationId = protoInt64.zero;

  /**
   * The ID of the family that the equation depends upon
   *
   * @generated from field: uint64 family_id = 11;
   */
  familyId = protoInt64.zero;

  constructor(data?: PartialMessage<EquationWorkOrderItemHistoryRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.EquationWorkOrderItemHistoryRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 10, name: "equation_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 11, name: "family_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): EquationWorkOrderItemHistoryRequest {
    return new EquationWorkOrderItemHistoryRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): EquationWorkOrderItemHistoryRequest {
    return new EquationWorkOrderItemHistoryRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): EquationWorkOrderItemHistoryRequest {
    return new EquationWorkOrderItemHistoryRequest().fromJsonString(jsonString, options);
  }

  static equals(a: EquationWorkOrderItemHistoryRequest | PlainMessage<EquationWorkOrderItemHistoryRequest> | undefined, b: EquationWorkOrderItemHistoryRequest | PlainMessage<EquationWorkOrderItemHistoryRequest> | undefined): boolean {
    return proto3.util.equals(EquationWorkOrderItemHistoryRequest, a, b);
  }
}

/**
 *
 * Describes the request payload to retrieve approved or unapproved items.
 *
 * @generated from message Scailo.EquationWorkOrderItemsSearchRequest
 */
export class EquationWorkOrderItemsSearchRequest extends Message<EquationWorkOrderItemsSearchRequest> {
  /**
   * If true, then returns only active records. If false, then returns only inactive records
   *
   * @generated from field: Scailo.BOOL_FILTER is_active = 1;
   */
  isActive = BOOL_FILTER.BOOL_FILTER_ANY_UNSPECIFIED;

  /**
   * The number of records that need to be sent in the response. Returns all records if it is set to -1
   *
   * @generated from field: int64 count = 2;
   */
  count = protoInt64.zero;

  /**
   * The number that need to be offset by before fetching the records
   *
   * @generated from field: uint64 offset = 3;
   */
  offset = protoInt64.zero;

  /**
   * The sort order that is to be used to fetch the pagination response
   *
   * @generated from field: Scailo.SORT_ORDER sort_order = 4;
   */
  sortOrder = SORT_ORDER.ASCENDING_UNSPECIFIED;

  /**
   * The sort key that is to be used to fetch the pagination response
   *
   * @generated from field: Scailo.EQUATION_WORK_ORDER_ITEM_SORT_KEY sort_key = 5;
   */
  sortKey = EQUATION_WORK_ORDER_ITEM_SORT_KEY.EQUATION_WORK_ORDER_ITEM_SORT_KEY_ID_UNSPECIFIED;

  /**
   * The entity UUID that is to be used to filter records
   *
   * @generated from field: string entity_uuid = 6;
   */
  entityUuid = "";

  /**
   * The status of the items
   *
   * @generated from field: Scailo.EQUATION_WORK_ORDER_ITEM_STATUS status = 7;
   */
  status = EQUATION_WORK_ORDER_ITEM_STATUS.EQUATION_WORK_ORDER_ITEM_STATUS_ANY_UNSPECIFIED;

  /**
   * The start range of approved timestamp
   *
   * @generated from field: uint64 approved_on_start = 10;
   */
  approvedOnStart = protoInt64.zero;

  /**
   * The end range of approved timestamp
   *
   * @generated from field: uint64 approved_on_end = 11;
   */
  approvedOnEnd = protoInt64.zero;

  /**
   * The ID of the approver
   *
   * @generated from field: uint64 approved_by_user_id = 12;
   */
  approvedByUserId = protoInt64.zero;

  /**
   * The role ID of the approver
   *
   * @generated from field: uint64 approver_role_id = 13;
   */
  approverRoleId = protoInt64.zero;

  /**
   * The ID of the equation work order
   *
   * @generated from field: uint64 equation_id = 20;
   */
  equationId = protoInt64.zero;

  /**
   * The ID of the family
   *
   * @generated from field: uint64 family_id = 21;
   */
  familyId = protoInt64.zero;

  /**
   * Describes the key with which the search operation needs to be performed
   *
   * @generated from field: string search_key = 40;
   */
  searchKey = "";

  constructor(data?: PartialMessage<EquationWorkOrderItemsSearchRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.EquationWorkOrderItemsSearchRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "is_active", kind: "enum", T: proto3.getEnumType(BOOL_FILTER) },
    { no: 2, name: "count", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "offset", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 4, name: "sort_order", kind: "enum", T: proto3.getEnumType(SORT_ORDER) },
    { no: 5, name: "sort_key", kind: "enum", T: proto3.getEnumType(EQUATION_WORK_ORDER_ITEM_SORT_KEY) },
    { no: 6, name: "entity_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 7, name: "status", kind: "enum", T: proto3.getEnumType(EQUATION_WORK_ORDER_ITEM_STATUS) },
    { no: 10, name: "approved_on_start", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 11, name: "approved_on_end", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 12, name: "approved_by_user_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 13, name: "approver_role_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 20, name: "equation_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 21, name: "family_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 40, name: "search_key", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): EquationWorkOrderItemsSearchRequest {
    return new EquationWorkOrderItemsSearchRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): EquationWorkOrderItemsSearchRequest {
    return new EquationWorkOrderItemsSearchRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): EquationWorkOrderItemsSearchRequest {
    return new EquationWorkOrderItemsSearchRequest().fromJsonString(jsonString, options);
  }

  static equals(a: EquationWorkOrderItemsSearchRequest | PlainMessage<EquationWorkOrderItemsSearchRequest> | undefined, b: EquationWorkOrderItemsSearchRequest | PlainMessage<EquationWorkOrderItemsSearchRequest> | undefined): boolean {
    return proto3.util.equals(EquationWorkOrderItemsSearchRequest, a, b);
  }
}

/**
 *
 * Describes the response to a pagination items request
 *
 * @generated from message Scailo.EquationsWorkOrdersServicePaginatedItemsResponse
 */
export class EquationsWorkOrdersServicePaginatedItemsResponse extends Message<EquationsWorkOrdersServicePaginatedItemsResponse> {
  /**
   * The number of records in this payload
   *
   * @generated from field: uint64 count = 1;
   */
  count = protoInt64.zero;

  /**
   * The number that has been offset before fetching the records. This is the same value that has been sent as part of the pagination request
   *
   * @generated from field: uint64 offset = 2;
   */
  offset = protoInt64.zero;

  /**
   * The total number of records that are available
   *
   * @generated from field: uint64 total = 3;
   */
  total = protoInt64.zero;

  /**
   * The list of records
   *
   * @generated from field: repeated Scailo.EquationWorkOrderItem payload = 4;
   */
  payload: EquationWorkOrderItem[] = [];

  constructor(data?: PartialMessage<EquationsWorkOrdersServicePaginatedItemsResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.EquationsWorkOrdersServicePaginatedItemsResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "count", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 2, name: "offset", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 3, name: "total", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 4, name: "payload", kind: "message", T: EquationWorkOrderItem, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): EquationsWorkOrdersServicePaginatedItemsResponse {
    return new EquationsWorkOrdersServicePaginatedItemsResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): EquationsWorkOrdersServicePaginatedItemsResponse {
    return new EquationsWorkOrdersServicePaginatedItemsResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): EquationsWorkOrdersServicePaginatedItemsResponse {
    return new EquationsWorkOrdersServicePaginatedItemsResponse().fromJsonString(jsonString, options);
  }

  static equals(a: EquationsWorkOrdersServicePaginatedItemsResponse | PlainMessage<EquationsWorkOrdersServicePaginatedItemsResponse> | undefined, b: EquationsWorkOrdersServicePaginatedItemsResponse | PlainMessage<EquationsWorkOrdersServicePaginatedItemsResponse> | undefined): boolean {
    return proto3.util.equals(EquationsWorkOrdersServicePaginatedItemsResponse, a, b);
  }
}

/**
 *
 * Describes a pagination request to retrieve records
 *
 * @generated from message Scailo.EquationsWorkOrdersServicePaginationReq
 */
export class EquationsWorkOrdersServicePaginationReq extends Message<EquationsWorkOrdersServicePaginationReq> {
  /**
   * If true, then returns only active records. If false, then returns only inactive records
   *
   * @generated from field: Scailo.BOOL_FILTER is_active = 1;
   */
  isActive = BOOL_FILTER.BOOL_FILTER_ANY_UNSPECIFIED;

  /**
   * The number of records that need to be sent in the response
   *
   * @generated from field: int64 count = 2;
   */
  count = protoInt64.zero;

  /**
   * The number that need to be offset by before fetching the records
   *
   * @generated from field: uint64 offset = 3;
   */
  offset = protoInt64.zero;

  /**
   * The sort order that is to be used to fetch the pagination response
   *
   * @generated from field: Scailo.SORT_ORDER sort_order = 4;
   */
  sortOrder = SORT_ORDER.ASCENDING_UNSPECIFIED;

  /**
   * The sort key that is to be used to fetch the pagination response
   *
   * @generated from field: Scailo.EQUATION_WORK_ORDER_SORT_KEY sort_key = 5;
   */
  sortKey = EQUATION_WORK_ORDER_SORT_KEY.EQUATION_WORK_ORDER_SORT_KEY_ID_UNSPECIFIED;

  /**
   * The status of this equation work order
   *
   * @generated from field: Scailo.STANDARD_LIFECYCLE_STATUS status = 6;
   */
  status = STANDARD_LIFECYCLE_STATUS.ANY_UNSPECIFIED;

  constructor(data?: PartialMessage<EquationsWorkOrdersServicePaginationReq>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.EquationsWorkOrdersServicePaginationReq";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "is_active", kind: "enum", T: proto3.getEnumType(BOOL_FILTER) },
    { no: 2, name: "count", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "offset", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 4, name: "sort_order", kind: "enum", T: proto3.getEnumType(SORT_ORDER) },
    { no: 5, name: "sort_key", kind: "enum", T: proto3.getEnumType(EQUATION_WORK_ORDER_SORT_KEY) },
    { no: 6, name: "status", kind: "enum", T: proto3.getEnumType(STANDARD_LIFECYCLE_STATUS) },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): EquationsWorkOrdersServicePaginationReq {
    return new EquationsWorkOrdersServicePaginationReq().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): EquationsWorkOrdersServicePaginationReq {
    return new EquationsWorkOrdersServicePaginationReq().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): EquationsWorkOrdersServicePaginationReq {
    return new EquationsWorkOrdersServicePaginationReq().fromJsonString(jsonString, options);
  }

  static equals(a: EquationsWorkOrdersServicePaginationReq | PlainMessage<EquationsWorkOrdersServicePaginationReq> | undefined, b: EquationsWorkOrdersServicePaginationReq | PlainMessage<EquationsWorkOrdersServicePaginationReq> | undefined): boolean {
    return proto3.util.equals(EquationsWorkOrdersServicePaginationReq, a, b);
  }
}

/**
 *
 * Describes the response to a pagination request
 *
 * @generated from message Scailo.EquationsWorkOrdersServicePaginationResponse
 */
export class EquationsWorkOrdersServicePaginationResponse extends Message<EquationsWorkOrdersServicePaginationResponse> {
  /**
   * The number of records in this payload
   *
   * @generated from field: uint64 count = 1;
   */
  count = protoInt64.zero;

  /**
   * The number that has been offset before fetching the records. This is the same value that has been sent as part of the pagination request
   *
   * @generated from field: uint64 offset = 2;
   */
  offset = protoInt64.zero;

  /**
   * The total number of records that are available
   *
   * @generated from field: uint64 total = 3;
   */
  total = protoInt64.zero;

  /**
   * The list of records
   *
   * @generated from field: repeated Scailo.EquationWorkOrder payload = 4;
   */
  payload: EquationWorkOrder[] = [];

  constructor(data?: PartialMessage<EquationsWorkOrdersServicePaginationResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.EquationsWorkOrdersServicePaginationResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "count", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 2, name: "offset", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 3, name: "total", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 4, name: "payload", kind: "message", T: EquationWorkOrder, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): EquationsWorkOrdersServicePaginationResponse {
    return new EquationsWorkOrdersServicePaginationResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): EquationsWorkOrdersServicePaginationResponse {
    return new EquationsWorkOrdersServicePaginationResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): EquationsWorkOrdersServicePaginationResponse {
    return new EquationsWorkOrdersServicePaginationResponse().fromJsonString(jsonString, options);
  }

  static equals(a: EquationsWorkOrdersServicePaginationResponse | PlainMessage<EquationsWorkOrdersServicePaginationResponse> | undefined, b: EquationsWorkOrdersServicePaginationResponse | PlainMessage<EquationsWorkOrdersServicePaginationResponse> | undefined): boolean {
    return proto3.util.equals(EquationsWorkOrdersServicePaginationResponse, a, b);
  }
}

/**
 *
 * Describes the base request payload of a filter search
 *
 * @generated from message Scailo.EquationsWorkOrdersServiceFilterReq
 */
export class EquationsWorkOrdersServiceFilterReq extends Message<EquationsWorkOrdersServiceFilterReq> {
  /**
   * If true, then returns only active records. If false, then returns only inactive records
   *
   * @generated from field: Scailo.BOOL_FILTER is_active = 1;
   */
  isActive = BOOL_FILTER.BOOL_FILTER_ANY_UNSPECIFIED;

  /**
   * The number of records that need to be sent in the response. Returns all records if it is set to -1
   *
   * @generated from field: int64 count = 2;
   */
  count = protoInt64.zero;

  /**
   * The number that need to be offset by before fetching the records
   *
   * @generated from field: uint64 offset = 3;
   */
  offset = protoInt64.zero;

  /**
   * The sort order that is to be used to fetch the pagination response
   *
   * @generated from field: Scailo.SORT_ORDER sort_order = 4;
   */
  sortOrder = SORT_ORDER.ASCENDING_UNSPECIFIED;

  /**
   * The sort key that is to be used to fetch the pagination response
   *
   * @generated from field: Scailo.EQUATION_WORK_ORDER_SORT_KEY sort_key = 5;
   */
  sortKey = EQUATION_WORK_ORDER_SORT_KEY.EQUATION_WORK_ORDER_SORT_KEY_ID_UNSPECIFIED;

  /**
   * The minimum timestamp that needs to be considered to filter by creation
   *
   * @generated from field: uint64 creation_timestamp_start = 101;
   */
  creationTimestampStart = protoInt64.zero;

  /**
   * The maximum timestamp that needs to be considered to filter by creation
   *
   * @generated from field: uint64 creation_timestamp_end = 102;
   */
  creationTimestampEnd = protoInt64.zero;

  /**
   * The minimum timestamp that needs to be considered to filter by modification
   *
   * @generated from field: uint64 modification_timestamp_start = 103;
   */
  modificationTimestampStart = protoInt64.zero;

  /**
   * The maximum timestamp that needs to be considered to filter by modification
   *
   * @generated from field: uint64 modification_timestamp_end = 104;
   */
  modificationTimestampEnd = protoInt64.zero;

  /**
   * The entity UUID that is to be used to filter records
   *
   * @generated from field: string entity_uuid = 8;
   */
  entityUuid = "";

  /**
   * The status of this equation work order
   *
   * @generated from field: Scailo.STANDARD_LIFECYCLE_STATUS status = 10;
   */
  status = STANDARD_LIFECYCLE_STATUS.ANY_UNSPECIFIED;

  /**
   * The start range of approved timestamp
   *
   * @generated from field: uint64 approved_on_start = 11;
   */
  approvedOnStart = protoInt64.zero;

  /**
   * The end range of approved timestamp
   *
   * @generated from field: uint64 approved_on_end = 12;
   */
  approvedOnEnd = protoInt64.zero;

  /**
   * The ID of the approver
   *
   * @generated from field: uint64 approved_by_user_id = 13;
   */
  approvedByUserId = protoInt64.zero;

  /**
   * The role ID of the approver
   *
   * @generated from field: uint64 approver_role_id = 14;
   */
  approverRoleId = protoInt64.zero;

  /**
   * The start range of completed timestamp
   *
   * @generated from field: uint64 completed_on_start = 15;
   */
  completedOnStart = protoInt64.zero;

  /**
   * The end range of completed timestamp
   *
   * @generated from field: uint64 completed_on_end = 16;
   */
  completedOnEnd = protoInt64.zero;

  /**
   * The name of the equation work order
   *
   * @generated from field: string name = 20;
   */
  name = "";

  /**
   * The ID of the work order that this equation belongs to
   *
   * @generated from field: uint64 work_order_id = 21;
   */
  workOrderId = protoInt64.zero;

  /**
   * The ID of the constituent family that is part of an equation
   *
   * @generated from field: uint64 constituent_family_id = 30;
   */
  constituentFamilyId = protoInt64.zero;

  constructor(data?: PartialMessage<EquationsWorkOrdersServiceFilterReq>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.EquationsWorkOrdersServiceFilterReq";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "is_active", kind: "enum", T: proto3.getEnumType(BOOL_FILTER) },
    { no: 2, name: "count", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "offset", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 4, name: "sort_order", kind: "enum", T: proto3.getEnumType(SORT_ORDER) },
    { no: 5, name: "sort_key", kind: "enum", T: proto3.getEnumType(EQUATION_WORK_ORDER_SORT_KEY) },
    { no: 101, name: "creation_timestamp_start", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 102, name: "creation_timestamp_end", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 103, name: "modification_timestamp_start", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 104, name: "modification_timestamp_end", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 8, name: "entity_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 10, name: "status", kind: "enum", T: proto3.getEnumType(STANDARD_LIFECYCLE_STATUS) },
    { no: 11, name: "approved_on_start", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 12, name: "approved_on_end", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 13, name: "approved_by_user_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 14, name: "approver_role_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 15, name: "completed_on_start", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 16, name: "completed_on_end", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 20, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 21, name: "work_order_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 30, name: "constituent_family_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): EquationsWorkOrdersServiceFilterReq {
    return new EquationsWorkOrdersServiceFilterReq().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): EquationsWorkOrdersServiceFilterReq {
    return new EquationsWorkOrdersServiceFilterReq().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): EquationsWorkOrdersServiceFilterReq {
    return new EquationsWorkOrdersServiceFilterReq().fromJsonString(jsonString, options);
  }

  static equals(a: EquationsWorkOrdersServiceFilterReq | PlainMessage<EquationsWorkOrdersServiceFilterReq> | undefined, b: EquationsWorkOrdersServiceFilterReq | PlainMessage<EquationsWorkOrdersServiceFilterReq> | undefined): boolean {
    return proto3.util.equals(EquationsWorkOrdersServiceFilterReq, a, b);
  }
}

/**
 *
 * Describes the base request payload of a count search
 *
 * @generated from message Scailo.EquationsWorkOrdersServiceCountReq
 */
export class EquationsWorkOrdersServiceCountReq extends Message<EquationsWorkOrdersServiceCountReq> {
  /**
   * If true, then returns only active records. If false, then returns only inactive records
   *
   * @generated from field: Scailo.BOOL_FILTER is_active = 1;
   */
  isActive = BOOL_FILTER.BOOL_FILTER_ANY_UNSPECIFIED;

  /**
   * The minimum timestamp that needs to be considered to filter by creation
   *
   * @generated from field: uint64 creation_timestamp_start = 101;
   */
  creationTimestampStart = protoInt64.zero;

  /**
   * The maximum timestamp that needs to be considered to filter by creation
   *
   * @generated from field: uint64 creation_timestamp_end = 102;
   */
  creationTimestampEnd = protoInt64.zero;

  /**
   * The minimum timestamp that needs to be considered to filter by modification
   *
   * @generated from field: uint64 modification_timestamp_start = 103;
   */
  modificationTimestampStart = protoInt64.zero;

  /**
   * The maximum timestamp that needs to be considered to filter by modification
   *
   * @generated from field: uint64 modification_timestamp_end = 104;
   */
  modificationTimestampEnd = protoInt64.zero;

  /**
   * The entity UUID that is to be used to filter records
   *
   * @generated from field: string entity_uuid = 8;
   */
  entityUuid = "";

  /**
   * The status of this equation work order
   *
   * @generated from field: Scailo.STANDARD_LIFECYCLE_STATUS status = 10;
   */
  status = STANDARD_LIFECYCLE_STATUS.ANY_UNSPECIFIED;

  /**
   * The start range of approved timestamp
   *
   * @generated from field: uint64 approved_on_start = 11;
   */
  approvedOnStart = protoInt64.zero;

  /**
   * The end range of approved timestamp
   *
   * @generated from field: uint64 approved_on_end = 12;
   */
  approvedOnEnd = protoInt64.zero;

  /**
   * The ID of the approver
   *
   * @generated from field: uint64 approved_by_user_id = 13;
   */
  approvedByUserId = protoInt64.zero;

  /**
   * The role ID of the approver
   *
   * @generated from field: uint64 approver_role_id = 14;
   */
  approverRoleId = protoInt64.zero;

  /**
   * The start range of completed timestamp
   *
   * @generated from field: uint64 completed_on_start = 15;
   */
  completedOnStart = protoInt64.zero;

  /**
   * The end range of completed timestamp
   *
   * @generated from field: uint64 completed_on_end = 16;
   */
  completedOnEnd = protoInt64.zero;

  /**
   * The name of the equation work order
   *
   * @generated from field: string name = 20;
   */
  name = "";

  /**
   * The ID of the work order that this equation belongs to
   *
   * @generated from field: uint64 work_order_id = 21;
   */
  workOrderId = protoInt64.zero;

  /**
   * The ID of the constituent family that is part of an equation
   *
   * @generated from field: uint64 constituent_family_id = 30;
   */
  constituentFamilyId = protoInt64.zero;

  constructor(data?: PartialMessage<EquationsWorkOrdersServiceCountReq>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.EquationsWorkOrdersServiceCountReq";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "is_active", kind: "enum", T: proto3.getEnumType(BOOL_FILTER) },
    { no: 101, name: "creation_timestamp_start", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 102, name: "creation_timestamp_end", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 103, name: "modification_timestamp_start", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 104, name: "modification_timestamp_end", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 8, name: "entity_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 10, name: "status", kind: "enum", T: proto3.getEnumType(STANDARD_LIFECYCLE_STATUS) },
    { no: 11, name: "approved_on_start", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 12, name: "approved_on_end", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 13, name: "approved_by_user_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 14, name: "approver_role_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 15, name: "completed_on_start", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 16, name: "completed_on_end", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 20, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 21, name: "work_order_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 30, name: "constituent_family_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): EquationsWorkOrdersServiceCountReq {
    return new EquationsWorkOrdersServiceCountReq().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): EquationsWorkOrdersServiceCountReq {
    return new EquationsWorkOrdersServiceCountReq().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): EquationsWorkOrdersServiceCountReq {
    return new EquationsWorkOrdersServiceCountReq().fromJsonString(jsonString, options);
  }

  static equals(a: EquationsWorkOrdersServiceCountReq | PlainMessage<EquationsWorkOrdersServiceCountReq> | undefined, b: EquationsWorkOrdersServiceCountReq | PlainMessage<EquationsWorkOrdersServiceCountReq> | undefined): boolean {
    return proto3.util.equals(EquationsWorkOrdersServiceCountReq, a, b);
  }
}

/**
 *
 * Describes the request payload for performing a generic search operation on records
 *
 * @generated from message Scailo.EquationsWorkOrdersServiceSearchAllReq
 */
export class EquationsWorkOrdersServiceSearchAllReq extends Message<EquationsWorkOrdersServiceSearchAllReq> {
  /**
   * If true, then returns only active records. If false, then returns only inactive records
   *
   * @generated from field: Scailo.BOOL_FILTER is_active = 1;
   */
  isActive = BOOL_FILTER.BOOL_FILTER_ANY_UNSPECIFIED;

  /**
   * The number of records that need to be sent in the response. Returns all records if it is set to -1
   *
   * @generated from field: int64 count = 2;
   */
  count = protoInt64.zero;

  /**
   * The number that need to be offset by before fetching the records
   *
   * @generated from field: uint64 offset = 3;
   */
  offset = protoInt64.zero;

  /**
   * The sort order that is to be used to fetch the pagination response
   *
   * @generated from field: Scailo.SORT_ORDER sort_order = 4;
   */
  sortOrder = SORT_ORDER.ASCENDING_UNSPECIFIED;

  /**
   * The sort key that is to be used to fetch the pagination response
   *
   * @generated from field: Scailo.EQUATION_WORK_ORDER_SORT_KEY sort_key = 5;
   */
  sortKey = EQUATION_WORK_ORDER_SORT_KEY.EQUATION_WORK_ORDER_SORT_KEY_ID_UNSPECIFIED;

  /**
   * The entity UUID that is to be used to filter records
   *
   * @generated from field: string entity_uuid = 6;
   */
  entityUuid = "";

  /**
   * Limit the search space to the given status
   *
   * @generated from field: Scailo.STANDARD_LIFECYCLE_STATUS status = 10;
   */
  status = STANDARD_LIFECYCLE_STATUS.ANY_UNSPECIFIED;

  /**
   * Describes the key with which the search operation needs to be performed
   *
   * @generated from field: string search_key = 11;
   */
  searchKey = "";

  constructor(data?: PartialMessage<EquationsWorkOrdersServiceSearchAllReq>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.EquationsWorkOrdersServiceSearchAllReq";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "is_active", kind: "enum", T: proto3.getEnumType(BOOL_FILTER) },
    { no: 2, name: "count", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "offset", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 4, name: "sort_order", kind: "enum", T: proto3.getEnumType(SORT_ORDER) },
    { no: 5, name: "sort_key", kind: "enum", T: proto3.getEnumType(EQUATION_WORK_ORDER_SORT_KEY) },
    { no: 6, name: "entity_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 10, name: "status", kind: "enum", T: proto3.getEnumType(STANDARD_LIFECYCLE_STATUS) },
    { no: 11, name: "search_key", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): EquationsWorkOrdersServiceSearchAllReq {
    return new EquationsWorkOrdersServiceSearchAllReq().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): EquationsWorkOrdersServiceSearchAllReq {
    return new EquationsWorkOrdersServiceSearchAllReq().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): EquationsWorkOrdersServiceSearchAllReq {
    return new EquationsWorkOrdersServiceSearchAllReq().fromJsonString(jsonString, options);
  }

  static equals(a: EquationsWorkOrdersServiceSearchAllReq | PlainMessage<EquationsWorkOrdersServiceSearchAllReq> | undefined, b: EquationsWorkOrdersServiceSearchAllReq | PlainMessage<EquationsWorkOrdersServiceSearchAllReq> | undefined): boolean {
    return proto3.util.equals(EquationsWorkOrdersServiceSearchAllReq, a, b);
  }
}

