// @generated by protoc-gen-es v1.5.1 with parameter "target=ts"
// @generated from file skills_groups.scailo.proto (package Scailo, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3, protoInt64 } from "@bufbuild/protobuf";
import { FormFieldDatum, FormFieldDatumCreateRequest } from "./forms_fields_data.scailo_pb.js";
import { ApprovalMetadata, BOOL_FILTER, EmployeeMetadata, LogbookLogConciseSLC, SORT_ORDER, STANDARD_LIFECYCLE_STATUS } from "./base.scailo_pb.js";

/**
 *
 * Describes the available input types for a skill group item (with possible vbalues being number-absolute, number-percentage, text-input, text-dropdown)
 *
 * @generated from enum Scailo.SKILL_GROUP_ITEM_INPUT_VALUE_TYPE
 */
export enum SKILL_GROUP_ITEM_INPUT_VALUE_TYPE {
  /**
   * Input value type is an absolute number (with min and max defined in number_min_value and number_max_value)
   *
   * @generated from enum value: SKILL_GROUP_ITEM_INPUT_VALUE_TYPE_NUMBER_ABSOLUTE_UNSPECIFIED = 0;
   */
  SKILL_GROUP_ITEM_INPUT_VALUE_TYPE_NUMBER_ABSOLUTE_UNSPECIFIED = 0,

  /**
   * Input value type is a percentage
   *
   * @generated from enum value: SKILL_GROUP_ITEM_INPUT_VALUE_TYPE_NUMBER_PERCENTAGE = 1;
   */
  SKILL_GROUP_ITEM_INPUT_VALUE_TYPE_NUMBER_PERCENTAGE = 1,

  /**
   * Input value type is a textual input
   *
   * @generated from enum value: SKILL_GROUP_ITEM_INPUT_VALUE_TYPE_TEXT_INPUT = 2;
   */
  SKILL_GROUP_ITEM_INPUT_VALUE_TYPE_TEXT_INPUT = 2,

  /**
   * Input value type is a dropdown (from the values as defined in text_values)
   *
   * @generated from enum value: SKILL_GROUP_ITEM_INPUT_VALUE_TYPE_TEXT_DROPDOWN = 3;
   */
  SKILL_GROUP_ITEM_INPUT_VALUE_TYPE_TEXT_DROPDOWN = 3,
}
// Retrieve enum metadata with: proto3.getEnumType(SKILL_GROUP_ITEM_INPUT_VALUE_TYPE)
proto3.util.setEnumType(SKILL_GROUP_ITEM_INPUT_VALUE_TYPE, "Scailo.SKILL_GROUP_ITEM_INPUT_VALUE_TYPE", [
  { no: 0, name: "SKILL_GROUP_ITEM_INPUT_VALUE_TYPE_NUMBER_ABSOLUTE_UNSPECIFIED" },
  { no: 1, name: "SKILL_GROUP_ITEM_INPUT_VALUE_TYPE_NUMBER_PERCENTAGE" },
  { no: 2, name: "SKILL_GROUP_ITEM_INPUT_VALUE_TYPE_TEXT_INPUT" },
  { no: 3, name: "SKILL_GROUP_ITEM_INPUT_VALUE_TYPE_TEXT_DROPDOWN" },
]);

/**
 *
 * Describes the available sort keys
 *
 * @generated from enum Scailo.SKILL_GROUP_SORT_KEY
 */
export enum SKILL_GROUP_SORT_KEY {
  /**
   * Fetch ordered results by id
   *
   * @generated from enum value: SKILL_GROUP_SORT_KEY_ID_UNSPECIFIED = 0;
   */
  SKILL_GROUP_SORT_KEY_ID_UNSPECIFIED = 0,

  /**
   * Fetch ordered results by the creation timestamp
   *
   * @generated from enum value: SKILL_GROUP_SORT_KEY_CREATED_AT = 1;
   */
  SKILL_GROUP_SORT_KEY_CREATED_AT = 1,

  /**
   * Fetch ordered results by the modified timestamp
   *
   * @generated from enum value: SKILL_GROUP_SORT_KEY_MODIFIED_AT = 2;
   */
  SKILL_GROUP_SORT_KEY_MODIFIED_AT = 2,

  /**
   * Fetch ordered results by the approved on timestamp
   *
   * @generated from enum value: SKILL_GROUP_SORT_KEY_APPROVED_ON = 3;
   */
  SKILL_GROUP_SORT_KEY_APPROVED_ON = 3,

  /**
   * Fetch ordered results by the approved by field
   *
   * @generated from enum value: SKILL_GROUP_SORT_KEY_APPROVED_BY = 4;
   */
  SKILL_GROUP_SORT_KEY_APPROVED_BY = 4,

  /**
   * Fetch ordered results by the approver's role ID
   *
   * @generated from enum value: SKILL_GROUP_SORT_KEY_APPROVER_ROLE_ID = 5;
   */
  SKILL_GROUP_SORT_KEY_APPROVER_ROLE_ID = 5,

  /**
   * Fetch ordered results by the approver's completed on timestamp
   *
   * @generated from enum value: SKILL_GROUP_SORT_KEY_COMPLETED_ON = 6;
   */
  SKILL_GROUP_SORT_KEY_COMPLETED_ON = 6,

  /**
   * Fetch ordered results by the name
   *
   * @generated from enum value: SKILL_GROUP_SORT_KEY_NAME = 10;
   */
  SKILL_GROUP_SORT_KEY_NAME = 10,

  /**
   * Fetch ordered results by the role ID
   *
   * @generated from enum value: SKILL_GROUP_SORT_KEY_ROLE_ID = 11;
   */
  SKILL_GROUP_SORT_KEY_ROLE_ID = 11,
}
// Retrieve enum metadata with: proto3.getEnumType(SKILL_GROUP_SORT_KEY)
proto3.util.setEnumType(SKILL_GROUP_SORT_KEY, "Scailo.SKILL_GROUP_SORT_KEY", [
  { no: 0, name: "SKILL_GROUP_SORT_KEY_ID_UNSPECIFIED" },
  { no: 1, name: "SKILL_GROUP_SORT_KEY_CREATED_AT" },
  { no: 2, name: "SKILL_GROUP_SORT_KEY_MODIFIED_AT" },
  { no: 3, name: "SKILL_GROUP_SORT_KEY_APPROVED_ON" },
  { no: 4, name: "SKILL_GROUP_SORT_KEY_APPROVED_BY" },
  { no: 5, name: "SKILL_GROUP_SORT_KEY_APPROVER_ROLE_ID" },
  { no: 6, name: "SKILL_GROUP_SORT_KEY_COMPLETED_ON" },
  { no: 10, name: "SKILL_GROUP_SORT_KEY_NAME" },
  { no: 11, name: "SKILL_GROUP_SORT_KEY_ROLE_ID" },
]);

/**
 *
 * Describes the parameters necessary to create a record
 *
 * @generated from message Scailo.SkillsGroupsServiceCreateRequest
 */
export class SkillsGroupsServiceCreateRequest extends Message<SkillsGroupsServiceCreateRequest> {
  /**
   * Stores a globally unique entity UUID. This will be set at the organization level
   *
   * @generated from field: string entity_uuid = 1;
   */
  entityUuid = "";

  /**
   * Stores any comment that the user might add during this operation
   *
   * @generated from field: string user_comment = 2;
   */
  userComment = "";

  /**
   * The associated vault folder ID
   *
   * @generated from field: uint64 vault_folder_id = 9;
   */
  vaultFolderId = protoInt64.zero;

  /**
   * The name of the skill group
   *
   * @generated from field: string name = 10;
   */
  name = "";

  /**
   * The skill group code
   *
   * @generated from field: string code = 11;
   */
  code = "";

  /**
   * The ID of the role that this skill group belongs to
   *
   * @generated from field: uint64 role_id = 12;
   */
  roleId = protoInt64.zero;

  /**
   * The description of the skill group
   *
   * @generated from field: string description = 13;
   */
  description = "";

  /**
   * The list of dynamic forms
   *
   * @generated from field: repeated Scailo.FormFieldDatumCreateRequest form_data = 30;
   */
  formData: FormFieldDatumCreateRequest[] = [];

  constructor(data?: PartialMessage<SkillsGroupsServiceCreateRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.SkillsGroupsServiceCreateRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "entity_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "user_comment", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 9, name: "vault_folder_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 10, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 11, name: "code", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 12, name: "role_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 13, name: "description", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 30, name: "form_data", kind: "message", T: FormFieldDatumCreateRequest, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SkillsGroupsServiceCreateRequest {
    return new SkillsGroupsServiceCreateRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SkillsGroupsServiceCreateRequest {
    return new SkillsGroupsServiceCreateRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SkillsGroupsServiceCreateRequest {
    return new SkillsGroupsServiceCreateRequest().fromJsonString(jsonString, options);
  }

  static equals(a: SkillsGroupsServiceCreateRequest | PlainMessage<SkillsGroupsServiceCreateRequest> | undefined, b: SkillsGroupsServiceCreateRequest | PlainMessage<SkillsGroupsServiceCreateRequest> | undefined): boolean {
    return proto3.util.equals(SkillsGroupsServiceCreateRequest, a, b);
  }
}

/**
 *
 * Describes the parameters necessary to update a record
 *
 * @generated from message Scailo.SkillsGroupsServiceUpdateRequest
 */
export class SkillsGroupsServiceUpdateRequest extends Message<SkillsGroupsServiceUpdateRequest> {
  /**
   * Stores any comment that the user might add during this operation
   *
   * @generated from field: string user_comment = 1;
   */
  userComment = "";

  /**
   * The ID of the record that needs to be updated
   *
   * @generated from field: uint64 id = 2;
   */
  id = protoInt64.zero;

  /**
   * Optional boolean value that stores if a notification needs to be sent to users about the update to the record. This is useful when a subsequent operation needs to be performed immediately (such as send to verification after updating the revision)
   *
   * @generated from field: bool notify_users = 3;
   */
  notifyUsers = false;

  /**
   * The associated vault folder ID
   *
   * @generated from field: uint64 vault_folder_id = 9;
   */
  vaultFolderId = protoInt64.zero;

  /**
   * The name of the skill group
   *
   * @generated from field: string name = 10;
   */
  name = "";

  /**
   * The skill group code
   *
   * @generated from field: string code = 11;
   */
  code = "";

  /**
   * The ID of the role that this skill group belongs to
   *
   * @generated from field: uint64 role_id = 12;
   */
  roleId = protoInt64.zero;

  /**
   * The description of the skill group
   *
   * @generated from field: string description = 13;
   */
  description = "";

  /**
   * The list of dynamic forms
   *
   * @generated from field: repeated Scailo.FormFieldDatumCreateRequest form_data = 30;
   */
  formData: FormFieldDatumCreateRequest[] = [];

  constructor(data?: PartialMessage<SkillsGroupsServiceUpdateRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.SkillsGroupsServiceUpdateRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "user_comment", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 3, name: "notify_users", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 9, name: "vault_folder_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 10, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 11, name: "code", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 12, name: "role_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 13, name: "description", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 30, name: "form_data", kind: "message", T: FormFieldDatumCreateRequest, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SkillsGroupsServiceUpdateRequest {
    return new SkillsGroupsServiceUpdateRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SkillsGroupsServiceUpdateRequest {
    return new SkillsGroupsServiceUpdateRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SkillsGroupsServiceUpdateRequest {
    return new SkillsGroupsServiceUpdateRequest().fromJsonString(jsonString, options);
  }

  static equals(a: SkillsGroupsServiceUpdateRequest | PlainMessage<SkillsGroupsServiceUpdateRequest> | undefined, b: SkillsGroupsServiceUpdateRequest | PlainMessage<SkillsGroupsServiceUpdateRequest> | undefined): boolean {
    return proto3.util.equals(SkillsGroupsServiceUpdateRequest, a, b);
  }
}

/**
 *
 * Describes the parameters that are part of a standard response
 *
 * @generated from message Scailo.SkillGroup
 */
export class SkillGroup extends Message<SkillGroup> {
  /**
   * Stores a globally unique entity UUID. This will be set at the organization level
   *
   * @generated from field: string entity_uuid = 1;
   */
  entityUuid = "";

  /**
   * Stores the metadata of this skill group
   *
   * @generated from field: Scailo.EmployeeMetadata metadata = 2;
   */
  metadata?: EmployeeMetadata;

  /**
   * Stores the approval metadata
   *
   * @generated from field: Scailo.ApprovalMetadata approval_metadata = 3;
   */
  approvalMetadata?: ApprovalMetadata;

  /**
   * The status of this skill group
   *
   * @generated from field: Scailo.STANDARD_LIFECYCLE_STATUS status = 4;
   */
  status = STANDARD_LIFECYCLE_STATUS.ANY_UNSPECIFIED;

  /**
   * Stores the logs of every operation performed on this skill group
   *
   * @generated from field: repeated Scailo.LogbookLogConciseSLC logs = 5;
   */
  logs: LogbookLogConciseSLC[] = [];

  /**
   * The timestamp of when this skill group was marked as completed
   *
   * @generated from field: uint64 completed_on = 6;
   */
  completedOn = protoInt64.zero;

  /**
   * The associated vault folder ID
   *
   * @generated from field: uint64 vault_folder_id = 9;
   */
  vaultFolderId = protoInt64.zero;

  /**
   * The name of the skill group
   *
   * @generated from field: string name = 10;
   */
  name = "";

  /**
   * The skill group code
   *
   * @generated from field: string code = 11;
   */
  code = "";

  /**
   * The ID of the role that this skill group belongs to
   *
   * @generated from field: uint64 role_id = 12;
   */
  roleId = protoInt64.zero;

  /**
   * The description of the skill group
   *
   * @generated from field: string description = 13;
   */
  description = "";

  /**
   * The list of associated skill group params
   *
   * @generated from field: repeated Scailo.SkillGroupItem list = 20;
   */
  list: SkillGroupItem[] = [];

  /**
   * The list of dynamic forms
   *
   * @generated from field: repeated Scailo.FormFieldDatum form_data = 30;
   */
  formData: FormFieldDatum[] = [];

  constructor(data?: PartialMessage<SkillGroup>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.SkillGroup";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "entity_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "metadata", kind: "message", T: EmployeeMetadata },
    { no: 3, name: "approval_metadata", kind: "message", T: ApprovalMetadata },
    { no: 4, name: "status", kind: "enum", T: proto3.getEnumType(STANDARD_LIFECYCLE_STATUS) },
    { no: 5, name: "logs", kind: "message", T: LogbookLogConciseSLC, repeated: true },
    { no: 6, name: "completed_on", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 9, name: "vault_folder_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 10, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 11, name: "code", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 12, name: "role_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 13, name: "description", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 20, name: "list", kind: "message", T: SkillGroupItem, repeated: true },
    { no: 30, name: "form_data", kind: "message", T: FormFieldDatum, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SkillGroup {
    return new SkillGroup().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SkillGroup {
    return new SkillGroup().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SkillGroup {
    return new SkillGroup().fromJsonString(jsonString, options);
  }

  static equals(a: SkillGroup | PlainMessage<SkillGroup> | undefined, b: SkillGroup | PlainMessage<SkillGroup> | undefined): boolean {
    return proto3.util.equals(SkillGroup, a, b);
  }
}

/**
 *
 * Describes the parameters required to add a param to a skill group
 *
 * @generated from message Scailo.SkillsGroupsServiceItemCreateRequest
 */
export class SkillsGroupsServiceItemCreateRequest extends Message<SkillsGroupsServiceItemCreateRequest> {
  /**
   * Stores any comment that the user might add during this operation
   *
   * @generated from field: string user_comment = 1;
   */
  userComment = "";

  /**
   * Stores the ID of the skill group
   *
   * @generated from field: uint64 skill_group_id = 10;
   */
  skillGroupId = protoInt64.zero;

  /**
   * The ID of the skill param that is a part of the skill group
   *
   * @generated from field: uint64 skill_param_id = 11;
   */
  skillParamId = protoInt64.zero;

  /**
   * The input value type of the item
   *
   * @generated from field: Scailo.SKILL_GROUP_ITEM_INPUT_VALUE_TYPE input_value_type = 12;
   */
  inputValueType = SKILL_GROUP_ITEM_INPUT_VALUE_TYPE.SKILL_GROUP_ITEM_INPUT_VALUE_TYPE_NUMBER_ABSOLUTE_UNSPECIFIED;

  /**
   * The minimum value (in cents) in case the input value type is number-absolute or number-percentage
   *
   * @generated from field: uint64 number_min_value = 13;
   */
  numberMinValue = protoInt64.zero;

  /**
   * The maximum value (in cents) in case the input value type is number-absolute or number-percentage
   *
   * @generated from field: uint64 number_max_value = 14;
   */
  numberMaxValue = protoInt64.zero;

  /**
   * The possible values from which a user can choose in case the input type is text-dropdown
   *
   * @generated from field: repeated string text_values = 15;
   */
  textValues: string[] = [];

  /**
   * An optional description
   *
   * @generated from field: string description = 20;
   */
  description = "";

  constructor(data?: PartialMessage<SkillsGroupsServiceItemCreateRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.SkillsGroupsServiceItemCreateRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "user_comment", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 10, name: "skill_group_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 11, name: "skill_param_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 12, name: "input_value_type", kind: "enum", T: proto3.getEnumType(SKILL_GROUP_ITEM_INPUT_VALUE_TYPE) },
    { no: 13, name: "number_min_value", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 14, name: "number_max_value", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 15, name: "text_values", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 20, name: "description", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SkillsGroupsServiceItemCreateRequest {
    return new SkillsGroupsServiceItemCreateRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SkillsGroupsServiceItemCreateRequest {
    return new SkillsGroupsServiceItemCreateRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SkillsGroupsServiceItemCreateRequest {
    return new SkillsGroupsServiceItemCreateRequest().fromJsonString(jsonString, options);
  }

  static equals(a: SkillsGroupsServiceItemCreateRequest | PlainMessage<SkillsGroupsServiceItemCreateRequest> | undefined, b: SkillsGroupsServiceItemCreateRequest | PlainMessage<SkillsGroupsServiceItemCreateRequest> | undefined): boolean {
    return proto3.util.equals(SkillsGroupsServiceItemCreateRequest, a, b);
  }
}

/**
 *
 * Describes the parameters required to update a param in a skill group
 *
 * @generated from message Scailo.SkillsGroupsServiceItemUpdateRequest
 */
export class SkillsGroupsServiceItemUpdateRequest extends Message<SkillsGroupsServiceItemUpdateRequest> {
  /**
   * Stores any comment that the user might add during this operation
   *
   * @generated from field: string user_comment = 1;
   */
  userComment = "";

  /**
   * The ID of the record
   *
   * @generated from field: uint64 id = 2;
   */
  id = protoInt64.zero;

  /**
   * The input value type of the item
   *
   * @generated from field: Scailo.SKILL_GROUP_ITEM_INPUT_VALUE_TYPE input_value_type = 12;
   */
  inputValueType = SKILL_GROUP_ITEM_INPUT_VALUE_TYPE.SKILL_GROUP_ITEM_INPUT_VALUE_TYPE_NUMBER_ABSOLUTE_UNSPECIFIED;

  /**
   * The minimum value (in cents) in case the input value type is number-absolute or number-percentage
   *
   * @generated from field: uint64 number_min_value = 13;
   */
  numberMinValue = protoInt64.zero;

  /**
   * The maximum value (in cents) in case the input value type is number-absolute or number-percentage
   *
   * @generated from field: uint64 number_max_value = 14;
   */
  numberMaxValue = protoInt64.zero;

  /**
   * The possible values from which a user can choose in case the input type is text-dropdown
   *
   * @generated from field: repeated string text_values = 15;
   */
  textValues: string[] = [];

  /**
   * An optional description
   *
   * @generated from field: string description = 20;
   */
  description = "";

  constructor(data?: PartialMessage<SkillsGroupsServiceItemUpdateRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.SkillsGroupsServiceItemUpdateRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "user_comment", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 12, name: "input_value_type", kind: "enum", T: proto3.getEnumType(SKILL_GROUP_ITEM_INPUT_VALUE_TYPE) },
    { no: 13, name: "number_min_value", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 14, name: "number_max_value", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 15, name: "text_values", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 20, name: "description", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SkillsGroupsServiceItemUpdateRequest {
    return new SkillsGroupsServiceItemUpdateRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SkillsGroupsServiceItemUpdateRequest {
    return new SkillsGroupsServiceItemUpdateRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SkillsGroupsServiceItemUpdateRequest {
    return new SkillsGroupsServiceItemUpdateRequest().fromJsonString(jsonString, options);
  }

  static equals(a: SkillsGroupsServiceItemUpdateRequest | PlainMessage<SkillsGroupsServiceItemUpdateRequest> | undefined, b: SkillsGroupsServiceItemUpdateRequest | PlainMessage<SkillsGroupsServiceItemUpdateRequest> | undefined): boolean {
    return proto3.util.equals(SkillsGroupsServiceItemUpdateRequest, a, b);
  }
}

/**
 *
 * Describes the parameters that constitute a param associated to a skill group
 *
 * @generated from message Scailo.SkillGroupItem
 */
export class SkillGroupItem extends Message<SkillGroupItem> {
  /**
   * Stores a globally unique entity UUID. This will be set at the organization level
   *
   * @generated from field: string entity_uuid = 1;
   */
  entityUuid = "";

  /**
   * Stores the metadata of this skill group
   *
   * @generated from field: Scailo.EmployeeMetadata metadata = 2;
   */
  metadata?: EmployeeMetadata;

  /**
   * Stores the approval metadata
   *
   * @generated from field: Scailo.ApprovalMetadata approval_metadata = 3;
   */
  approvalMetadata?: ApprovalMetadata;

  /**
   * Denotes if this record requires approval (or has been approved)
   *
   * @generated from field: bool need_approval = 4;
   */
  needApproval = false;

  /**
   * Stores any comment that the user might have added during an operation
   *
   * @generated from field: string user_comment = 5;
   */
  userComment = "";

  /**
   * Stores the ID of the skill group
   *
   * @generated from field: uint64 skill_group_id = 10;
   */
  skillGroupId = protoInt64.zero;

  /**
   * The ID of the skill param that is a part of the skill group
   *
   * @generated from field: uint64 skill_param_id = 11;
   */
  skillParamId = protoInt64.zero;

  /**
   * The input value type of the item
   *
   * @generated from field: Scailo.SKILL_GROUP_ITEM_INPUT_VALUE_TYPE input_value_type = 12;
   */
  inputValueType = SKILL_GROUP_ITEM_INPUT_VALUE_TYPE.SKILL_GROUP_ITEM_INPUT_VALUE_TYPE_NUMBER_ABSOLUTE_UNSPECIFIED;

  /**
   * The minimum value (in cents) in case the input value type is number-absolute or number-percentage
   *
   * @generated from field: uint64 number_min_value = 13;
   */
  numberMinValue = protoInt64.zero;

  /**
   * The maximum value (in cents) in case the input value type is number-absolute or number-percentage
   *
   * @generated from field: uint64 number_max_value = 14;
   */
  numberMaxValue = protoInt64.zero;

  /**
   * The possible values from which a user can choose in case the input type is text-dropdown
   *
   * @generated from field: repeated string text_values = 15;
   */
  textValues: string[] = [];

  /**
   * An optional description
   *
   * @generated from field: string description = 20;
   */
  description = "";

  constructor(data?: PartialMessage<SkillGroupItem>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.SkillGroupItem";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "entity_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "metadata", kind: "message", T: EmployeeMetadata },
    { no: 3, name: "approval_metadata", kind: "message", T: ApprovalMetadata },
    { no: 4, name: "need_approval", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 5, name: "user_comment", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 10, name: "skill_group_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 11, name: "skill_param_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 12, name: "input_value_type", kind: "enum", T: proto3.getEnumType(SKILL_GROUP_ITEM_INPUT_VALUE_TYPE) },
    { no: 13, name: "number_min_value", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 14, name: "number_max_value", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 15, name: "text_values", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 20, name: "description", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SkillGroupItem {
    return new SkillGroupItem().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SkillGroupItem {
    return new SkillGroupItem().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SkillGroupItem {
    return new SkillGroupItem().fromJsonString(jsonString, options);
  }

  static equals(a: SkillGroupItem | PlainMessage<SkillGroupItem> | undefined, b: SkillGroupItem | PlainMessage<SkillGroupItem> | undefined): boolean {
    return proto3.util.equals(SkillGroupItem, a, b);
  }
}

/**
 *
 * Describes the message consisting of the list of skills groups
 *
 * @generated from message Scailo.SkillsGroupsList
 */
export class SkillsGroupsList extends Message<SkillsGroupsList> {
  /**
   * List of records
   *
   * @generated from field: repeated Scailo.SkillGroup list = 1;
   */
  list: SkillGroup[] = [];

  constructor(data?: PartialMessage<SkillsGroupsList>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.SkillsGroupsList";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "list", kind: "message", T: SkillGroup, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SkillsGroupsList {
    return new SkillsGroupsList().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SkillsGroupsList {
    return new SkillsGroupsList().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SkillsGroupsList {
    return new SkillsGroupsList().fromJsonString(jsonString, options);
  }

  static equals(a: SkillsGroupsList | PlainMessage<SkillsGroupsList> | undefined, b: SkillsGroupsList | PlainMessage<SkillsGroupsList> | undefined): boolean {
    return proto3.util.equals(SkillsGroupsList, a, b);
  }
}

/**
 *
 * Describes the message consisting of the list of skill group params
 *
 * @generated from message Scailo.SkillsGroupsItemsList
 */
export class SkillsGroupsItemsList extends Message<SkillsGroupsItemsList> {
  /**
   * List of records
   *
   * @generated from field: repeated Scailo.SkillGroupItem list = 1;
   */
  list: SkillGroupItem[] = [];

  constructor(data?: PartialMessage<SkillsGroupsItemsList>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.SkillsGroupsItemsList";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "list", kind: "message", T: SkillGroupItem, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SkillsGroupsItemsList {
    return new SkillsGroupsItemsList().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SkillsGroupsItemsList {
    return new SkillsGroupsItemsList().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SkillsGroupsItemsList {
    return new SkillsGroupsItemsList().fromJsonString(jsonString, options);
  }

  static equals(a: SkillsGroupsItemsList | PlainMessage<SkillsGroupsItemsList> | undefined, b: SkillsGroupsItemsList | PlainMessage<SkillsGroupsItemsList> | undefined): boolean {
    return proto3.util.equals(SkillsGroupsItemsList, a, b);
  }
}

/**
 *
 * Describes the parameters that are required to retrieve the history of the record
 *
 * @generated from message Scailo.SkillGroupItemHistoryRequest
 */
export class SkillGroupItemHistoryRequest extends Message<SkillGroupItemHistoryRequest> {
  /**
   * Stores the ID of the skill group
   *
   * @generated from field: uint64 skill_group_id = 10;
   */
  skillGroupId = protoInt64.zero;

  /**
   * The ID of the skill param that is a part of the skill group
   *
   * @generated from field: uint64 skill_param_id = 11;
   */
  skillParamId = protoInt64.zero;

  constructor(data?: PartialMessage<SkillGroupItemHistoryRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.SkillGroupItemHistoryRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 10, name: "skill_group_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 11, name: "skill_param_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SkillGroupItemHistoryRequest {
    return new SkillGroupItemHistoryRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SkillGroupItemHistoryRequest {
    return new SkillGroupItemHistoryRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SkillGroupItemHistoryRequest {
    return new SkillGroupItemHistoryRequest().fromJsonString(jsonString, options);
  }

  static equals(a: SkillGroupItemHistoryRequest | PlainMessage<SkillGroupItemHistoryRequest> | undefined, b: SkillGroupItemHistoryRequest | PlainMessage<SkillGroupItemHistoryRequest> | undefined): boolean {
    return proto3.util.equals(SkillGroupItemHistoryRequest, a, b);
  }
}

/**
 *
 * Describes a pagination request to retrieve records
 *
 * @generated from message Scailo.SkillsGroupsServicePaginationReq
 */
export class SkillsGroupsServicePaginationReq extends Message<SkillsGroupsServicePaginationReq> {
  /**
   * If true, then returns only active records. If false, then returns only inactive records
   *
   * @generated from field: Scailo.BOOL_FILTER is_active = 1;
   */
  isActive = BOOL_FILTER.BOOL_FILTER_ANY_UNSPECIFIED;

  /**
   * The number of records that need to be sent in the response
   *
   * @generated from field: int64 count = 2;
   */
  count = protoInt64.zero;

  /**
   * The number that need to be offset by before fetching the records
   *
   * @generated from field: uint64 offset = 3;
   */
  offset = protoInt64.zero;

  /**
   * The sort order that is to be used to fetch the pagination response
   *
   * @generated from field: Scailo.SORT_ORDER sort_order = 4;
   */
  sortOrder = SORT_ORDER.ASCENDING_UNSPECIFIED;

  /**
   * The sort key that is to be used to fetch the pagination response
   *
   * @generated from field: Scailo.SKILL_GROUP_SORT_KEY sort_key = 5;
   */
  sortKey = SKILL_GROUP_SORT_KEY.SKILL_GROUP_SORT_KEY_ID_UNSPECIFIED;

  /**
   * The status of this skill group
   *
   * @generated from field: Scailo.STANDARD_LIFECYCLE_STATUS status = 6;
   */
  status = STANDARD_LIFECYCLE_STATUS.ANY_UNSPECIFIED;

  constructor(data?: PartialMessage<SkillsGroupsServicePaginationReq>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.SkillsGroupsServicePaginationReq";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "is_active", kind: "enum", T: proto3.getEnumType(BOOL_FILTER) },
    { no: 2, name: "count", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "offset", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 4, name: "sort_order", kind: "enum", T: proto3.getEnumType(SORT_ORDER) },
    { no: 5, name: "sort_key", kind: "enum", T: proto3.getEnumType(SKILL_GROUP_SORT_KEY) },
    { no: 6, name: "status", kind: "enum", T: proto3.getEnumType(STANDARD_LIFECYCLE_STATUS) },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SkillsGroupsServicePaginationReq {
    return new SkillsGroupsServicePaginationReq().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SkillsGroupsServicePaginationReq {
    return new SkillsGroupsServicePaginationReq().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SkillsGroupsServicePaginationReq {
    return new SkillsGroupsServicePaginationReq().fromJsonString(jsonString, options);
  }

  static equals(a: SkillsGroupsServicePaginationReq | PlainMessage<SkillsGroupsServicePaginationReq> | undefined, b: SkillsGroupsServicePaginationReq | PlainMessage<SkillsGroupsServicePaginationReq> | undefined): boolean {
    return proto3.util.equals(SkillsGroupsServicePaginationReq, a, b);
  }
}

/**
 *
 * Describes the response to a pagination request
 *
 * @generated from message Scailo.SkillsGroupsServicePaginationResponse
 */
export class SkillsGroupsServicePaginationResponse extends Message<SkillsGroupsServicePaginationResponse> {
  /**
   * The number of records in this payload
   *
   * @generated from field: uint64 count = 1;
   */
  count = protoInt64.zero;

  /**
   * The number that has been offset before fetching the records. This is the same value that has been sent as part of the pagination request
   *
   * @generated from field: uint64 offset = 2;
   */
  offset = protoInt64.zero;

  /**
   * The total number of records that are available
   *
   * @generated from field: uint64 total = 3;
   */
  total = protoInt64.zero;

  /**
   * The list of records
   *
   * @generated from field: repeated Scailo.SkillGroup payload = 4;
   */
  payload: SkillGroup[] = [];

  constructor(data?: PartialMessage<SkillsGroupsServicePaginationResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.SkillsGroupsServicePaginationResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "count", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 2, name: "offset", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 3, name: "total", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 4, name: "payload", kind: "message", T: SkillGroup, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SkillsGroupsServicePaginationResponse {
    return new SkillsGroupsServicePaginationResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SkillsGroupsServicePaginationResponse {
    return new SkillsGroupsServicePaginationResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SkillsGroupsServicePaginationResponse {
    return new SkillsGroupsServicePaginationResponse().fromJsonString(jsonString, options);
  }

  static equals(a: SkillsGroupsServicePaginationResponse | PlainMessage<SkillsGroupsServicePaginationResponse> | undefined, b: SkillsGroupsServicePaginationResponse | PlainMessage<SkillsGroupsServicePaginationResponse> | undefined): boolean {
    return proto3.util.equals(SkillsGroupsServicePaginationResponse, a, b);
  }
}

/**
 *
 * Describes the base request payload of a filter search
 *
 * @generated from message Scailo.SkillsGroupsServiceFilterReq
 */
export class SkillsGroupsServiceFilterReq extends Message<SkillsGroupsServiceFilterReq> {
  /**
   * If true, then returns only active records. If false, then returns only inactive records
   *
   * @generated from field: Scailo.BOOL_FILTER is_active = 1;
   */
  isActive = BOOL_FILTER.BOOL_FILTER_ANY_UNSPECIFIED;

  /**
   * The number of records that need to be sent in the response. Returns all records if it is set to -1
   *
   * @generated from field: int64 count = 2;
   */
  count = protoInt64.zero;

  /**
   * The number that need to be offset by before fetching the records
   *
   * @generated from field: uint64 offset = 3;
   */
  offset = protoInt64.zero;

  /**
   * The sort order that is to be used to fetch the pagination response
   *
   * @generated from field: Scailo.SORT_ORDER sort_order = 4;
   */
  sortOrder = SORT_ORDER.ASCENDING_UNSPECIFIED;

  /**
   * The sort key that is to be used to fetch the pagination response
   *
   * @generated from field: Scailo.SKILL_GROUP_SORT_KEY sort_key = 5;
   */
  sortKey = SKILL_GROUP_SORT_KEY.SKILL_GROUP_SORT_KEY_ID_UNSPECIFIED;

  /**
   * The minimum timestamp that needs to be considered to filter by creation
   *
   * @generated from field: uint64 creation_timestamp_start = 101;
   */
  creationTimestampStart = protoInt64.zero;

  /**
   * The maximum timestamp that needs to be considered to filter by creation
   *
   * @generated from field: uint64 creation_timestamp_end = 102;
   */
  creationTimestampEnd = protoInt64.zero;

  /**
   * The minimum timestamp that needs to be considered to filter by modification
   *
   * @generated from field: uint64 modification_timestamp_start = 103;
   */
  modificationTimestampStart = protoInt64.zero;

  /**
   * The maximum timestamp that needs to be considered to filter by modification
   *
   * @generated from field: uint64 modification_timestamp_end = 104;
   */
  modificationTimestampEnd = protoInt64.zero;

  /**
   * The entity UUID that is to be used to filter records
   *
   * @generated from field: string entity_uuid = 8;
   */
  entityUuid = "";

  /**
   * The status of this skill group
   *
   * @generated from field: Scailo.STANDARD_LIFECYCLE_STATUS status = 10;
   */
  status = STANDARD_LIFECYCLE_STATUS.ANY_UNSPECIFIED;

  /**
   * The start range of approved timestamp
   *
   * @generated from field: uint64 approved_on_start = 11;
   */
  approvedOnStart = protoInt64.zero;

  /**
   * The end range of approved timestamp
   *
   * @generated from field: uint64 approved_on_end = 12;
   */
  approvedOnEnd = protoInt64.zero;

  /**
   * The ID of the approver
   *
   * @generated from field: uint64 approved_by_user_id = 13;
   */
  approvedByUserId = protoInt64.zero;

  /**
   * The role ID of the approver
   *
   * @generated from field: uint64 approver_role_id = 14;
   */
  approverRoleId = protoInt64.zero;

  /**
   * The start range of completed timestamp
   *
   * @generated from field: uint64 completed_on_start = 15;
   */
  completedOnStart = protoInt64.zero;

  /**
   * The end range of completed timestamp
   *
   * @generated from field: uint64 completed_on_end = 16;
   */
  completedOnEnd = protoInt64.zero;

  /**
   * The name of the skill group
   *
   * @generated from field: string name = 20;
   */
  name = "";

  /**
   * The skill group code
   *
   * @generated from field: string code = 21;
   */
  code = "";

  /**
   * The ID of the role that this skill group belongs to
   *
   * @generated from field: uint64 role_id = 22;
   */
  roleId = protoInt64.zero;

  constructor(data?: PartialMessage<SkillsGroupsServiceFilterReq>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.SkillsGroupsServiceFilterReq";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "is_active", kind: "enum", T: proto3.getEnumType(BOOL_FILTER) },
    { no: 2, name: "count", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "offset", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 4, name: "sort_order", kind: "enum", T: proto3.getEnumType(SORT_ORDER) },
    { no: 5, name: "sort_key", kind: "enum", T: proto3.getEnumType(SKILL_GROUP_SORT_KEY) },
    { no: 101, name: "creation_timestamp_start", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 102, name: "creation_timestamp_end", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 103, name: "modification_timestamp_start", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 104, name: "modification_timestamp_end", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 8, name: "entity_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 10, name: "status", kind: "enum", T: proto3.getEnumType(STANDARD_LIFECYCLE_STATUS) },
    { no: 11, name: "approved_on_start", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 12, name: "approved_on_end", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 13, name: "approved_by_user_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 14, name: "approver_role_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 15, name: "completed_on_start", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 16, name: "completed_on_end", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 20, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 21, name: "code", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 22, name: "role_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SkillsGroupsServiceFilterReq {
    return new SkillsGroupsServiceFilterReq().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SkillsGroupsServiceFilterReq {
    return new SkillsGroupsServiceFilterReq().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SkillsGroupsServiceFilterReq {
    return new SkillsGroupsServiceFilterReq().fromJsonString(jsonString, options);
  }

  static equals(a: SkillsGroupsServiceFilterReq | PlainMessage<SkillsGroupsServiceFilterReq> | undefined, b: SkillsGroupsServiceFilterReq | PlainMessage<SkillsGroupsServiceFilterReq> | undefined): boolean {
    return proto3.util.equals(SkillsGroupsServiceFilterReq, a, b);
  }
}

/**
 *
 * Describes the base request payload of a count search
 *
 * @generated from message Scailo.SkillsGroupsServiceCountReq
 */
export class SkillsGroupsServiceCountReq extends Message<SkillsGroupsServiceCountReq> {
  /**
   * If true, then returns only active records. If false, then returns only inactive records
   *
   * @generated from field: Scailo.BOOL_FILTER is_active = 1;
   */
  isActive = BOOL_FILTER.BOOL_FILTER_ANY_UNSPECIFIED;

  /**
   * The minimum timestamp that needs to be considered to filter by creation
   *
   * @generated from field: uint64 creation_timestamp_start = 101;
   */
  creationTimestampStart = protoInt64.zero;

  /**
   * The maximum timestamp that needs to be considered to filter by creation
   *
   * @generated from field: uint64 creation_timestamp_end = 102;
   */
  creationTimestampEnd = protoInt64.zero;

  /**
   * The minimum timestamp that needs to be considered to filter by modification
   *
   * @generated from field: uint64 modification_timestamp_start = 103;
   */
  modificationTimestampStart = protoInt64.zero;

  /**
   * The maximum timestamp that needs to be considered to filter by modification
   *
   * @generated from field: uint64 modification_timestamp_end = 104;
   */
  modificationTimestampEnd = protoInt64.zero;

  /**
   * The entity UUID that is to be used to filter records
   *
   * @generated from field: string entity_uuid = 8;
   */
  entityUuid = "";

  /**
   * The status of this skill group
   *
   * @generated from field: Scailo.STANDARD_LIFECYCLE_STATUS status = 10;
   */
  status = STANDARD_LIFECYCLE_STATUS.ANY_UNSPECIFIED;

  /**
   * The start range of approved timestamp
   *
   * @generated from field: uint64 approved_on_start = 11;
   */
  approvedOnStart = protoInt64.zero;

  /**
   * The end range of approved timestamp
   *
   * @generated from field: uint64 approved_on_end = 12;
   */
  approvedOnEnd = protoInt64.zero;

  /**
   * The ID of the approver
   *
   * @generated from field: uint64 approved_by_user_id = 13;
   */
  approvedByUserId = protoInt64.zero;

  /**
   * The role ID of the approver
   *
   * @generated from field: uint64 approver_role_id = 14;
   */
  approverRoleId = protoInt64.zero;

  /**
   * The start range of completed timestamp
   *
   * @generated from field: uint64 completed_on_start = 15;
   */
  completedOnStart = protoInt64.zero;

  /**
   * The end range of completed timestamp
   *
   * @generated from field: uint64 completed_on_end = 16;
   */
  completedOnEnd = protoInt64.zero;

  /**
   * The name of the skill group
   *
   * @generated from field: string name = 20;
   */
  name = "";

  /**
   * The skill group code
   *
   * @generated from field: string code = 21;
   */
  code = "";

  /**
   * The ID of the role that this skill group belongs to
   *
   * @generated from field: uint64 role_id = 22;
   */
  roleId = protoInt64.zero;

  constructor(data?: PartialMessage<SkillsGroupsServiceCountReq>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.SkillsGroupsServiceCountReq";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "is_active", kind: "enum", T: proto3.getEnumType(BOOL_FILTER) },
    { no: 101, name: "creation_timestamp_start", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 102, name: "creation_timestamp_end", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 103, name: "modification_timestamp_start", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 104, name: "modification_timestamp_end", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 8, name: "entity_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 10, name: "status", kind: "enum", T: proto3.getEnumType(STANDARD_LIFECYCLE_STATUS) },
    { no: 11, name: "approved_on_start", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 12, name: "approved_on_end", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 13, name: "approved_by_user_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 14, name: "approver_role_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 15, name: "completed_on_start", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 16, name: "completed_on_end", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 20, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 21, name: "code", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 22, name: "role_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SkillsGroupsServiceCountReq {
    return new SkillsGroupsServiceCountReq().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SkillsGroupsServiceCountReq {
    return new SkillsGroupsServiceCountReq().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SkillsGroupsServiceCountReq {
    return new SkillsGroupsServiceCountReq().fromJsonString(jsonString, options);
  }

  static equals(a: SkillsGroupsServiceCountReq | PlainMessage<SkillsGroupsServiceCountReq> | undefined, b: SkillsGroupsServiceCountReq | PlainMessage<SkillsGroupsServiceCountReq> | undefined): boolean {
    return proto3.util.equals(SkillsGroupsServiceCountReq, a, b);
  }
}

/**
 *
 * Describes the request payload for performing a generic search operation on records
 *
 * @generated from message Scailo.SkillsGroupsServiceSearchAllReq
 */
export class SkillsGroupsServiceSearchAllReq extends Message<SkillsGroupsServiceSearchAllReq> {
  /**
   * If true, then returns only active records. If false, then returns only inactive records
   *
   * @generated from field: Scailo.BOOL_FILTER is_active = 1;
   */
  isActive = BOOL_FILTER.BOOL_FILTER_ANY_UNSPECIFIED;

  /**
   * The number of records that need to be sent in the response. Returns all records if it is set to -1
   *
   * @generated from field: int64 count = 2;
   */
  count = protoInt64.zero;

  /**
   * The number that need to be offset by before fetching the records
   *
   * @generated from field: uint64 offset = 3;
   */
  offset = protoInt64.zero;

  /**
   * The sort order that is to be used to fetch the pagination response
   *
   * @generated from field: Scailo.SORT_ORDER sort_order = 4;
   */
  sortOrder = SORT_ORDER.ASCENDING_UNSPECIFIED;

  /**
   * The sort key that is to be used to fetch the pagination response
   *
   * @generated from field: Scailo.SKILL_GROUP_SORT_KEY sort_key = 5;
   */
  sortKey = SKILL_GROUP_SORT_KEY.SKILL_GROUP_SORT_KEY_ID_UNSPECIFIED;

  /**
   * The entity UUID that is to be used to filter records
   *
   * @generated from field: string entity_uuid = 6;
   */
  entityUuid = "";

  /**
   * Limit the search space to the given status
   *
   * @generated from field: Scailo.STANDARD_LIFECYCLE_STATUS status = 10;
   */
  status = STANDARD_LIFECYCLE_STATUS.ANY_UNSPECIFIED;

  /**
   * Describes the key with which the search operation needs to be performed
   *
   * @generated from field: string search_key = 11;
   */
  searchKey = "";

  constructor(data?: PartialMessage<SkillsGroupsServiceSearchAllReq>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.SkillsGroupsServiceSearchAllReq";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "is_active", kind: "enum", T: proto3.getEnumType(BOOL_FILTER) },
    { no: 2, name: "count", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "offset", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 4, name: "sort_order", kind: "enum", T: proto3.getEnumType(SORT_ORDER) },
    { no: 5, name: "sort_key", kind: "enum", T: proto3.getEnumType(SKILL_GROUP_SORT_KEY) },
    { no: 6, name: "entity_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 10, name: "status", kind: "enum", T: proto3.getEnumType(STANDARD_LIFECYCLE_STATUS) },
    { no: 11, name: "search_key", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SkillsGroupsServiceSearchAllReq {
    return new SkillsGroupsServiceSearchAllReq().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SkillsGroupsServiceSearchAllReq {
    return new SkillsGroupsServiceSearchAllReq().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SkillsGroupsServiceSearchAllReq {
    return new SkillsGroupsServiceSearchAllReq().fromJsonString(jsonString, options);
  }

  static equals(a: SkillsGroupsServiceSearchAllReq | PlainMessage<SkillsGroupsServiceSearchAllReq> | undefined, b: SkillsGroupsServiceSearchAllReq | PlainMessage<SkillsGroupsServiceSearchAllReq> | undefined): boolean {
    return proto3.util.equals(SkillsGroupsServiceSearchAllReq, a, b);
  }
}

