// @generated by protoc-gen-es v1.5.1 with parameter "target=ts"
// @generated from file forms_fields_data.scailo.proto (package Scailo, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3, protoInt64 } from "@bufbuild/protobuf";
import { EmployeeMetadata } from "./base.scailo_pb.js";
import { FormField } from "./forms_fields.scailo_pb.js";

/**
 *
 * Describes the data stored in an individual form field data row of each dynamic form
 *
 * @generated from message Scailo.FormFieldDatum
 */
export class FormFieldDatum extends Message<FormFieldDatum> {
  /**
   * Stores a globally unique entity UUID. This will be set at the organization level
   *
   * @generated from field: string entity_uuid = 1;
   */
  entityUuid = "";

  /**
   * Stores the metadata of this resource
   *
   * @generated from field: Scailo.EmployeeMetadata metadata = 2;
   */
  metadata?: EmployeeMetadata;

  /**
   * The ID of the form field
   *
   * @generated from field: uint64 form_field_id = 10;
   */
  formFieldId = protoInt64.zero;

  /**
   * The underlying form field (from the form_field_id)
   *
   * @generated from field: Scailo.FormField form_field = 20;
   */
  formField?: FormField;

  /**
   * The UUID that this field belongs to
   *
   * @generated from field: string ref_uuid = 21;
   */
  refUuid = "";

  /**
   * The value entered by the user
   *
   * @generated from field: string value = 22;
   */
  value = "";

  /**
   * The list of values that have been selected by the user (in case of a checkbox or a dropdown)
   *
   * @generated from field: repeated string selected_values = 23;
   */
  selectedValues: string[] = [];

  /**
   * Denotes if this field requires approval by a competent authority
   *
   * @generated from field: bool need_approval = 24;
   */
  needApproval = false;

  constructor(data?: PartialMessage<FormFieldDatum>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.FormFieldDatum";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "entity_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "metadata", kind: "message", T: EmployeeMetadata },
    { no: 10, name: "form_field_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 20, name: "form_field", kind: "message", T: FormField },
    { no: 21, name: "ref_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 22, name: "value", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 23, name: "selected_values", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 24, name: "need_approval", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): FormFieldDatum {
    return new FormFieldDatum().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): FormFieldDatum {
    return new FormFieldDatum().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): FormFieldDatum {
    return new FormFieldDatum().fromJsonString(jsonString, options);
  }

  static equals(a: FormFieldDatum | PlainMessage<FormFieldDatum> | undefined, b: FormFieldDatum | PlainMessage<FormFieldDatum> | undefined): boolean {
    return proto3.util.equals(FormFieldDatum, a, b);
  }
}

/**
 *
 * Describes the data required for creating a dynamic form field entry
 *
 * @generated from message Scailo.FormFieldDatumCreateRequest
 */
export class FormFieldDatumCreateRequest extends Message<FormFieldDatumCreateRequest> {
  /**
   * The ID of the corresponding form field
   *
   * @generated from field: uint64 form_field_id = 1;
   */
  formFieldId = protoInt64.zero;

  /**
   * The value to be stored (for textarea and input)
   *
   * @generated from field: string value = 2;
   */
  value = "";

  /**
   * The list of selected values (for radio, checkbox, and select)
   *
   * @generated from field: repeated string selected_values = 3;
   */
  selectedValues: string[] = [];

  constructor(data?: PartialMessage<FormFieldDatumCreateRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.FormFieldDatumCreateRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "form_field_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 2, name: "value", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "selected_values", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): FormFieldDatumCreateRequest {
    return new FormFieldDatumCreateRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): FormFieldDatumCreateRequest {
    return new FormFieldDatumCreateRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): FormFieldDatumCreateRequest {
    return new FormFieldDatumCreateRequest().fromJsonString(jsonString, options);
  }

  static equals(a: FormFieldDatumCreateRequest | PlainMessage<FormFieldDatumCreateRequest> | undefined, b: FormFieldDatumCreateRequest | PlainMessage<FormFieldDatumCreateRequest> | undefined): boolean {
    return proto3.util.equals(FormFieldDatumCreateRequest, a, b);
  }
}

/**
 *
 * Describes the message consisting of the list of records
 *
 * @generated from message Scailo.FormFieldDatumList
 */
export class FormFieldDatumList extends Message<FormFieldDatumList> {
  /**
   * List of records
   *
   * @generated from field: repeated Scailo.FormFieldDatum list = 1;
   */
  list: FormFieldDatum[] = [];

  constructor(data?: PartialMessage<FormFieldDatumList>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.FormFieldDatumList";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "list", kind: "message", T: FormFieldDatum, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): FormFieldDatumList {
    return new FormFieldDatumList().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): FormFieldDatumList {
    return new FormFieldDatumList().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): FormFieldDatumList {
    return new FormFieldDatumList().fromJsonString(jsonString, options);
  }

  static equals(a: FormFieldDatumList | PlainMessage<FormFieldDatumList> | undefined, b: FormFieldDatumList | PlainMessage<FormFieldDatumList> | undefined): boolean {
    return proto3.util.equals(FormFieldDatumList, a, b);
  }
}

/**
 *
 * Describes the data required to fetch history of the given form field and the specified resource
 *
 * @generated from message Scailo.FormFieldDatumHistoryRequest
 */
export class FormFieldDatumHistoryRequest extends Message<FormFieldDatumHistoryRequest> {
  /**
   * The ID of the corresponding form field
   *
   * @generated from field: uint64 form_field_id = 1;
   */
  formFieldId = protoInt64.zero;

  /**
   * The UUID of the corresponding resource
   *
   * @generated from field: string ref_uuid = 2;
   */
  refUuid = "";

  constructor(data?: PartialMessage<FormFieldDatumHistoryRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.FormFieldDatumHistoryRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "form_field_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 2, name: "ref_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): FormFieldDatumHistoryRequest {
    return new FormFieldDatumHistoryRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): FormFieldDatumHistoryRequest {
    return new FormFieldDatumHistoryRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): FormFieldDatumHistoryRequest {
    return new FormFieldDatumHistoryRequest().fromJsonString(jsonString, options);
  }

  static equals(a: FormFieldDatumHistoryRequest | PlainMessage<FormFieldDatumHistoryRequest> | undefined, b: FormFieldDatumHistoryRequest | PlainMessage<FormFieldDatumHistoryRequest> | undefined): boolean {
    return proto3.util.equals(FormFieldDatumHistoryRequest, a, b);
  }
}

