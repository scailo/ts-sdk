// @generated by protoc-gen-connect-es v0.12.0 with parameter "target=ts"
// @generated from file forms_sections.scailo.proto (package Scailo, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { FormSection, FormSectionPaginationResp, FormsSectionsList, FormsSectionsServiceCountReq, FormsSectionsServiceCreateRequest, FormsSectionsServiceFilterReq, FormsSectionsServicePaginationReq, FormsSectionsServiceSearchAllReq, FormsSectionsServiceUpdateRequest } from "./forms_sections.scailo_pb.js";
import { MethodKind } from "@bufbuild/protobuf";
import { ActiveStatus, CountResponse, Identifier, IdentifierResponse, IdentifierUUID, IdentifierWithUserComment } from "./base.scailo_pb.js";

/**
 *
 * Describes the methods applicable on each form section
 *
 * @generated from service Scailo.FormsSectionsService
 */
export const FormsSectionsService = {
  typeName: "Scailo.FormsSectionsService",
  methods: {
    /**
     * Create a form section
     *
     * @generated from rpc Scailo.FormsSectionsService.Create
     */
    create: {
      name: "Create",
      I: FormsSectionsServiceCreateRequest,
      O: FormSection,
      kind: MethodKind.Unary,
    },
    /**
     * Update a form section
     *
     * @generated from rpc Scailo.FormsSectionsService.Update
     */
    update: {
      name: "Update",
      I: FormsSectionsServiceUpdateRequest,
      O: FormSection,
      kind: MethodKind.Unary,
    },
    /**
     * Discard the form section
     *
     * @generated from rpc Scailo.FormsSectionsService.Discard
     */
    discard: {
      name: "Discard",
      I: IdentifierWithUserComment,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Restore the form section
     *
     * @generated from rpc Scailo.FormsSectionsService.Restore
     */
    restore: {
      name: "Restore",
      I: IdentifierWithUserComment,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * View by ID
     *
     * @generated from rpc Scailo.FormsSectionsService.ViewByID
     */
    viewByID: {
      name: "ViewByID",
      I: Identifier,
      O: FormSection,
      kind: MethodKind.Unary,
    },
    /**
     * View all forms sections
     *
     * @generated from rpc Scailo.FormsSectionsService.ViewAll
     */
    viewAll: {
      name: "ViewAll",
      I: ActiveStatus,
      O: FormsSectionsList,
      kind: MethodKind.Unary,
    },
    /**
     * View all forms sections with the given entity UUID
     *
     * @generated from rpc Scailo.FormsSectionsService.ViewAllForEntityUUID
     */
    viewAllForEntityUUID: {
      name: "ViewAllForEntityUUID",
      I: IdentifierUUID,
      O: FormsSectionsList,
      kind: MethodKind.Unary,
    },
    /**
     * View forms sections with pagination
     *
     * @generated from rpc Scailo.FormsSectionsService.ViewWithPagination
     */
    viewWithPagination: {
      name: "ViewWithPagination",
      I: FormsSectionsServicePaginationReq,
      O: FormSectionPaginationResp,
      kind: MethodKind.Unary,
    },
    /**
     * View all forms sections that match the given search key
     *
     * @generated from rpc Scailo.FormsSectionsService.SearchAll
     */
    searchAll: {
      name: "SearchAll",
      I: FormsSectionsServiceSearchAllReq,
      O: FormsSectionsList,
      kind: MethodKind.Unary,
    },
    /**
     * View all that match the given filter criteria
     *
     * @generated from rpc Scailo.FormsSectionsService.Filter
     */
    filter: {
      name: "Filter",
      I: FormsSectionsServiceFilterReq,
      O: FormsSectionsList,
      kind: MethodKind.Unary,
    },
    /**
     * Count all that match the given criteria
     *
     * @generated from rpc Scailo.FormsSectionsService.Count
     */
    count: {
      name: "Count",
      I: FormsSectionsServiceCountReq,
      O: CountResponse,
      kind: MethodKind.Unary,
    },
  }
} as const;

