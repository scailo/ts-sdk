// @generated by protoc-gen-es v1.5.1 with parameter "target=ts"
// @generated from file sales_orders.scailo.proto (package Scailo, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3, protoInt64 } from "@bufbuild/protobuf";
import { FormFieldDatum, FormFieldDatumCreateRequest } from "./forms_fields_data.scailo_pb.js";
import { ApprovalMetadata, BOOL_FILTER, EmployeeMetadata, LogbookLogConciseSLC, SORT_ORDER, STANDARD_LIFECYCLE_STATUS } from "./base.scailo_pb.js";

/**
 *
 * Describes the available sort keys
 *
 * @generated from enum Scailo.SALES_ORDER_SORT_KEY
 */
export enum SALES_ORDER_SORT_KEY {
  /**
   * Fetch ordered results by id
   *
   * @generated from enum value: SALES_ORDER_SORT_KEY_ID_UNSPECIFIED = 0;
   */
  SALES_ORDER_SORT_KEY_ID_UNSPECIFIED = 0,

  /**
   * Fetch ordered results by the creation timestamp
   *
   * @generated from enum value: SALES_ORDER_SORT_KEY_CREATED_AT = 1;
   */
  SALES_ORDER_SORT_KEY_CREATED_AT = 1,

  /**
   * Fetch ordered results by the modified timestamp
   *
   * @generated from enum value: SALES_ORDER_SORT_KEY_MODIFIED_AT = 2;
   */
  SALES_ORDER_SORT_KEY_MODIFIED_AT = 2,

  /**
   * Fetch ordered results by the approved on timestamp
   *
   * @generated from enum value: SALES_ORDER_SORT_KEY_APPROVED_ON = 3;
   */
  SALES_ORDER_SORT_KEY_APPROVED_ON = 3,

  /**
   * Fetch ordered results by the approved by field
   *
   * @generated from enum value: SALES_ORDER_SORT_KEY_APPROVED_BY = 4;
   */
  SALES_ORDER_SORT_KEY_APPROVED_BY = 4,

  /**
   * Fetch ordered results by the approver's role ID
   *
   * @generated from enum value: SALES_ORDER_SORT_KEY_APPROVER_ROLE_ID = 5;
   */
  SALES_ORDER_SORT_KEY_APPROVER_ROLE_ID = 5,

  /**
   * Fetch ordered results by the approver's completed on timestamp
   *
   * @generated from enum value: SALES_ORDER_SORT_KEY_COMPLETED_ON = 6;
   */
  SALES_ORDER_SORT_KEY_COMPLETED_ON = 6,

  /**
   * Fetch ordered results by the reference ID
   *
   * @generated from enum value: SALES_ORDER_SORT_KEY_REFERENCE_ID = 10;
   */
  SALES_ORDER_SORT_KEY_REFERENCE_ID = 10,

  /**
   * Fetch ordered results by the final ref number
   *
   * @generated from enum value: SALES_ORDER_SORT_KEY_FINAL_REF_NUMBER = 11;
   */
  SALES_ORDER_SORT_KEY_FINAL_REF_NUMBER = 11,

  /**
   * Fetch ordered results by the consignee client ID
   *
   * @generated from enum value: SALES_ORDER_SORT_KEY_CONSIGNEE_CLIENT_ID = 12;
   */
  SALES_ORDER_SORT_KEY_CONSIGNEE_CLIENT_ID = 12,

  /**
   * Fetch ordered results by the buyer client ID
   *
   * @generated from enum value: SALES_ORDER_SORT_KEY_BUYER_CLIENT_ID = 13;
   */
  SALES_ORDER_SORT_KEY_BUYER_CLIENT_ID = 13,

  /**
   * Fetch ordered results by the location ID
   *
   * @generated from enum value: SALES_ORDER_SORT_KEY_LOCATION_ID = 14;
   */
  SALES_ORDER_SORT_KEY_LOCATION_ID = 14,

  /**
   * Fetch ordered results by the currency ID
   *
   * @generated from enum value: SALES_ORDER_SORT_KEY_CURRENCY_ID = 15;
   */
  SALES_ORDER_SORT_KEY_CURRENCY_ID = 15,

  /**
   * Fetch ordered results by the project ID
   *
   * @generated from enum value: SALES_ORDER_SORT_KEY_PROJECT_ID = 16;
   */
  SALES_ORDER_SORT_KEY_PROJECT_ID = 16,

  /**
   * Fetch ordered results by the advance payment
   *
   * @generated from enum value: SALES_ORDER_SORT_KEY_PAYMENT_ADVANCE = 17;
   */
  SALES_ORDER_SORT_KEY_PAYMENT_ADVANCE = 17,

  /**
   * Fetch ordered results by the amendment count
   *
   * @generated from enum value: SALES_ORDER_SORT_KEY_AMENDMENT_COUNT = 18;
   */
  SALES_ORDER_SORT_KEY_AMENDMENT_COUNT = 18,

  /**
   * Fetch ordered results by the total value
   *
   * @generated from enum value: SALES_ORDER_SORT_KEY_TOTAL_VALUE = 30;
   */
  SALES_ORDER_SORT_KEY_TOTAL_VALUE = 30,
}
// Retrieve enum metadata with: proto3.getEnumType(SALES_ORDER_SORT_KEY)
proto3.util.setEnumType(SALES_ORDER_SORT_KEY, "Scailo.SALES_ORDER_SORT_KEY", [
  { no: 0, name: "SALES_ORDER_SORT_KEY_ID_UNSPECIFIED" },
  { no: 1, name: "SALES_ORDER_SORT_KEY_CREATED_AT" },
  { no: 2, name: "SALES_ORDER_SORT_KEY_MODIFIED_AT" },
  { no: 3, name: "SALES_ORDER_SORT_KEY_APPROVED_ON" },
  { no: 4, name: "SALES_ORDER_SORT_KEY_APPROVED_BY" },
  { no: 5, name: "SALES_ORDER_SORT_KEY_APPROVER_ROLE_ID" },
  { no: 6, name: "SALES_ORDER_SORT_KEY_COMPLETED_ON" },
  { no: 10, name: "SALES_ORDER_SORT_KEY_REFERENCE_ID" },
  { no: 11, name: "SALES_ORDER_SORT_KEY_FINAL_REF_NUMBER" },
  { no: 12, name: "SALES_ORDER_SORT_KEY_CONSIGNEE_CLIENT_ID" },
  { no: 13, name: "SALES_ORDER_SORT_KEY_BUYER_CLIENT_ID" },
  { no: 14, name: "SALES_ORDER_SORT_KEY_LOCATION_ID" },
  { no: 15, name: "SALES_ORDER_SORT_KEY_CURRENCY_ID" },
  { no: 16, name: "SALES_ORDER_SORT_KEY_PROJECT_ID" },
  { no: 17, name: "SALES_ORDER_SORT_KEY_PAYMENT_ADVANCE" },
  { no: 18, name: "SALES_ORDER_SORT_KEY_AMENDMENT_COUNT" },
  { no: 30, name: "SALES_ORDER_SORT_KEY_TOTAL_VALUE" },
]);

/**
 *
 * Describes the sales order reference context
 *
 * @generated from enum Scailo.SALES_ORDER_REFERENCE_CONTEXT
 */
export enum SALES_ORDER_REFERENCE_CONTEXT {
  /**
   * Denotes that context be disregarded. This is used only within search APIs
   *
   * @generated from enum value: SALES_ORDER_REFERENCE_CONTEXT_ANY_UNSPECIFIED = 0;
   */
  SALES_ORDER_REFERENCE_CONTEXT_ANY_UNSPECIFIED = 0,

  /**
   * Denotes billing context
   *
   * @generated from enum value: SALES_ORDER_REFERENCE_CONTEXT_BILLING = 1;
   */
  SALES_ORDER_REFERENCE_CONTEXT_BILLING = 1,
}
// Retrieve enum metadata with: proto3.getEnumType(SALES_ORDER_REFERENCE_CONTEXT)
proto3.util.setEnumType(SALES_ORDER_REFERENCE_CONTEXT, "Scailo.SALES_ORDER_REFERENCE_CONTEXT", [
  { no: 0, name: "SALES_ORDER_REFERENCE_CONTEXT_ANY_UNSPECIFIED" },
  { no: 1, name: "SALES_ORDER_REFERENCE_CONTEXT_BILLING" },
]);

/**
 *
 * Describes the possible options for ref_from field for a sales order reference
 *
 * @generated from enum Scailo.SALES_ORDER_REFERENCE_REF_FROM
 */
export enum SALES_ORDER_REFERENCE_REF_FROM {
  /**
   * Denotes that the ref from be disregarded. This is used only within search APIs
   *
   * @generated from enum value: SALES_ORDER_REFERENCE_REF_FROM_ANY_UNSPECIFIED = 0;
   */
  SALES_ORDER_REFERENCE_REF_FROM_ANY_UNSPECIFIED = 0,

  /**
   * Denotes inward job
   *
   * @generated from enum value: SALES_ORDER_REFERENCE_REF_FROM_INWARD_JOB = 1;
   */
  SALES_ORDER_REFERENCE_REF_FROM_INWARD_JOB = 1,

  /**
   * Denotes sales enquiry
   *
   * @generated from enum value: SALES_ORDER_REFERENCE_REF_FROM_SALES_ENQUIRY = 2;
   */
  SALES_ORDER_REFERENCE_REF_FROM_SALES_ENQUIRY = 2,

  /**
   * Denotes sales quotation
   *
   * @generated from enum value: SALES_ORDER_REFERENCE_REF_FROM_SALES_QUOTATION = 3;
   */
  SALES_ORDER_REFERENCE_REF_FROM_SALES_QUOTATION = 3,
}
// Retrieve enum metadata with: proto3.getEnumType(SALES_ORDER_REFERENCE_REF_FROM)
proto3.util.setEnumType(SALES_ORDER_REFERENCE_REF_FROM, "Scailo.SALES_ORDER_REFERENCE_REF_FROM", [
  { no: 0, name: "SALES_ORDER_REFERENCE_REF_FROM_ANY_UNSPECIFIED" },
  { no: 1, name: "SALES_ORDER_REFERENCE_REF_FROM_INWARD_JOB" },
  { no: 2, name: "SALES_ORDER_REFERENCE_REF_FROM_SALES_ENQUIRY" },
  { no: 3, name: "SALES_ORDER_REFERENCE_REF_FROM_SALES_QUOTATION" },
]);

/**
 *
 * Describes the available sort keys
 *
 * @generated from enum Scailo.SALES_ORDER_ITEM_SORT_KEY
 */
export enum SALES_ORDER_ITEM_SORT_KEY {
  /**
   * Fetch ordered results by id
   *
   * @generated from enum value: SALES_ORDER_ITEM_SORT_KEY_ID_UNSPECIFIED = 0;
   */
  SALES_ORDER_ITEM_SORT_KEY_ID_UNSPECIFIED = 0,

  /**
   * Fetch ordered results by the creation timestamp
   *
   * @generated from enum value: SALES_ORDER_ITEM_SORT_KEY_CREATED_AT = 1;
   */
  SALES_ORDER_ITEM_SORT_KEY_CREATED_AT = 1,

  /**
   * Fetch ordered results by the modified timestamp
   *
   * @generated from enum value: SALES_ORDER_ITEM_SORT_KEY_MODIFIED_AT = 2;
   */
  SALES_ORDER_ITEM_SORT_KEY_MODIFIED_AT = 2,

  /**
   * Fetch ordered results by the approved on timestamp
   *
   * @generated from enum value: SALES_ORDER_ITEM_SORT_KEY_APPROVED_ON = 3;
   */
  SALES_ORDER_ITEM_SORT_KEY_APPROVED_ON = 3,

  /**
   * Fetch ordered results by the approved by field
   *
   * @generated from enum value: SALES_ORDER_ITEM_SORT_KEY_APPROVED_BY = 4;
   */
  SALES_ORDER_ITEM_SORT_KEY_APPROVED_BY = 4,

  /**
   * Fetch ordered results by the approver's role ID
   *
   * @generated from enum value: SALES_ORDER_ITEM_SORT_KEY_APPROVER_ROLE_ID = 5;
   */
  SALES_ORDER_ITEM_SORT_KEY_APPROVER_ROLE_ID = 5,

  /**
   * Fetch ordered results by the family ID
   *
   * @generated from enum value: SALES_ORDER_ITEM_SORT_KEY_FAMILY_ID = 10;
   */
  SALES_ORDER_ITEM_SORT_KEY_FAMILY_ID = 10,

  /**
   * Fetch ordered results by the internal quantity
   *
   * @generated from enum value: SALES_ORDER_ITEM_SORT_KEY_INTERNAL_QUANTITY = 11;
   */
  SALES_ORDER_ITEM_SORT_KEY_INTERNAL_QUANTITY = 11,

  /**
   * Fetch ordered results by the client unit of material ID
   *
   * @generated from enum value: SALES_ORDER_ITEM_SORT_KEY_CLIENT_UOM_ID = 12;
   */
  SALES_ORDER_ITEM_SORT_KEY_CLIENT_UOM_ID = 12,

  /**
   * Fetch ordered results by the client quantity
   *
   * @generated from enum value: SALES_ORDER_ITEM_SORT_KEY_CLIENT_QUANTITY = 13;
   */
  SALES_ORDER_ITEM_SORT_KEY_CLIENT_QUANTITY = 13,

  /**
   * Fetch ordered results by the client family code
   *
   * @generated from enum value: SALES_ORDER_ITEM_SORT_KEY_CLIENT_FAMILY_CODE = 14;
   */
  SALES_ORDER_ITEM_SORT_KEY_CLIENT_FAMILY_CODE = 14,

  /**
   * Fetch ordered results by the unit price
   *
   * @generated from enum value: SALES_ORDER_ITEM_SORT_KEY_UNIT_PRICE = 15;
   */
  SALES_ORDER_ITEM_SORT_KEY_UNIT_PRICE = 15,

  /**
   * Fetch ordered results by the tax group ID
   *
   * @generated from enum value: SALES_ORDER_ITEM_SORT_KEY_TAX_GROUP_ID = 16;
   */
  SALES_ORDER_ITEM_SORT_KEY_TAX_GROUP_ID = 16,

  /**
   * Fetch ordered results by the discount
   *
   * @generated from enum value: SALES_ORDER_ITEM_SORT_KEY_DISCOUNT = 17;
   */
  SALES_ORDER_ITEM_SORT_KEY_DISCOUNT = 17,

  /**
   * Fetch ordered results by the delivery date
   *
   * @generated from enum value: SALES_ORDER_ITEM_SORT_KEY_DELIVERY_DATE = 18;
   */
  SALES_ORDER_ITEM_SORT_KEY_DELIVERY_DATE = 18,
}
// Retrieve enum metadata with: proto3.getEnumType(SALES_ORDER_ITEM_SORT_KEY)
proto3.util.setEnumType(SALES_ORDER_ITEM_SORT_KEY, "Scailo.SALES_ORDER_ITEM_SORT_KEY", [
  { no: 0, name: "SALES_ORDER_ITEM_SORT_KEY_ID_UNSPECIFIED" },
  { no: 1, name: "SALES_ORDER_ITEM_SORT_KEY_CREATED_AT" },
  { no: 2, name: "SALES_ORDER_ITEM_SORT_KEY_MODIFIED_AT" },
  { no: 3, name: "SALES_ORDER_ITEM_SORT_KEY_APPROVED_ON" },
  { no: 4, name: "SALES_ORDER_ITEM_SORT_KEY_APPROVED_BY" },
  { no: 5, name: "SALES_ORDER_ITEM_SORT_KEY_APPROVER_ROLE_ID" },
  { no: 10, name: "SALES_ORDER_ITEM_SORT_KEY_FAMILY_ID" },
  { no: 11, name: "SALES_ORDER_ITEM_SORT_KEY_INTERNAL_QUANTITY" },
  { no: 12, name: "SALES_ORDER_ITEM_SORT_KEY_CLIENT_UOM_ID" },
  { no: 13, name: "SALES_ORDER_ITEM_SORT_KEY_CLIENT_QUANTITY" },
  { no: 14, name: "SALES_ORDER_ITEM_SORT_KEY_CLIENT_FAMILY_CODE" },
  { no: 15, name: "SALES_ORDER_ITEM_SORT_KEY_UNIT_PRICE" },
  { no: 16, name: "SALES_ORDER_ITEM_SORT_KEY_TAX_GROUP_ID" },
  { no: 17, name: "SALES_ORDER_ITEM_SORT_KEY_DISCOUNT" },
  { no: 18, name: "SALES_ORDER_ITEM_SORT_KEY_DELIVERY_DATE" },
]);

/**
 *
 * Describes the applicable statuses of sales order items
 *
 * @generated from enum Scailo.SALES_ORDER_ITEM_STATUS
 */
export enum SALES_ORDER_ITEM_STATUS {
  /**
   * Denotes that status be disregarded. This is used only within search APIs
   *
   * @generated from enum value: SALES_ORDER_ITEM_STATUS_ANY_UNSPECIFIED = 0;
   */
  SALES_ORDER_ITEM_STATUS_ANY_UNSPECIFIED = 0,

  /**
   * Denotes that the sales order items must have been approved
   *
   * @generated from enum value: SALES_ORDER_ITEM_STATUS_APPROVED = 1;
   */
  SALES_ORDER_ITEM_STATUS_APPROVED = 1,

  /**
   * Denotes that the sales order items must be waiting for approval
   *
   * @generated from enum value: SALES_ORDER_ITEM_STATUS_UNAPPROVED = 2;
   */
  SALES_ORDER_ITEM_STATUS_UNAPPROVED = 2,
}
// Retrieve enum metadata with: proto3.getEnumType(SALES_ORDER_ITEM_STATUS)
proto3.util.setEnumType(SALES_ORDER_ITEM_STATUS, "Scailo.SALES_ORDER_ITEM_STATUS", [
  { no: 0, name: "SALES_ORDER_ITEM_STATUS_ANY_UNSPECIFIED" },
  { no: 1, name: "SALES_ORDER_ITEM_STATUS_APPROVED" },
  { no: 2, name: "SALES_ORDER_ITEM_STATUS_UNAPPROVED" },
]);

/**
 *
 * Describes the parameters necessary to create a record
 *
 * @generated from message Scailo.SalesOrdersServiceCreateRequest
 */
export class SalesOrdersServiceCreateRequest extends Message<SalesOrdersServiceCreateRequest> {
  /**
   * Stores a globally unique entity UUID. This will be set at the organization level
   *
   * @generated from field: string entity_uuid = 1;
   */
  entityUuid = "";

  /**
   * Stores any comment that the user might add during this operation
   *
   * @generated from field: string user_comment = 2;
   */
  userComment = "";

  /**
   * The associated vault folder ID
   *
   * @generated from field: uint64 vault_folder_id = 9;
   */
  vaultFolderId = protoInt64.zero;

  /**
   * The reference ID of the sales order
   *
   * @generated from field: string reference_id = 10;
   */
  referenceId = "";

  /**
   * The ID of the consignee (client)
   *
   * @generated from field: uint64 consignee_client_id = 12;
   */
  consigneeClientId = protoInt64.zero;

  /**
   * The ID of the buyer (client)
   *
   * @generated from field: uint64 buyer_client_id = 13;
   */
  buyerClientId = protoInt64.zero;

  /**
   * The ID of the location
   *
   * @generated from field: uint64 location_id = 14;
   */
  locationId = protoInt64.zero;

  /**
   * The associated ID of the currency
   *
   * @generated from field: uint64 currency_id = 15;
   */
  currencyId = protoInt64.zero;

  /**
   * The optional associated ID of the project
   *
   * @generated from field: uint64 project_id = 16;
   */
  projectId = protoInt64.zero;

  /**
   * Any miscellaneous cost
   *
   * @generated from field: uint64 miscellaneous_cost = 17;
   */
  miscellaneousCost = protoInt64.zero;

  /**
   * The optional discount amount
   *
   * @generated from field: uint64 overall_discount = 18;
   */
  overallDiscount = protoInt64.zero;

  /**
   * The applicable round off amount (optional, and can be positive or negative)
   *
   * @generated from field: int64 round_off = 19;
   */
  roundOff = protoInt64.zero;

  /**
   * The amount paid in advance
   *
   * @generated from field: uint64 payment_advance = 20;
   */
  paymentAdvance = protoInt64.zero;

  /**
   * The payment cycle in days
   *
   * @generated from field: uint64 payment_cycle_in_days = 21;
   */
  paymentCycleInDays = protoInt64.zero;

  /**
   * The list of dynamic forms
   *
   * @generated from field: repeated Scailo.FormFieldDatumCreateRequest form_data = 30;
   */
  formData: FormFieldDatumCreateRequest[] = [];

  constructor(data?: PartialMessage<SalesOrdersServiceCreateRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.SalesOrdersServiceCreateRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "entity_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "user_comment", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 9, name: "vault_folder_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 10, name: "reference_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 12, name: "consignee_client_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 13, name: "buyer_client_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 14, name: "location_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 15, name: "currency_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 16, name: "project_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 17, name: "miscellaneous_cost", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 18, name: "overall_discount", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 19, name: "round_off", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 20, name: "payment_advance", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 21, name: "payment_cycle_in_days", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 30, name: "form_data", kind: "message", T: FormFieldDatumCreateRequest, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SalesOrdersServiceCreateRequest {
    return new SalesOrdersServiceCreateRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SalesOrdersServiceCreateRequest {
    return new SalesOrdersServiceCreateRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SalesOrdersServiceCreateRequest {
    return new SalesOrdersServiceCreateRequest().fromJsonString(jsonString, options);
  }

  static equals(a: SalesOrdersServiceCreateRequest | PlainMessage<SalesOrdersServiceCreateRequest> | undefined, b: SalesOrdersServiceCreateRequest | PlainMessage<SalesOrdersServiceCreateRequest> | undefined): boolean {
    return proto3.util.equals(SalesOrdersServiceCreateRequest, a, b);
  }
}

/**
 *
 * Describes the parameters necessary to update a record
 *
 * @generated from message Scailo.SalesOrdersServiceUpdateRequest
 */
export class SalesOrdersServiceUpdateRequest extends Message<SalesOrdersServiceUpdateRequest> {
  /**
   * Stores any comment that the user might add during this operation
   *
   * @generated from field: string user_comment = 1;
   */
  userComment = "";

  /**
   * The ID of the record that needs to be updated
   *
   * @generated from field: uint64 id = 2;
   */
  id = protoInt64.zero;

  /**
   * Optional boolean value that stores if a notification needs to be sent to users about the update to the record. This is useful when a subsequent operation needs to be performed immediately (such as send to verification after updating the revision)
   *
   * @generated from field: bool notify_users = 3;
   */
  notifyUsers = false;

  /**
   * The associated vault folder ID
   *
   * @generated from field: uint64 vault_folder_id = 9;
   */
  vaultFolderId = protoInt64.zero;

  /**
   * The reference ID of the sales order
   *
   * @generated from field: string reference_id = 10;
   */
  referenceId = "";

  /**
   * The ID of the consignee (client)
   *
   * @generated from field: uint64 consignee_client_id = 12;
   */
  consigneeClientId = protoInt64.zero;

  /**
   * The ID of the buyer (client)
   *
   * @generated from field: uint64 buyer_client_id = 13;
   */
  buyerClientId = protoInt64.zero;

  /**
   * The associated ID of the currency
   *
   * @generated from field: uint64 currency_id = 15;
   */
  currencyId = protoInt64.zero;

  /**
   * The optional associated ID of the project
   *
   * @generated from field: uint64 project_id = 16;
   */
  projectId = protoInt64.zero;

  /**
   * Any miscellaneous cost
   *
   * @generated from field: uint64 miscellaneous_cost = 17;
   */
  miscellaneousCost = protoInt64.zero;

  /**
   * The optional discount amount
   *
   * @generated from field: uint64 overall_discount = 18;
   */
  overallDiscount = protoInt64.zero;

  /**
   * The applicable round off amount (optional, and can be positive or negative)
   *
   * @generated from field: int64 round_off = 19;
   */
  roundOff = protoInt64.zero;

  /**
   * The amount paid in advance
   *
   * @generated from field: uint64 payment_advance = 20;
   */
  paymentAdvance = protoInt64.zero;

  /**
   * The payment cycle in days
   *
   * @generated from field: uint64 payment_cycle_in_days = 21;
   */
  paymentCycleInDays = protoInt64.zero;

  /**
   * The list of dynamic forms
   *
   * @generated from field: repeated Scailo.FormFieldDatumCreateRequest form_data = 30;
   */
  formData: FormFieldDatumCreateRequest[] = [];

  constructor(data?: PartialMessage<SalesOrdersServiceUpdateRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.SalesOrdersServiceUpdateRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "user_comment", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 3, name: "notify_users", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 9, name: "vault_folder_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 10, name: "reference_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 12, name: "consignee_client_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 13, name: "buyer_client_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 15, name: "currency_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 16, name: "project_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 17, name: "miscellaneous_cost", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 18, name: "overall_discount", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 19, name: "round_off", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 20, name: "payment_advance", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 21, name: "payment_cycle_in_days", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 30, name: "form_data", kind: "message", T: FormFieldDatumCreateRequest, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SalesOrdersServiceUpdateRequest {
    return new SalesOrdersServiceUpdateRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SalesOrdersServiceUpdateRequest {
    return new SalesOrdersServiceUpdateRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SalesOrdersServiceUpdateRequest {
    return new SalesOrdersServiceUpdateRequest().fromJsonString(jsonString, options);
  }

  static equals(a: SalesOrdersServiceUpdateRequest | PlainMessage<SalesOrdersServiceUpdateRequest> | undefined, b: SalesOrdersServiceUpdateRequest | PlainMessage<SalesOrdersServiceUpdateRequest> | undefined): boolean {
    return proto3.util.equals(SalesOrdersServiceUpdateRequest, a, b);
  }
}

/**
 *
 * Describes the parameters necessary to perform an autofill request
 *
 * @generated from message Scailo.SalesOrdersServiceAutofillRequest
 */
export class SalesOrdersServiceAutofillRequest extends Message<SalesOrdersServiceAutofillRequest> {
  /**
   * Stores any comment that the user might add during this operation
   *
   * @generated from field: string user_comment = 1;
   */
  userComment = "";

  /**
   * The UUID of the record that needs to be updated
   *
   * @generated from field: string uuid = 2;
   */
  uuid = "";

  constructor(data?: PartialMessage<SalesOrdersServiceAutofillRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.SalesOrdersServiceAutofillRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "user_comment", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SalesOrdersServiceAutofillRequest {
    return new SalesOrdersServiceAutofillRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SalesOrdersServiceAutofillRequest {
    return new SalesOrdersServiceAutofillRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SalesOrdersServiceAutofillRequest {
    return new SalesOrdersServiceAutofillRequest().fromJsonString(jsonString, options);
  }

  static equals(a: SalesOrdersServiceAutofillRequest | PlainMessage<SalesOrdersServiceAutofillRequest> | undefined, b: SalesOrdersServiceAutofillRequest | PlainMessage<SalesOrdersServiceAutofillRequest> | undefined): boolean {
    return proto3.util.equals(SalesOrdersServiceAutofillRequest, a, b);
  }
}

/**
 *
 * Stores the UUID references of the record
 *
 * @generated from message Scailo.SalesOrderAncillaryParameters
 */
export class SalesOrderAncillaryParameters extends Message<SalesOrderAncillaryParameters> {
  /**
   * The UUID of the consignee client (the UUID of the associated consignee_client_id)
   *
   * @generated from field: string consignee_client_uuid = 212;
   */
  consigneeClientUuid = "";

  /**
   * The UUID of the buyer client (the UUID of the associated buyer_client_id)
   *
   * @generated from field: string buyer_client_uuid = 213;
   */
  buyerClientUuid = "";

  /**
   * The UUID of the location (the UUID of the associated location_uuid)
   *
   * @generated from field: string location_uuid = 214;
   */
  locationUuid = "";

  /**
   * The UUID of the currency (the UUID of the associated currency)
   *
   * @generated from field: string currency_uuid = 215;
   */
  currencyUuid = "";

  constructor(data?: PartialMessage<SalesOrderAncillaryParameters>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.SalesOrderAncillaryParameters";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 212, name: "consignee_client_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 213, name: "buyer_client_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 214, name: "location_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 215, name: "currency_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SalesOrderAncillaryParameters {
    return new SalesOrderAncillaryParameters().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SalesOrderAncillaryParameters {
    return new SalesOrderAncillaryParameters().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SalesOrderAncillaryParameters {
    return new SalesOrderAncillaryParameters().fromJsonString(jsonString, options);
  }

  static equals(a: SalesOrderAncillaryParameters | PlainMessage<SalesOrderAncillaryParameters> | undefined, b: SalesOrderAncillaryParameters | PlainMessage<SalesOrderAncillaryParameters> | undefined): boolean {
    return proto3.util.equals(SalesOrderAncillaryParameters, a, b);
  }
}

/**
 *
 * Describes the parameters that are part of a standard response
 *
 * @generated from message Scailo.SalesOrder
 */
export class SalesOrder extends Message<SalesOrder> {
  /**
   * Stores a globally unique entity UUID. This will be set at the organization level
   *
   * @generated from field: string entity_uuid = 1;
   */
  entityUuid = "";

  /**
   * Stores the metadata of this sales order
   *
   * @generated from field: Scailo.EmployeeMetadata metadata = 2;
   */
  metadata?: EmployeeMetadata;

  /**
   * Stores the approval metadata
   *
   * @generated from field: Scailo.ApprovalMetadata approval_metadata = 3;
   */
  approvalMetadata?: ApprovalMetadata;

  /**
   * The status of this sales order
   *
   * @generated from field: Scailo.STANDARD_LIFECYCLE_STATUS status = 4;
   */
  status = STANDARD_LIFECYCLE_STATUS.ANY_UNSPECIFIED;

  /**
   * Stores the logs of every operation performed on this sales order
   *
   * @generated from field: repeated Scailo.LogbookLogConciseSLC logs = 5;
   */
  logs: LogbookLogConciseSLC[] = [];

  /**
   * The timestamp of when this sales order was marked as completed
   *
   * @generated from field: uint64 completed_on = 6;
   */
  completedOn = protoInt64.zero;

  /**
   * The associated vault folder ID
   *
   * @generated from field: uint64 vault_folder_id = 9;
   */
  vaultFolderId = protoInt64.zero;

  /**
   * The reference ID of the sales order
   *
   * @generated from field: string reference_id = 10;
   */
  referenceId = "";

  /**
   * The unique reference number that has been automatically generated
   *
   * @generated from field: string final_ref_number = 11;
   */
  finalRefNumber = "";

  /**
   * The ID of the consignee (client)
   *
   * @generated from field: uint64 consignee_client_id = 12;
   */
  consigneeClientId = protoInt64.zero;

  /**
   * The ID of the buyer (client)
   *
   * @generated from field: uint64 buyer_client_id = 13;
   */
  buyerClientId = protoInt64.zero;

  /**
   * The ID of the location
   *
   * @generated from field: uint64 location_id = 14;
   */
  locationId = protoInt64.zero;

  /**
   * The associated ID of the currency
   *
   * @generated from field: uint64 currency_id = 15;
   */
  currencyId = protoInt64.zero;

  /**
   * The optional associated ID of the project
   *
   * @generated from field: uint64 project_id = 16;
   */
  projectId = protoInt64.zero;

  /**
   * Any miscellaneous cost
   *
   * @generated from field: uint64 miscellaneous_cost = 17;
   */
  miscellaneousCost = protoInt64.zero;

  /**
   * The optional discount amount
   *
   * @generated from field: uint64 overall_discount = 18;
   */
  overallDiscount = protoInt64.zero;

  /**
   * The applicable round off amount (optional, and can be positive or negative)
   *
   * @generated from field: int64 round_off = 19;
   */
  roundOff = protoInt64.zero;

  /**
   * The amount paid in advance
   *
   * @generated from field: uint64 payment_advance = 20;
   */
  paymentAdvance = protoInt64.zero;

  /**
   * The payment cycle in days
   *
   * @generated from field: uint64 payment_cycle_in_days = 21;
   */
  paymentCycleInDays = protoInt64.zero;

  /**
   * The number of times that the sales order has been amended
   *
   * @generated from field: uint64 amendment_count = 22;
   */
  amendmentCount = protoInt64.zero;

  /**
   * Stores the total value of the sales order (as a double, which requires no adjustments)
   *
   * @generated from field: double total_value = 30;
   */
  totalValue = 0;

  /**
   * The list of associated sales order items
   *
   * @generated from field: repeated Scailo.SalesOrderItem list = 40;
   */
  list: SalesOrderItem[] = [];

  /**
   * The list of dynamic forms
   *
   * @generated from field: repeated Scailo.FormFieldDatum form_data = 50;
   */
  formData: FormFieldDatum[] = [];

  constructor(data?: PartialMessage<SalesOrder>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.SalesOrder";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "entity_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "metadata", kind: "message", T: EmployeeMetadata },
    { no: 3, name: "approval_metadata", kind: "message", T: ApprovalMetadata },
    { no: 4, name: "status", kind: "enum", T: proto3.getEnumType(STANDARD_LIFECYCLE_STATUS) },
    { no: 5, name: "logs", kind: "message", T: LogbookLogConciseSLC, repeated: true },
    { no: 6, name: "completed_on", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 9, name: "vault_folder_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 10, name: "reference_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 11, name: "final_ref_number", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 12, name: "consignee_client_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 13, name: "buyer_client_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 14, name: "location_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 15, name: "currency_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 16, name: "project_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 17, name: "miscellaneous_cost", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 18, name: "overall_discount", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 19, name: "round_off", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 20, name: "payment_advance", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 21, name: "payment_cycle_in_days", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 22, name: "amendment_count", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 30, name: "total_value", kind: "scalar", T: 1 /* ScalarType.DOUBLE */ },
    { no: 40, name: "list", kind: "message", T: SalesOrderItem, repeated: true },
    { no: 50, name: "form_data", kind: "message", T: FormFieldDatum, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SalesOrder {
    return new SalesOrder().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SalesOrder {
    return new SalesOrder().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SalesOrder {
    return new SalesOrder().fromJsonString(jsonString, options);
  }

  static equals(a: SalesOrder | PlainMessage<SalesOrder> | undefined, b: SalesOrder | PlainMessage<SalesOrder> | undefined): boolean {
    return proto3.util.equals(SalesOrder, a, b);
  }
}

/**
 *
 * Describes the parameters required to add an item to a sales order
 *
 * @generated from message Scailo.SalesOrdersServiceItemCreateRequest
 */
export class SalesOrdersServiceItemCreateRequest extends Message<SalesOrdersServiceItemCreateRequest> {
  /**
   * Stores any comment that the user might add during this operation
   *
   * @generated from field: string user_comment = 1;
   */
  userComment = "";

  /**
   * Stores the sales order ID
   *
   * @generated from field: uint64 sales_order_id = 10;
   */
  salesOrderId = protoInt64.zero;

  /**
   * Stores the family ID
   *
   * @generated from field: uint64 family_id = 12;
   */
  familyId = protoInt64.zero;

  /**
   * The quantity (in cents) being ordered in internal unit of material
   *
   * @generated from field: uint64 internal_quantity = 13;
   */
  internalQuantity = protoInt64.zero;

  /**
   * Stores the ID of the client's unit of material
   *
   * @generated from field: uint64 client_uom_id = 14;
   */
  clientUomId = protoInt64.zero;

  /**
   * Stores the quantity (in cents) being ordered in client's unit of material
   *
   * @generated from field: uint64 client_quantity = 15;
   */
  clientQuantity = protoInt64.zero;

  /**
   * Stores the family code as given by the client
   *
   * @generated from field: string client_family_code = 16;
   */
  clientFamilyCode = "";

  /**
   * The unit price of the item
   *
   * @generated from field: uint64 unit_price = 17;
   */
  unitPrice = protoInt64.zero;

  /**
   * The ID of the associated tax group
   *
   * @generated from field: uint64 tax_group_id = 18;
   */
  taxGroupId = protoInt64.zero;

  /**
   * The applicable discount percentage (in cents)
   *
   * @generated from field: uint64 discount = 19;
   */
  discount = protoInt64.zero;

  /**
   * The delivery date of the item
   *
   * @generated from field: string delivery_date = 20;
   */
  deliveryDate = "";

  /**
   * Optional specifications
   *
   * @generated from field: string specifications = 21;
   */
  specifications = "";

  /**
   * Stores if the item can be invoiced
   *
   * @generated from field: bool is_invoiceable = 22;
   */
  isInvoiceable = false;

  constructor(data?: PartialMessage<SalesOrdersServiceItemCreateRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.SalesOrdersServiceItemCreateRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "user_comment", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 10, name: "sales_order_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 12, name: "family_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 13, name: "internal_quantity", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 14, name: "client_uom_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 15, name: "client_quantity", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 16, name: "client_family_code", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 17, name: "unit_price", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 18, name: "tax_group_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 19, name: "discount", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 20, name: "delivery_date", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 21, name: "specifications", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 22, name: "is_invoiceable", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SalesOrdersServiceItemCreateRequest {
    return new SalesOrdersServiceItemCreateRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SalesOrdersServiceItemCreateRequest {
    return new SalesOrdersServiceItemCreateRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SalesOrdersServiceItemCreateRequest {
    return new SalesOrdersServiceItemCreateRequest().fromJsonString(jsonString, options);
  }

  static equals(a: SalesOrdersServiceItemCreateRequest | PlainMessage<SalesOrdersServiceItemCreateRequest> | undefined, b: SalesOrdersServiceItemCreateRequest | PlainMessage<SalesOrdersServiceItemCreateRequest> | undefined): boolean {
    return proto3.util.equals(SalesOrdersServiceItemCreateRequest, a, b);
  }
}

/**
 *
 * Describes the parameters required to update an item in a sales order
 *
 * @generated from message Scailo.SalesOrdersServiceItemUpdateRequest
 */
export class SalesOrdersServiceItemUpdateRequest extends Message<SalesOrdersServiceItemUpdateRequest> {
  /**
   * Stores any comment that the user might add during this operation
   *
   * @generated from field: string user_comment = 1;
   */
  userComment = "";

  /**
   * The ID of the record
   *
   * @generated from field: uint64 id = 2;
   */
  id = protoInt64.zero;

  /**
   * The quantity (in cents) being ordered in internal unit of material
   *
   * @generated from field: uint64 internal_quantity = 13;
   */
  internalQuantity = protoInt64.zero;

  /**
   * Stores the ID of the client's unit of material
   *
   * @generated from field: uint64 client_uom_id = 14;
   */
  clientUomId = protoInt64.zero;

  /**
   * Stores the quantity (in cents) being ordered in client's unit of material
   *
   * @generated from field: uint64 client_quantity = 15;
   */
  clientQuantity = protoInt64.zero;

  /**
   * Stores the family code as given by the client
   *
   * @generated from field: string client_family_code = 16;
   */
  clientFamilyCode = "";

  /**
   * The unit price of the item
   *
   * @generated from field: uint64 unit_price = 17;
   */
  unitPrice = protoInt64.zero;

  /**
   * The ID of the associated tax group
   *
   * @generated from field: uint64 tax_group_id = 18;
   */
  taxGroupId = protoInt64.zero;

  /**
   * The applicable discount percentage (in cents)
   *
   * @generated from field: uint64 discount = 19;
   */
  discount = protoInt64.zero;

  /**
   * The delivery date of the item
   *
   * @generated from field: string delivery_date = 20;
   */
  deliveryDate = "";

  /**
   * Optional specifications
   *
   * @generated from field: string specifications = 21;
   */
  specifications = "";

  /**
   * Stores if the item can be invoiced
   *
   * @generated from field: bool is_invoiceable = 22;
   */
  isInvoiceable = false;

  constructor(data?: PartialMessage<SalesOrdersServiceItemUpdateRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.SalesOrdersServiceItemUpdateRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "user_comment", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 13, name: "internal_quantity", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 14, name: "client_uom_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 15, name: "client_quantity", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 16, name: "client_family_code", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 17, name: "unit_price", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 18, name: "tax_group_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 19, name: "discount", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 20, name: "delivery_date", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 21, name: "specifications", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 22, name: "is_invoiceable", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SalesOrdersServiceItemUpdateRequest {
    return new SalesOrdersServiceItemUpdateRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SalesOrdersServiceItemUpdateRequest {
    return new SalesOrdersServiceItemUpdateRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SalesOrdersServiceItemUpdateRequest {
    return new SalesOrdersServiceItemUpdateRequest().fromJsonString(jsonString, options);
  }

  static equals(a: SalesOrdersServiceItemUpdateRequest | PlainMessage<SalesOrdersServiceItemUpdateRequest> | undefined, b: SalesOrdersServiceItemUpdateRequest | PlainMessage<SalesOrdersServiceItemUpdateRequest> | undefined): boolean {
    return proto3.util.equals(SalesOrdersServiceItemUpdateRequest, a, b);
  }
}

/**
 *
 * Describes the parameters that constitute an item associated to a sales order
 *
 * @generated from message Scailo.SalesOrderItem
 */
export class SalesOrderItem extends Message<SalesOrderItem> {
  /**
   * Stores a globally unique entity UUID. This will be set at the organization level
   *
   * @generated from field: string entity_uuid = 1;
   */
  entityUuid = "";

  /**
   * Stores the metadata of this sales order
   *
   * @generated from field: Scailo.EmployeeMetadata metadata = 2;
   */
  metadata?: EmployeeMetadata;

  /**
   * Stores the approval metadata
   *
   * @generated from field: Scailo.ApprovalMetadata approval_metadata = 3;
   */
  approvalMetadata?: ApprovalMetadata;

  /**
   * Denotes if this record requires approval (or has been approved)
   *
   * @generated from field: bool need_approval = 4;
   */
  needApproval = false;

  /**
   * Stores any comment that the user might have added during an operation
   *
   * @generated from field: string user_comment = 5;
   */
  userComment = "";

  /**
   * Stores the sales order ID
   *
   * @generated from field: uint64 sales_order_id = 10;
   */
  salesOrderId = protoInt64.zero;

  /**
   * Stores the ID of the sales orderder item with which this item is bundled with
   *
   * @generated from field: uint64 bundled_with_id = 11;
   */
  bundledWithId = protoInt64.zero;

  /**
   * Stores the family ID
   *
   * @generated from field: uint64 family_id = 12;
   */
  familyId = protoInt64.zero;

  /**
   * The quantity (in cents) being ordered in internal unit of material
   *
   * @generated from field: uint64 internal_quantity = 13;
   */
  internalQuantity = protoInt64.zero;

  /**
   * Stores the ID of the client's unit of material
   *
   * @generated from field: uint64 client_uom_id = 14;
   */
  clientUomId = protoInt64.zero;

  /**
   * Stores the quantity (in cents) being ordered in client's unit of material
   *
   * @generated from field: uint64 client_quantity = 15;
   */
  clientQuantity = protoInt64.zero;

  /**
   * Stores the family code as given by the client
   *
   * @generated from field: string client_family_code = 16;
   */
  clientFamilyCode = "";

  /**
   * The unit price of the item
   *
   * @generated from field: uint64 unit_price = 17;
   */
  unitPrice = protoInt64.zero;

  /**
   * The ID of the associated tax group
   *
   * @generated from field: uint64 tax_group_id = 18;
   */
  taxGroupId = protoInt64.zero;

  /**
   * The applicable discount percentage (in cents)
   *
   * @generated from field: uint64 discount = 19;
   */
  discount = protoInt64.zero;

  /**
   * The delivery date of the item
   *
   * @generated from field: string delivery_date = 20;
   */
  deliveryDate = "";

  /**
   * Optional specifications
   *
   * @generated from field: string specifications = 21;
   */
  specifications = "";

  /**
   * Stores if the item can be invoiced
   *
   * @generated from field: bool is_invoiceable = 22;
   */
  isInvoiceable = false;

  /**
   * Stores the unit price after factoring in the discount
   *
   * @generated from field: uint64 discounted_unit_price = 30;
   */
  discountedUnitPrice = protoInt64.zero;

  constructor(data?: PartialMessage<SalesOrderItem>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.SalesOrderItem";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "entity_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "metadata", kind: "message", T: EmployeeMetadata },
    { no: 3, name: "approval_metadata", kind: "message", T: ApprovalMetadata },
    { no: 4, name: "need_approval", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 5, name: "user_comment", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 10, name: "sales_order_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 11, name: "bundled_with_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 12, name: "family_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 13, name: "internal_quantity", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 14, name: "client_uom_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 15, name: "client_quantity", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 16, name: "client_family_code", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 17, name: "unit_price", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 18, name: "tax_group_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 19, name: "discount", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 20, name: "delivery_date", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 21, name: "specifications", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 22, name: "is_invoiceable", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 30, name: "discounted_unit_price", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SalesOrderItem {
    return new SalesOrderItem().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SalesOrderItem {
    return new SalesOrderItem().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SalesOrderItem {
    return new SalesOrderItem().fromJsonString(jsonString, options);
  }

  static equals(a: SalesOrderItem | PlainMessage<SalesOrderItem> | undefined, b: SalesOrderItem | PlainMessage<SalesOrderItem> | undefined): boolean {
    return proto3.util.equals(SalesOrderItem, a, b);
  }
}

/**
 *
 * Describes the message consisting of the list of sales orders
 *
 * @generated from message Scailo.SalesOrdersList
 */
export class SalesOrdersList extends Message<SalesOrdersList> {
  /**
   * List of records
   *
   * @generated from field: repeated Scailo.SalesOrder list = 1;
   */
  list: SalesOrder[] = [];

  constructor(data?: PartialMessage<SalesOrdersList>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.SalesOrdersList";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "list", kind: "message", T: SalesOrder, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SalesOrdersList {
    return new SalesOrdersList().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SalesOrdersList {
    return new SalesOrdersList().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SalesOrdersList {
    return new SalesOrdersList().fromJsonString(jsonString, options);
  }

  static equals(a: SalesOrdersList | PlainMessage<SalesOrdersList> | undefined, b: SalesOrdersList | PlainMessage<SalesOrdersList> | undefined): boolean {
    return proto3.util.equals(SalesOrdersList, a, b);
  }
}

/**
 *
 * Describes the message consisting of the list of sales order items
 *
 * @generated from message Scailo.SalesOrderItemsList
 */
export class SalesOrderItemsList extends Message<SalesOrderItemsList> {
  /**
   * List of records
   *
   * @generated from field: repeated Scailo.SalesOrderItem list = 1;
   */
  list: SalesOrderItem[] = [];

  constructor(data?: PartialMessage<SalesOrderItemsList>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.SalesOrderItemsList";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "list", kind: "message", T: SalesOrderItem, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SalesOrderItemsList {
    return new SalesOrderItemsList().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SalesOrderItemsList {
    return new SalesOrderItemsList().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SalesOrderItemsList {
    return new SalesOrderItemsList().fromJsonString(jsonString, options);
  }

  static equals(a: SalesOrderItemsList | PlainMessage<SalesOrderItemsList> | undefined, b: SalesOrderItemsList | PlainMessage<SalesOrderItemsList> | undefined): boolean {
    return proto3.util.equals(SalesOrderItemsList, a, b);
  }
}

/**
 *
 * Describes the parameters that are required to retrieve the history of the record
 *
 * @generated from message Scailo.SalesOrderItemHistoryRequest
 */
export class SalesOrderItemHistoryRequest extends Message<SalesOrderItemHistoryRequest> {
  /**
   * Stores the sales order ID
   *
   * @generated from field: uint64 sales_order_id = 10;
   */
  salesOrderId = protoInt64.zero;

  /**
   * Stores the family ID
   *
   * @generated from field: uint64 family_id = 11;
   */
  familyId = protoInt64.zero;

  constructor(data?: PartialMessage<SalesOrderItemHistoryRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.SalesOrderItemHistoryRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 10, name: "sales_order_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 11, name: "family_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SalesOrderItemHistoryRequest {
    return new SalesOrderItemHistoryRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SalesOrderItemHistoryRequest {
    return new SalesOrderItemHistoryRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SalesOrderItemHistoryRequest {
    return new SalesOrderItemHistoryRequest().fromJsonString(jsonString, options);
  }

  static equals(a: SalesOrderItemHistoryRequest | PlainMessage<SalesOrderItemHistoryRequest> | undefined, b: SalesOrderItemHistoryRequest | PlainMessage<SalesOrderItemHistoryRequest> | undefined): boolean {
    return proto3.util.equals(SalesOrderItemHistoryRequest, a, b);
  }
}

/**
 *
 * Describes the parameters that are required to retrieve the info of a prospective sales order item
 *
 * @generated from message Scailo.SalesOrderItemProspectiveInfoRequest
 */
export class SalesOrderItemProspectiveInfoRequest extends Message<SalesOrderItemProspectiveInfoRequest> {
  /**
   * Stores the sales order ID
   *
   * @generated from field: uint64 sales_order_id = 10;
   */
  salesOrderId = protoInt64.zero;

  /**
   * Stores the family ID
   *
   * @generated from field: uint64 family_id = 11;
   */
  familyId = protoInt64.zero;

  /**
   * Stores the ID of the client's unit of material (if 0, the value is ignored while retrieving records)
   *
   * @generated from field: uint64 client_uom_id = 13;
   */
  clientUomId = protoInt64.zero;

  constructor(data?: PartialMessage<SalesOrderItemProspectiveInfoRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.SalesOrderItemProspectiveInfoRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 10, name: "sales_order_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 11, name: "family_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 13, name: "client_uom_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SalesOrderItemProspectiveInfoRequest {
    return new SalesOrderItemProspectiveInfoRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SalesOrderItemProspectiveInfoRequest {
    return new SalesOrderItemProspectiveInfoRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SalesOrderItemProspectiveInfoRequest {
    return new SalesOrderItemProspectiveInfoRequest().fromJsonString(jsonString, options);
  }

  static equals(a: SalesOrderItemProspectiveInfoRequest | PlainMessage<SalesOrderItemProspectiveInfoRequest> | undefined, b: SalesOrderItemProspectiveInfoRequest | PlainMessage<SalesOrderItemProspectiveInfoRequest> | undefined): boolean {
    return proto3.util.equals(SalesOrderItemProspectiveInfoRequest, a, b);
  }
}

/**
 *
 * Describes a pagination request to retrieve records
 *
 * @generated from message Scailo.SalesOrdersServicePaginationReq
 */
export class SalesOrdersServicePaginationReq extends Message<SalesOrdersServicePaginationReq> {
  /**
   * If true, then returns only active records. If false, then returns only inactive records
   *
   * @generated from field: Scailo.BOOL_FILTER is_active = 1;
   */
  isActive = BOOL_FILTER.BOOL_FILTER_ANY_UNSPECIFIED;

  /**
   * The number of records that need to be sent in the response
   *
   * @generated from field: int64 count = 2;
   */
  count = protoInt64.zero;

  /**
   * The number that need to be offset by before fetching the records
   *
   * @generated from field: uint64 offset = 3;
   */
  offset = protoInt64.zero;

  /**
   * The sort order that is to be used to fetch the pagination response
   *
   * @generated from field: Scailo.SORT_ORDER sort_order = 4;
   */
  sortOrder = SORT_ORDER.ASCENDING_UNSPECIFIED;

  /**
   * The sort key that is to be used to fetch the pagination response
   *
   * @generated from field: Scailo.SALES_ORDER_SORT_KEY sort_key = 5;
   */
  sortKey = SALES_ORDER_SORT_KEY.SALES_ORDER_SORT_KEY_ID_UNSPECIFIED;

  /**
   * The status of this sales order
   *
   * @generated from field: Scailo.STANDARD_LIFECYCLE_STATUS status = 6;
   */
  status = STANDARD_LIFECYCLE_STATUS.ANY_UNSPECIFIED;

  constructor(data?: PartialMessage<SalesOrdersServicePaginationReq>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.SalesOrdersServicePaginationReq";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "is_active", kind: "enum", T: proto3.getEnumType(BOOL_FILTER) },
    { no: 2, name: "count", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "offset", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 4, name: "sort_order", kind: "enum", T: proto3.getEnumType(SORT_ORDER) },
    { no: 5, name: "sort_key", kind: "enum", T: proto3.getEnumType(SALES_ORDER_SORT_KEY) },
    { no: 6, name: "status", kind: "enum", T: proto3.getEnumType(STANDARD_LIFECYCLE_STATUS) },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SalesOrdersServicePaginationReq {
    return new SalesOrdersServicePaginationReq().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SalesOrdersServicePaginationReq {
    return new SalesOrdersServicePaginationReq().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SalesOrdersServicePaginationReq {
    return new SalesOrdersServicePaginationReq().fromJsonString(jsonString, options);
  }

  static equals(a: SalesOrdersServicePaginationReq | PlainMessage<SalesOrdersServicePaginationReq> | undefined, b: SalesOrdersServicePaginationReq | PlainMessage<SalesOrdersServicePaginationReq> | undefined): boolean {
    return proto3.util.equals(SalesOrdersServicePaginationReq, a, b);
  }
}

/**
 *
 * Describes the response to a pagination request
 *
 * @generated from message Scailo.SalesOrdersServicePaginationResponse
 */
export class SalesOrdersServicePaginationResponse extends Message<SalesOrdersServicePaginationResponse> {
  /**
   * The number of records in this payload
   *
   * @generated from field: uint64 count = 1;
   */
  count = protoInt64.zero;

  /**
   * The number that has been offset before fetching the records. This is the same value that has been sent as part of the pagination request
   *
   * @generated from field: uint64 offset = 2;
   */
  offset = protoInt64.zero;

  /**
   * The total number of records that are available
   *
   * @generated from field: uint64 total = 3;
   */
  total = protoInt64.zero;

  /**
   * The list of records
   *
   * @generated from field: repeated Scailo.SalesOrder payload = 4;
   */
  payload: SalesOrder[] = [];

  constructor(data?: PartialMessage<SalesOrdersServicePaginationResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.SalesOrdersServicePaginationResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "count", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 2, name: "offset", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 3, name: "total", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 4, name: "payload", kind: "message", T: SalesOrder, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SalesOrdersServicePaginationResponse {
    return new SalesOrdersServicePaginationResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SalesOrdersServicePaginationResponse {
    return new SalesOrdersServicePaginationResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SalesOrdersServicePaginationResponse {
    return new SalesOrdersServicePaginationResponse().fromJsonString(jsonString, options);
  }

  static equals(a: SalesOrdersServicePaginationResponse | PlainMessage<SalesOrdersServicePaginationResponse> | undefined, b: SalesOrdersServicePaginationResponse | PlainMessage<SalesOrdersServicePaginationResponse> | undefined): boolean {
    return proto3.util.equals(SalesOrdersServicePaginationResponse, a, b);
  }
}

/**
 *
 * Describes the base request payload of a filter search
 *
 * @generated from message Scailo.SalesOrdersServiceFilterReq
 */
export class SalesOrdersServiceFilterReq extends Message<SalesOrdersServiceFilterReq> {
  /**
   * If true, then returns only active records. If false, then returns only inactive records
   *
   * @generated from field: Scailo.BOOL_FILTER is_active = 1;
   */
  isActive = BOOL_FILTER.BOOL_FILTER_ANY_UNSPECIFIED;

  /**
   * The number of records that need to be sent in the response. Returns all records if it is set to -1
   *
   * @generated from field: int64 count = 2;
   */
  count = protoInt64.zero;

  /**
   * The number that need to be offset by before fetching the records
   *
   * @generated from field: uint64 offset = 3;
   */
  offset = protoInt64.zero;

  /**
   * The sort order that is to be used to fetch the pagination response
   *
   * @generated from field: Scailo.SORT_ORDER sort_order = 4;
   */
  sortOrder = SORT_ORDER.ASCENDING_UNSPECIFIED;

  /**
   * The sort key that is to be used to fetch the pagination response
   *
   * @generated from field: Scailo.SALES_ORDER_SORT_KEY sort_key = 5;
   */
  sortKey = SALES_ORDER_SORT_KEY.SALES_ORDER_SORT_KEY_ID_UNSPECIFIED;

  /**
   * The minimum timestamp that needs to be considered to filter by creation
   *
   * @generated from field: uint64 creation_timestamp_start = 101;
   */
  creationTimestampStart = protoInt64.zero;

  /**
   * The maximum timestamp that needs to be considered to filter by creation
   *
   * @generated from field: uint64 creation_timestamp_end = 102;
   */
  creationTimestampEnd = protoInt64.zero;

  /**
   * The minimum timestamp that needs to be considered to filter by modification
   *
   * @generated from field: uint64 modification_timestamp_start = 103;
   */
  modificationTimestampStart = protoInt64.zero;

  /**
   * The maximum timestamp that needs to be considered to filter by modification
   *
   * @generated from field: uint64 modification_timestamp_end = 104;
   */
  modificationTimestampEnd = protoInt64.zero;

  /**
   * The entity UUID that is to be used to filter records
   *
   * @generated from field: string entity_uuid = 8;
   */
  entityUuid = "";

  /**
   * The status of this sales order
   *
   * @generated from field: Scailo.STANDARD_LIFECYCLE_STATUS status = 10;
   */
  status = STANDARD_LIFECYCLE_STATUS.ANY_UNSPECIFIED;

  /**
   * The start range of approved timestamp
   *
   * @generated from field: uint64 approved_on_start = 11;
   */
  approvedOnStart = protoInt64.zero;

  /**
   * The end range of approved timestamp
   *
   * @generated from field: uint64 approved_on_end = 12;
   */
  approvedOnEnd = protoInt64.zero;

  /**
   * The ID of the approver
   *
   * @generated from field: uint64 approved_by_user_id = 13;
   */
  approvedByUserId = protoInt64.zero;

  /**
   * The role ID of the approver
   *
   * @generated from field: uint64 approver_role_id = 14;
   */
  approverRoleId = protoInt64.zero;

  /**
   * The start range of completed timestamp
   *
   * @generated from field: uint64 completed_on_start = 15;
   */
  completedOnStart = protoInt64.zero;

  /**
   * The end range of completed timestamp
   *
   * @generated from field: uint64 completed_on_end = 16;
   */
  completedOnEnd = protoInt64.zero;

  /**
   * The reference ID of the sales order
   *
   * @generated from field: string reference_id = 20;
   */
  referenceId = "";

  /**
   * The unique reference number that has been automatically generated
   *
   * @generated from field: string final_ref_number = 21;
   */
  finalRefNumber = "";

  /**
   * The associated consignee client ID
   *
   * @generated from field: uint64 consignee_client_id = 22;
   */
  consigneeClientId = protoInt64.zero;

  /**
   * The associated buyer client ID
   *
   * @generated from field: uint64 buyer_client_id = 23;
   */
  buyerClientId = protoInt64.zero;

  /**
   * The ID of the associated location
   *
   * @generated from field: uint64 location_id = 24;
   */
  locationId = protoInt64.zero;

  /**
   * The ID of the associated currency
   *
   * @generated from field: uint64 currency_id = 25;
   */
  currencyId = protoInt64.zero;

  /**
   * The ID of the associated project
   *
   * @generated from field: uint64 project_id = 26;
   */
  projectId = protoInt64.zero;

  /**
   * The ID of the family
   *
   * @generated from field: uint64 family_id = 40;
   */
  familyId = protoInt64.zero;

  /**
   * The exact delivery date of the item in the sales order
   *
   * @generated from field: string delivery_date_exact = 41;
   */
  deliveryDateExact = "";

  /**
   * The start delivery date of the item in the sales order
   *
   * @generated from field: string delivery_date_start = 42;
   */
  deliveryDateStart = "";

  /**
   * The end delivery date of the item in the sales order
   *
   * @generated from field: string delivery_date_end = 43;
   */
  deliveryDateEnd = "";

  /**
   * Stores the minimum value of the sales order (ignored if 0)
   *
   * @generated from field: uint64 total_value_min = 50;
   */
  totalValueMin = protoInt64.zero;

  /**
   * Stores the maximum value of the sales order (ignored if 0)
   *
   * @generated from field: uint64 total_value_max = 51;
   */
  totalValueMax = protoInt64.zero;

  constructor(data?: PartialMessage<SalesOrdersServiceFilterReq>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.SalesOrdersServiceFilterReq";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "is_active", kind: "enum", T: proto3.getEnumType(BOOL_FILTER) },
    { no: 2, name: "count", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "offset", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 4, name: "sort_order", kind: "enum", T: proto3.getEnumType(SORT_ORDER) },
    { no: 5, name: "sort_key", kind: "enum", T: proto3.getEnumType(SALES_ORDER_SORT_KEY) },
    { no: 101, name: "creation_timestamp_start", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 102, name: "creation_timestamp_end", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 103, name: "modification_timestamp_start", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 104, name: "modification_timestamp_end", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 8, name: "entity_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 10, name: "status", kind: "enum", T: proto3.getEnumType(STANDARD_LIFECYCLE_STATUS) },
    { no: 11, name: "approved_on_start", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 12, name: "approved_on_end", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 13, name: "approved_by_user_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 14, name: "approver_role_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 15, name: "completed_on_start", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 16, name: "completed_on_end", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 20, name: "reference_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 21, name: "final_ref_number", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 22, name: "consignee_client_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 23, name: "buyer_client_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 24, name: "location_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 25, name: "currency_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 26, name: "project_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 40, name: "family_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 41, name: "delivery_date_exact", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 42, name: "delivery_date_start", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 43, name: "delivery_date_end", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 50, name: "total_value_min", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 51, name: "total_value_max", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SalesOrdersServiceFilterReq {
    return new SalesOrdersServiceFilterReq().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SalesOrdersServiceFilterReq {
    return new SalesOrdersServiceFilterReq().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SalesOrdersServiceFilterReq {
    return new SalesOrdersServiceFilterReq().fromJsonString(jsonString, options);
  }

  static equals(a: SalesOrdersServiceFilterReq | PlainMessage<SalesOrdersServiceFilterReq> | undefined, b: SalesOrdersServiceFilterReq | PlainMessage<SalesOrdersServiceFilterReq> | undefined): boolean {
    return proto3.util.equals(SalesOrdersServiceFilterReq, a, b);
  }
}

/**
 *
 * Describes the base request payload of a count search
 *
 * @generated from message Scailo.SalesOrdersServiceCountReq
 */
export class SalesOrdersServiceCountReq extends Message<SalesOrdersServiceCountReq> {
  /**
   * If true, then returns only active records. If false, then returns only inactive records
   *
   * @generated from field: Scailo.BOOL_FILTER is_active = 1;
   */
  isActive = BOOL_FILTER.BOOL_FILTER_ANY_UNSPECIFIED;

  /**
   * The minimum timestamp that needs to be considered to filter by creation
   *
   * @generated from field: uint64 creation_timestamp_start = 101;
   */
  creationTimestampStart = protoInt64.zero;

  /**
   * The maximum timestamp that needs to be considered to filter by creation
   *
   * @generated from field: uint64 creation_timestamp_end = 102;
   */
  creationTimestampEnd = protoInt64.zero;

  /**
   * The minimum timestamp that needs to be considered to filter by modification
   *
   * @generated from field: uint64 modification_timestamp_start = 103;
   */
  modificationTimestampStart = protoInt64.zero;

  /**
   * The maximum timestamp that needs to be considered to filter by modification
   *
   * @generated from field: uint64 modification_timestamp_end = 104;
   */
  modificationTimestampEnd = protoInt64.zero;

  /**
   * The entity UUID that is to be used to filter records
   *
   * @generated from field: string entity_uuid = 8;
   */
  entityUuid = "";

  /**
   * The status of this sales order
   *
   * @generated from field: Scailo.STANDARD_LIFECYCLE_STATUS status = 10;
   */
  status = STANDARD_LIFECYCLE_STATUS.ANY_UNSPECIFIED;

  /**
   * The start range of approved timestamp
   *
   * @generated from field: uint64 approved_on_start = 11;
   */
  approvedOnStart = protoInt64.zero;

  /**
   * The end range of approved timestamp
   *
   * @generated from field: uint64 approved_on_end = 12;
   */
  approvedOnEnd = protoInt64.zero;

  /**
   * The ID of the approver
   *
   * @generated from field: uint64 approved_by_user_id = 13;
   */
  approvedByUserId = protoInt64.zero;

  /**
   * The role ID of the approver
   *
   * @generated from field: uint64 approver_role_id = 14;
   */
  approverRoleId = protoInt64.zero;

  /**
   * The start range of completed timestamp
   *
   * @generated from field: uint64 completed_on_start = 15;
   */
  completedOnStart = protoInt64.zero;

  /**
   * The end range of completed timestamp
   *
   * @generated from field: uint64 completed_on_end = 16;
   */
  completedOnEnd = protoInt64.zero;

  /**
   * The reference ID of the sales order
   *
   * @generated from field: string reference_id = 20;
   */
  referenceId = "";

  /**
   * The unique reference number that has been automatically generated
   *
   * @generated from field: string final_ref_number = 21;
   */
  finalRefNumber = "";

  /**
   * The associated consignee client ID
   *
   * @generated from field: uint64 consignee_client_id = 22;
   */
  consigneeClientId = protoInt64.zero;

  /**
   * The associated buyer client ID
   *
   * @generated from field: uint64 buyer_client_id = 23;
   */
  buyerClientId = protoInt64.zero;

  /**
   * The ID of the associated location
   *
   * @generated from field: uint64 location_id = 24;
   */
  locationId = protoInt64.zero;

  /**
   * The ID of the associated currency
   *
   * @generated from field: uint64 currency_id = 25;
   */
  currencyId = protoInt64.zero;

  /**
   * The ID of the associated project
   *
   * @generated from field: uint64 project_id = 26;
   */
  projectId = protoInt64.zero;

  /**
   * The ID of the family
   *
   * @generated from field: uint64 family_id = 40;
   */
  familyId = protoInt64.zero;

  /**
   * The exact delivery date of the item in the sales order
   *
   * @generated from field: string delivery_date_exact = 41;
   */
  deliveryDateExact = "";

  /**
   * The start delivery date of the item in the sales order
   *
   * @generated from field: string delivery_date_start = 42;
   */
  deliveryDateStart = "";

  /**
   * The end delivery date of the item in the sales order
   *
   * @generated from field: string delivery_date_end = 43;
   */
  deliveryDateEnd = "";

  /**
   * Stores the minimum value of the sales order (ignored if 0)
   *
   * @generated from field: uint64 total_value_min = 50;
   */
  totalValueMin = protoInt64.zero;

  /**
   * Stores the maximum value of the sales order (ignored if 0)
   *
   * @generated from field: uint64 total_value_max = 51;
   */
  totalValueMax = protoInt64.zero;

  constructor(data?: PartialMessage<SalesOrdersServiceCountReq>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.SalesOrdersServiceCountReq";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "is_active", kind: "enum", T: proto3.getEnumType(BOOL_FILTER) },
    { no: 101, name: "creation_timestamp_start", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 102, name: "creation_timestamp_end", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 103, name: "modification_timestamp_start", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 104, name: "modification_timestamp_end", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 8, name: "entity_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 10, name: "status", kind: "enum", T: proto3.getEnumType(STANDARD_LIFECYCLE_STATUS) },
    { no: 11, name: "approved_on_start", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 12, name: "approved_on_end", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 13, name: "approved_by_user_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 14, name: "approver_role_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 15, name: "completed_on_start", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 16, name: "completed_on_end", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 20, name: "reference_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 21, name: "final_ref_number", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 22, name: "consignee_client_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 23, name: "buyer_client_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 24, name: "location_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 25, name: "currency_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 26, name: "project_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 40, name: "family_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 41, name: "delivery_date_exact", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 42, name: "delivery_date_start", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 43, name: "delivery_date_end", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 50, name: "total_value_min", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 51, name: "total_value_max", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SalesOrdersServiceCountReq {
    return new SalesOrdersServiceCountReq().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SalesOrdersServiceCountReq {
    return new SalesOrdersServiceCountReq().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SalesOrdersServiceCountReq {
    return new SalesOrdersServiceCountReq().fromJsonString(jsonString, options);
  }

  static equals(a: SalesOrdersServiceCountReq | PlainMessage<SalesOrdersServiceCountReq> | undefined, b: SalesOrdersServiceCountReq | PlainMessage<SalesOrdersServiceCountReq> | undefined): boolean {
    return proto3.util.equals(SalesOrdersServiceCountReq, a, b);
  }
}

/**
 *
 * Describes the request payload for performing a generic search operation on records
 *
 * @generated from message Scailo.SalesOrdersServiceSearchAllReq
 */
export class SalesOrdersServiceSearchAllReq extends Message<SalesOrdersServiceSearchAllReq> {
  /**
   * If true, then returns only active records. If false, then returns only inactive records
   *
   * @generated from field: Scailo.BOOL_FILTER is_active = 1;
   */
  isActive = BOOL_FILTER.BOOL_FILTER_ANY_UNSPECIFIED;

  /**
   * The number of records that need to be sent in the response. Returns all records if it is set to -1
   *
   * @generated from field: int64 count = 2;
   */
  count = protoInt64.zero;

  /**
   * The number that need to be offset by before fetching the records
   *
   * @generated from field: uint64 offset = 3;
   */
  offset = protoInt64.zero;

  /**
   * The sort order that is to be used to fetch the pagination response
   *
   * @generated from field: Scailo.SORT_ORDER sort_order = 4;
   */
  sortOrder = SORT_ORDER.ASCENDING_UNSPECIFIED;

  /**
   * The sort key that is to be used to fetch the pagination response
   *
   * @generated from field: Scailo.SALES_ORDER_SORT_KEY sort_key = 5;
   */
  sortKey = SALES_ORDER_SORT_KEY.SALES_ORDER_SORT_KEY_ID_UNSPECIFIED;

  /**
   * The entity UUID that is to be used to filter records
   *
   * @generated from field: string entity_uuid = 6;
   */
  entityUuid = "";

  /**
   * Limit the search space to the given status
   *
   * @generated from field: Scailo.STANDARD_LIFECYCLE_STATUS status = 10;
   */
  status = STANDARD_LIFECYCLE_STATUS.ANY_UNSPECIFIED;

  /**
   * Describes the key with which the search operation needs to be performed
   *
   * @generated from field: string search_key = 11;
   */
  searchKey = "";

  /**
   * The associated consignee client ID
   *
   * @generated from field: uint64 consignee_client_id = 22;
   */
  consigneeClientId = protoInt64.zero;

  /**
   * The associated buyer client ID
   *
   * @generated from field: uint64 buyer_client_id = 23;
   */
  buyerClientId = protoInt64.zero;

  /**
   * The ID of the associated location
   *
   * @generated from field: uint64 location_id = 24;
   */
  locationId = protoInt64.zero;

  /**
   * The ID of the associated currency
   *
   * @generated from field: uint64 currency_id = 25;
   */
  currencyId = protoInt64.zero;

  /**
   * The ID of the associated project
   *
   * @generated from field: uint64 project_id = 26;
   */
  projectId = protoInt64.zero;

  constructor(data?: PartialMessage<SalesOrdersServiceSearchAllReq>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.SalesOrdersServiceSearchAllReq";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "is_active", kind: "enum", T: proto3.getEnumType(BOOL_FILTER) },
    { no: 2, name: "count", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "offset", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 4, name: "sort_order", kind: "enum", T: proto3.getEnumType(SORT_ORDER) },
    { no: 5, name: "sort_key", kind: "enum", T: proto3.getEnumType(SALES_ORDER_SORT_KEY) },
    { no: 6, name: "entity_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 10, name: "status", kind: "enum", T: proto3.getEnumType(STANDARD_LIFECYCLE_STATUS) },
    { no: 11, name: "search_key", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 22, name: "consignee_client_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 23, name: "buyer_client_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 24, name: "location_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 25, name: "currency_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 26, name: "project_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SalesOrdersServiceSearchAllReq {
    return new SalesOrdersServiceSearchAllReq().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SalesOrdersServiceSearchAllReq {
    return new SalesOrdersServiceSearchAllReq().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SalesOrdersServiceSearchAllReq {
    return new SalesOrdersServiceSearchAllReq().fromJsonString(jsonString, options);
  }

  static equals(a: SalesOrdersServiceSearchAllReq | PlainMessage<SalesOrdersServiceSearchAllReq> | undefined, b: SalesOrdersServiceSearchAllReq | PlainMessage<SalesOrdersServiceSearchAllReq> | undefined): boolean {
    return proto3.util.equals(SalesOrdersServiceSearchAllReq, a, b);
  }
}

/**
 *
 * Describes the parameters necessary to create a sales order reference
 *
 * @generated from message Scailo.SalesOrdersServiceReferenceCreateRequest
 */
export class SalesOrdersServiceReferenceCreateRequest extends Message<SalesOrdersServiceReferenceCreateRequest> {
  /**
   * Stores any comment that the user might add during this operation
   *
   * @generated from field: string user_comment = 1;
   */
  userComment = "";

  /**
   * Stores the sales order ID
   *
   * @generated from field: uint64 sales_order_id = 10;
   */
  salesOrderId = protoInt64.zero;

  /**
   * The reference context, could be billing or buying
   *
   * @generated from field: Scailo.SALES_ORDER_REFERENCE_CONTEXT context = 11;
   */
  context = SALES_ORDER_REFERENCE_CONTEXT.SALES_ORDER_REFERENCE_CONTEXT_ANY_UNSPECIFIED;

  /**
   * The associated ref from
   *
   * @generated from field: Scailo.SALES_ORDER_REFERENCE_REF_FROM ref_from = 12;
   */
  refFrom = SALES_ORDER_REFERENCE_REF_FROM.SALES_ORDER_REFERENCE_REF_FROM_ANY_UNSPECIFIED;

  /**
   * The ID of the associated reference
   *
   * @generated from field: uint64 ref_id = 13;
   */
  refId = protoInt64.zero;

  constructor(data?: PartialMessage<SalesOrdersServiceReferenceCreateRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.SalesOrdersServiceReferenceCreateRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "user_comment", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 10, name: "sales_order_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 11, name: "context", kind: "enum", T: proto3.getEnumType(SALES_ORDER_REFERENCE_CONTEXT) },
    { no: 12, name: "ref_from", kind: "enum", T: proto3.getEnumType(SALES_ORDER_REFERENCE_REF_FROM) },
    { no: 13, name: "ref_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SalesOrdersServiceReferenceCreateRequest {
    return new SalesOrdersServiceReferenceCreateRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SalesOrdersServiceReferenceCreateRequest {
    return new SalesOrdersServiceReferenceCreateRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SalesOrdersServiceReferenceCreateRequest {
    return new SalesOrdersServiceReferenceCreateRequest().fromJsonString(jsonString, options);
  }

  static equals(a: SalesOrdersServiceReferenceCreateRequest | PlainMessage<SalesOrdersServiceReferenceCreateRequest> | undefined, b: SalesOrdersServiceReferenceCreateRequest | PlainMessage<SalesOrdersServiceReferenceCreateRequest> | undefined): boolean {
    return proto3.util.equals(SalesOrdersServiceReferenceCreateRequest, a, b);
  }
}

/**
 *
 * Describes the parameters that constitute a sales order reference
 *
 * @generated from message Scailo.SalesOrderReference
 */
export class SalesOrderReference extends Message<SalesOrderReference> {
  /**
   * Stores a globally unique entity UUID. This will be set at the organization level
   *
   * @generated from field: string entity_uuid = 1;
   */
  entityUuid = "";

  /**
   * Stores the metadata of this sales order
   *
   * @generated from field: Scailo.EmployeeMetadata metadata = 2;
   */
  metadata?: EmployeeMetadata;

  /**
   * Stores the approval metadata
   *
   * @generated from field: Scailo.ApprovalMetadata approval_metadata = 3;
   */
  approvalMetadata?: ApprovalMetadata;

  /**
   * Denotes if this record requires approval (or has been approved)
   *
   * @generated from field: bool need_approval = 4;
   */
  needApproval = false;

  /**
   * Stores any comment that the user might have added during an operation
   *
   * @generated from field: string user_comment = 5;
   */
  userComment = "";

  /**
   * Stores the sales order ID
   *
   * @generated from field: uint64 sales_order_id = 10;
   */
  salesOrderId = protoInt64.zero;

  /**
   * The reference context, could be billing or buying
   *
   * @generated from field: Scailo.SALES_ORDER_REFERENCE_CONTEXT context = 11;
   */
  context = SALES_ORDER_REFERENCE_CONTEXT.SALES_ORDER_REFERENCE_CONTEXT_ANY_UNSPECIFIED;

  /**
   * The associated ref from
   *
   * @generated from field: Scailo.SALES_ORDER_REFERENCE_REF_FROM ref_from = 12;
   */
  refFrom = SALES_ORDER_REFERENCE_REF_FROM.SALES_ORDER_REFERENCE_REF_FROM_ANY_UNSPECIFIED;

  /**
   * The ID of the associated reference
   *
   * @generated from field: uint64 ref_id = 13;
   */
  refId = protoInt64.zero;

  constructor(data?: PartialMessage<SalesOrderReference>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.SalesOrderReference";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "entity_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "metadata", kind: "message", T: EmployeeMetadata },
    { no: 3, name: "approval_metadata", kind: "message", T: ApprovalMetadata },
    { no: 4, name: "need_approval", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 5, name: "user_comment", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 10, name: "sales_order_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 11, name: "context", kind: "enum", T: proto3.getEnumType(SALES_ORDER_REFERENCE_CONTEXT) },
    { no: 12, name: "ref_from", kind: "enum", T: proto3.getEnumType(SALES_ORDER_REFERENCE_REF_FROM) },
    { no: 13, name: "ref_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SalesOrderReference {
    return new SalesOrderReference().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SalesOrderReference {
    return new SalesOrderReference().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SalesOrderReference {
    return new SalesOrderReference().fromJsonString(jsonString, options);
  }

  static equals(a: SalesOrderReference | PlainMessage<SalesOrderReference> | undefined, b: SalesOrderReference | PlainMessage<SalesOrderReference> | undefined): boolean {
    return proto3.util.equals(SalesOrderReference, a, b);
  }
}

/**
 *
 * Describes the message consisting of the list of sales order references
 *
 * @generated from message Scailo.SalesOrderReferencesList
 */
export class SalesOrderReferencesList extends Message<SalesOrderReferencesList> {
  /**
   * List of records
   *
   * @generated from field: repeated Scailo.SalesOrderReference list = 1;
   */
  list: SalesOrderReference[] = [];

  constructor(data?: PartialMessage<SalesOrderReferencesList>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.SalesOrderReferencesList";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "list", kind: "message", T: SalesOrderReference, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SalesOrderReferencesList {
    return new SalesOrderReferencesList().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SalesOrderReferencesList {
    return new SalesOrderReferencesList().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SalesOrderReferencesList {
    return new SalesOrderReferencesList().fromJsonString(jsonString, options);
  }

  static equals(a: SalesOrderReferencesList | PlainMessage<SalesOrderReferencesList> | undefined, b: SalesOrderReferencesList | PlainMessage<SalesOrderReferencesList> | undefined): boolean {
    return proto3.util.equals(SalesOrderReferencesList, a, b);
  }
}

/**
 *
 * Describes the request payload to retrieve approved or unapproved items.
 *
 * @generated from message Scailo.SalesOrderItemsSearchRequest
 */
export class SalesOrderItemsSearchRequest extends Message<SalesOrderItemsSearchRequest> {
  /**
   * If true, then returns only active records. If false, then returns only inactive records
   *
   * @generated from field: Scailo.BOOL_FILTER is_active = 1;
   */
  isActive = BOOL_FILTER.BOOL_FILTER_ANY_UNSPECIFIED;

  /**
   * The number of records that need to be sent in the response. Returns all records if it is set to -1
   *
   * @generated from field: int64 count = 2;
   */
  count = protoInt64.zero;

  /**
   * The number that need to be offset by before fetching the records
   *
   * @generated from field: uint64 offset = 3;
   */
  offset = protoInt64.zero;

  /**
   * The sort order that is to be used to fetch the pagination response
   *
   * @generated from field: Scailo.SORT_ORDER sort_order = 4;
   */
  sortOrder = SORT_ORDER.ASCENDING_UNSPECIFIED;

  /**
   * The sort key that is to be used to fetch the pagination response
   *
   * @generated from field: Scailo.SALES_ORDER_ITEM_SORT_KEY sort_key = 5;
   */
  sortKey = SALES_ORDER_ITEM_SORT_KEY.SALES_ORDER_ITEM_SORT_KEY_ID_UNSPECIFIED;

  /**
   * The entity UUID that is to be used to filter records
   *
   * @generated from field: string entity_uuid = 6;
   */
  entityUuid = "";

  /**
   * The status of the items
   *
   * @generated from field: Scailo.SALES_ORDER_ITEM_STATUS status = 7;
   */
  status = SALES_ORDER_ITEM_STATUS.SALES_ORDER_ITEM_STATUS_ANY_UNSPECIFIED;

  /**
   * The start range of approved timestamp
   *
   * @generated from field: uint64 approved_on_start = 10;
   */
  approvedOnStart = protoInt64.zero;

  /**
   * The end range of approved timestamp
   *
   * @generated from field: uint64 approved_on_end = 11;
   */
  approvedOnEnd = protoInt64.zero;

  /**
   * The ID of the approver
   *
   * @generated from field: uint64 approved_by_user_id = 12;
   */
  approvedByUserId = protoInt64.zero;

  /**
   * The role ID of the approver
   *
   * @generated from field: uint64 approver_role_id = 13;
   */
  approverRoleId = protoInt64.zero;

  /**
   * The ID of the sales order
   *
   * @generated from field: uint64 sales_order_id = 20;
   */
  salesOrderId = protoInt64.zero;

  /**
   * Stores the ID of the sales order item with which this item is bundled with
   *
   * @generated from field: uint64 bundled_with_id = 21;
   */
  bundledWithId = protoInt64.zero;

  /**
   * The ID of the family
   *
   * @generated from field: uint64 family_id = 22;
   */
  familyId = protoInt64.zero;

  /**
   * The ID of the client's unit of material
   *
   * @generated from field: uint64 client_uom_id = 23;
   */
  clientUomId = protoInt64.zero;

  /**
   * Stores the family code as given by the client
   *
   * @generated from field: string client_family_code = 26;
   */
  clientFamilyCode = "";

  /**
   * The ID of the tax group
   *
   * @generated from field: uint64 tax_group_id = 27;
   */
  taxGroupId = protoInt64.zero;

  /**
   * The exact delivery date of the item in the sales order
   *
   * @generated from field: string delivery_date_exact = 28;
   */
  deliveryDateExact = "";

  /**
   * The start delivery date of the item in the sales order
   *
   * @generated from field: string delivery_date_start = 29;
   */
  deliveryDateStart = "";

  /**
   * The end delivery date of the item in the sales order
   *
   * @generated from field: string delivery_date_end = 30;
   */
  deliveryDateEnd = "";

  /**
   * Describes the key with which the search operation needs to be performed
   *
   * @generated from field: string search_key = 40;
   */
  searchKey = "";

  constructor(data?: PartialMessage<SalesOrderItemsSearchRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.SalesOrderItemsSearchRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "is_active", kind: "enum", T: proto3.getEnumType(BOOL_FILTER) },
    { no: 2, name: "count", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "offset", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 4, name: "sort_order", kind: "enum", T: proto3.getEnumType(SORT_ORDER) },
    { no: 5, name: "sort_key", kind: "enum", T: proto3.getEnumType(SALES_ORDER_ITEM_SORT_KEY) },
    { no: 6, name: "entity_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 7, name: "status", kind: "enum", T: proto3.getEnumType(SALES_ORDER_ITEM_STATUS) },
    { no: 10, name: "approved_on_start", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 11, name: "approved_on_end", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 12, name: "approved_by_user_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 13, name: "approver_role_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 20, name: "sales_order_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 21, name: "bundled_with_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 22, name: "family_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 23, name: "client_uom_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 26, name: "client_family_code", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 27, name: "tax_group_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 28, name: "delivery_date_exact", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 29, name: "delivery_date_start", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 30, name: "delivery_date_end", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 40, name: "search_key", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SalesOrderItemsSearchRequest {
    return new SalesOrderItemsSearchRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SalesOrderItemsSearchRequest {
    return new SalesOrderItemsSearchRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SalesOrderItemsSearchRequest {
    return new SalesOrderItemsSearchRequest().fromJsonString(jsonString, options);
  }

  static equals(a: SalesOrderItemsSearchRequest | PlainMessage<SalesOrderItemsSearchRequest> | undefined, b: SalesOrderItemsSearchRequest | PlainMessage<SalesOrderItemsSearchRequest> | undefined): boolean {
    return proto3.util.equals(SalesOrderItemsSearchRequest, a, b);
  }
}

/**
 *
 * Describes the response to a pagination items request
 *
 * @generated from message Scailo.SalesOrdersServicePaginatedItemsResponse
 */
export class SalesOrdersServicePaginatedItemsResponse extends Message<SalesOrdersServicePaginatedItemsResponse> {
  /**
   * The number of records in this payload
   *
   * @generated from field: uint64 count = 1;
   */
  count = protoInt64.zero;

  /**
   * The number that has been offset before fetching the records. This is the same value that has been sent as part of the pagination request
   *
   * @generated from field: uint64 offset = 2;
   */
  offset = protoInt64.zero;

  /**
   * The total number of records that are available
   *
   * @generated from field: uint64 total = 3;
   */
  total = protoInt64.zero;

  /**
   * The list of records
   *
   * @generated from field: repeated Scailo.SalesOrderItem payload = 4;
   */
  payload: SalesOrderItem[] = [];

  constructor(data?: PartialMessage<SalesOrdersServicePaginatedItemsResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.SalesOrdersServicePaginatedItemsResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "count", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 2, name: "offset", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 3, name: "total", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 4, name: "payload", kind: "message", T: SalesOrderItem, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SalesOrdersServicePaginatedItemsResponse {
    return new SalesOrdersServicePaginatedItemsResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SalesOrdersServicePaginatedItemsResponse {
    return new SalesOrdersServicePaginatedItemsResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SalesOrdersServicePaginatedItemsResponse {
    return new SalesOrdersServicePaginatedItemsResponse().fromJsonString(jsonString, options);
  }

  static equals(a: SalesOrdersServicePaginatedItemsResponse | PlainMessage<SalesOrdersServicePaginatedItemsResponse> | undefined, b: SalesOrdersServicePaginatedItemsResponse | PlainMessage<SalesOrdersServicePaginatedItemsResponse> | undefined): boolean {
    return proto3.util.equals(SalesOrdersServicePaginatedItemsResponse, a, b);
  }
}

/**
 *
 * Describes the parameters necessary to create a sales order contact
 *
 * @generated from message Scailo.SalesOrdersServiceContactCreateRequest
 */
export class SalesOrdersServiceContactCreateRequest extends Message<SalesOrdersServiceContactCreateRequest> {
  /**
   * Stores any comment that the user might add during this operation
   *
   * @generated from field: string user_comment = 1;
   */
  userComment = "";

  /**
   * Stores the sales order ID
   *
   * @generated from field: uint64 sales_order_id = 10;
   */
  salesOrderId = protoInt64.zero;

  /**
   * Stores the associate ID
   *
   * @generated from field: uint64 associate_id = 11;
   */
  associateId = protoInt64.zero;

  constructor(data?: PartialMessage<SalesOrdersServiceContactCreateRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.SalesOrdersServiceContactCreateRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "user_comment", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 10, name: "sales_order_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 11, name: "associate_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SalesOrdersServiceContactCreateRequest {
    return new SalesOrdersServiceContactCreateRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SalesOrdersServiceContactCreateRequest {
    return new SalesOrdersServiceContactCreateRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SalesOrdersServiceContactCreateRequest {
    return new SalesOrdersServiceContactCreateRequest().fromJsonString(jsonString, options);
  }

  static equals(a: SalesOrdersServiceContactCreateRequest | PlainMessage<SalesOrdersServiceContactCreateRequest> | undefined, b: SalesOrdersServiceContactCreateRequest | PlainMessage<SalesOrdersServiceContactCreateRequest> | undefined): boolean {
    return proto3.util.equals(SalesOrdersServiceContactCreateRequest, a, b);
  }
}

/**
 *
 * Describes the parameters that constitute a sales order contact
 *
 * @generated from message Scailo.SalesOrderContact
 */
export class SalesOrderContact extends Message<SalesOrderContact> {
  /**
   * Stores a globally unique entity UUID. This will be set at the organization level
   *
   * @generated from field: string entity_uuid = 1;
   */
  entityUuid = "";

  /**
   * Stores the metadata of this sales order
   *
   * @generated from field: Scailo.EmployeeMetadata metadata = 2;
   */
  metadata?: EmployeeMetadata;

  /**
   * Stores the approval metadata
   *
   * @generated from field: Scailo.ApprovalMetadata approval_metadata = 3;
   */
  approvalMetadata?: ApprovalMetadata;

  /**
   * Denotes if this record requires approval (or has been approved)
   *
   * @generated from field: bool need_approval = 4;
   */
  needApproval = false;

  /**
   * Stores any comment that the user might have added during an operation
   *
   * @generated from field: string user_comment = 5;
   */
  userComment = "";

  /**
   * Stores the sales order ID
   *
   * @generated from field: uint64 sales_order_id = 10;
   */
  salesOrderId = protoInt64.zero;

  /**
   * Stores the associate ID
   *
   * @generated from field: uint64 associate_id = 11;
   */
  associateId = protoInt64.zero;

  /**
   * Stores the UUID of the associate
   *
   * @generated from field: string associate_uuid = 211;
   */
  associateUuid = "";

  constructor(data?: PartialMessage<SalesOrderContact>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.SalesOrderContact";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "entity_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "metadata", kind: "message", T: EmployeeMetadata },
    { no: 3, name: "approval_metadata", kind: "message", T: ApprovalMetadata },
    { no: 4, name: "need_approval", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 5, name: "user_comment", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 10, name: "sales_order_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 11, name: "associate_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 211, name: "associate_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SalesOrderContact {
    return new SalesOrderContact().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SalesOrderContact {
    return new SalesOrderContact().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SalesOrderContact {
    return new SalesOrderContact().fromJsonString(jsonString, options);
  }

  static equals(a: SalesOrderContact | PlainMessage<SalesOrderContact> | undefined, b: SalesOrderContact | PlainMessage<SalesOrderContact> | undefined): boolean {
    return proto3.util.equals(SalesOrderContact, a, b);
  }
}

/**
 *
 * Describes the message consisting of the list of sales order contacts
 *
 * @generated from message Scailo.SalesOrderContactsList
 */
export class SalesOrderContactsList extends Message<SalesOrderContactsList> {
  /**
   * List of records
   *
   * @generated from field: repeated Scailo.SalesOrderContact list = 1;
   */
  list: SalesOrderContact[] = [];

  constructor(data?: PartialMessage<SalesOrderContactsList>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.SalesOrderContactsList";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "list", kind: "message", T: SalesOrderContact, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SalesOrderContactsList {
    return new SalesOrderContactsList().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SalesOrderContactsList {
    return new SalesOrderContactsList().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SalesOrderContactsList {
    return new SalesOrderContactsList().fromJsonString(jsonString, options);
  }

  static equals(a: SalesOrderContactsList | PlainMessage<SalesOrderContactsList> | undefined, b: SalesOrderContactsList | PlainMessage<SalesOrderContactsList> | undefined): boolean {
    return proto3.util.equals(SalesOrderContactsList, a, b);
  }
}

/**
 *
 * Describes the parameters that are part of a sales order's inventory statistics payload
 *
 * @generated from message Scailo.SalesOrderInventoryStatistics
 */
export class SalesOrderInventoryStatistics extends Message<SalesOrderInventoryStatistics> {
  /**
   * Stores the cumulative quantity of the ordered inventory
   *
   * @generated from field: uint64 ordered = 1;
   */
  ordered = protoInt64.zero;

  /**
   * Stores the cumulative quantity of the dispatched inventory
   *
   * @generated from field: uint64 dispatched = 2;
   */
  dispatched = protoInt64.zero;

  /**
   * Stores the cumulative quantity of the returned inventory
   *
   * @generated from field: uint64 returned = 3;
   */
  returned = protoInt64.zero;

  constructor(data?: PartialMessage<SalesOrderInventoryStatistics>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.SalesOrderInventoryStatistics";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "ordered", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 2, name: "dispatched", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 3, name: "returned", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SalesOrderInventoryStatistics {
    return new SalesOrderInventoryStatistics().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SalesOrderInventoryStatistics {
    return new SalesOrderInventoryStatistics().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SalesOrderInventoryStatistics {
    return new SalesOrderInventoryStatistics().fromJsonString(jsonString, options);
  }

  static equals(a: SalesOrderInventoryStatistics | PlainMessage<SalesOrderInventoryStatistics> | undefined, b: SalesOrderInventoryStatistics | PlainMessage<SalesOrderInventoryStatistics> | undefined): boolean {
    return proto3.util.equals(SalesOrderInventoryStatistics, a, b);
  }
}

/**
 *
 * Describes the parameters that are part of a sales order's billing statistics payload
 *
 * @generated from message Scailo.SalesOrderBillingStatistics
 */
export class SalesOrderBillingStatistics extends Message<SalesOrderBillingStatistics> {
  /**
   * Stores the cumulative quantity of the ordered inventory
   *
   * @generated from field: uint64 ordered = 1;
   */
  ordered = protoInt64.zero;

  /**
   * Stores the cumulative quantity of the invoiced inventory
   *
   * @generated from field: uint64 invoiced = 2;
   */
  invoiced = protoInt64.zero;

  /**
   * Stores the cumulative quantity of the credited inventory
   *
   * @generated from field: uint64 credited = 3;
   */
  credited = protoInt64.zero;

  constructor(data?: PartialMessage<SalesOrderBillingStatistics>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.SalesOrderBillingStatistics";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "ordered", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 2, name: "invoiced", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 3, name: "credited", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SalesOrderBillingStatistics {
    return new SalesOrderBillingStatistics().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SalesOrderBillingStatistics {
    return new SalesOrderBillingStatistics().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SalesOrderBillingStatistics {
    return new SalesOrderBillingStatistics().fromJsonString(jsonString, options);
  }

  static equals(a: SalesOrderBillingStatistics | PlainMessage<SalesOrderBillingStatistics> | undefined, b: SalesOrderBillingStatistics | PlainMessage<SalesOrderBillingStatistics> | undefined): boolean {
    return proto3.util.equals(SalesOrderBillingStatistics, a, b);
  }
}

/**
 *
 * Describes the parameters that are part of a sales order's inventory match
 *
 * @generated from message Scailo.SalesOrderInventoryMatch
 */
export class SalesOrderInventoryMatch extends Message<SalesOrderInventoryMatch> {
  /**
   * Stores the family ID
   *
   * @generated from field: uint64 family_id = 1;
   */
  familyId = protoInt64.zero;

  /**
   * Stores the ordered quantity
   *
   * @generated from field: uint64 ordered = 10;
   */
  ordered = protoInt64.zero;

  /**
   * Stores the dispatched quantity
   *
   * @generated from field: uint64 dispatched = 11;
   */
  dispatched = protoInt64.zero;

  /**
   * Stores the invoiced quantity
   *
   * @generated from field: uint64 invoiced = 12;
   */
  invoiced = protoInt64.zero;

  /**
   * Stores the returned quantity
   *
   * @generated from field: uint64 returned = 13;
   */
  returned = protoInt64.zero;

  /**
   * Stores the credited quantity
   *
   * @generated from field: uint64 credited = 14;
   */
  credited = protoInt64.zero;

  constructor(data?: PartialMessage<SalesOrderInventoryMatch>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.SalesOrderInventoryMatch";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "family_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 10, name: "ordered", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 11, name: "dispatched", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 12, name: "invoiced", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 13, name: "returned", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 14, name: "credited", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SalesOrderInventoryMatch {
    return new SalesOrderInventoryMatch().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SalesOrderInventoryMatch {
    return new SalesOrderInventoryMatch().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SalesOrderInventoryMatch {
    return new SalesOrderInventoryMatch().fromJsonString(jsonString, options);
  }

  static equals(a: SalesOrderInventoryMatch | PlainMessage<SalesOrderInventoryMatch> | undefined, b: SalesOrderInventoryMatch | PlainMessage<SalesOrderInventoryMatch> | undefined): boolean {
    return proto3.util.equals(SalesOrderInventoryMatch, a, b);
  }
}

/**
 *
 * Describes the list of inventory match families
 *
 * @generated from message Scailo.SalesOrderInventoryMatchList
 */
export class SalesOrderInventoryMatchList extends Message<SalesOrderInventoryMatchList> {
  /**
   * List of records
   *
   * @generated from field: repeated Scailo.SalesOrderInventoryMatch list = 1;
   */
  list: SalesOrderInventoryMatch[] = [];

  constructor(data?: PartialMessage<SalesOrderInventoryMatchList>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.SalesOrderInventoryMatchList";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "list", kind: "message", T: SalesOrderInventoryMatch, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SalesOrderInventoryMatchList {
    return new SalesOrderInventoryMatchList().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SalesOrderInventoryMatchList {
    return new SalesOrderInventoryMatchList().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SalesOrderInventoryMatchList {
    return new SalesOrderInventoryMatchList().fromJsonString(jsonString, options);
  }

  static equals(a: SalesOrderInventoryMatchList | PlainMessage<SalesOrderInventoryMatchList> | undefined, b: SalesOrderInventoryMatchList | PlainMessage<SalesOrderInventoryMatchList> | undefined): boolean {
    return proto3.util.equals(SalesOrderInventoryMatchList, a, b);
  }
}

