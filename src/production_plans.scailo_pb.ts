// @generated by protoc-gen-es v1.5.1 with parameter "target=ts"
// @generated from file production_plans.scailo.proto (package Scailo, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3, protoInt64 } from "@bufbuild/protobuf";
import { FormFieldDatum, FormFieldDatumCreateRequest } from "./forms_fields_data.scailo_pb.js";
import { ApprovalMetadata, BOOL_FILTER, EmployeeMetadata, LogbookLogConciseSLC, SORT_ORDER, STANDARD_LIFECYCLE_STATUS } from "./base.scailo_pb.js";
import { FAMILY_TYPE } from "./families.scailo_pb.js";

/**
 *
 * Describes the available sort keys
 *
 * @generated from enum Scailo.PRODUCTION_PLAN_SORT_KEY
 */
export enum PRODUCTION_PLAN_SORT_KEY {
  /**
   * Fetch ordered results by id
   *
   * @generated from enum value: PRODUCTION_PLAN_SORT_KEY_ID_UNSPECIFIED = 0;
   */
  PRODUCTION_PLAN_SORT_KEY_ID_UNSPECIFIED = 0,

  /**
   * Fetch ordered results by the creation timestamp
   *
   * @generated from enum value: PRODUCTION_PLAN_SORT_KEY_CREATED_AT = 1;
   */
  PRODUCTION_PLAN_SORT_KEY_CREATED_AT = 1,

  /**
   * Fetch ordered results by the modified timestamp
   *
   * @generated from enum value: PRODUCTION_PLAN_SORT_KEY_MODIFIED_AT = 2;
   */
  PRODUCTION_PLAN_SORT_KEY_MODIFIED_AT = 2,

  /**
   * Fetch ordered results by the approved on timestamp
   *
   * @generated from enum value: PRODUCTION_PLAN_SORT_KEY_APPROVED_ON = 3;
   */
  PRODUCTION_PLAN_SORT_KEY_APPROVED_ON = 3,

  /**
   * Fetch ordered results by the approved by field
   *
   * @generated from enum value: PRODUCTION_PLAN_SORT_KEY_APPROVED_BY = 4;
   */
  PRODUCTION_PLAN_SORT_KEY_APPROVED_BY = 4,

  /**
   * Fetch ordered results by the approver's role ID
   *
   * @generated from enum value: PRODUCTION_PLAN_SORT_KEY_APPROVER_ROLE_ID = 5;
   */
  PRODUCTION_PLAN_SORT_KEY_APPROVER_ROLE_ID = 5,

  /**
   * Fetch ordered results by the approver's completed on timestamp
   *
   * @generated from enum value: PRODUCTION_PLAN_SORT_KEY_COMPLETED_ON = 6;
   */
  PRODUCTION_PLAN_SORT_KEY_COMPLETED_ON = 6,

  /**
   * Fetch ordered results by the reference ID
   *
   * @generated from enum value: PRODUCTION_PLAN_SORT_KEY_REFERENCE_ID = 10;
   */
  PRODUCTION_PLAN_SORT_KEY_REFERENCE_ID = 10,

  /**
   * Fetch ordered results by the final ref number
   *
   * @generated from enum value: PRODUCTION_PLAN_SORT_KEY_FINAL_REF_NUMBER = 11;
   */
  PRODUCTION_PLAN_SORT_KEY_FINAL_REF_NUMBER = 11,

  /**
   * Fetch ordered results by the location ID
   *
   * @generated from enum value: PRODUCTION_PLAN_SORT_KEY_LOCATION_ID = 12;
   */
  PRODUCTION_PLAN_SORT_KEY_LOCATION_ID = 12,

  /**
   * Fetch ordered results by the start time
   *
   * @generated from enum value: PRODUCTION_PLAN_SORT_KEY_STARTS_AT = 13;
   */
  PRODUCTION_PLAN_SORT_KEY_STARTS_AT = 13,

  /**
   * Fetch ordered results by the end time
   *
   * @generated from enum value: PRODUCTION_PLAN_SORT_KEY_ENDS_AT = 14;
   */
  PRODUCTION_PLAN_SORT_KEY_ENDS_AT = 14,
}
// Retrieve enum metadata with: proto3.getEnumType(PRODUCTION_PLAN_SORT_KEY)
proto3.util.setEnumType(PRODUCTION_PLAN_SORT_KEY, "Scailo.PRODUCTION_PLAN_SORT_KEY", [
  { no: 0, name: "PRODUCTION_PLAN_SORT_KEY_ID_UNSPECIFIED" },
  { no: 1, name: "PRODUCTION_PLAN_SORT_KEY_CREATED_AT" },
  { no: 2, name: "PRODUCTION_PLAN_SORT_KEY_MODIFIED_AT" },
  { no: 3, name: "PRODUCTION_PLAN_SORT_KEY_APPROVED_ON" },
  { no: 4, name: "PRODUCTION_PLAN_SORT_KEY_APPROVED_BY" },
  { no: 5, name: "PRODUCTION_PLAN_SORT_KEY_APPROVER_ROLE_ID" },
  { no: 6, name: "PRODUCTION_PLAN_SORT_KEY_COMPLETED_ON" },
  { no: 10, name: "PRODUCTION_PLAN_SORT_KEY_REFERENCE_ID" },
  { no: 11, name: "PRODUCTION_PLAN_SORT_KEY_FINAL_REF_NUMBER" },
  { no: 12, name: "PRODUCTION_PLAN_SORT_KEY_LOCATION_ID" },
  { no: 13, name: "PRODUCTION_PLAN_SORT_KEY_STARTS_AT" },
  { no: 14, name: "PRODUCTION_PLAN_SORT_KEY_ENDS_AT" },
]);

/**
 *
 * Describes the available sort keys
 *
 * @generated from enum Scailo.PRODUCTION_PLAN_ITEM_SORT_KEY
 */
export enum PRODUCTION_PLAN_ITEM_SORT_KEY {
  /**
   * Fetch results by id
   *
   * @generated from enum value: PRODUCTION_PLAN_ITEM_SORT_KEY_ID_UNSPECIFIED = 0;
   */
  PRODUCTION_PLAN_ITEM_SORT_KEY_ID_UNSPECIFIED = 0,

  /**
   * Fetch results by the creation timestamp
   *
   * @generated from enum value: PRODUCTION_PLAN_ITEM_SORT_KEY_CREATED_AT = 1;
   */
  PRODUCTION_PLAN_ITEM_SORT_KEY_CREATED_AT = 1,

  /**
   * Fetch results by the modified timestamp
   *
   * @generated from enum value: PRODUCTION_PLAN_ITEM_SORT_KEY_MODIFIED_AT = 2;
   */
  PRODUCTION_PLAN_ITEM_SORT_KEY_MODIFIED_AT = 2,

  /**
   * Fetch results by the approved on timestamp
   *
   * @generated from enum value: PRODUCTION_PLAN_ITEM_SORT_KEY_APPROVED_ON = 3;
   */
  PRODUCTION_PLAN_ITEM_SORT_KEY_APPROVED_ON = 3,

  /**
   * Fetch results by the approved by field
   *
   * @generated from enum value: PRODUCTION_PLAN_ITEM_SORT_KEY_APPROVED_BY = 4;
   */
  PRODUCTION_PLAN_ITEM_SORT_KEY_APPROVED_BY = 4,

  /**
   * Fetch results by the approver's role ID
   *
   * @generated from enum value: PRODUCTION_PLAN_ITEM_SORT_KEY_APPROVER_ROLE_ID = 5;
   */
  PRODUCTION_PLAN_ITEM_SORT_KEY_APPROVER_ROLE_ID = 5,

  /**
   * Fetch results by the family ID
   *
   * @generated from enum value: PRODUCTION_PLAN_ITEM_SORT_KEY_FAMILY_ID = 10;
   */
  PRODUCTION_PLAN_ITEM_SORT_KEY_FAMILY_ID = 10,

  /**
   * Fetch results by the quantity
   *
   * @generated from enum value: PRODUCTION_PLAN_ITEM_SORT_KEY_QUANTITY = 11;
   */
  PRODUCTION_PLAN_ITEM_SORT_KEY_QUANTITY = 11,
}
// Retrieve enum metadata with: proto3.getEnumType(PRODUCTION_PLAN_ITEM_SORT_KEY)
proto3.util.setEnumType(PRODUCTION_PLAN_ITEM_SORT_KEY, "Scailo.PRODUCTION_PLAN_ITEM_SORT_KEY", [
  { no: 0, name: "PRODUCTION_PLAN_ITEM_SORT_KEY_ID_UNSPECIFIED" },
  { no: 1, name: "PRODUCTION_PLAN_ITEM_SORT_KEY_CREATED_AT" },
  { no: 2, name: "PRODUCTION_PLAN_ITEM_SORT_KEY_MODIFIED_AT" },
  { no: 3, name: "PRODUCTION_PLAN_ITEM_SORT_KEY_APPROVED_ON" },
  { no: 4, name: "PRODUCTION_PLAN_ITEM_SORT_KEY_APPROVED_BY" },
  { no: 5, name: "PRODUCTION_PLAN_ITEM_SORT_KEY_APPROVER_ROLE_ID" },
  { no: 10, name: "PRODUCTION_PLAN_ITEM_SORT_KEY_FAMILY_ID" },
  { no: 11, name: "PRODUCTION_PLAN_ITEM_SORT_KEY_QUANTITY" },
]);

/**
 *
 * Describes the applicable statuses of production plan items
 *
 * @generated from enum Scailo.PRODUCTION_PLAN_ITEM_STATUS
 */
export enum PRODUCTION_PLAN_ITEM_STATUS {
  /**
   * Denotes that status be disregarded. This is used only within search APIs
   *
   * @generated from enum value: PRODUCTION_PLAN_ITEM_STATUS_ANY_UNSPECIFIED = 0;
   */
  PRODUCTION_PLAN_ITEM_STATUS_ANY_UNSPECIFIED = 0,

  /**
   * Denotes that the production plan items must have been approved
   *
   * @generated from enum value: PRODUCTION_PLAN_ITEM_STATUS_APPROVED = 1;
   */
  PRODUCTION_PLAN_ITEM_STATUS_APPROVED = 1,

  /**
   * Denotes that the production plan items must be waiting for approval
   *
   * @generated from enum value: PRODUCTION_PLAN_ITEM_STATUS_UNAPPROVED = 2;
   */
  PRODUCTION_PLAN_ITEM_STATUS_UNAPPROVED = 2,
}
// Retrieve enum metadata with: proto3.getEnumType(PRODUCTION_PLAN_ITEM_STATUS)
proto3.util.setEnumType(PRODUCTION_PLAN_ITEM_STATUS, "Scailo.PRODUCTION_PLAN_ITEM_STATUS", [
  { no: 0, name: "PRODUCTION_PLAN_ITEM_STATUS_ANY_UNSPECIFIED" },
  { no: 1, name: "PRODUCTION_PLAN_ITEM_STATUS_APPROVED" },
  { no: 2, name: "PRODUCTION_PLAN_ITEM_STATUS_UNAPPROVED" },
]);

/**
 *
 * Describes the parameters necessary to create a record
 *
 * @generated from message Scailo.ProductionPlansServiceCreateRequest
 */
export class ProductionPlansServiceCreateRequest extends Message<ProductionPlansServiceCreateRequest> {
  /**
   * Stores a globally unique entity UUID. This will be set at the organization level
   *
   * @generated from field: string entity_uuid = 1;
   */
  entityUuid = "";

  /**
   * Stores any comment that the user might add during this operation
   *
   * @generated from field: string user_comment = 2;
   */
  userComment = "";

  /**
   * The associated project ID
   *
   * @generated from field: uint64 project_id = 8;
   */
  projectId = protoInt64.zero;

  /**
   * The associated vault folder ID
   *
   * @generated from field: uint64 vault_folder_id = 9;
   */
  vaultFolderId = protoInt64.zero;

  /**
   * The reference ID of the production plan
   *
   * @generated from field: string reference_id = 10;
   */
  referenceId = "";

  /**
   * The associated reference
   *
   * @generated from field: string ref_from = 12;
   */
  refFrom = "";

  /**
   * The associated ID of the reference
   *
   * @generated from field: uint64 ref_id = 13;
   */
  refId = protoInt64.zero;

  /**
   * The ID of the location
   *
   * @generated from field: uint64 location_id = 14;
   */
  locationId = protoInt64.zero;

  /**
   * The username of the supervisor
   *
   * @generated from field: string supervisor = 15;
   */
  supervisor = "";

  /**
   * The start UNIX timestamp
   *
   * @generated from field: uint64 starts_at = 16;
   */
  startsAt = protoInt64.zero;

  /**
   * The end UNIX timestamp
   *
   * @generated from field: uint64 ends_at = 17;
   */
  endsAt = protoInt64.zero;

  /**
   * The list of dynamic forms
   *
   * @generated from field: repeated Scailo.FormFieldDatumCreateRequest form_data = 30;
   */
  formData: FormFieldDatumCreateRequest[] = [];

  constructor(data?: PartialMessage<ProductionPlansServiceCreateRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.ProductionPlansServiceCreateRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "entity_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "user_comment", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 8, name: "project_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 9, name: "vault_folder_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 10, name: "reference_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 12, name: "ref_from", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 13, name: "ref_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 14, name: "location_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 15, name: "supervisor", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 16, name: "starts_at", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 17, name: "ends_at", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 30, name: "form_data", kind: "message", T: FormFieldDatumCreateRequest, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ProductionPlansServiceCreateRequest {
    return new ProductionPlansServiceCreateRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ProductionPlansServiceCreateRequest {
    return new ProductionPlansServiceCreateRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ProductionPlansServiceCreateRequest {
    return new ProductionPlansServiceCreateRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ProductionPlansServiceCreateRequest | PlainMessage<ProductionPlansServiceCreateRequest> | undefined, b: ProductionPlansServiceCreateRequest | PlainMessage<ProductionPlansServiceCreateRequest> | undefined): boolean {
    return proto3.util.equals(ProductionPlansServiceCreateRequest, a, b);
  }
}

/**
 *
 * Describes the parameters necessary to update a record
 *
 * @generated from message Scailo.ProductionPlansServiceUpdateRequest
 */
export class ProductionPlansServiceUpdateRequest extends Message<ProductionPlansServiceUpdateRequest> {
  /**
   * Stores any comment that the user might add during this operation
   *
   * @generated from field: string user_comment = 1;
   */
  userComment = "";

  /**
   * The ID of the record that needs to be updated
   *
   * @generated from field: uint64 id = 2;
   */
  id = protoInt64.zero;

  /**
   * Optional boolean value that stores if a notification needs to be sent to users about the update to the record. This is useful when a subsequent operation needs to be performed immediately (such as send to verification after updating the revision)
   *
   * @generated from field: bool notify_users = 3;
   */
  notifyUsers = false;

  /**
   * The associated project ID
   *
   * @generated from field: uint64 project_id = 8;
   */
  projectId = protoInt64.zero;

  /**
   * The associated vault folder ID
   *
   * @generated from field: uint64 vault_folder_id = 9;
   */
  vaultFolderId = protoInt64.zero;

  /**
   * The reference ID of the production plan
   *
   * @generated from field: string reference_id = 10;
   */
  referenceId = "";

  /**
   * The username of the supervisor
   *
   * @generated from field: string supervisor = 15;
   */
  supervisor = "";

  /**
   * The start UNIX timestamp
   *
   * @generated from field: uint64 starts_at = 16;
   */
  startsAt = protoInt64.zero;

  /**
   * The end UNIX timestamp
   *
   * @generated from field: uint64 ends_at = 17;
   */
  endsAt = protoInt64.zero;

  /**
   * The list of dynamic forms
   *
   * @generated from field: repeated Scailo.FormFieldDatumCreateRequest form_data = 30;
   */
  formData: FormFieldDatumCreateRequest[] = [];

  constructor(data?: PartialMessage<ProductionPlansServiceUpdateRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.ProductionPlansServiceUpdateRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "user_comment", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 3, name: "notify_users", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 8, name: "project_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 9, name: "vault_folder_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 10, name: "reference_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 15, name: "supervisor", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 16, name: "starts_at", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 17, name: "ends_at", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 30, name: "form_data", kind: "message", T: FormFieldDatumCreateRequest, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ProductionPlansServiceUpdateRequest {
    return new ProductionPlansServiceUpdateRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ProductionPlansServiceUpdateRequest {
    return new ProductionPlansServiceUpdateRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ProductionPlansServiceUpdateRequest {
    return new ProductionPlansServiceUpdateRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ProductionPlansServiceUpdateRequest | PlainMessage<ProductionPlansServiceUpdateRequest> | undefined, b: ProductionPlansServiceUpdateRequest | PlainMessage<ProductionPlansServiceUpdateRequest> | undefined): boolean {
    return proto3.util.equals(ProductionPlansServiceUpdateRequest, a, b);
  }
}

/**
 *
 * Describes the parameters necessary to perform an autofill request
 *
 * @generated from message Scailo.ProductionPlansServiceAutofillRequest
 */
export class ProductionPlansServiceAutofillRequest extends Message<ProductionPlansServiceAutofillRequest> {
  /**
   * Stores any comment that the user might add during this operation
   *
   * @generated from field: string user_comment = 1;
   */
  userComment = "";

  /**
   * The UUID of the record that needs to be updated
   *
   * @generated from field: string uuid = 2;
   */
  uuid = "";

  /**
   * Denotes if all the equation dependencies (if applicable) should also be automatically added to the production plan
   *
   * @generated from field: bool populate_using_equation_dependencies = 3;
   */
  populateUsingEquationDependencies = false;

  constructor(data?: PartialMessage<ProductionPlansServiceAutofillRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.ProductionPlansServiceAutofillRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "user_comment", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "populate_using_equation_dependencies", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ProductionPlansServiceAutofillRequest {
    return new ProductionPlansServiceAutofillRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ProductionPlansServiceAutofillRequest {
    return new ProductionPlansServiceAutofillRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ProductionPlansServiceAutofillRequest {
    return new ProductionPlansServiceAutofillRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ProductionPlansServiceAutofillRequest | PlainMessage<ProductionPlansServiceAutofillRequest> | undefined, b: ProductionPlansServiceAutofillRequest | PlainMessage<ProductionPlansServiceAutofillRequest> | undefined): boolean {
    return proto3.util.equals(ProductionPlansServiceAutofillRequest, a, b);
  }
}

/**
 *
 * Stores the UUID references of the record
 *
 * @generated from message Scailo.ProductionPlanAncillaryParameters
 */
export class ProductionPlanAncillaryParameters extends Message<ProductionPlanAncillaryParameters> {
  /**
   * The UUID of the ref_id (the UUID of the associated ref_id)
   *
   * @generated from field: string ref_uuid = 213;
   */
  refUuid = "";

  /**
   * The UUID of the location (the UUID of the associated location_id)
   *
   * @generated from field: string location_uuid = 215;
   */
  locationUuid = "";

  constructor(data?: PartialMessage<ProductionPlanAncillaryParameters>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.ProductionPlanAncillaryParameters";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 213, name: "ref_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 215, name: "location_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ProductionPlanAncillaryParameters {
    return new ProductionPlanAncillaryParameters().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ProductionPlanAncillaryParameters {
    return new ProductionPlanAncillaryParameters().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ProductionPlanAncillaryParameters {
    return new ProductionPlanAncillaryParameters().fromJsonString(jsonString, options);
  }

  static equals(a: ProductionPlanAncillaryParameters | PlainMessage<ProductionPlanAncillaryParameters> | undefined, b: ProductionPlanAncillaryParameters | PlainMessage<ProductionPlanAncillaryParameters> | undefined): boolean {
    return proto3.util.equals(ProductionPlanAncillaryParameters, a, b);
  }
}

/**
 *
 * Describes the parameters that are part of a standard response
 *
 * @generated from message Scailo.ProductionPlan
 */
export class ProductionPlan extends Message<ProductionPlan> {
  /**
   * Stores a globally unique entity UUID. This will be set at the organization level
   *
   * @generated from field: string entity_uuid = 1;
   */
  entityUuid = "";

  /**
   * Stores the metadata of this production plan
   *
   * @generated from field: Scailo.EmployeeMetadata metadata = 2;
   */
  metadata?: EmployeeMetadata;

  /**
   * Stores the approval metadata
   *
   * @generated from field: Scailo.ApprovalMetadata approval_metadata = 3;
   */
  approvalMetadata?: ApprovalMetadata;

  /**
   * The status of this production plan
   *
   * @generated from field: Scailo.STANDARD_LIFECYCLE_STATUS status = 4;
   */
  status = STANDARD_LIFECYCLE_STATUS.ANY_UNSPECIFIED;

  /**
   * Stores the logs of every operation performed on this production plan
   *
   * @generated from field: repeated Scailo.LogbookLogConciseSLC logs = 5;
   */
  logs: LogbookLogConciseSLC[] = [];

  /**
   * The timestamp of when this production plan was marked as completed
   *
   * @generated from field: uint64 completed_on = 6;
   */
  completedOn = protoInt64.zero;

  /**
   * The associated project ID
   *
   * @generated from field: uint64 project_id = 8;
   */
  projectId = protoInt64.zero;

  /**
   * The associated vault folder ID
   *
   * @generated from field: uint64 vault_folder_id = 9;
   */
  vaultFolderId = protoInt64.zero;

  /**
   * The reference ID of the production plan
   *
   * @generated from field: string reference_id = 10;
   */
  referenceId = "";

  /**
   * The unique reference number that has been automatically generated
   *
   * @generated from field: string final_ref_number = 11;
   */
  finalRefNumber = "";

  /**
   * The associated reference
   *
   * @generated from field: string ref_from = 12;
   */
  refFrom = "";

  /**
   * The associated ID of the reference
   *
   * @generated from field: uint64 ref_id = 13;
   */
  refId = protoInt64.zero;

  /**
   * The ID of the location
   *
   * @generated from field: uint64 location_id = 14;
   */
  locationId = protoInt64.zero;

  /**
   * The username of the supervisor
   *
   * @generated from field: string supervisor = 15;
   */
  supervisor = "";

  /**
   * The start UNIX timestamp
   *
   * @generated from field: uint64 starts_at = 16;
   */
  startsAt = protoInt64.zero;

  /**
   * The end UNIX timestamp
   *
   * @generated from field: uint64 ends_at = 17;
   */
  endsAt = protoInt64.zero;

  /**
   * The list of associated production plan items
   *
   * @generated from field: repeated Scailo.ProductionPlanItem list = 20;
   */
  list: ProductionPlanItem[] = [];

  /**
   * The list of dynamic forms
   *
   * @generated from field: repeated Scailo.FormFieldDatum form_data = 30;
   */
  formData: FormFieldDatum[] = [];

  constructor(data?: PartialMessage<ProductionPlan>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.ProductionPlan";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "entity_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "metadata", kind: "message", T: EmployeeMetadata },
    { no: 3, name: "approval_metadata", kind: "message", T: ApprovalMetadata },
    { no: 4, name: "status", kind: "enum", T: proto3.getEnumType(STANDARD_LIFECYCLE_STATUS) },
    { no: 5, name: "logs", kind: "message", T: LogbookLogConciseSLC, repeated: true },
    { no: 6, name: "completed_on", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 8, name: "project_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 9, name: "vault_folder_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 10, name: "reference_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 11, name: "final_ref_number", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 12, name: "ref_from", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 13, name: "ref_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 14, name: "location_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 15, name: "supervisor", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 16, name: "starts_at", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 17, name: "ends_at", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 20, name: "list", kind: "message", T: ProductionPlanItem, repeated: true },
    { no: 30, name: "form_data", kind: "message", T: FormFieldDatum, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ProductionPlan {
    return new ProductionPlan().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ProductionPlan {
    return new ProductionPlan().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ProductionPlan {
    return new ProductionPlan().fromJsonString(jsonString, options);
  }

  static equals(a: ProductionPlan | PlainMessage<ProductionPlan> | undefined, b: ProductionPlan | PlainMessage<ProductionPlan> | undefined): boolean {
    return proto3.util.equals(ProductionPlan, a, b);
  }
}

/**
 *
 * Describes the parameters required to add an item to a production plan
 *
 * @generated from message Scailo.ProductionPlansServiceItemCreateRequest
 */
export class ProductionPlansServiceItemCreateRequest extends Message<ProductionPlansServiceItemCreateRequest> {
  /**
   * Stores any comment that the user might add during this operation
   *
   * @generated from field: string user_comment = 1;
   */
  userComment = "";

  /**
   * Stores the production plan ID
   *
   * @generated from field: uint64 production_plan_id = 10;
   */
  productionPlanId = protoInt64.zero;

  /**
   * Stores the family ID
   *
   * @generated from field: uint64 family_id = 11;
   */
  familyId = protoInt64.zero;

  /**
   * The quantity being manufactured
   *
   * @generated from field: uint64 quantity = 12;
   */
  quantity = protoInt64.zero;

  constructor(data?: PartialMessage<ProductionPlansServiceItemCreateRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.ProductionPlansServiceItemCreateRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "user_comment", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 10, name: "production_plan_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 11, name: "family_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 12, name: "quantity", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ProductionPlansServiceItemCreateRequest {
    return new ProductionPlansServiceItemCreateRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ProductionPlansServiceItemCreateRequest {
    return new ProductionPlansServiceItemCreateRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ProductionPlansServiceItemCreateRequest {
    return new ProductionPlansServiceItemCreateRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ProductionPlansServiceItemCreateRequest | PlainMessage<ProductionPlansServiceItemCreateRequest> | undefined, b: ProductionPlansServiceItemCreateRequest | PlainMessage<ProductionPlansServiceItemCreateRequest> | undefined): boolean {
    return proto3.util.equals(ProductionPlansServiceItemCreateRequest, a, b);
  }
}

/**
 *
 * Describes the parameters required to update an item in a production plan
 *
 * @generated from message Scailo.ProductionPlansServiceItemUpdateRequest
 */
export class ProductionPlansServiceItemUpdateRequest extends Message<ProductionPlansServiceItemUpdateRequest> {
  /**
   * Stores any comment that the user might add during this operation
   *
   * @generated from field: string user_comment = 1;
   */
  userComment = "";

  /**
   * The ID of the record
   *
   * @generated from field: uint64 id = 2;
   */
  id = protoInt64.zero;

  /**
   * The quantity being manufactured
   *
   * @generated from field: uint64 quantity = 12;
   */
  quantity = protoInt64.zero;

  constructor(data?: PartialMessage<ProductionPlansServiceItemUpdateRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.ProductionPlansServiceItemUpdateRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "user_comment", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 12, name: "quantity", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ProductionPlansServiceItemUpdateRequest {
    return new ProductionPlansServiceItemUpdateRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ProductionPlansServiceItemUpdateRequest {
    return new ProductionPlansServiceItemUpdateRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ProductionPlansServiceItemUpdateRequest {
    return new ProductionPlansServiceItemUpdateRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ProductionPlansServiceItemUpdateRequest | PlainMessage<ProductionPlansServiceItemUpdateRequest> | undefined, b: ProductionPlansServiceItemUpdateRequest | PlainMessage<ProductionPlansServiceItemUpdateRequest> | undefined): boolean {
    return proto3.util.equals(ProductionPlansServiceItemUpdateRequest, a, b);
  }
}

/**
 *
 * Describes the parameters that constitute an item associated to a production plan
 *
 * @generated from message Scailo.ProductionPlanItem
 */
export class ProductionPlanItem extends Message<ProductionPlanItem> {
  /**
   * Stores a globally unique entity UUID. This will be set at the organization level
   *
   * @generated from field: string entity_uuid = 1;
   */
  entityUuid = "";

  /**
   * Stores the metadata of this production plan
   *
   * @generated from field: Scailo.EmployeeMetadata metadata = 2;
   */
  metadata?: EmployeeMetadata;

  /**
   * Stores the approval metadata
   *
   * @generated from field: Scailo.ApprovalMetadata approval_metadata = 3;
   */
  approvalMetadata?: ApprovalMetadata;

  /**
   * Denotes if this record requires approval (or has been approved)
   *
   * @generated from field: bool need_approval = 4;
   */
  needApproval = false;

  /**
   * Stores any comment that the user might have added during an operation
   *
   * @generated from field: string user_comment = 5;
   */
  userComment = "";

  /**
   * Stores the production plan ID
   *
   * @generated from field: uint64 production_plan_id = 10;
   */
  productionPlanId = protoInt64.zero;

  /**
   * Stores the family ID
   *
   * @generated from field: uint64 family_id = 11;
   */
  familyId = protoInt64.zero;

  /**
   * The quantity being manufactured
   *
   * @generated from field: uint64 quantity = 12;
   */
  quantity = protoInt64.zero;

  constructor(data?: PartialMessage<ProductionPlanItem>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.ProductionPlanItem";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "entity_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "metadata", kind: "message", T: EmployeeMetadata },
    { no: 3, name: "approval_metadata", kind: "message", T: ApprovalMetadata },
    { no: 4, name: "need_approval", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 5, name: "user_comment", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 10, name: "production_plan_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 11, name: "family_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 12, name: "quantity", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ProductionPlanItem {
    return new ProductionPlanItem().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ProductionPlanItem {
    return new ProductionPlanItem().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ProductionPlanItem {
    return new ProductionPlanItem().fromJsonString(jsonString, options);
  }

  static equals(a: ProductionPlanItem | PlainMessage<ProductionPlanItem> | undefined, b: ProductionPlanItem | PlainMessage<ProductionPlanItem> | undefined): boolean {
    return proto3.util.equals(ProductionPlanItem, a, b);
  }
}

/**
 *
 * Describes the message consisting of the list of production plans
 *
 * @generated from message Scailo.ProductionPlansList
 */
export class ProductionPlansList extends Message<ProductionPlansList> {
  /**
   * List of records
   *
   * @generated from field: repeated Scailo.ProductionPlan list = 1;
   */
  list: ProductionPlan[] = [];

  constructor(data?: PartialMessage<ProductionPlansList>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.ProductionPlansList";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "list", kind: "message", T: ProductionPlan, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ProductionPlansList {
    return new ProductionPlansList().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ProductionPlansList {
    return new ProductionPlansList().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ProductionPlansList {
    return new ProductionPlansList().fromJsonString(jsonString, options);
  }

  static equals(a: ProductionPlansList | PlainMessage<ProductionPlansList> | undefined, b: ProductionPlansList | PlainMessage<ProductionPlansList> | undefined): boolean {
    return proto3.util.equals(ProductionPlansList, a, b);
  }
}

/**
 *
 * Describes the message consisting of the list of production plan items
 *
 * @generated from message Scailo.ProductionPlansItemsList
 */
export class ProductionPlansItemsList extends Message<ProductionPlansItemsList> {
  /**
   * List of records
   *
   * @generated from field: repeated Scailo.ProductionPlanItem list = 1;
   */
  list: ProductionPlanItem[] = [];

  constructor(data?: PartialMessage<ProductionPlansItemsList>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.ProductionPlansItemsList";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "list", kind: "message", T: ProductionPlanItem, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ProductionPlansItemsList {
    return new ProductionPlansItemsList().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ProductionPlansItemsList {
    return new ProductionPlansItemsList().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ProductionPlansItemsList {
    return new ProductionPlansItemsList().fromJsonString(jsonString, options);
  }

  static equals(a: ProductionPlansItemsList | PlainMessage<ProductionPlansItemsList> | undefined, b: ProductionPlansItemsList | PlainMessage<ProductionPlansItemsList> | undefined): boolean {
    return proto3.util.equals(ProductionPlansItemsList, a, b);
  }
}

/**
 *
 * Describes the parameters that are required to retrieve the history of the record
 *
 * @generated from message Scailo.ProductionPlanItemHistoryRequest
 */
export class ProductionPlanItemHistoryRequest extends Message<ProductionPlanItemHistoryRequest> {
  /**
   * Stores the production plan ID
   *
   * @generated from field: uint64 production_plan_id = 10;
   */
  productionPlanId = protoInt64.zero;

  /**
   * Stores the family ID
   *
   * @generated from field: uint64 family_id = 11;
   */
  familyId = protoInt64.zero;

  constructor(data?: PartialMessage<ProductionPlanItemHistoryRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.ProductionPlanItemHistoryRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 10, name: "production_plan_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 11, name: "family_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ProductionPlanItemHistoryRequest {
    return new ProductionPlanItemHistoryRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ProductionPlanItemHistoryRequest {
    return new ProductionPlanItemHistoryRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ProductionPlanItemHistoryRequest {
    return new ProductionPlanItemHistoryRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ProductionPlanItemHistoryRequest | PlainMessage<ProductionPlanItemHistoryRequest> | undefined, b: ProductionPlanItemHistoryRequest | PlainMessage<ProductionPlanItemHistoryRequest> | undefined): boolean {
    return proto3.util.equals(ProductionPlanItemHistoryRequest, a, b);
  }
}

/**
 *
 * Describes the parameters that are required to retrieve the info of a prospective production plan item
 *
 * @generated from message Scailo.ProductionPlanItemProspectiveInfoRequest
 */
export class ProductionPlanItemProspectiveInfoRequest extends Message<ProductionPlanItemProspectiveInfoRequest> {
  /**
   * Stores the production plan ID
   *
   * @generated from field: uint64 production_plan_id = 10;
   */
  productionPlanId = protoInt64.zero;

  /**
   * Stores the family ID
   *
   * @generated from field: uint64 family_id = 11;
   */
  familyId = protoInt64.zero;

  constructor(data?: PartialMessage<ProductionPlanItemProspectiveInfoRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.ProductionPlanItemProspectiveInfoRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 10, name: "production_plan_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 11, name: "family_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ProductionPlanItemProspectiveInfoRequest {
    return new ProductionPlanItemProspectiveInfoRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ProductionPlanItemProspectiveInfoRequest {
    return new ProductionPlanItemProspectiveInfoRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ProductionPlanItemProspectiveInfoRequest {
    return new ProductionPlanItemProspectiveInfoRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ProductionPlanItemProspectiveInfoRequest | PlainMessage<ProductionPlanItemProspectiveInfoRequest> | undefined, b: ProductionPlanItemProspectiveInfoRequest | PlainMessage<ProductionPlanItemProspectiveInfoRequest> | undefined): boolean {
    return proto3.util.equals(ProductionPlanItemProspectiveInfoRequest, a, b);
  }
}

/**
 *
 * Describes the request payload to retrieve the quantity that has already been added for the specific ref_from, ref_id and family_id
 *
 * @generated from message Scailo.ProductionPlansServiceAlreadyAddedQuantityForSourceRequest
 */
export class ProductionPlansServiceAlreadyAddedQuantityForSourceRequest extends Message<ProductionPlansServiceAlreadyAddedQuantityForSourceRequest> {
  /**
   * The associated reference
   *
   * @generated from field: string ref_from = 1;
   */
  refFrom = "";

  /**
   * The associated ID of the reference
   *
   * @generated from field: uint64 ref_id = 2;
   */
  refId = protoInt64.zero;

  /**
   * The associated family ID
   *
   * @generated from field: uint64 family_id = 3;
   */
  familyId = protoInt64.zero;

  constructor(data?: PartialMessage<ProductionPlansServiceAlreadyAddedQuantityForSourceRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.ProductionPlansServiceAlreadyAddedQuantityForSourceRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "ref_from", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "ref_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 3, name: "family_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ProductionPlansServiceAlreadyAddedQuantityForSourceRequest {
    return new ProductionPlansServiceAlreadyAddedQuantityForSourceRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ProductionPlansServiceAlreadyAddedQuantityForSourceRequest {
    return new ProductionPlansServiceAlreadyAddedQuantityForSourceRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ProductionPlansServiceAlreadyAddedQuantityForSourceRequest {
    return new ProductionPlansServiceAlreadyAddedQuantityForSourceRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ProductionPlansServiceAlreadyAddedQuantityForSourceRequest | PlainMessage<ProductionPlansServiceAlreadyAddedQuantityForSourceRequest> | undefined, b: ProductionPlansServiceAlreadyAddedQuantityForSourceRequest | PlainMessage<ProductionPlansServiceAlreadyAddedQuantityForSourceRequest> | undefined): boolean {
    return proto3.util.equals(ProductionPlansServiceAlreadyAddedQuantityForSourceRequest, a, b);
  }
}

/**
 *
 * Describes a pagination request to retrieve records
 *
 * @generated from message Scailo.ProductionPlansServicePaginationReq
 */
export class ProductionPlansServicePaginationReq extends Message<ProductionPlansServicePaginationReq> {
  /**
   * If true, then returns only active records. If false, then returns only inactive records
   *
   * @generated from field: Scailo.BOOL_FILTER is_active = 1;
   */
  isActive = BOOL_FILTER.BOOL_FILTER_ANY_UNSPECIFIED;

  /**
   * The number of records that need to be sent in the response
   *
   * @generated from field: int64 count = 2;
   */
  count = protoInt64.zero;

  /**
   * The number that need to be offset by before fetching the records
   *
   * @generated from field: uint64 offset = 3;
   */
  offset = protoInt64.zero;

  /**
   * The sort order that is to be used to fetch the pagination response
   *
   * @generated from field: Scailo.SORT_ORDER sort_order = 4;
   */
  sortOrder = SORT_ORDER.ASCENDING_UNSPECIFIED;

  /**
   * The sort key that is to be used to fetch the pagination response
   *
   * @generated from field: Scailo.PRODUCTION_PLAN_SORT_KEY sort_key = 5;
   */
  sortKey = PRODUCTION_PLAN_SORT_KEY.PRODUCTION_PLAN_SORT_KEY_ID_UNSPECIFIED;

  /**
   * The status of this production plan
   *
   * @generated from field: Scailo.STANDARD_LIFECYCLE_STATUS status = 6;
   */
  status = STANDARD_LIFECYCLE_STATUS.ANY_UNSPECIFIED;

  constructor(data?: PartialMessage<ProductionPlansServicePaginationReq>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.ProductionPlansServicePaginationReq";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "is_active", kind: "enum", T: proto3.getEnumType(BOOL_FILTER) },
    { no: 2, name: "count", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "offset", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 4, name: "sort_order", kind: "enum", T: proto3.getEnumType(SORT_ORDER) },
    { no: 5, name: "sort_key", kind: "enum", T: proto3.getEnumType(PRODUCTION_PLAN_SORT_KEY) },
    { no: 6, name: "status", kind: "enum", T: proto3.getEnumType(STANDARD_LIFECYCLE_STATUS) },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ProductionPlansServicePaginationReq {
    return new ProductionPlansServicePaginationReq().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ProductionPlansServicePaginationReq {
    return new ProductionPlansServicePaginationReq().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ProductionPlansServicePaginationReq {
    return new ProductionPlansServicePaginationReq().fromJsonString(jsonString, options);
  }

  static equals(a: ProductionPlansServicePaginationReq | PlainMessage<ProductionPlansServicePaginationReq> | undefined, b: ProductionPlansServicePaginationReq | PlainMessage<ProductionPlansServicePaginationReq> | undefined): boolean {
    return proto3.util.equals(ProductionPlansServicePaginationReq, a, b);
  }
}

/**
 *
 * Describes the response to a pagination request
 *
 * @generated from message Scailo.ProductionPlansServicePaginationResponse
 */
export class ProductionPlansServicePaginationResponse extends Message<ProductionPlansServicePaginationResponse> {
  /**
   * The number of records in this payload
   *
   * @generated from field: uint64 count = 1;
   */
  count = protoInt64.zero;

  /**
   * The number that has been offset before fetching the records. This is the same value that has been sent as part of the pagination request
   *
   * @generated from field: uint64 offset = 2;
   */
  offset = protoInt64.zero;

  /**
   * The total number of records that are available
   *
   * @generated from field: uint64 total = 3;
   */
  total = protoInt64.zero;

  /**
   * The list of records
   *
   * @generated from field: repeated Scailo.ProductionPlan payload = 4;
   */
  payload: ProductionPlan[] = [];

  constructor(data?: PartialMessage<ProductionPlansServicePaginationResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.ProductionPlansServicePaginationResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "count", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 2, name: "offset", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 3, name: "total", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 4, name: "payload", kind: "message", T: ProductionPlan, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ProductionPlansServicePaginationResponse {
    return new ProductionPlansServicePaginationResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ProductionPlansServicePaginationResponse {
    return new ProductionPlansServicePaginationResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ProductionPlansServicePaginationResponse {
    return new ProductionPlansServicePaginationResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ProductionPlansServicePaginationResponse | PlainMessage<ProductionPlansServicePaginationResponse> | undefined, b: ProductionPlansServicePaginationResponse | PlainMessage<ProductionPlansServicePaginationResponse> | undefined): boolean {
    return proto3.util.equals(ProductionPlansServicePaginationResponse, a, b);
  }
}

/**
 *
 * Describes the base request payload of a filter search
 *
 * @generated from message Scailo.ProductionPlansServiceFilterReq
 */
export class ProductionPlansServiceFilterReq extends Message<ProductionPlansServiceFilterReq> {
  /**
   * If true, then returns only active records. If false, then returns only inactive records
   *
   * @generated from field: Scailo.BOOL_FILTER is_active = 1;
   */
  isActive = BOOL_FILTER.BOOL_FILTER_ANY_UNSPECIFIED;

  /**
   * The number of records that need to be sent in the response. Returns all records if it is set to -1
   *
   * @generated from field: int64 count = 2;
   */
  count = protoInt64.zero;

  /**
   * The number that need to be offset by before fetching the records
   *
   * @generated from field: uint64 offset = 3;
   */
  offset = protoInt64.zero;

  /**
   * The sort order that is to be used to fetch the pagination response
   *
   * @generated from field: Scailo.SORT_ORDER sort_order = 4;
   */
  sortOrder = SORT_ORDER.ASCENDING_UNSPECIFIED;

  /**
   * The sort key that is to be used to fetch the pagination response
   *
   * @generated from field: Scailo.PRODUCTION_PLAN_SORT_KEY sort_key = 5;
   */
  sortKey = PRODUCTION_PLAN_SORT_KEY.PRODUCTION_PLAN_SORT_KEY_ID_UNSPECIFIED;

  /**
   * The minimum timestamp that needs to be considered to filter by creation
   *
   * @generated from field: uint64 creation_timestamp_start = 101;
   */
  creationTimestampStart = protoInt64.zero;

  /**
   * The maximum timestamp that needs to be considered to filter by creation
   *
   * @generated from field: uint64 creation_timestamp_end = 102;
   */
  creationTimestampEnd = protoInt64.zero;

  /**
   * The minimum timestamp that needs to be considered to filter by modification
   *
   * @generated from field: uint64 modification_timestamp_start = 103;
   */
  modificationTimestampStart = protoInt64.zero;

  /**
   * The maximum timestamp that needs to be considered to filter by modification
   *
   * @generated from field: uint64 modification_timestamp_end = 104;
   */
  modificationTimestampEnd = protoInt64.zero;

  /**
   * The entity UUID that is to be used to filter records
   *
   * @generated from field: string entity_uuid = 8;
   */
  entityUuid = "";

  /**
   * The status of this production plan
   *
   * @generated from field: Scailo.STANDARD_LIFECYCLE_STATUS status = 10;
   */
  status = STANDARD_LIFECYCLE_STATUS.ANY_UNSPECIFIED;

  /**
   * The start range of approved timestamp
   *
   * @generated from field: uint64 approved_on_start = 11;
   */
  approvedOnStart = protoInt64.zero;

  /**
   * The end range of approved timestamp
   *
   * @generated from field: uint64 approved_on_end = 12;
   */
  approvedOnEnd = protoInt64.zero;

  /**
   * The ID of the approver
   *
   * @generated from field: uint64 approved_by_user_id = 13;
   */
  approvedByUserId = protoInt64.zero;

  /**
   * The role ID of the approver
   *
   * @generated from field: uint64 approver_role_id = 14;
   */
  approverRoleId = protoInt64.zero;

  /**
   * The start range of completed timestamp
   *
   * @generated from field: uint64 completed_on_start = 15;
   */
  completedOnStart = protoInt64.zero;

  /**
   * The end range of completed timestamp
   *
   * @generated from field: uint64 completed_on_end = 16;
   */
  completedOnEnd = protoInt64.zero;

  /**
   * The reference ID of the production plan
   *
   * @generated from field: string reference_id = 20;
   */
  referenceId = "";

  /**
   * The unique reference number that has been automatically generated
   *
   * @generated from field: string final_ref_number = 21;
   */
  finalRefNumber = "";

  /**
   * The associated reference
   *
   * @generated from field: string ref_from = 22;
   */
  refFrom = "";

  /**
   * The associated ID of the reference
   *
   * @generated from field: uint64 ref_id = 23;
   */
  refId = protoInt64.zero;

  /**
   * The ID of the location
   *
   * @generated from field: uint64 location_id = 24;
   */
  locationId = protoInt64.zero;

  /**
   * The username of the supervisor
   *
   * @generated from field: string supervisor = 25;
   */
  supervisor = "";

  /**
   * The start range of "starts at"
   *
   * @generated from field: uint64 starts_at_start = 30;
   */
  startsAtStart = protoInt64.zero;

  /**
   * The end range of "starts at"
   *
   * @generated from field: uint64 starts_at_end = 31;
   */
  startsAtEnd = protoInt64.zero;

  /**
   * The start range of "ends at"
   *
   * @generated from field: uint64 ends_at_start = 32;
   */
  endsAtStart = protoInt64.zero;

  /**
   * The end range of "ends at"
   *
   * @generated from field: uint64 ends_at_end = 33;
   */
  endsAtEnd = protoInt64.zero;

  /**
   * The ID of the family
   *
   * @generated from field: uint64 family_id = 50;
   */
  familyId = protoInt64.zero;

  /**
   * The associated project ID
   *
   * @generated from field: uint64 project_id = 60;
   */
  projectId = protoInt64.zero;

  /**
   * Sales Order related filters
   * The associated buyer client ID of the linked sales order
   *
   * @generated from field: uint64 buyer_client_id = 80;
   */
  buyerClientId = protoInt64.zero;

  constructor(data?: PartialMessage<ProductionPlansServiceFilterReq>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.ProductionPlansServiceFilterReq";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "is_active", kind: "enum", T: proto3.getEnumType(BOOL_FILTER) },
    { no: 2, name: "count", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "offset", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 4, name: "sort_order", kind: "enum", T: proto3.getEnumType(SORT_ORDER) },
    { no: 5, name: "sort_key", kind: "enum", T: proto3.getEnumType(PRODUCTION_PLAN_SORT_KEY) },
    { no: 101, name: "creation_timestamp_start", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 102, name: "creation_timestamp_end", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 103, name: "modification_timestamp_start", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 104, name: "modification_timestamp_end", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 8, name: "entity_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 10, name: "status", kind: "enum", T: proto3.getEnumType(STANDARD_LIFECYCLE_STATUS) },
    { no: 11, name: "approved_on_start", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 12, name: "approved_on_end", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 13, name: "approved_by_user_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 14, name: "approver_role_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 15, name: "completed_on_start", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 16, name: "completed_on_end", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 20, name: "reference_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 21, name: "final_ref_number", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 22, name: "ref_from", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 23, name: "ref_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 24, name: "location_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 25, name: "supervisor", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 30, name: "starts_at_start", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 31, name: "starts_at_end", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 32, name: "ends_at_start", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 33, name: "ends_at_end", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 50, name: "family_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 60, name: "project_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 80, name: "buyer_client_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ProductionPlansServiceFilterReq {
    return new ProductionPlansServiceFilterReq().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ProductionPlansServiceFilterReq {
    return new ProductionPlansServiceFilterReq().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ProductionPlansServiceFilterReq {
    return new ProductionPlansServiceFilterReq().fromJsonString(jsonString, options);
  }

  static equals(a: ProductionPlansServiceFilterReq | PlainMessage<ProductionPlansServiceFilterReq> | undefined, b: ProductionPlansServiceFilterReq | PlainMessage<ProductionPlansServiceFilterReq> | undefined): boolean {
    return proto3.util.equals(ProductionPlansServiceFilterReq, a, b);
  }
}

/**
 *
 * Describes the base request payload of a count search
 *
 * @generated from message Scailo.ProductionPlansServiceCountReq
 */
export class ProductionPlansServiceCountReq extends Message<ProductionPlansServiceCountReq> {
  /**
   * If true, then returns only active records. If false, then returns only inactive records
   *
   * @generated from field: Scailo.BOOL_FILTER is_active = 1;
   */
  isActive = BOOL_FILTER.BOOL_FILTER_ANY_UNSPECIFIED;

  /**
   * The minimum timestamp that needs to be considered to filter by creation
   *
   * @generated from field: uint64 creation_timestamp_start = 101;
   */
  creationTimestampStart = protoInt64.zero;

  /**
   * The maximum timestamp that needs to be considered to filter by creation
   *
   * @generated from field: uint64 creation_timestamp_end = 102;
   */
  creationTimestampEnd = protoInt64.zero;

  /**
   * The minimum timestamp that needs to be considered to filter by modification
   *
   * @generated from field: uint64 modification_timestamp_start = 103;
   */
  modificationTimestampStart = protoInt64.zero;

  /**
   * The maximum timestamp that needs to be considered to filter by modification
   *
   * @generated from field: uint64 modification_timestamp_end = 104;
   */
  modificationTimestampEnd = protoInt64.zero;

  /**
   * The entity UUID that is to be used to filter records
   *
   * @generated from field: string entity_uuid = 8;
   */
  entityUuid = "";

  /**
   * The status of this production plan
   *
   * @generated from field: Scailo.STANDARD_LIFECYCLE_STATUS status = 10;
   */
  status = STANDARD_LIFECYCLE_STATUS.ANY_UNSPECIFIED;

  /**
   * The start range of approved timestamp
   *
   * @generated from field: uint64 approved_on_start = 11;
   */
  approvedOnStart = protoInt64.zero;

  /**
   * The end range of approved timestamp
   *
   * @generated from field: uint64 approved_on_end = 12;
   */
  approvedOnEnd = protoInt64.zero;

  /**
   * The ID of the approver
   *
   * @generated from field: uint64 approved_by_user_id = 13;
   */
  approvedByUserId = protoInt64.zero;

  /**
   * The role ID of the approver
   *
   * @generated from field: uint64 approver_role_id = 14;
   */
  approverRoleId = protoInt64.zero;

  /**
   * The start range of completed timestamp
   *
   * @generated from field: uint64 completed_on_start = 15;
   */
  completedOnStart = protoInt64.zero;

  /**
   * The end range of completed timestamp
   *
   * @generated from field: uint64 completed_on_end = 16;
   */
  completedOnEnd = protoInt64.zero;

  /**
   * The reference ID of the production plan
   *
   * @generated from field: string reference_id = 20;
   */
  referenceId = "";

  /**
   * The unique reference number that has been automatically generated
   *
   * @generated from field: string final_ref_number = 21;
   */
  finalRefNumber = "";

  /**
   * The associated reference
   *
   * @generated from field: string ref_from = 22;
   */
  refFrom = "";

  /**
   * The associated ID of the reference
   *
   * @generated from field: uint64 ref_id = 23;
   */
  refId = protoInt64.zero;

  /**
   * The ID of the location
   *
   * @generated from field: uint64 location_id = 24;
   */
  locationId = protoInt64.zero;

  /**
   * The username of the supervisor
   *
   * @generated from field: string supervisor = 25;
   */
  supervisor = "";

  /**
   * The start range of "starts at"
   *
   * @generated from field: uint64 starts_at_start = 30;
   */
  startsAtStart = protoInt64.zero;

  /**
   * The end range of "starts at"
   *
   * @generated from field: uint64 starts_at_end = 31;
   */
  startsAtEnd = protoInt64.zero;

  /**
   * The start range of "ends at"
   *
   * @generated from field: uint64 ends_at_start = 32;
   */
  endsAtStart = protoInt64.zero;

  /**
   * The end range of "ends at"
   *
   * @generated from field: uint64 ends_at_end = 33;
   */
  endsAtEnd = protoInt64.zero;

  /**
   * The ID of the family
   *
   * @generated from field: uint64 family_id = 50;
   */
  familyId = protoInt64.zero;

  /**
   * The associated project ID
   *
   * @generated from field: uint64 project_id = 60;
   */
  projectId = protoInt64.zero;

  /**
   * Sales Order related filters
   * The associated buyer client ID of the linked sales order
   *
   * @generated from field: uint64 buyer_client_id = 80;
   */
  buyerClientId = protoInt64.zero;

  constructor(data?: PartialMessage<ProductionPlansServiceCountReq>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.ProductionPlansServiceCountReq";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "is_active", kind: "enum", T: proto3.getEnumType(BOOL_FILTER) },
    { no: 101, name: "creation_timestamp_start", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 102, name: "creation_timestamp_end", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 103, name: "modification_timestamp_start", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 104, name: "modification_timestamp_end", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 8, name: "entity_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 10, name: "status", kind: "enum", T: proto3.getEnumType(STANDARD_LIFECYCLE_STATUS) },
    { no: 11, name: "approved_on_start", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 12, name: "approved_on_end", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 13, name: "approved_by_user_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 14, name: "approver_role_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 15, name: "completed_on_start", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 16, name: "completed_on_end", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 20, name: "reference_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 21, name: "final_ref_number", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 22, name: "ref_from", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 23, name: "ref_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 24, name: "location_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 25, name: "supervisor", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 30, name: "starts_at_start", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 31, name: "starts_at_end", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 32, name: "ends_at_start", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 33, name: "ends_at_end", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 50, name: "family_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 60, name: "project_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 80, name: "buyer_client_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ProductionPlansServiceCountReq {
    return new ProductionPlansServiceCountReq().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ProductionPlansServiceCountReq {
    return new ProductionPlansServiceCountReq().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ProductionPlansServiceCountReq {
    return new ProductionPlansServiceCountReq().fromJsonString(jsonString, options);
  }

  static equals(a: ProductionPlansServiceCountReq | PlainMessage<ProductionPlansServiceCountReq> | undefined, b: ProductionPlansServiceCountReq | PlainMessage<ProductionPlansServiceCountReq> | undefined): boolean {
    return proto3.util.equals(ProductionPlansServiceCountReq, a, b);
  }
}

/**
 *
 * Describes the request payload for performing a generic search operation on records
 *
 * @generated from message Scailo.ProductionPlansServiceSearchAllReq
 */
export class ProductionPlansServiceSearchAllReq extends Message<ProductionPlansServiceSearchAllReq> {
  /**
   * If true, then returns only active records. If false, then returns only inactive records
   *
   * @generated from field: Scailo.BOOL_FILTER is_active = 1;
   */
  isActive = BOOL_FILTER.BOOL_FILTER_ANY_UNSPECIFIED;

  /**
   * The number of records that need to be sent in the response. Returns all records if it is set to -1
   *
   * @generated from field: int64 count = 2;
   */
  count = protoInt64.zero;

  /**
   * The number that need to be offset by before fetching the records
   *
   * @generated from field: uint64 offset = 3;
   */
  offset = protoInt64.zero;

  /**
   * The sort order that is to be used to fetch the pagination response
   *
   * @generated from field: Scailo.SORT_ORDER sort_order = 4;
   */
  sortOrder = SORT_ORDER.ASCENDING_UNSPECIFIED;

  /**
   * The sort key that is to be used to fetch the pagination response
   *
   * @generated from field: Scailo.PRODUCTION_PLAN_SORT_KEY sort_key = 5;
   */
  sortKey = PRODUCTION_PLAN_SORT_KEY.PRODUCTION_PLAN_SORT_KEY_ID_UNSPECIFIED;

  /**
   * The entity UUID that is to be used to filter records
   *
   * @generated from field: string entity_uuid = 6;
   */
  entityUuid = "";

  /**
   * Limit the search space to the given status
   *
   * @generated from field: Scailo.STANDARD_LIFECYCLE_STATUS status = 10;
   */
  status = STANDARD_LIFECYCLE_STATUS.ANY_UNSPECIFIED;

  /**
   * Describes the key with which the search operation needs to be performed
   *
   * @generated from field: string search_key = 11;
   */
  searchKey = "";

  /**
   * The associated reference
   *
   * @generated from field: string ref_from = 22;
   */
  refFrom = "";

  /**
   * The associated ID of the reference
   *
   * @generated from field: uint64 ref_id = 23;
   */
  refId = protoInt64.zero;

  /**
   * The ID of the location
   *
   * @generated from field: uint64 location_id = 24;
   */
  locationId = protoInt64.zero;

  /**
   * The username of the supervisor
   *
   * @generated from field: string supervisor = 25;
   */
  supervisor = "";

  constructor(data?: PartialMessage<ProductionPlansServiceSearchAllReq>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.ProductionPlansServiceSearchAllReq";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "is_active", kind: "enum", T: proto3.getEnumType(BOOL_FILTER) },
    { no: 2, name: "count", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "offset", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 4, name: "sort_order", kind: "enum", T: proto3.getEnumType(SORT_ORDER) },
    { no: 5, name: "sort_key", kind: "enum", T: proto3.getEnumType(PRODUCTION_PLAN_SORT_KEY) },
    { no: 6, name: "entity_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 10, name: "status", kind: "enum", T: proto3.getEnumType(STANDARD_LIFECYCLE_STATUS) },
    { no: 11, name: "search_key", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 22, name: "ref_from", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 23, name: "ref_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 24, name: "location_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 25, name: "supervisor", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ProductionPlansServiceSearchAllReq {
    return new ProductionPlansServiceSearchAllReq().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ProductionPlansServiceSearchAllReq {
    return new ProductionPlansServiceSearchAllReq().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ProductionPlansServiceSearchAllReq {
    return new ProductionPlansServiceSearchAllReq().fromJsonString(jsonString, options);
  }

  static equals(a: ProductionPlansServiceSearchAllReq | PlainMessage<ProductionPlansServiceSearchAllReq> | undefined, b: ProductionPlansServiceSearchAllReq | PlainMessage<ProductionPlansServiceSearchAllReq> | undefined): boolean {
    return proto3.util.equals(ProductionPlansServiceSearchAllReq, a, b);
  }
}

/**
 *
 * Describes the request payload to retrieve approved or unapproved items.
 *
 * @generated from message Scailo.ProductionPlanItemsSearchRequest
 */
export class ProductionPlanItemsSearchRequest extends Message<ProductionPlanItemsSearchRequest> {
  /**
   * If true, then returns only active records. If false, then returns only inactive records
   *
   * @generated from field: Scailo.BOOL_FILTER is_active = 1;
   */
  isActive = BOOL_FILTER.BOOL_FILTER_ANY_UNSPECIFIED;

  /**
   * The number of records that need to be sent in the response. Returns all records if it is set to -1
   *
   * @generated from field: int64 count = 2;
   */
  count = protoInt64.zero;

  /**
   * The number that need to be offset by before fetching the records
   *
   * @generated from field: uint64 offset = 3;
   */
  offset = protoInt64.zero;

  /**
   * The sort order that is to be used to fetch the pagination response
   *
   * @generated from field: Scailo.SORT_ORDER sort_order = 4;
   */
  sortOrder = SORT_ORDER.ASCENDING_UNSPECIFIED;

  /**
   * The sort key that is to be used to fetch the pagination response
   *
   * @generated from field: Scailo.PRODUCTION_PLAN_ITEM_SORT_KEY sort_key = 5;
   */
  sortKey = PRODUCTION_PLAN_ITEM_SORT_KEY.PRODUCTION_PLAN_ITEM_SORT_KEY_ID_UNSPECIFIED;

  /**
   * The entity UUID that is to be used to filter records
   *
   * @generated from field: string entity_uuid = 6;
   */
  entityUuid = "";

  /**
   * The status of the items
   *
   * @generated from field: Scailo.PRODUCTION_PLAN_ITEM_STATUS status = 7;
   */
  status = PRODUCTION_PLAN_ITEM_STATUS.PRODUCTION_PLAN_ITEM_STATUS_ANY_UNSPECIFIED;

  /**
   * The start range of approved timestamp
   *
   * @generated from field: uint64 approved_on_start = 10;
   */
  approvedOnStart = protoInt64.zero;

  /**
   * The end range of approved timestamp
   *
   * @generated from field: uint64 approved_on_end = 11;
   */
  approvedOnEnd = protoInt64.zero;

  /**
   * The ID of the approver
   *
   * @generated from field: uint64 approved_by_user_id = 12;
   */
  approvedByUserId = protoInt64.zero;

  /**
   * The role ID of the approver
   *
   * @generated from field: uint64 approver_role_id = 13;
   */
  approverRoleId = protoInt64.zero;

  /**
   * The ID of the production plan
   *
   * @generated from field: uint64 production_plan_id = 20;
   */
  productionPlanId = protoInt64.zero;

  /**
   * The ID of the family
   *
   * @generated from field: uint64 family_id = 21;
   */
  familyId = protoInt64.zero;

  /**
   * The type of the family
   *
   * @generated from field: Scailo.FAMILY_TYPE family_type = 30;
   */
  familyType = FAMILY_TYPE.FAMILY_TYPE_ANY_UNSPECIFIED;

  /**
   * Describes the key with which the search operation needs to be performed
   *
   * @generated from field: string search_key = 40;
   */
  searchKey = "";

  constructor(data?: PartialMessage<ProductionPlanItemsSearchRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.ProductionPlanItemsSearchRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "is_active", kind: "enum", T: proto3.getEnumType(BOOL_FILTER) },
    { no: 2, name: "count", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "offset", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 4, name: "sort_order", kind: "enum", T: proto3.getEnumType(SORT_ORDER) },
    { no: 5, name: "sort_key", kind: "enum", T: proto3.getEnumType(PRODUCTION_PLAN_ITEM_SORT_KEY) },
    { no: 6, name: "entity_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 7, name: "status", kind: "enum", T: proto3.getEnumType(PRODUCTION_PLAN_ITEM_STATUS) },
    { no: 10, name: "approved_on_start", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 11, name: "approved_on_end", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 12, name: "approved_by_user_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 13, name: "approver_role_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 20, name: "production_plan_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 21, name: "family_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 30, name: "family_type", kind: "enum", T: proto3.getEnumType(FAMILY_TYPE) },
    { no: 40, name: "search_key", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ProductionPlanItemsSearchRequest {
    return new ProductionPlanItemsSearchRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ProductionPlanItemsSearchRequest {
    return new ProductionPlanItemsSearchRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ProductionPlanItemsSearchRequest {
    return new ProductionPlanItemsSearchRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ProductionPlanItemsSearchRequest | PlainMessage<ProductionPlanItemsSearchRequest> | undefined, b: ProductionPlanItemsSearchRequest | PlainMessage<ProductionPlanItemsSearchRequest> | undefined): boolean {
    return proto3.util.equals(ProductionPlanItemsSearchRequest, a, b);
  }
}

/**
 *
 * Describes the response to a pagination items request
 *
 * @generated from message Scailo.ProductionPlansServicePaginatedItemsResponse
 */
export class ProductionPlansServicePaginatedItemsResponse extends Message<ProductionPlansServicePaginatedItemsResponse> {
  /**
   * The number of records in this payload
   *
   * @generated from field: uint64 count = 1;
   */
  count = protoInt64.zero;

  /**
   * The number that has been offset before fetching the records. This is the same value that has been sent as part of the pagination request
   *
   * @generated from field: uint64 offset = 2;
   */
  offset = protoInt64.zero;

  /**
   * The total number of records that are available
   *
   * @generated from field: uint64 total = 3;
   */
  total = protoInt64.zero;

  /**
   * The list of records
   *
   * @generated from field: repeated Scailo.ProductionPlanItem payload = 4;
   */
  payload: ProductionPlanItem[] = [];

  constructor(data?: PartialMessage<ProductionPlansServicePaginatedItemsResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.ProductionPlansServicePaginatedItemsResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "count", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 2, name: "offset", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 3, name: "total", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 4, name: "payload", kind: "message", T: ProductionPlanItem, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ProductionPlansServicePaginatedItemsResponse {
    return new ProductionPlansServicePaginatedItemsResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ProductionPlansServicePaginatedItemsResponse {
    return new ProductionPlansServicePaginatedItemsResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ProductionPlansServicePaginatedItemsResponse {
    return new ProductionPlansServicePaginatedItemsResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ProductionPlansServicePaginatedItemsResponse | PlainMessage<ProductionPlansServicePaginatedItemsResponse> | undefined, b: ProductionPlansServicePaginatedItemsResponse | PlainMessage<ProductionPlansServicePaginatedItemsResponse> | undefined): boolean {
    return proto3.util.equals(ProductionPlansServicePaginatedItemsResponse, a, b);
  }
}

