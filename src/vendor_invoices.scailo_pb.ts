// @generated by protoc-gen-es v1.5.1 with parameter "target=ts"
// @generated from file vendor_invoices.scailo.proto (package Scailo, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3, protoInt64 } from "@bufbuild/protobuf";
import { FormFieldDatum, FormFieldDatumCreateRequest } from "./forms_fields_data.scailo_pb.js";
import { ApprovalMetadata, BOOL_FILTER, EmployeeMetadata, LogbookLogConciseSLC, SORT_ORDER, STANDARD_LIFECYCLE_STATUS } from "./base.scailo_pb.js";

/**
 *
 * Stores all the possible references from which a vendor invoice can be added
 *
 * @generated from enum Scailo.VENDOR_INVOICE_REF_FROM
 */
export enum VENDOR_INVOICE_REF_FROM {
  /**
   * Used only in filters
   *
   * @generated from enum value: VENDOR_INVOICE_REF_FROM_ANY_UNSPECIFIED = 0;
   */
  VENDOR_INVOICE_REF_FROM_ANY_UNSPECIFIED = 0,

  /**
   * Denotes that the vendor invoice originated from a purchase order
   *
   * @generated from enum value: VENDOR_INVOICE_REF_FROM_PURCHASE_ORDER = 1;
   */
  VENDOR_INVOICE_REF_FROM_PURCHASE_ORDER = 1,
}
// Retrieve enum metadata with: proto3.getEnumType(VENDOR_INVOICE_REF_FROM)
proto3.util.setEnumType(VENDOR_INVOICE_REF_FROM, "Scailo.VENDOR_INVOICE_REF_FROM", [
  { no: 0, name: "VENDOR_INVOICE_REF_FROM_ANY_UNSPECIFIED" },
  { no: 1, name: "VENDOR_INVOICE_REF_FROM_PURCHASE_ORDER" },
]);

/**
 *
 * Describes the available sort keys
 *
 * @generated from enum Scailo.VENDOR_INVOICE_SORT_KEY
 */
export enum VENDOR_INVOICE_SORT_KEY {
  /**
   * Fetch ordered results by id
   *
   * @generated from enum value: VENDOR_INVOICE_SORT_KEY_ID_UNSPECIFIED = 0;
   */
  VENDOR_INVOICE_SORT_KEY_ID_UNSPECIFIED = 0,

  /**
   * Fetch ordered results by the creation timestamp
   *
   * @generated from enum value: VENDOR_INVOICE_SORT_KEY_CREATED_AT = 1;
   */
  VENDOR_INVOICE_SORT_KEY_CREATED_AT = 1,

  /**
   * Fetch ordered results by the modified timestamp
   *
   * @generated from enum value: VENDOR_INVOICE_SORT_KEY_MODIFIED_AT = 2;
   */
  VENDOR_INVOICE_SORT_KEY_MODIFIED_AT = 2,

  /**
   * Fetch ordered results by the approved on timestamp
   *
   * @generated from enum value: VENDOR_INVOICE_SORT_KEY_APPROVED_ON = 3;
   */
  VENDOR_INVOICE_SORT_KEY_APPROVED_ON = 3,

  /**
   * Fetch ordered results by the approved by field
   *
   * @generated from enum value: VENDOR_INVOICE_SORT_KEY_APPROVED_BY = 4;
   */
  VENDOR_INVOICE_SORT_KEY_APPROVED_BY = 4,

  /**
   * Fetch ordered results by the approver's role ID
   *
   * @generated from enum value: VENDOR_INVOICE_SORT_KEY_APPROVER_ROLE_ID = 5;
   */
  VENDOR_INVOICE_SORT_KEY_APPROVER_ROLE_ID = 5,

  /**
   * Fetch ordered results by the approver's completed on timestamp
   *
   * @generated from enum value: VENDOR_INVOICE_SORT_KEY_COMPLETED_ON = 6;
   */
  VENDOR_INVOICE_SORT_KEY_COMPLETED_ON = 6,

  /**
   * Fetch ordered results by the reference ID
   *
   * @generated from enum value: VENDOR_INVOICE_SORT_KEY_REFERENCE_ID = 10;
   */
  VENDOR_INVOICE_SORT_KEY_REFERENCE_ID = 10,

  /**
   * Fetch ordered results by the final ref number
   *
   * @generated from enum value: VENDOR_INVOICE_SORT_KEY_FINAL_REF_NUMBER = 11;
   */
  VENDOR_INVOICE_SORT_KEY_FINAL_REF_NUMBER = 11,

  /**
   * Fetch ordered results by the total value
   *
   * @generated from enum value: VENDOR_INVOICE_SORT_KEY_TOTAL_VALUE = 30;
   */
  VENDOR_INVOICE_SORT_KEY_TOTAL_VALUE = 30,
}
// Retrieve enum metadata with: proto3.getEnumType(VENDOR_INVOICE_SORT_KEY)
proto3.util.setEnumType(VENDOR_INVOICE_SORT_KEY, "Scailo.VENDOR_INVOICE_SORT_KEY", [
  { no: 0, name: "VENDOR_INVOICE_SORT_KEY_ID_UNSPECIFIED" },
  { no: 1, name: "VENDOR_INVOICE_SORT_KEY_CREATED_AT" },
  { no: 2, name: "VENDOR_INVOICE_SORT_KEY_MODIFIED_AT" },
  { no: 3, name: "VENDOR_INVOICE_SORT_KEY_APPROVED_ON" },
  { no: 4, name: "VENDOR_INVOICE_SORT_KEY_APPROVED_BY" },
  { no: 5, name: "VENDOR_INVOICE_SORT_KEY_APPROVER_ROLE_ID" },
  { no: 6, name: "VENDOR_INVOICE_SORT_KEY_COMPLETED_ON" },
  { no: 10, name: "VENDOR_INVOICE_SORT_KEY_REFERENCE_ID" },
  { no: 11, name: "VENDOR_INVOICE_SORT_KEY_FINAL_REF_NUMBER" },
  { no: 30, name: "VENDOR_INVOICE_SORT_KEY_TOTAL_VALUE" },
]);

/**
 *
 * Describes the available sort keys
 *
 * @generated from enum Scailo.VENDOR_INVOICE_ITEM_SORT_KEY
 */
export enum VENDOR_INVOICE_ITEM_SORT_KEY {
  /**
   * Fetch invoiced results by id
   *
   * @generated from enum value: VENDOR_INVOICE_ITEM_SORT_KEY_ID_UNSPECIFIED = 0;
   */
  VENDOR_INVOICE_ITEM_SORT_KEY_ID_UNSPECIFIED = 0,

  /**
   * Fetch invoiced results by the creation timestamp
   *
   * @generated from enum value: VENDOR_INVOICE_ITEM_SORT_KEY_CREATED_AT = 1;
   */
  VENDOR_INVOICE_ITEM_SORT_KEY_CREATED_AT = 1,

  /**
   * Fetch invoiced results by the modified timestamp
   *
   * @generated from enum value: VENDOR_INVOICE_ITEM_SORT_KEY_MODIFIED_AT = 2;
   */
  VENDOR_INVOICE_ITEM_SORT_KEY_MODIFIED_AT = 2,

  /**
   * Fetch invoiced results by the approved on timestamp
   *
   * @generated from enum value: VENDOR_INVOICE_ITEM_SORT_KEY_APPROVED_ON = 3;
   */
  VENDOR_INVOICE_ITEM_SORT_KEY_APPROVED_ON = 3,

  /**
   * Fetch invoiced results by the approved by field
   *
   * @generated from enum value: VENDOR_INVOICE_ITEM_SORT_KEY_APPROVED_BY = 4;
   */
  VENDOR_INVOICE_ITEM_SORT_KEY_APPROVED_BY = 4,

  /**
   * Fetch invoiced results by the approver's role ID
   *
   * @generated from enum value: VENDOR_INVOICE_ITEM_SORT_KEY_APPROVER_ROLE_ID = 5;
   */
  VENDOR_INVOICE_ITEM_SORT_KEY_APPROVER_ROLE_ID = 5,

  /**
   * Fetch invoiced results by the family ID
   *
   * @generated from enum value: VENDOR_INVOICE_ITEM_SORT_KEY_FAMILY_ID = 10;
   */
  VENDOR_INVOICE_ITEM_SORT_KEY_FAMILY_ID = 10,

  /**
   * Fetch invoiced results by the internal quantity
   *
   * @generated from enum value: VENDOR_INVOICE_ITEM_SORT_KEY_INTERNAL_QUANTITY = 11;
   */
  VENDOR_INVOICE_ITEM_SORT_KEY_INTERNAL_QUANTITY = 11,

  /**
   * Fetch invoiced results by the vendor unit of material ID
   *
   * @generated from enum value: VENDOR_INVOICE_ITEM_SORT_KEY_VENDOR_UOM_ID = 12;
   */
  VENDOR_INVOICE_ITEM_SORT_KEY_VENDOR_UOM_ID = 12,

  /**
   * Fetch invoiced results by the vendor quantity
   *
   * @generated from enum value: VENDOR_INVOICE_ITEM_SORT_KEY_VENDOR_QUANTITY = 13;
   */
  VENDOR_INVOICE_ITEM_SORT_KEY_VENDOR_QUANTITY = 13,

  /**
   * Fetch invoiced results by the unit price
   *
   * @generated from enum value: VENDOR_INVOICE_ITEM_SORT_KEY_VENDOR_UNIT_PRICE = 14;
   */
  VENDOR_INVOICE_ITEM_SORT_KEY_VENDOR_UNIT_PRICE = 14,

  /**
   * Fetch invoiced results by the tax group ID
   *
   * @generated from enum value: VENDOR_INVOICE_ITEM_SORT_KEY_TAX_GROUP_ID = 15;
   */
  VENDOR_INVOICE_ITEM_SORT_KEY_TAX_GROUP_ID = 15,
}
// Retrieve enum metadata with: proto3.getEnumType(VENDOR_INVOICE_ITEM_SORT_KEY)
proto3.util.setEnumType(VENDOR_INVOICE_ITEM_SORT_KEY, "Scailo.VENDOR_INVOICE_ITEM_SORT_KEY", [
  { no: 0, name: "VENDOR_INVOICE_ITEM_SORT_KEY_ID_UNSPECIFIED" },
  { no: 1, name: "VENDOR_INVOICE_ITEM_SORT_KEY_CREATED_AT" },
  { no: 2, name: "VENDOR_INVOICE_ITEM_SORT_KEY_MODIFIED_AT" },
  { no: 3, name: "VENDOR_INVOICE_ITEM_SORT_KEY_APPROVED_ON" },
  { no: 4, name: "VENDOR_INVOICE_ITEM_SORT_KEY_APPROVED_BY" },
  { no: 5, name: "VENDOR_INVOICE_ITEM_SORT_KEY_APPROVER_ROLE_ID" },
  { no: 10, name: "VENDOR_INVOICE_ITEM_SORT_KEY_FAMILY_ID" },
  { no: 11, name: "VENDOR_INVOICE_ITEM_SORT_KEY_INTERNAL_QUANTITY" },
  { no: 12, name: "VENDOR_INVOICE_ITEM_SORT_KEY_VENDOR_UOM_ID" },
  { no: 13, name: "VENDOR_INVOICE_ITEM_SORT_KEY_VENDOR_QUANTITY" },
  { no: 14, name: "VENDOR_INVOICE_ITEM_SORT_KEY_VENDOR_UNIT_PRICE" },
  { no: 15, name: "VENDOR_INVOICE_ITEM_SORT_KEY_TAX_GROUP_ID" },
]);

/**
 *
 * Describes the applicable statuses of vendor invoice items
 *
 * @generated from enum Scailo.VENDOR_INVOICE_ITEM_STATUS
 */
export enum VENDOR_INVOICE_ITEM_STATUS {
  /**
   * Denotes that status be disregarded. This is used only within search APIs
   *
   * @generated from enum value: VENDOR_INVOICE_ITEM_STATUS_ANY_UNSPECIFIED = 0;
   */
  VENDOR_INVOICE_ITEM_STATUS_ANY_UNSPECIFIED = 0,

  /**
   * Denotes that the vendor invoice items must have been approved
   *
   * @generated from enum value: VENDOR_INVOICE_ITEM_STATUS_APPROVED = 1;
   */
  VENDOR_INVOICE_ITEM_STATUS_APPROVED = 1,

  /**
   * Denotes that the vendor invoice items must be waiting for approval
   *
   * @generated from enum value: VENDOR_INVOICE_ITEM_STATUS_UNAPPROVED = 2;
   */
  VENDOR_INVOICE_ITEM_STATUS_UNAPPROVED = 2,
}
// Retrieve enum metadata with: proto3.getEnumType(VENDOR_INVOICE_ITEM_STATUS)
proto3.util.setEnumType(VENDOR_INVOICE_ITEM_STATUS, "Scailo.VENDOR_INVOICE_ITEM_STATUS", [
  { no: 0, name: "VENDOR_INVOICE_ITEM_STATUS_ANY_UNSPECIFIED" },
  { no: 1, name: "VENDOR_INVOICE_ITEM_STATUS_APPROVED" },
  { no: 2, name: "VENDOR_INVOICE_ITEM_STATUS_UNAPPROVED" },
]);

/**
 *
 * Describes the parameters necessary to create a record
 *
 * @generated from message Scailo.VendorInvoicesServiceCreateRequest
 */
export class VendorInvoicesServiceCreateRequest extends Message<VendorInvoicesServiceCreateRequest> {
  /**
   * Stores a globally unique entity UUID. This will be set at the organization level
   *
   * @generated from field: string entity_uuid = 1;
   */
  entityUuid = "";

  /**
   * Stores any comment that the user might add during this operation
   *
   * @generated from field: string user_comment = 2;
   */
  userComment = "";

  /**
   * The associated vault folder ID
   *
   * @generated from field: uint64 vault_folder_id = 9;
   */
  vaultFolderId = protoInt64.zero;

  /**
   * The reference ID of the vendor invoice
   *
   * @generated from field: string reference_id = 10;
   */
  referenceId = "";

  /**
   * The associated reference
   *
   * @generated from field: Scailo.VENDOR_INVOICE_REF_FROM ref_from = 12;
   */
  refFrom = VENDOR_INVOICE_REF_FROM.VENDOR_INVOICE_REF_FROM_ANY_UNSPECIFIED;

  /**
   * The associated ID of the reference
   *
   * @generated from field: uint64 ref_id = 13;
   */
  refId = protoInt64.zero;

  /**
   * The associated ID of the currency
   *
   * @generated from field: uint64 currency_id = 14;
   */
  currencyId = protoInt64.zero;

  /**
   * The vendor's bill number
   *
   * @generated from field: string vendor_bill_no = 15;
   */
  vendorBillNo = "";

  /**
   * The date on which the bill was raised by the vendor
   *
   * @generated from field: string vendor_bill_date = 16;
   */
  vendorBillDate = "";

  /**
   * Any miscellaneous cost
   *
   * @generated from field: uint64 miscellaneous_cost = 17;
   */
  miscellaneousCost = protoInt64.zero;

  /**
   * The optional discount amount
   *
   * @generated from field: uint64 overall_discount = 18;
   */
  overallDiscount = protoInt64.zero;

  /**
   * The applicable round off amount (optional, and can be positive or negative)
   *
   * @generated from field: int64 round_off = 19;
   */
  roundOff = protoInt64.zero;

  /**
   * The excess tax group
   *
   * @generated from field: uint64 cumulative_excess_tax_group_id = 20;
   */
  cumulativeExcessTaxGroupId = protoInt64.zero;

  /**
   * The excess tax amount
   *
   * @generated from field: uint64 cumulative_excess_tax_amount = 21;
   */
  cumulativeExcessTaxAmount = protoInt64.zero;

  /**
   * The list of dynamic forms
   *
   * @generated from field: repeated Scailo.FormFieldDatumCreateRequest form_data = 30;
   */
  formData: FormFieldDatumCreateRequest[] = [];

  constructor(data?: PartialMessage<VendorInvoicesServiceCreateRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.VendorInvoicesServiceCreateRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "entity_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "user_comment", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 9, name: "vault_folder_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 10, name: "reference_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 12, name: "ref_from", kind: "enum", T: proto3.getEnumType(VENDOR_INVOICE_REF_FROM) },
    { no: 13, name: "ref_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 14, name: "currency_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 15, name: "vendor_bill_no", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 16, name: "vendor_bill_date", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 17, name: "miscellaneous_cost", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 18, name: "overall_discount", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 19, name: "round_off", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 20, name: "cumulative_excess_tax_group_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 21, name: "cumulative_excess_tax_amount", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 30, name: "form_data", kind: "message", T: FormFieldDatumCreateRequest, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): VendorInvoicesServiceCreateRequest {
    return new VendorInvoicesServiceCreateRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): VendorInvoicesServiceCreateRequest {
    return new VendorInvoicesServiceCreateRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): VendorInvoicesServiceCreateRequest {
    return new VendorInvoicesServiceCreateRequest().fromJsonString(jsonString, options);
  }

  static equals(a: VendorInvoicesServiceCreateRequest | PlainMessage<VendorInvoicesServiceCreateRequest> | undefined, b: VendorInvoicesServiceCreateRequest | PlainMessage<VendorInvoicesServiceCreateRequest> | undefined): boolean {
    return proto3.util.equals(VendorInvoicesServiceCreateRequest, a, b);
  }
}

/**
 *
 * Describes the parameters necessary to update a record
 *
 * @generated from message Scailo.VendorInvoicesServiceUpdateRequest
 */
export class VendorInvoicesServiceUpdateRequest extends Message<VendorInvoicesServiceUpdateRequest> {
  /**
   * Stores any comment that the user might add during this operation
   *
   * @generated from field: string user_comment = 1;
   */
  userComment = "";

  /**
   * The ID of the record that needs to be updated
   *
   * @generated from field: uint64 id = 2;
   */
  id = protoInt64.zero;

  /**
   * Optional boolean value that stores if a notification needs to be sent to users about the update to the record. This is useful when a subsequent operation needs to be performed immediately (such as send to verification after updating the revision)
   *
   * @generated from field: bool notify_users = 3;
   */
  notifyUsers = false;

  /**
   * The associated vault folder ID
   *
   * @generated from field: uint64 vault_folder_id = 9;
   */
  vaultFolderId = protoInt64.zero;

  /**
   * The reference ID of the vendor invoice
   *
   * @generated from field: string reference_id = 10;
   */
  referenceId = "";

  /**
   * The associated ID of the currency
   *
   * @generated from field: uint64 currency_id = 14;
   */
  currencyId = protoInt64.zero;

  /**
   * The vendor's bill number
   *
   * @generated from field: string vendor_bill_no = 15;
   */
  vendorBillNo = "";

  /**
   * The date on which the bill was raised by the vendor
   *
   * @generated from field: string vendor_bill_date = 16;
   */
  vendorBillDate = "";

  /**
   * Any miscellaneous cost
   *
   * @generated from field: uint64 miscellaneous_cost = 17;
   */
  miscellaneousCost = protoInt64.zero;

  /**
   * The optional discount amount
   *
   * @generated from field: uint64 overall_discount = 18;
   */
  overallDiscount = protoInt64.zero;

  /**
   * The applicable round off amount (optional, and can be positive or negative)
   *
   * @generated from field: int64 round_off = 19;
   */
  roundOff = protoInt64.zero;

  /**
   * The excess tax group
   *
   * @generated from field: uint64 cumulative_excess_tax_group_id = 20;
   */
  cumulativeExcessTaxGroupId = protoInt64.zero;

  /**
   * The excess tax amount
   *
   * @generated from field: uint64 cumulative_excess_tax_amount = 21;
   */
  cumulativeExcessTaxAmount = protoInt64.zero;

  /**
   * The list of dynamic forms
   *
   * @generated from field: repeated Scailo.FormFieldDatumCreateRequest form_data = 30;
   */
  formData: FormFieldDatumCreateRequest[] = [];

  constructor(data?: PartialMessage<VendorInvoicesServiceUpdateRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.VendorInvoicesServiceUpdateRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "user_comment", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 3, name: "notify_users", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 9, name: "vault_folder_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 10, name: "reference_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 14, name: "currency_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 15, name: "vendor_bill_no", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 16, name: "vendor_bill_date", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 17, name: "miscellaneous_cost", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 18, name: "overall_discount", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 19, name: "round_off", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 20, name: "cumulative_excess_tax_group_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 21, name: "cumulative_excess_tax_amount", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 30, name: "form_data", kind: "message", T: FormFieldDatumCreateRequest, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): VendorInvoicesServiceUpdateRequest {
    return new VendorInvoicesServiceUpdateRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): VendorInvoicesServiceUpdateRequest {
    return new VendorInvoicesServiceUpdateRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): VendorInvoicesServiceUpdateRequest {
    return new VendorInvoicesServiceUpdateRequest().fromJsonString(jsonString, options);
  }

  static equals(a: VendorInvoicesServiceUpdateRequest | PlainMessage<VendorInvoicesServiceUpdateRequest> | undefined, b: VendorInvoicesServiceUpdateRequest | PlainMessage<VendorInvoicesServiceUpdateRequest> | undefined): boolean {
    return proto3.util.equals(VendorInvoicesServiceUpdateRequest, a, b);
  }
}

/**
 *
 * Describes the parameters necessary to perform an autofill request
 *
 * @generated from message Scailo.VendorInvoicesServiceAutofillRequest
 */
export class VendorInvoicesServiceAutofillRequest extends Message<VendorInvoicesServiceAutofillRequest> {
  /**
   * Stores any comment that the user might add during this operation
   *
   * @generated from field: string user_comment = 1;
   */
  userComment = "";

  /**
   * The UUID of the record that needs to be updated
   *
   * @generated from field: string uuid = 2;
   */
  uuid = "";

  /**
   * Stores if services should also be autofilled
   *
   * @generated from field: bool include_services = 10;
   */
  includeServices = false;

  constructor(data?: PartialMessage<VendorInvoicesServiceAutofillRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.VendorInvoicesServiceAutofillRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "user_comment", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 10, name: "include_services", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): VendorInvoicesServiceAutofillRequest {
    return new VendorInvoicesServiceAutofillRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): VendorInvoicesServiceAutofillRequest {
    return new VendorInvoicesServiceAutofillRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): VendorInvoicesServiceAutofillRequest {
    return new VendorInvoicesServiceAutofillRequest().fromJsonString(jsonString, options);
  }

  static equals(a: VendorInvoicesServiceAutofillRequest | PlainMessage<VendorInvoicesServiceAutofillRequest> | undefined, b: VendorInvoicesServiceAutofillRequest | PlainMessage<VendorInvoicesServiceAutofillRequest> | undefined): boolean {
    return proto3.util.equals(VendorInvoicesServiceAutofillRequest, a, b);
  }
}

/**
 *
 * Stores the UUID references of the record
 *
 * @generated from message Scailo.VendorInvoiceAncillaryParameters
 */
export class VendorInvoiceAncillaryParameters extends Message<VendorInvoiceAncillaryParameters> {
  /**
   * The UUID of the ref_id (the UUID of the associated ref_id)
   *
   * @generated from field: string ref_uuid = 213;
   */
  refUuid = "";

  /**
   * The UUID of the currency (the UUID of the associated currency)
   *
   * @generated from field: string currency_uuid = 214;
   */
  currencyUuid = "";

  constructor(data?: PartialMessage<VendorInvoiceAncillaryParameters>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.VendorInvoiceAncillaryParameters";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 213, name: "ref_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 214, name: "currency_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): VendorInvoiceAncillaryParameters {
    return new VendorInvoiceAncillaryParameters().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): VendorInvoiceAncillaryParameters {
    return new VendorInvoiceAncillaryParameters().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): VendorInvoiceAncillaryParameters {
    return new VendorInvoiceAncillaryParameters().fromJsonString(jsonString, options);
  }

  static equals(a: VendorInvoiceAncillaryParameters | PlainMessage<VendorInvoiceAncillaryParameters> | undefined, b: VendorInvoiceAncillaryParameters | PlainMessage<VendorInvoiceAncillaryParameters> | undefined): boolean {
    return proto3.util.equals(VendorInvoiceAncillaryParameters, a, b);
  }
}

/**
 *
 * Describes the parameters that are part of a standard response
 *
 * @generated from message Scailo.VendorInvoice
 */
export class VendorInvoice extends Message<VendorInvoice> {
  /**
   * Stores a globally unique entity UUID. This will be set at the organization level
   *
   * @generated from field: string entity_uuid = 1;
   */
  entityUuid = "";

  /**
   * Stores the metadata of this vendor invoice
   *
   * @generated from field: Scailo.EmployeeMetadata metadata = 2;
   */
  metadata?: EmployeeMetadata;

  /**
   * Stores the approval metadata
   *
   * @generated from field: Scailo.ApprovalMetadata approval_metadata = 3;
   */
  approvalMetadata?: ApprovalMetadata;

  /**
   * The status of this vendor invoice
   *
   * @generated from field: Scailo.STANDARD_LIFECYCLE_STATUS status = 4;
   */
  status = STANDARD_LIFECYCLE_STATUS.ANY_UNSPECIFIED;

  /**
   * Stores the logs of every operation performed on this vendor invoice
   *
   * @generated from field: repeated Scailo.LogbookLogConciseSLC logs = 5;
   */
  logs: LogbookLogConciseSLC[] = [];

  /**
   * The timestamp of when this vendor invoice was marked as completed
   *
   * @generated from field: uint64 completed_on = 6;
   */
  completedOn = protoInt64.zero;

  /**
   * The associated vault folder ID
   *
   * @generated from field: uint64 vault_folder_id = 9;
   */
  vaultFolderId = protoInt64.zero;

  /**
   * The reference ID of the vendor invoice
   *
   * @generated from field: string reference_id = 10;
   */
  referenceId = "";

  /**
   * The unique reference number that has been automatically generated
   *
   * @generated from field: string final_ref_number = 11;
   */
  finalRefNumber = "";

  /**
   * The associated reference
   *
   * @generated from field: Scailo.VENDOR_INVOICE_REF_FROM ref_from = 12;
   */
  refFrom = VENDOR_INVOICE_REF_FROM.VENDOR_INVOICE_REF_FROM_ANY_UNSPECIFIED;

  /**
   * The associated ID of the reference
   *
   * @generated from field: uint64 ref_id = 13;
   */
  refId = protoInt64.zero;

  /**
   * The associated ID of the currency
   *
   * @generated from field: uint64 currency_id = 14;
   */
  currencyId = protoInt64.zero;

  /**
   * The vendor's bill number
   *
   * @generated from field: string vendor_bill_no = 15;
   */
  vendorBillNo = "";

  /**
   * The date on which the bill was raised by the vendor
   *
   * @generated from field: string vendor_bill_date = 16;
   */
  vendorBillDate = "";

  /**
   * Any miscellaneous cost
   *
   * @generated from field: uint64 miscellaneous_cost = 17;
   */
  miscellaneousCost = protoInt64.zero;

  /**
   * The optional discount amount
   *
   * @generated from field: uint64 overall_discount = 18;
   */
  overallDiscount = protoInt64.zero;

  /**
   * The applicable round off amount (optional, and can be positive or negative)
   *
   * @generated from field: int64 round_off = 19;
   */
  roundOff = protoInt64.zero;

  /**
   * The excess tax group
   *
   * @generated from field: uint64 cumulative_excess_tax_group_id = 20;
   */
  cumulativeExcessTaxGroupId = protoInt64.zero;

  /**
   * The excess tax amount
   *
   * @generated from field: uint64 cumulative_excess_tax_amount = 21;
   */
  cumulativeExcessTaxAmount = protoInt64.zero;

  /**
   * Stores the total value of the vendor invoice (as a double, which requires no adjustments)
   *
   * @generated from field: double total_value = 30;
   */
  totalValue = 0;

  /**
   * The list of associated vendor invoice items
   *
   * @generated from field: repeated Scailo.VendorInvoiceItem list = 40;
   */
  list: VendorInvoiceItem[] = [];

  /**
   * The list of dynamic forms
   *
   * @generated from field: repeated Scailo.FormFieldDatum form_data = 50;
   */
  formData: FormFieldDatum[] = [];

  constructor(data?: PartialMessage<VendorInvoice>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.VendorInvoice";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "entity_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "metadata", kind: "message", T: EmployeeMetadata },
    { no: 3, name: "approval_metadata", kind: "message", T: ApprovalMetadata },
    { no: 4, name: "status", kind: "enum", T: proto3.getEnumType(STANDARD_LIFECYCLE_STATUS) },
    { no: 5, name: "logs", kind: "message", T: LogbookLogConciseSLC, repeated: true },
    { no: 6, name: "completed_on", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 9, name: "vault_folder_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 10, name: "reference_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 11, name: "final_ref_number", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 12, name: "ref_from", kind: "enum", T: proto3.getEnumType(VENDOR_INVOICE_REF_FROM) },
    { no: 13, name: "ref_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 14, name: "currency_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 15, name: "vendor_bill_no", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 16, name: "vendor_bill_date", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 17, name: "miscellaneous_cost", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 18, name: "overall_discount", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 19, name: "round_off", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 20, name: "cumulative_excess_tax_group_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 21, name: "cumulative_excess_tax_amount", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 30, name: "total_value", kind: "scalar", T: 1 /* ScalarType.DOUBLE */ },
    { no: 40, name: "list", kind: "message", T: VendorInvoiceItem, repeated: true },
    { no: 50, name: "form_data", kind: "message", T: FormFieldDatum, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): VendorInvoice {
    return new VendorInvoice().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): VendorInvoice {
    return new VendorInvoice().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): VendorInvoice {
    return new VendorInvoice().fromJsonString(jsonString, options);
  }

  static equals(a: VendorInvoice | PlainMessage<VendorInvoice> | undefined, b: VendorInvoice | PlainMessage<VendorInvoice> | undefined): boolean {
    return proto3.util.equals(VendorInvoice, a, b);
  }
}

/**
 *
 * Describes the parameters required to add an item to a vendor invoice
 *
 * @generated from message Scailo.VendorInvoicesServiceItemCreateRequest
 */
export class VendorInvoicesServiceItemCreateRequest extends Message<VendorInvoicesServiceItemCreateRequest> {
  /**
   * Stores any comment that the user might add during this operation
   *
   * @generated from field: string user_comment = 1;
   */
  userComment = "";

  /**
   * Stores the vendor invoice ID
   *
   * @generated from field: uint64 vendor_invoice_id = 10;
   */
  vendorInvoiceId = protoInt64.zero;

  /**
   * Stores the family ID
   *
   * @generated from field: uint64 family_id = 11;
   */
  familyId = protoInt64.zero;

  /**
   * The quantity (in cents) being admitted in internal unit of material
   *
   * @generated from field: uint64 internal_quantity = 12;
   */
  internalQuantity = protoInt64.zero;

  /**
   * Stores the ID of the vendor's unit of material
   *
   * @generated from field: uint64 vendor_uom_id = 13;
   */
  vendorUomId = protoInt64.zero;

  /**
   * Stores the quantity (in cents) being admitted in vendor's unit of material
   *
   * @generated from field: uint64 vendor_quantity = 14;
   */
  vendorQuantity = protoInt64.zero;

  /**
   * The unit price of the item (as supplied by the vendor)
   *
   * @generated from field: uint64 vendor_unit_price = 15;
   */
  vendorUnitPrice = protoInt64.zero;

  /**
   * The ID of the associated tax group
   *
   * @generated from field: uint64 tax_group_id = 16;
   */
  taxGroupId = protoInt64.zero;

  /**
   * The applicable round off amount (optional, and can be positive or negative)
   *
   * @generated from field: int64 round_off = 17;
   */
  roundOff = protoInt64.zero;

  /**
   * Optional specifications
   *
   * @generated from field: string specifications = 18;
   */
  specifications = "";

  constructor(data?: PartialMessage<VendorInvoicesServiceItemCreateRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.VendorInvoicesServiceItemCreateRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "user_comment", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 10, name: "vendor_invoice_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 11, name: "family_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 12, name: "internal_quantity", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 13, name: "vendor_uom_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 14, name: "vendor_quantity", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 15, name: "vendor_unit_price", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 16, name: "tax_group_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 17, name: "round_off", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 18, name: "specifications", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): VendorInvoicesServiceItemCreateRequest {
    return new VendorInvoicesServiceItemCreateRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): VendorInvoicesServiceItemCreateRequest {
    return new VendorInvoicesServiceItemCreateRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): VendorInvoicesServiceItemCreateRequest {
    return new VendorInvoicesServiceItemCreateRequest().fromJsonString(jsonString, options);
  }

  static equals(a: VendorInvoicesServiceItemCreateRequest | PlainMessage<VendorInvoicesServiceItemCreateRequest> | undefined, b: VendorInvoicesServiceItemCreateRequest | PlainMessage<VendorInvoicesServiceItemCreateRequest> | undefined): boolean {
    return proto3.util.equals(VendorInvoicesServiceItemCreateRequest, a, b);
  }
}

/**
 *
 * Describes the parameters required to update an item in a vendor invoice
 *
 * @generated from message Scailo.VendorInvoicesServiceItemUpdateRequest
 */
export class VendorInvoicesServiceItemUpdateRequest extends Message<VendorInvoicesServiceItemUpdateRequest> {
  /**
   * Stores any comment that the user might add during this operation
   *
   * @generated from field: string user_comment = 1;
   */
  userComment = "";

  /**
   * The ID of the record
   *
   * @generated from field: uint64 id = 2;
   */
  id = protoInt64.zero;

  /**
   * The quantity (in cents) being admitted in internal unit of material
   *
   * @generated from field: uint64 internal_quantity = 12;
   */
  internalQuantity = protoInt64.zero;

  /**
   * Stores the ID of the vendor's unit of material
   *
   * @generated from field: uint64 vendor_uom_id = 13;
   */
  vendorUomId = protoInt64.zero;

  /**
   * Stores the quantity (in cents) being admitted in vendor's unit of material
   *
   * @generated from field: uint64 vendor_quantity = 14;
   */
  vendorQuantity = protoInt64.zero;

  /**
   * The unit price of the item (as supplied by the vendor)
   *
   * @generated from field: uint64 vendor_unit_price = 15;
   */
  vendorUnitPrice = protoInt64.zero;

  /**
   * The ID of the associated tax group
   *
   * @generated from field: uint64 tax_group_id = 16;
   */
  taxGroupId = protoInt64.zero;

  /**
   * The applicable round off amount (optional, and can be positive or negative)
   *
   * @generated from field: int64 round_off = 17;
   */
  roundOff = protoInt64.zero;

  /**
   * Optional specifications
   *
   * @generated from field: string specifications = 18;
   */
  specifications = "";

  constructor(data?: PartialMessage<VendorInvoicesServiceItemUpdateRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.VendorInvoicesServiceItemUpdateRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "user_comment", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 12, name: "internal_quantity", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 13, name: "vendor_uom_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 14, name: "vendor_quantity", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 15, name: "vendor_unit_price", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 16, name: "tax_group_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 17, name: "round_off", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 18, name: "specifications", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): VendorInvoicesServiceItemUpdateRequest {
    return new VendorInvoicesServiceItemUpdateRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): VendorInvoicesServiceItemUpdateRequest {
    return new VendorInvoicesServiceItemUpdateRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): VendorInvoicesServiceItemUpdateRequest {
    return new VendorInvoicesServiceItemUpdateRequest().fromJsonString(jsonString, options);
  }

  static equals(a: VendorInvoicesServiceItemUpdateRequest | PlainMessage<VendorInvoicesServiceItemUpdateRequest> | undefined, b: VendorInvoicesServiceItemUpdateRequest | PlainMessage<VendorInvoicesServiceItemUpdateRequest> | undefined): boolean {
    return proto3.util.equals(VendorInvoicesServiceItemUpdateRequest, a, b);
  }
}

/**
 *
 * Describes the parameters that constitute an item associated to a vendor invoice
 *
 * @generated from message Scailo.VendorInvoiceItem
 */
export class VendorInvoiceItem extends Message<VendorInvoiceItem> {
  /**
   * Stores a globally unique entity UUID. This will be set at the organization level
   *
   * @generated from field: string entity_uuid = 1;
   */
  entityUuid = "";

  /**
   * Stores the metadata of this vendor invoice
   *
   * @generated from field: Scailo.EmployeeMetadata metadata = 2;
   */
  metadata?: EmployeeMetadata;

  /**
   * Stores the approval metadata
   *
   * @generated from field: Scailo.ApprovalMetadata approval_metadata = 3;
   */
  approvalMetadata?: ApprovalMetadata;

  /**
   * Denotes if this record requires approval (or has been approved)
   *
   * @generated from field: bool need_approval = 4;
   */
  needApproval = false;

  /**
   * Stores any comment that the user might have added during an operation
   *
   * @generated from field: string user_comment = 5;
   */
  userComment = "";

  /**
   * Stores the vendor invoice ID
   *
   * @generated from field: uint64 vendor_invoice_id = 10;
   */
  vendorInvoiceId = protoInt64.zero;

  /**
   * Stores the family ID
   *
   * @generated from field: uint64 family_id = 11;
   */
  familyId = protoInt64.zero;

  /**
   * The quantity (in cents) being admitted in internal unit of material
   *
   * @generated from field: uint64 internal_quantity = 12;
   */
  internalQuantity = protoInt64.zero;

  /**
   * Stores the ID of the vendor's unit of material
   *
   * @generated from field: uint64 vendor_uom_id = 13;
   */
  vendorUomId = protoInt64.zero;

  /**
   * Stores the quantity (in cents) being admitted in vendor's unit of material
   *
   * @generated from field: uint64 vendor_quantity = 14;
   */
  vendorQuantity = protoInt64.zero;

  /**
   * The unit price of the item (as supplied by the vendor)
   *
   * @generated from field: uint64 vendor_unit_price = 15;
   */
  vendorUnitPrice = protoInt64.zero;

  /**
   * The ID of the associated tax group
   *
   * @generated from field: uint64 tax_group_id = 16;
   */
  taxGroupId = protoInt64.zero;

  /**
   * The applicable round off amount (optional, and can be positive or negative)
   *
   * @generated from field: int64 round_off = 17;
   */
  roundOff = protoInt64.zero;

  /**
   * Optional specifications
   *
   * @generated from field: string specifications = 18;
   */
  specifications = "";

  /**
   * ----------------------------------------
   * The UUID of the associated vendor invoice
   *
   * @generated from field: string vendor_invoice_uuid = 110;
   */
  vendorInvoiceUuid = "";

  /**
   * The UUID of the associated family
   *
   * ----------------------------------------
   *
   * @generated from field: string family_uuid = 111;
   */
  familyUuid = "";

  constructor(data?: PartialMessage<VendorInvoiceItem>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.VendorInvoiceItem";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "entity_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "metadata", kind: "message", T: EmployeeMetadata },
    { no: 3, name: "approval_metadata", kind: "message", T: ApprovalMetadata },
    { no: 4, name: "need_approval", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 5, name: "user_comment", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 10, name: "vendor_invoice_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 11, name: "family_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 12, name: "internal_quantity", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 13, name: "vendor_uom_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 14, name: "vendor_quantity", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 15, name: "vendor_unit_price", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 16, name: "tax_group_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 17, name: "round_off", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 18, name: "specifications", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 110, name: "vendor_invoice_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 111, name: "family_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): VendorInvoiceItem {
    return new VendorInvoiceItem().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): VendorInvoiceItem {
    return new VendorInvoiceItem().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): VendorInvoiceItem {
    return new VendorInvoiceItem().fromJsonString(jsonString, options);
  }

  static equals(a: VendorInvoiceItem | PlainMessage<VendorInvoiceItem> | undefined, b: VendorInvoiceItem | PlainMessage<VendorInvoiceItem> | undefined): boolean {
    return proto3.util.equals(VendorInvoiceItem, a, b);
  }
}

/**
 *
 * Describes the message consisting of the list of vendor invoices
 *
 * @generated from message Scailo.VendorInvoicesList
 */
export class VendorInvoicesList extends Message<VendorInvoicesList> {
  /**
   * List of records
   *
   * @generated from field: repeated Scailo.VendorInvoice list = 1;
   */
  list: VendorInvoice[] = [];

  constructor(data?: PartialMessage<VendorInvoicesList>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.VendorInvoicesList";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "list", kind: "message", T: VendorInvoice, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): VendorInvoicesList {
    return new VendorInvoicesList().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): VendorInvoicesList {
    return new VendorInvoicesList().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): VendorInvoicesList {
    return new VendorInvoicesList().fromJsonString(jsonString, options);
  }

  static equals(a: VendorInvoicesList | PlainMessage<VendorInvoicesList> | undefined, b: VendorInvoicesList | PlainMessage<VendorInvoicesList> | undefined): boolean {
    return proto3.util.equals(VendorInvoicesList, a, b);
  }
}

/**
 *
 * Describes the message consisting of the list of vendor invoice items
 *
 * @generated from message Scailo.VendorInvoiceItemsList
 */
export class VendorInvoiceItemsList extends Message<VendorInvoiceItemsList> {
  /**
   * List of records
   *
   * @generated from field: repeated Scailo.VendorInvoiceItem list = 1;
   */
  list: VendorInvoiceItem[] = [];

  constructor(data?: PartialMessage<VendorInvoiceItemsList>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.VendorInvoiceItemsList";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "list", kind: "message", T: VendorInvoiceItem, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): VendorInvoiceItemsList {
    return new VendorInvoiceItemsList().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): VendorInvoiceItemsList {
    return new VendorInvoiceItemsList().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): VendorInvoiceItemsList {
    return new VendorInvoiceItemsList().fromJsonString(jsonString, options);
  }

  static equals(a: VendorInvoiceItemsList | PlainMessage<VendorInvoiceItemsList> | undefined, b: VendorInvoiceItemsList | PlainMessage<VendorInvoiceItemsList> | undefined): boolean {
    return proto3.util.equals(VendorInvoiceItemsList, a, b);
  }
}

/**
 *
 * Describes the parameters that are required to retrieve the history of the record
 *
 * @generated from message Scailo.VendorInvoiceItemHistoryRequest
 */
export class VendorInvoiceItemHistoryRequest extends Message<VendorInvoiceItemHistoryRequest> {
  /**
   * Stores the vendor invoice ID
   *
   * @generated from field: uint64 vendor_invoice_id = 10;
   */
  vendorInvoiceId = protoInt64.zero;

  /**
   * Stores the family ID
   *
   * @generated from field: uint64 family_id = 11;
   */
  familyId = protoInt64.zero;

  constructor(data?: PartialMessage<VendorInvoiceItemHistoryRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.VendorInvoiceItemHistoryRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 10, name: "vendor_invoice_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 11, name: "family_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): VendorInvoiceItemHistoryRequest {
    return new VendorInvoiceItemHistoryRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): VendorInvoiceItemHistoryRequest {
    return new VendorInvoiceItemHistoryRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): VendorInvoiceItemHistoryRequest {
    return new VendorInvoiceItemHistoryRequest().fromJsonString(jsonString, options);
  }

  static equals(a: VendorInvoiceItemHistoryRequest | PlainMessage<VendorInvoiceItemHistoryRequest> | undefined, b: VendorInvoiceItemHistoryRequest | PlainMessage<VendorInvoiceItemHistoryRequest> | undefined): boolean {
    return proto3.util.equals(VendorInvoiceItemHistoryRequest, a, b);
  }
}

/**
 *
 * Describes the parameters that are required to retrieve the info of a prospective vendor invoice item
 *
 * @generated from message Scailo.VendorInvoiceItemProspectiveInfoRequest
 */
export class VendorInvoiceItemProspectiveInfoRequest extends Message<VendorInvoiceItemProspectiveInfoRequest> {
  /**
   * Stores the vendor invoice ID
   *
   * @generated from field: uint64 vendor_invoice_id = 10;
   */
  vendorInvoiceId = protoInt64.zero;

  /**
   * Stores the family ID
   *
   * @generated from field: uint64 family_id = 11;
   */
  familyId = protoInt64.zero;

  constructor(data?: PartialMessage<VendorInvoiceItemProspectiveInfoRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.VendorInvoiceItemProspectiveInfoRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 10, name: "vendor_invoice_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 11, name: "family_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): VendorInvoiceItemProspectiveInfoRequest {
    return new VendorInvoiceItemProspectiveInfoRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): VendorInvoiceItemProspectiveInfoRequest {
    return new VendorInvoiceItemProspectiveInfoRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): VendorInvoiceItemProspectiveInfoRequest {
    return new VendorInvoiceItemProspectiveInfoRequest().fromJsonString(jsonString, options);
  }

  static equals(a: VendorInvoiceItemProspectiveInfoRequest | PlainMessage<VendorInvoiceItemProspectiveInfoRequest> | undefined, b: VendorInvoiceItemProspectiveInfoRequest | PlainMessage<VendorInvoiceItemProspectiveInfoRequest> | undefined): boolean {
    return proto3.util.equals(VendorInvoiceItemProspectiveInfoRequest, a, b);
  }
}

/**
 *
 * Describes the request payload to retrieve the quantity that has already been added for the specific ref_from, ref_id and family_id
 *
 * @generated from message Scailo.VendorInvoicesServiceAlreadyAddedQuantityForSourceRequest
 */
export class VendorInvoicesServiceAlreadyAddedQuantityForSourceRequest extends Message<VendorInvoicesServiceAlreadyAddedQuantityForSourceRequest> {
  /**
   * The associated reference
   *
   * @generated from field: Scailo.VENDOR_INVOICE_REF_FROM ref_from = 1;
   */
  refFrom = VENDOR_INVOICE_REF_FROM.VENDOR_INVOICE_REF_FROM_ANY_UNSPECIFIED;

  /**
   * The associated ID of the reference
   *
   * @generated from field: uint64 ref_id = 2;
   */
  refId = protoInt64.zero;

  /**
   * The associated family ID
   *
   * @generated from field: uint64 family_id = 3;
   */
  familyId = protoInt64.zero;

  constructor(data?: PartialMessage<VendorInvoicesServiceAlreadyAddedQuantityForSourceRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.VendorInvoicesServiceAlreadyAddedQuantityForSourceRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "ref_from", kind: "enum", T: proto3.getEnumType(VENDOR_INVOICE_REF_FROM) },
    { no: 2, name: "ref_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 3, name: "family_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): VendorInvoicesServiceAlreadyAddedQuantityForSourceRequest {
    return new VendorInvoicesServiceAlreadyAddedQuantityForSourceRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): VendorInvoicesServiceAlreadyAddedQuantityForSourceRequest {
    return new VendorInvoicesServiceAlreadyAddedQuantityForSourceRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): VendorInvoicesServiceAlreadyAddedQuantityForSourceRequest {
    return new VendorInvoicesServiceAlreadyAddedQuantityForSourceRequest().fromJsonString(jsonString, options);
  }

  static equals(a: VendorInvoicesServiceAlreadyAddedQuantityForSourceRequest | PlainMessage<VendorInvoicesServiceAlreadyAddedQuantityForSourceRequest> | undefined, b: VendorInvoicesServiceAlreadyAddedQuantityForSourceRequest | PlainMessage<VendorInvoicesServiceAlreadyAddedQuantityForSourceRequest> | undefined): boolean {
    return proto3.util.equals(VendorInvoicesServiceAlreadyAddedQuantityForSourceRequest, a, b);
  }
}

/**
 *
 * Describes a pagination request to retrieve records
 *
 * @generated from message Scailo.VendorInvoicesServicePaginationReq
 */
export class VendorInvoicesServicePaginationReq extends Message<VendorInvoicesServicePaginationReq> {
  /**
   * If true, then returns only active records. If false, then returns only inactive records
   *
   * @generated from field: Scailo.BOOL_FILTER is_active = 1;
   */
  isActive = BOOL_FILTER.BOOL_FILTER_ANY_UNSPECIFIED;

  /**
   * The number of records that need to be sent in the response
   *
   * @generated from field: int64 count = 2;
   */
  count = protoInt64.zero;

  /**
   * The number that need to be offset by before fetching the records
   *
   * @generated from field: uint64 offset = 3;
   */
  offset = protoInt64.zero;

  /**
   * The sort order that is to be used to fetch the pagination response
   *
   * @generated from field: Scailo.SORT_ORDER sort_order = 4;
   */
  sortOrder = SORT_ORDER.ASCENDING_UNSPECIFIED;

  /**
   * The sort key that is to be used to fetch the pagination response
   *
   * @generated from field: Scailo.VENDOR_INVOICE_SORT_KEY sort_key = 5;
   */
  sortKey = VENDOR_INVOICE_SORT_KEY.VENDOR_INVOICE_SORT_KEY_ID_UNSPECIFIED;

  /**
   * The status of this vendor invoice
   *
   * @generated from field: Scailo.STANDARD_LIFECYCLE_STATUS status = 6;
   */
  status = STANDARD_LIFECYCLE_STATUS.ANY_UNSPECIFIED;

  constructor(data?: PartialMessage<VendorInvoicesServicePaginationReq>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.VendorInvoicesServicePaginationReq";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "is_active", kind: "enum", T: proto3.getEnumType(BOOL_FILTER) },
    { no: 2, name: "count", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "offset", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 4, name: "sort_order", kind: "enum", T: proto3.getEnumType(SORT_ORDER) },
    { no: 5, name: "sort_key", kind: "enum", T: proto3.getEnumType(VENDOR_INVOICE_SORT_KEY) },
    { no: 6, name: "status", kind: "enum", T: proto3.getEnumType(STANDARD_LIFECYCLE_STATUS) },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): VendorInvoicesServicePaginationReq {
    return new VendorInvoicesServicePaginationReq().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): VendorInvoicesServicePaginationReq {
    return new VendorInvoicesServicePaginationReq().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): VendorInvoicesServicePaginationReq {
    return new VendorInvoicesServicePaginationReq().fromJsonString(jsonString, options);
  }

  static equals(a: VendorInvoicesServicePaginationReq | PlainMessage<VendorInvoicesServicePaginationReq> | undefined, b: VendorInvoicesServicePaginationReq | PlainMessage<VendorInvoicesServicePaginationReq> | undefined): boolean {
    return proto3.util.equals(VendorInvoicesServicePaginationReq, a, b);
  }
}

/**
 *
 * Describes the response to a pagination request
 *
 * @generated from message Scailo.VendorInvoicesServicePaginationResponse
 */
export class VendorInvoicesServicePaginationResponse extends Message<VendorInvoicesServicePaginationResponse> {
  /**
   * The number of records in this payload
   *
   * @generated from field: uint64 count = 1;
   */
  count = protoInt64.zero;

  /**
   * The number that has been offset before fetching the records. This is the same value that has been sent as part of the pagination request
   *
   * @generated from field: uint64 offset = 2;
   */
  offset = protoInt64.zero;

  /**
   * The total number of records that are available
   *
   * @generated from field: uint64 total = 3;
   */
  total = protoInt64.zero;

  /**
   * The list of records
   *
   * @generated from field: repeated Scailo.VendorInvoice payload = 4;
   */
  payload: VendorInvoice[] = [];

  constructor(data?: PartialMessage<VendorInvoicesServicePaginationResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.VendorInvoicesServicePaginationResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "count", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 2, name: "offset", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 3, name: "total", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 4, name: "payload", kind: "message", T: VendorInvoice, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): VendorInvoicesServicePaginationResponse {
    return new VendorInvoicesServicePaginationResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): VendorInvoicesServicePaginationResponse {
    return new VendorInvoicesServicePaginationResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): VendorInvoicesServicePaginationResponse {
    return new VendorInvoicesServicePaginationResponse().fromJsonString(jsonString, options);
  }

  static equals(a: VendorInvoicesServicePaginationResponse | PlainMessage<VendorInvoicesServicePaginationResponse> | undefined, b: VendorInvoicesServicePaginationResponse | PlainMessage<VendorInvoicesServicePaginationResponse> | undefined): boolean {
    return proto3.util.equals(VendorInvoicesServicePaginationResponse, a, b);
  }
}

/**
 *
 * Describes the base request payload of a filter search
 *
 * @generated from message Scailo.VendorInvoicesServiceFilterReq
 */
export class VendorInvoicesServiceFilterReq extends Message<VendorInvoicesServiceFilterReq> {
  /**
   * If true, then returns only active records. If false, then returns only inactive records
   *
   * @generated from field: Scailo.BOOL_FILTER is_active = 1;
   */
  isActive = BOOL_FILTER.BOOL_FILTER_ANY_UNSPECIFIED;

  /**
   * The number of records that need to be sent in the response. Returns all records if it is set to -1
   *
   * @generated from field: int64 count = 2;
   */
  count = protoInt64.zero;

  /**
   * The number that need to be offset by before fetching the records
   *
   * @generated from field: uint64 offset = 3;
   */
  offset = protoInt64.zero;

  /**
   * The sort order that is to be used to fetch the pagination response
   *
   * @generated from field: Scailo.SORT_ORDER sort_order = 4;
   */
  sortOrder = SORT_ORDER.ASCENDING_UNSPECIFIED;

  /**
   * The sort key that is to be used to fetch the pagination response
   *
   * @generated from field: Scailo.VENDOR_INVOICE_SORT_KEY sort_key = 5;
   */
  sortKey = VENDOR_INVOICE_SORT_KEY.VENDOR_INVOICE_SORT_KEY_ID_UNSPECIFIED;

  /**
   * The minimum timestamp that needs to be considered to filter by creation
   *
   * @generated from field: uint64 creation_timestamp_start = 101;
   */
  creationTimestampStart = protoInt64.zero;

  /**
   * The maximum timestamp that needs to be considered to filter by creation
   *
   * @generated from field: uint64 creation_timestamp_end = 102;
   */
  creationTimestampEnd = protoInt64.zero;

  /**
   * The minimum timestamp that needs to be considered to filter by modification
   *
   * @generated from field: uint64 modification_timestamp_start = 103;
   */
  modificationTimestampStart = protoInt64.zero;

  /**
   * The maximum timestamp that needs to be considered to filter by modification
   *
   * @generated from field: uint64 modification_timestamp_end = 104;
   */
  modificationTimestampEnd = protoInt64.zero;

  /**
   * The entity UUID that is to be used to filter records
   *
   * @generated from field: string entity_uuid = 8;
   */
  entityUuid = "";

  /**
   * The status of this vendor invoice
   *
   * @generated from field: Scailo.STANDARD_LIFECYCLE_STATUS status = 10;
   */
  status = STANDARD_LIFECYCLE_STATUS.ANY_UNSPECIFIED;

  /**
   * The start range of approved timestamp
   *
   * @generated from field: uint64 approved_on_start = 11;
   */
  approvedOnStart = protoInt64.zero;

  /**
   * The end range of approved timestamp
   *
   * @generated from field: uint64 approved_on_end = 12;
   */
  approvedOnEnd = protoInt64.zero;

  /**
   * The ID of the approver
   *
   * @generated from field: uint64 approved_by_user_id = 13;
   */
  approvedByUserId = protoInt64.zero;

  /**
   * The role ID of the approver
   *
   * @generated from field: uint64 approver_role_id = 14;
   */
  approverRoleId = protoInt64.zero;

  /**
   * The start range of completed timestamp
   *
   * @generated from field: uint64 completed_on_start = 15;
   */
  completedOnStart = protoInt64.zero;

  /**
   * The end range of completed timestamp
   *
   * @generated from field: uint64 completed_on_end = 16;
   */
  completedOnEnd = protoInt64.zero;

  /**
   * The reference ID of the vendor invoice
   *
   * @generated from field: string reference_id = 20;
   */
  referenceId = "";

  /**
   * The unique reference number that has been automatically generated
   *
   * @generated from field: string final_ref_number = 21;
   */
  finalRefNumber = "";

  /**
   * The associated reference
   *
   * @generated from field: Scailo.VENDOR_INVOICE_REF_FROM ref_from = 22;
   */
  refFrom = VENDOR_INVOICE_REF_FROM.VENDOR_INVOICE_REF_FROM_ANY_UNSPECIFIED;

  /**
   * The associated ID of the reference
   *
   * @generated from field: uint64 ref_id = 23;
   */
  refId = protoInt64.zero;

  /**
   * The vendor's bill number
   *
   * @generated from field: string vendor_bill_no = 24;
   */
  vendorBillNo = "";

  /**
   * The minimum vendor bill date which should be considered
   *
   * @generated from field: string vendor_bill_date_start = 25;
   */
  vendorBillDateStart = "";

  /**
   * The maximum vendor bill date which should be considered
   *
   * @generated from field: string vendor_bill_date_end = 26;
   */
  vendorBillDateEnd = "";

  /**
   * The exact vendor bill date which should be considered
   *
   * @generated from field: string vendor_bill_date_exact = 27;
   */
  vendorBillDateExact = "";

  /**
   * The ID of the associated currency
   *
   * @generated from field: uint64 currency_id = 30;
   */
  currencyId = protoInt64.zero;

  /**
   * The ID of the associated vendor
   *
   * @generated from field: uint64 vendor_id = 31;
   */
  vendorId = protoInt64.zero;

  /**
   * The ID of the associated project
   *
   * @generated from field: uint64 project_id = 32;
   */
  projectId = protoInt64.zero;

  /**
   * The ID of the family
   *
   * @generated from field: uint64 family_id = 40;
   */
  familyId = protoInt64.zero;

  /**
   * Stores the minimum value of the vendor invoice (ignored if 0)
   *
   * @generated from field: uint64 total_value_min = 50;
   */
  totalValueMin = protoInt64.zero;

  /**
   * Stores the maximum value of the vendor invoice (ignored if 0)
   *
   * @generated from field: uint64 total_value_max = 51;
   */
  totalValueMax = protoInt64.zero;

  constructor(data?: PartialMessage<VendorInvoicesServiceFilterReq>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.VendorInvoicesServiceFilterReq";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "is_active", kind: "enum", T: proto3.getEnumType(BOOL_FILTER) },
    { no: 2, name: "count", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "offset", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 4, name: "sort_order", kind: "enum", T: proto3.getEnumType(SORT_ORDER) },
    { no: 5, name: "sort_key", kind: "enum", T: proto3.getEnumType(VENDOR_INVOICE_SORT_KEY) },
    { no: 101, name: "creation_timestamp_start", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 102, name: "creation_timestamp_end", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 103, name: "modification_timestamp_start", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 104, name: "modification_timestamp_end", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 8, name: "entity_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 10, name: "status", kind: "enum", T: proto3.getEnumType(STANDARD_LIFECYCLE_STATUS) },
    { no: 11, name: "approved_on_start", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 12, name: "approved_on_end", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 13, name: "approved_by_user_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 14, name: "approver_role_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 15, name: "completed_on_start", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 16, name: "completed_on_end", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 20, name: "reference_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 21, name: "final_ref_number", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 22, name: "ref_from", kind: "enum", T: proto3.getEnumType(VENDOR_INVOICE_REF_FROM) },
    { no: 23, name: "ref_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 24, name: "vendor_bill_no", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 25, name: "vendor_bill_date_start", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 26, name: "vendor_bill_date_end", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 27, name: "vendor_bill_date_exact", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 30, name: "currency_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 31, name: "vendor_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 32, name: "project_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 40, name: "family_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 50, name: "total_value_min", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 51, name: "total_value_max", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): VendorInvoicesServiceFilterReq {
    return new VendorInvoicesServiceFilterReq().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): VendorInvoicesServiceFilterReq {
    return new VendorInvoicesServiceFilterReq().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): VendorInvoicesServiceFilterReq {
    return new VendorInvoicesServiceFilterReq().fromJsonString(jsonString, options);
  }

  static equals(a: VendorInvoicesServiceFilterReq | PlainMessage<VendorInvoicesServiceFilterReq> | undefined, b: VendorInvoicesServiceFilterReq | PlainMessage<VendorInvoicesServiceFilterReq> | undefined): boolean {
    return proto3.util.equals(VendorInvoicesServiceFilterReq, a, b);
  }
}

/**
 *
 * Describes the base request payload of a count search
 *
 * @generated from message Scailo.VendorInvoicesServiceCountReq
 */
export class VendorInvoicesServiceCountReq extends Message<VendorInvoicesServiceCountReq> {
  /**
   * If true, then returns only active records. If false, then returns only inactive records
   *
   * @generated from field: Scailo.BOOL_FILTER is_active = 1;
   */
  isActive = BOOL_FILTER.BOOL_FILTER_ANY_UNSPECIFIED;

  /**
   * The minimum timestamp that needs to be considered to filter by creation
   *
   * @generated from field: uint64 creation_timestamp_start = 101;
   */
  creationTimestampStart = protoInt64.zero;

  /**
   * The maximum timestamp that needs to be considered to filter by creation
   *
   * @generated from field: uint64 creation_timestamp_end = 102;
   */
  creationTimestampEnd = protoInt64.zero;

  /**
   * The minimum timestamp that needs to be considered to filter by modification
   *
   * @generated from field: uint64 modification_timestamp_start = 103;
   */
  modificationTimestampStart = protoInt64.zero;

  /**
   * The maximum timestamp that needs to be considered to filter by modification
   *
   * @generated from field: uint64 modification_timestamp_end = 104;
   */
  modificationTimestampEnd = protoInt64.zero;

  /**
   * The entity UUID that is to be used to filter records
   *
   * @generated from field: string entity_uuid = 8;
   */
  entityUuid = "";

  /**
   * The status of this vendor invoice
   *
   * @generated from field: Scailo.STANDARD_LIFECYCLE_STATUS status = 10;
   */
  status = STANDARD_LIFECYCLE_STATUS.ANY_UNSPECIFIED;

  /**
   * The start range of approved timestamp
   *
   * @generated from field: uint64 approved_on_start = 11;
   */
  approvedOnStart = protoInt64.zero;

  /**
   * The end range of approved timestamp
   *
   * @generated from field: uint64 approved_on_end = 12;
   */
  approvedOnEnd = protoInt64.zero;

  /**
   * The ID of the approver
   *
   * @generated from field: uint64 approved_by_user_id = 13;
   */
  approvedByUserId = protoInt64.zero;

  /**
   * The role ID of the approver
   *
   * @generated from field: uint64 approver_role_id = 14;
   */
  approverRoleId = protoInt64.zero;

  /**
   * The start range of completed timestamp
   *
   * @generated from field: uint64 completed_on_start = 15;
   */
  completedOnStart = protoInt64.zero;

  /**
   * The end range of completed timestamp
   *
   * @generated from field: uint64 completed_on_end = 16;
   */
  completedOnEnd = protoInt64.zero;

  /**
   * The reference ID of the vendor invoice
   *
   * @generated from field: string reference_id = 20;
   */
  referenceId = "";

  /**
   * The unique reference number that has been automatically generated
   *
   * @generated from field: string final_ref_number = 21;
   */
  finalRefNumber = "";

  /**
   * The associated reference
   *
   * @generated from field: Scailo.VENDOR_INVOICE_REF_FROM ref_from = 22;
   */
  refFrom = VENDOR_INVOICE_REF_FROM.VENDOR_INVOICE_REF_FROM_ANY_UNSPECIFIED;

  /**
   * The associated ID of the reference
   *
   * @generated from field: uint64 ref_id = 23;
   */
  refId = protoInt64.zero;

  /**
   * The vendor's bill number
   *
   * @generated from field: string vendor_bill_no = 24;
   */
  vendorBillNo = "";

  /**
   * The minimum vendor bill date which should be considered
   *
   * @generated from field: string vendor_bill_date_start = 25;
   */
  vendorBillDateStart = "";

  /**
   * The maximum vendor bill date which should be considered
   *
   * @generated from field: string vendor_bill_date_end = 26;
   */
  vendorBillDateEnd = "";

  /**
   * The exact vendor bill date which should be considered
   *
   * @generated from field: string vendor_bill_date_exact = 27;
   */
  vendorBillDateExact = "";

  /**
   * The ID of the associated currency
   *
   * @generated from field: uint64 currency_id = 30;
   */
  currencyId = protoInt64.zero;

  /**
   * The ID of the associated vendor
   *
   * @generated from field: uint64 vendor_id = 31;
   */
  vendorId = protoInt64.zero;

  /**
   * The ID of the associated project
   *
   * @generated from field: uint64 project_id = 32;
   */
  projectId = protoInt64.zero;

  /**
   * The ID of the family
   *
   * @generated from field: uint64 family_id = 40;
   */
  familyId = protoInt64.zero;

  /**
   * Stores the minimum value of the vendor invoice (ignored if 0)
   *
   * @generated from field: uint64 total_value_min = 50;
   */
  totalValueMin = protoInt64.zero;

  /**
   * Stores the maximum value of the vendor invoice (ignored if 0)
   *
   * @generated from field: uint64 total_value_max = 51;
   */
  totalValueMax = protoInt64.zero;

  constructor(data?: PartialMessage<VendorInvoicesServiceCountReq>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.VendorInvoicesServiceCountReq";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "is_active", kind: "enum", T: proto3.getEnumType(BOOL_FILTER) },
    { no: 101, name: "creation_timestamp_start", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 102, name: "creation_timestamp_end", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 103, name: "modification_timestamp_start", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 104, name: "modification_timestamp_end", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 8, name: "entity_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 10, name: "status", kind: "enum", T: proto3.getEnumType(STANDARD_LIFECYCLE_STATUS) },
    { no: 11, name: "approved_on_start", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 12, name: "approved_on_end", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 13, name: "approved_by_user_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 14, name: "approver_role_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 15, name: "completed_on_start", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 16, name: "completed_on_end", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 20, name: "reference_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 21, name: "final_ref_number", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 22, name: "ref_from", kind: "enum", T: proto3.getEnumType(VENDOR_INVOICE_REF_FROM) },
    { no: 23, name: "ref_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 24, name: "vendor_bill_no", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 25, name: "vendor_bill_date_start", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 26, name: "vendor_bill_date_end", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 27, name: "vendor_bill_date_exact", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 30, name: "currency_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 31, name: "vendor_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 32, name: "project_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 40, name: "family_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 50, name: "total_value_min", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 51, name: "total_value_max", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): VendorInvoicesServiceCountReq {
    return new VendorInvoicesServiceCountReq().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): VendorInvoicesServiceCountReq {
    return new VendorInvoicesServiceCountReq().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): VendorInvoicesServiceCountReq {
    return new VendorInvoicesServiceCountReq().fromJsonString(jsonString, options);
  }

  static equals(a: VendorInvoicesServiceCountReq | PlainMessage<VendorInvoicesServiceCountReq> | undefined, b: VendorInvoicesServiceCountReq | PlainMessage<VendorInvoicesServiceCountReq> | undefined): boolean {
    return proto3.util.equals(VendorInvoicesServiceCountReq, a, b);
  }
}

/**
 *
 * Describes the request payload for performing a generic search operation on records
 *
 * @generated from message Scailo.VendorInvoicesServiceSearchAllReq
 */
export class VendorInvoicesServiceSearchAllReq extends Message<VendorInvoicesServiceSearchAllReq> {
  /**
   * If true, then returns only active records. If false, then returns only inactive records
   *
   * @generated from field: Scailo.BOOL_FILTER is_active = 1;
   */
  isActive = BOOL_FILTER.BOOL_FILTER_ANY_UNSPECIFIED;

  /**
   * The number of records that need to be sent in the response. Returns all records if it is set to -1
   *
   * @generated from field: int64 count = 2;
   */
  count = protoInt64.zero;

  /**
   * The number that need to be offset by before fetching the records
   *
   * @generated from field: uint64 offset = 3;
   */
  offset = protoInt64.zero;

  /**
   * The sort order that is to be used to fetch the pagination response
   *
   * @generated from field: Scailo.SORT_ORDER sort_order = 4;
   */
  sortOrder = SORT_ORDER.ASCENDING_UNSPECIFIED;

  /**
   * The sort key that is to be used to fetch the pagination response
   *
   * @generated from field: Scailo.VENDOR_INVOICE_SORT_KEY sort_key = 5;
   */
  sortKey = VENDOR_INVOICE_SORT_KEY.VENDOR_INVOICE_SORT_KEY_ID_UNSPECIFIED;

  /**
   * The entity UUID that is to be used to filter records
   *
   * @generated from field: string entity_uuid = 6;
   */
  entityUuid = "";

  /**
   * Limit the search space to the given status
   *
   * @generated from field: Scailo.STANDARD_LIFECYCLE_STATUS status = 10;
   */
  status = STANDARD_LIFECYCLE_STATUS.ANY_UNSPECIFIED;

  /**
   * Describes the key with which the search operation needs to be performed
   *
   * @generated from field: string search_key = 11;
   */
  searchKey = "";

  /**
   * The associated reference
   *
   * @generated from field: Scailo.VENDOR_INVOICE_REF_FROM ref_from = 22;
   */
  refFrom = VENDOR_INVOICE_REF_FROM.VENDOR_INVOICE_REF_FROM_ANY_UNSPECIFIED;

  /**
   * The associated ID of the reference
   *
   * @generated from field: uint64 ref_id = 23;
   */
  refId = protoInt64.zero;

  /**
   * The ID of the associated vendor
   *
   * @generated from field: uint64 vendor_id = 25;
   */
  vendorId = protoInt64.zero;

  constructor(data?: PartialMessage<VendorInvoicesServiceSearchAllReq>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.VendorInvoicesServiceSearchAllReq";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "is_active", kind: "enum", T: proto3.getEnumType(BOOL_FILTER) },
    { no: 2, name: "count", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "offset", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 4, name: "sort_order", kind: "enum", T: proto3.getEnumType(SORT_ORDER) },
    { no: 5, name: "sort_key", kind: "enum", T: proto3.getEnumType(VENDOR_INVOICE_SORT_KEY) },
    { no: 6, name: "entity_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 10, name: "status", kind: "enum", T: proto3.getEnumType(STANDARD_LIFECYCLE_STATUS) },
    { no: 11, name: "search_key", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 22, name: "ref_from", kind: "enum", T: proto3.getEnumType(VENDOR_INVOICE_REF_FROM) },
    { no: 23, name: "ref_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 25, name: "vendor_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): VendorInvoicesServiceSearchAllReq {
    return new VendorInvoicesServiceSearchAllReq().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): VendorInvoicesServiceSearchAllReq {
    return new VendorInvoicesServiceSearchAllReq().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): VendorInvoicesServiceSearchAllReq {
    return new VendorInvoicesServiceSearchAllReq().fromJsonString(jsonString, options);
  }

  static equals(a: VendorInvoicesServiceSearchAllReq | PlainMessage<VendorInvoicesServiceSearchAllReq> | undefined, b: VendorInvoicesServiceSearchAllReq | PlainMessage<VendorInvoicesServiceSearchAllReq> | undefined): boolean {
    return proto3.util.equals(VendorInvoicesServiceSearchAllReq, a, b);
  }
}

/**
 *
 * Describes the parameters necessary to create a vendor invoice reference
 *
 * @generated from message Scailo.VendorInvoicesServiceReferenceCreateRequest
 */
export class VendorInvoicesServiceReferenceCreateRequest extends Message<VendorInvoicesServiceReferenceCreateRequest> {
  /**
   * Stores any comment that the user might add during this operation
   *
   * @generated from field: string user_comment = 1;
   */
  userComment = "";

  /**
   * Stores the vendor invoice ID
   *
   * @generated from field: uint64 vendor_invoice_id = 10;
   */
  vendorInvoiceId = protoInt64.zero;

  /**
   * Stores the goods receipt ID
   *
   * @generated from field: uint64 goods_receipt_id = 11;
   */
  goodsReceiptId = protoInt64.zero;

  constructor(data?: PartialMessage<VendorInvoicesServiceReferenceCreateRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.VendorInvoicesServiceReferenceCreateRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "user_comment", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 10, name: "vendor_invoice_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 11, name: "goods_receipt_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): VendorInvoicesServiceReferenceCreateRequest {
    return new VendorInvoicesServiceReferenceCreateRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): VendorInvoicesServiceReferenceCreateRequest {
    return new VendorInvoicesServiceReferenceCreateRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): VendorInvoicesServiceReferenceCreateRequest {
    return new VendorInvoicesServiceReferenceCreateRequest().fromJsonString(jsonString, options);
  }

  static equals(a: VendorInvoicesServiceReferenceCreateRequest | PlainMessage<VendorInvoicesServiceReferenceCreateRequest> | undefined, b: VendorInvoicesServiceReferenceCreateRequest | PlainMessage<VendorInvoicesServiceReferenceCreateRequest> | undefined): boolean {
    return proto3.util.equals(VendorInvoicesServiceReferenceCreateRequest, a, b);
  }
}

/**
 *
 * Describes the parameters that constitute a vendor invoice reference
 *
 * @generated from message Scailo.VendorInvoiceReference
 */
export class VendorInvoiceReference extends Message<VendorInvoiceReference> {
  /**
   * Stores a globally unique entity UUID. This will be set at the organization level
   *
   * @generated from field: string entity_uuid = 1;
   */
  entityUuid = "";

  /**
   * Stores the metadata of this vendor invoice
   *
   * @generated from field: Scailo.EmployeeMetadata metadata = 2;
   */
  metadata?: EmployeeMetadata;

  /**
   * Stores the approval metadata
   *
   * @generated from field: Scailo.ApprovalMetadata approval_metadata = 3;
   */
  approvalMetadata?: ApprovalMetadata;

  /**
   * Denotes if this record requires approval (or has been approved)
   *
   * @generated from field: bool need_approval = 4;
   */
  needApproval = false;

  /**
   * Stores any comment that the user might have added during an operation
   *
   * @generated from field: string user_comment = 5;
   */
  userComment = "";

  /**
   * Stores the vendor invoice ID
   *
   * @generated from field: uint64 vendor_invoice_id = 10;
   */
  vendorInvoiceId = protoInt64.zero;

  /**
   * Stores the goods receipt ID
   *
   * @generated from field: uint64 goods_receipt_id = 11;
   */
  goodsReceiptId = protoInt64.zero;

  constructor(data?: PartialMessage<VendorInvoiceReference>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.VendorInvoiceReference";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "entity_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "metadata", kind: "message", T: EmployeeMetadata },
    { no: 3, name: "approval_metadata", kind: "message", T: ApprovalMetadata },
    { no: 4, name: "need_approval", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 5, name: "user_comment", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 10, name: "vendor_invoice_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 11, name: "goods_receipt_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): VendorInvoiceReference {
    return new VendorInvoiceReference().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): VendorInvoiceReference {
    return new VendorInvoiceReference().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): VendorInvoiceReference {
    return new VendorInvoiceReference().fromJsonString(jsonString, options);
  }

  static equals(a: VendorInvoiceReference | PlainMessage<VendorInvoiceReference> | undefined, b: VendorInvoiceReference | PlainMessage<VendorInvoiceReference> | undefined): boolean {
    return proto3.util.equals(VendorInvoiceReference, a, b);
  }
}

/**
 *
 * Describes the message consisting of the list of vendor invoice references
 *
 * @generated from message Scailo.VendorInvoiceReferencesList
 */
export class VendorInvoiceReferencesList extends Message<VendorInvoiceReferencesList> {
  /**
   * List of records
   *
   * @generated from field: repeated Scailo.VendorInvoiceReference list = 1;
   */
  list: VendorInvoiceReference[] = [];

  constructor(data?: PartialMessage<VendorInvoiceReferencesList>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.VendorInvoiceReferencesList";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "list", kind: "message", T: VendorInvoiceReference, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): VendorInvoiceReferencesList {
    return new VendorInvoiceReferencesList().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): VendorInvoiceReferencesList {
    return new VendorInvoiceReferencesList().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): VendorInvoiceReferencesList {
    return new VendorInvoiceReferencesList().fromJsonString(jsonString, options);
  }

  static equals(a: VendorInvoiceReferencesList | PlainMessage<VendorInvoiceReferencesList> | undefined, b: VendorInvoiceReferencesList | PlainMessage<VendorInvoiceReferencesList> | undefined): boolean {
    return proto3.util.equals(VendorInvoiceReferencesList, a, b);
  }
}

/**
 *
 * Describes the request payload to retrieve approved or unapproved items.
 *
 * @generated from message Scailo.VendorInvoiceItemsSearchRequest
 */
export class VendorInvoiceItemsSearchRequest extends Message<VendorInvoiceItemsSearchRequest> {
  /**
   * If true, then returns only active records. If false, then returns only inactive records
   *
   * @generated from field: Scailo.BOOL_FILTER is_active = 1;
   */
  isActive = BOOL_FILTER.BOOL_FILTER_ANY_UNSPECIFIED;

  /**
   * The number of records that need to be sent in the response. Returns all records if it is set to -1
   *
   * @generated from field: int64 count = 2;
   */
  count = protoInt64.zero;

  /**
   * The number that need to be offset by before fetching the records
   *
   * @generated from field: uint64 offset = 3;
   */
  offset = protoInt64.zero;

  /**
   * The sort order that is to be used to fetch the pagination response
   *
   * @generated from field: Scailo.SORT_ORDER sort_order = 4;
   */
  sortOrder = SORT_ORDER.ASCENDING_UNSPECIFIED;

  /**
   * The sort key that is to be used to fetch the pagination response
   *
   * @generated from field: Scailo.VENDOR_INVOICE_ITEM_SORT_KEY sort_key = 5;
   */
  sortKey = VENDOR_INVOICE_ITEM_SORT_KEY.VENDOR_INVOICE_ITEM_SORT_KEY_ID_UNSPECIFIED;

  /**
   * The entity UUID that is to be used to filter records
   *
   * @generated from field: string entity_uuid = 6;
   */
  entityUuid = "";

  /**
   * The status of the items
   *
   * @generated from field: Scailo.VENDOR_INVOICE_ITEM_STATUS status = 7;
   */
  status = VENDOR_INVOICE_ITEM_STATUS.VENDOR_INVOICE_ITEM_STATUS_ANY_UNSPECIFIED;

  /**
   * The start range of approved timestamp
   *
   * @generated from field: uint64 approved_on_start = 10;
   */
  approvedOnStart = protoInt64.zero;

  /**
   * The end range of approved timestamp
   *
   * @generated from field: uint64 approved_on_end = 11;
   */
  approvedOnEnd = protoInt64.zero;

  /**
   * The ID of the approver
   *
   * @generated from field: uint64 approved_by_user_id = 12;
   */
  approvedByUserId = protoInt64.zero;

  /**
   * The role ID of the approver
   *
   * @generated from field: uint64 approver_role_id = 13;
   */
  approverRoleId = protoInt64.zero;

  /**
   * The ID of the vendor invoice
   *
   * @generated from field: uint64 vendor_invoice_id = 20;
   */
  vendorInvoiceId = protoInt64.zero;

  /**
   * The ID of the family
   *
   * @generated from field: uint64 family_id = 21;
   */
  familyId = protoInt64.zero;

  /**
   * The ID of the vendor's unit of material
   *
   * @generated from field: uint64 vendor_uom_id = 23;
   */
  vendorUomId = protoInt64.zero;

  /**
   * The ID of the tax group
   *
   * @generated from field: uint64 tax_group_id = 26;
   */
  taxGroupId = protoInt64.zero;

  /**
   * Describes the key with which the search operation needs to be performed
   *
   * @generated from field: string search_key = 40;
   */
  searchKey = "";

  /**
   * ------------------------------------------
   * Extra filters
   * The ID of the associated vendor
   *
   * ------------------------------------------
   *
   * @generated from field: uint64 vendor_id = 200;
   */
  vendorId = protoInt64.zero;

  constructor(data?: PartialMessage<VendorInvoiceItemsSearchRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.VendorInvoiceItemsSearchRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "is_active", kind: "enum", T: proto3.getEnumType(BOOL_FILTER) },
    { no: 2, name: "count", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "offset", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 4, name: "sort_order", kind: "enum", T: proto3.getEnumType(SORT_ORDER) },
    { no: 5, name: "sort_key", kind: "enum", T: proto3.getEnumType(VENDOR_INVOICE_ITEM_SORT_KEY) },
    { no: 6, name: "entity_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 7, name: "status", kind: "enum", T: proto3.getEnumType(VENDOR_INVOICE_ITEM_STATUS) },
    { no: 10, name: "approved_on_start", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 11, name: "approved_on_end", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 12, name: "approved_by_user_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 13, name: "approver_role_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 20, name: "vendor_invoice_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 21, name: "family_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 23, name: "vendor_uom_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 26, name: "tax_group_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 40, name: "search_key", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 200, name: "vendor_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): VendorInvoiceItemsSearchRequest {
    return new VendorInvoiceItemsSearchRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): VendorInvoiceItemsSearchRequest {
    return new VendorInvoiceItemsSearchRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): VendorInvoiceItemsSearchRequest {
    return new VendorInvoiceItemsSearchRequest().fromJsonString(jsonString, options);
  }

  static equals(a: VendorInvoiceItemsSearchRequest | PlainMessage<VendorInvoiceItemsSearchRequest> | undefined, b: VendorInvoiceItemsSearchRequest | PlainMessage<VendorInvoiceItemsSearchRequest> | undefined): boolean {
    return proto3.util.equals(VendorInvoiceItemsSearchRequest, a, b);
  }
}

/**
 *
 * Describes the response to a pagination items request
 *
 * @generated from message Scailo.VendorInvoicesServicePaginatedItemsResponse
 */
export class VendorInvoicesServicePaginatedItemsResponse extends Message<VendorInvoicesServicePaginatedItemsResponse> {
  /**
   * The number of records in this payload
   *
   * @generated from field: uint64 count = 1;
   */
  count = protoInt64.zero;

  /**
   * The number that has been offset before fetching the records. This is the same value that has been sent as part of the pagination request
   *
   * @generated from field: uint64 offset = 2;
   */
  offset = protoInt64.zero;

  /**
   * The total number of records that are available
   *
   * @generated from field: uint64 total = 3;
   */
  total = protoInt64.zero;

  /**
   * The list of records
   *
   * @generated from field: repeated Scailo.VendorInvoiceItem payload = 4;
   */
  payload: VendorInvoiceItem[] = [];

  constructor(data?: PartialMessage<VendorInvoicesServicePaginatedItemsResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.VendorInvoicesServicePaginatedItemsResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "count", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 2, name: "offset", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 3, name: "total", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 4, name: "payload", kind: "message", T: VendorInvoiceItem, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): VendorInvoicesServicePaginatedItemsResponse {
    return new VendorInvoicesServicePaginatedItemsResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): VendorInvoicesServicePaginatedItemsResponse {
    return new VendorInvoicesServicePaginatedItemsResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): VendorInvoicesServicePaginatedItemsResponse {
    return new VendorInvoicesServicePaginatedItemsResponse().fromJsonString(jsonString, options);
  }

  static equals(a: VendorInvoicesServicePaginatedItemsResponse | PlainMessage<VendorInvoicesServicePaginatedItemsResponse> | undefined, b: VendorInvoicesServicePaginatedItemsResponse | PlainMessage<VendorInvoicesServicePaginatedItemsResponse> | undefined): boolean {
    return proto3.util.equals(VendorInvoicesServicePaginatedItemsResponse, a, b);
  }
}

/**
 *
 * Describes the receipt statistics of the vendor invoice
 *
 * @generated from message Scailo.VendorInvoiceReceiptStatistics
 */
export class VendorInvoiceReceiptStatistics extends Message<VendorInvoiceReceiptStatistics> {
  /**
   * Stores the ID of the family
   *
   * @generated from field: uint64 family_id = 1;
   */
  familyId = protoInt64.zero;

  /**
   * Stores the invoiced quantity
   *
   * @generated from field: uint64 invoiced_quantity = 2;
   */
  invoicedQuantity = protoInt64.zero;

  /**
   * Stores the receipt quantity
   *
   * @generated from field: uint64 receipt_quantity = 3;
   */
  receiptQuantity = protoInt64.zero;

  constructor(data?: PartialMessage<VendorInvoiceReceiptStatistics>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.VendorInvoiceReceiptStatistics";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "family_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 2, name: "invoiced_quantity", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 3, name: "receipt_quantity", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): VendorInvoiceReceiptStatistics {
    return new VendorInvoiceReceiptStatistics().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): VendorInvoiceReceiptStatistics {
    return new VendorInvoiceReceiptStatistics().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): VendorInvoiceReceiptStatistics {
    return new VendorInvoiceReceiptStatistics().fromJsonString(jsonString, options);
  }

  static equals(a: VendorInvoiceReceiptStatistics | PlainMessage<VendorInvoiceReceiptStatistics> | undefined, b: VendorInvoiceReceiptStatistics | PlainMessage<VendorInvoiceReceiptStatistics> | undefined): boolean {
    return proto3.util.equals(VendorInvoiceReceiptStatistics, a, b);
  }
}

/**
 *
 * Describes the list of receipt statistics of the vendor invoice
 *
 * @generated from message Scailo.VendorInvoiceReceiptStatisticsList
 */
export class VendorInvoiceReceiptStatisticsList extends Message<VendorInvoiceReceiptStatisticsList> {
  /**
   * @generated from field: repeated Scailo.VendorInvoiceReceiptStatistics list = 1;
   */
  list: VendorInvoiceReceiptStatistics[] = [];

  constructor(data?: PartialMessage<VendorInvoiceReceiptStatisticsList>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.VendorInvoiceReceiptStatisticsList";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "list", kind: "message", T: VendorInvoiceReceiptStatistics, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): VendorInvoiceReceiptStatisticsList {
    return new VendorInvoiceReceiptStatisticsList().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): VendorInvoiceReceiptStatisticsList {
    return new VendorInvoiceReceiptStatisticsList().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): VendorInvoiceReceiptStatisticsList {
    return new VendorInvoiceReceiptStatisticsList().fromJsonString(jsonString, options);
  }

  static equals(a: VendorInvoiceReceiptStatisticsList | PlainMessage<VendorInvoiceReceiptStatisticsList> | undefined, b: VendorInvoiceReceiptStatisticsList | PlainMessage<VendorInvoiceReceiptStatisticsList> | undefined): boolean {
    return proto3.util.equals(VendorInvoiceReceiptStatisticsList, a, b);
  }
}

