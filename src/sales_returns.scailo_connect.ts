// @generated by protoc-gen-connect-es v0.12.0 with parameter "target=ts"
// @generated from file sales_returns.scailo.proto (package Scailo, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { SalesReturn, SalesReturnItem, SalesReturnItemHistoryRequest, SalesReturnItemProspectiveInfoRequest, SalesReturnItemsSearchRequest, SalesReturnsItemsList, SalesReturnsList, SalesReturnsServiceAlreadyAddedQuantityForSourceRequest, SalesReturnsServiceCountReq, SalesReturnsServiceCreateRequest, SalesReturnsServiceFilterReq, SalesReturnsServiceItemCreateRequest, SalesReturnsServiceItemUpdateRequest, SalesReturnsServicePaginatedItemsResponse, SalesReturnsServicePaginationReq, SalesReturnsServicePaginationResponse, SalesReturnsServiceSearchAllReq, SalesReturnsServiceUpdateRequest } from "./sales_returns.scailo_pb.js";
import { ActiveStatus, BooleanResponse, CountInSLCStatusRequest, CountResponse, DualQuantitiesResponse, Identifier, IdentifierUUID, IdentifierWithEmailAttributes, IdentifierWithSearchKey, IdentifierWithUserComment, ReorderItemsRequest, SimpleSearchReq, StandardFile } from "./base.scailo_pb.js";
import { MethodKind } from "@bufbuild/protobuf";
import { FamiliesList } from "./families.scailo_pb.js";

/**
 *
 * Describes the common methods applicable on each sales return
 *
 * @generated from service Scailo.SalesReturnsService
 */
export const SalesReturnsService = {
  typeName: "Scailo.SalesReturnsService",
  methods: {
    /**
     * Create and send for verification
     *
     * @generated from rpc Scailo.SalesReturnsService.Create
     */
    create: {
      name: "Create",
      I: SalesReturnsServiceCreateRequest,
      O: Identifier,
      kind: MethodKind.Unary,
    },
    /**
     * Create and save as draft
     *
     * @generated from rpc Scailo.SalesReturnsService.Draft
     */
    draft: {
      name: "Draft",
      I: SalesReturnsServiceCreateRequest,
      O: Identifier,
      kind: MethodKind.Unary,
    },
    /**
     * Update draft
     *
     * @generated from rpc Scailo.SalesReturnsService.DraftUpdate
     */
    draftUpdate: {
      name: "DraftUpdate",
      I: SalesReturnsServiceUpdateRequest,
      O: Identifier,
      kind: MethodKind.Unary,
    },
    /**
     * Send for verification
     *
     * @generated from rpc Scailo.SalesReturnsService.SendForVerification
     */
    sendForVerification: {
      name: "SendForVerification",
      I: IdentifierWithUserComment,
      O: Identifier,
      kind: MethodKind.Unary,
    },
    /**
     * Verify
     *
     * @generated from rpc Scailo.SalesReturnsService.Verify
     */
    verify: {
      name: "Verify",
      I: IdentifierWithUserComment,
      O: Identifier,
      kind: MethodKind.Unary,
    },
    /**
     * Approve
     *
     * @generated from rpc Scailo.SalesReturnsService.Approve
     */
    approve: {
      name: "Approve",
      I: IdentifierWithUserComment,
      O: Identifier,
      kind: MethodKind.Unary,
    },
    /**
     * Send For Revision
     *
     * @generated from rpc Scailo.SalesReturnsService.SendForRevision
     */
    sendForRevision: {
      name: "SendForRevision",
      I: IdentifierWithUserComment,
      O: Identifier,
      kind: MethodKind.Unary,
    },
    /**
     * Update revision
     *
     * @generated from rpc Scailo.SalesReturnsService.RevisionUpdate
     */
    revisionUpdate: {
      name: "RevisionUpdate",
      I: SalesReturnsServiceUpdateRequest,
      O: Identifier,
      kind: MethodKind.Unary,
    },
    /**
     * Halt
     *
     * @generated from rpc Scailo.SalesReturnsService.Halt
     */
    halt: {
      name: "Halt",
      I: IdentifierWithUserComment,
      O: Identifier,
      kind: MethodKind.Unary,
    },
    /**
     * Discard
     *
     * @generated from rpc Scailo.SalesReturnsService.Discard
     */
    discard: {
      name: "Discard",
      I: IdentifierWithUserComment,
      O: Identifier,
      kind: MethodKind.Unary,
    },
    /**
     * Restore
     *
     * @generated from rpc Scailo.SalesReturnsService.Restore
     */
    restore: {
      name: "Restore",
      I: IdentifierWithUserComment,
      O: Identifier,
      kind: MethodKind.Unary,
    },
    /**
     * Complete
     *
     * @generated from rpc Scailo.SalesReturnsService.Complete
     */
    complete: {
      name: "Complete",
      I: IdentifierWithUserComment,
      O: Identifier,
      kind: MethodKind.Unary,
    },
    /**
     * Repeat
     *
     * @generated from rpc Scailo.SalesReturnsService.Repeat
     */
    repeat: {
      name: "Repeat",
      I: IdentifierWithUserComment,
      O: Identifier,
      kind: MethodKind.Unary,
    },
    /**
     * Reopen
     *
     * @generated from rpc Scailo.SalesReturnsService.Reopen
     */
    reopen: {
      name: "Reopen",
      I: IdentifierWithUserComment,
      O: Identifier,
      kind: MethodKind.Unary,
    },
    /**
     * Add comment
     *
     * @generated from rpc Scailo.SalesReturnsService.CommentAdd
     */
    commentAdd: {
      name: "CommentAdd",
      I: IdentifierWithUserComment,
      O: Identifier,
      kind: MethodKind.Unary,
    },
    /**
     * Send Email
     *
     * @generated from rpc Scailo.SalesReturnsService.SendEmail
     */
    sendEmail: {
      name: "SendEmail",
      I: IdentifierWithEmailAttributes,
      O: Identifier,
      kind: MethodKind.Unary,
    },
    /**
     * Checks if the Sales Return can be marked as completed
     *
     * @generated from rpc Scailo.SalesReturnsService.IsCompletable
     */
    isCompletable: {
      name: "IsCompletable",
      I: Identifier,
      O: BooleanResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Add an item to a sales return
     *
     * @generated from rpc Scailo.SalesReturnsService.AddSalesReturnItem
     */
    addSalesReturnItem: {
      name: "AddSalesReturnItem",
      I: SalesReturnsServiceItemCreateRequest,
      O: Identifier,
      kind: MethodKind.Unary,
    },
    /**
     * Modify an item in a sales return
     *
     * @generated from rpc Scailo.SalesReturnsService.ModifySalesReturnItem
     */
    modifySalesReturnItem: {
      name: "ModifySalesReturnItem",
      I: SalesReturnsServiceItemUpdateRequest,
      O: Identifier,
      kind: MethodKind.Unary,
    },
    /**
     * Approve an item in a sales return
     *
     * @generated from rpc Scailo.SalesReturnsService.ApproveSalesReturnItem
     */
    approveSalesReturnItem: {
      name: "ApproveSalesReturnItem",
      I: IdentifierWithUserComment,
      O: Identifier,
      kind: MethodKind.Unary,
    },
    /**
     * Delete an item in a sales return
     *
     * @generated from rpc Scailo.SalesReturnsService.DeleteSalesReturnItem
     */
    deleteSalesReturnItem: {
      name: "DeleteSalesReturnItem",
      I: IdentifierWithUserComment,
      O: Identifier,
      kind: MethodKind.Unary,
    },
    /**
     * Reorder items in a sales return
     *
     * @generated from rpc Scailo.SalesReturnsService.ReorderSalesReturnItems
     */
    reorderSalesReturnItems: {
      name: "ReorderSalesReturnItems",
      I: ReorderItemsRequest,
      O: Identifier,
      kind: MethodKind.Unary,
    },
    /**
     * View Sales Return Item by ID
     *
     * @generated from rpc Scailo.SalesReturnsService.ViewSalesReturnItemByID
     */
    viewSalesReturnItemByID: {
      name: "ViewSalesReturnItemByID",
      I: Identifier,
      O: SalesReturnItem,
      kind: MethodKind.Unary,
    },
    /**
     * View Sales Return Item by Inventory Hash
     *
     * @generated from rpc Scailo.SalesReturnsService.ViewSalesReturnItemByInventoryHash
     */
    viewSalesReturnItemByInventoryHash: {
      name: "ViewSalesReturnItemByInventoryHash",
      I: SimpleSearchReq,
      O: SalesReturnItem,
      kind: MethodKind.Unary,
    },
    /**
     * View approved sales return items for given sales return ID
     *
     * @generated from rpc Scailo.SalesReturnsService.ViewApprovedSalesReturnItems
     */
    viewApprovedSalesReturnItems: {
      name: "ViewApprovedSalesReturnItems",
      I: IdentifierWithSearchKey,
      O: SalesReturnsItemsList,
      kind: MethodKind.Unary,
    },
    /**
     * View unapproved sales return items for given sales return ID
     *
     * @generated from rpc Scailo.SalesReturnsService.ViewUnapprovedSalesReturnItems
     */
    viewUnapprovedSalesReturnItems: {
      name: "ViewUnapprovedSalesReturnItems",
      I: IdentifierWithSearchKey,
      O: SalesReturnsItemsList,
      kind: MethodKind.Unary,
    },
    /**
     * View the history of the sales return item
     *
     * @generated from rpc Scailo.SalesReturnsService.ViewSalesReturnItemHistory
     */
    viewSalesReturnItemHistory: {
      name: "ViewSalesReturnItemHistory",
      I: SalesReturnItemHistoryRequest,
      O: SalesReturnsItemsList,
      kind: MethodKind.Unary,
    },
    /**
     * View approved sales return items for given sales return ID with pagination
     *
     * @generated from rpc Scailo.SalesReturnsService.ViewPaginatedApprovedSalesReturnItems
     */
    viewPaginatedApprovedSalesReturnItems: {
      name: "ViewPaginatedApprovedSalesReturnItems",
      I: SalesReturnItemsSearchRequest,
      O: SalesReturnsServicePaginatedItemsResponse,
      kind: MethodKind.Unary,
    },
    /**
     * View unapproved sales return items for given sales return ID with pagination
     *
     * @generated from rpc Scailo.SalesReturnsService.ViewPaginatedUnapprovedSalesReturnItems
     */
    viewPaginatedUnapprovedSalesReturnItems: {
      name: "ViewPaginatedUnapprovedSalesReturnItems",
      I: SalesReturnItemsSearchRequest,
      O: SalesReturnsServicePaginatedItemsResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Search through sales return items with pagination
     *
     * @generated from rpc Scailo.SalesReturnsService.SearchItemsWithPagination
     */
    searchItemsWithPagination: {
      name: "SearchItemsWithPagination",
      I: SalesReturnItemsSearchRequest,
      O: SalesReturnsServicePaginatedItemsResponse,
      kind: MethodKind.Unary,
    },
    /**
     * View by ID
     *
     * @generated from rpc Scailo.SalesReturnsService.ViewByID
     */
    viewByID: {
      name: "ViewByID",
      I: Identifier,
      O: SalesReturn,
      kind: MethodKind.Unary,
    },
    /**
     * View by UUID
     *
     * @generated from rpc Scailo.SalesReturnsService.ViewByUUID
     */
    viewByUUID: {
      name: "ViewByUUID",
      I: IdentifierUUID,
      O: SalesReturn,
      kind: MethodKind.Unary,
    },
    /**
     * View all
     *
     * @generated from rpc Scailo.SalesReturnsService.ViewAll
     */
    viewAll: {
      name: "ViewAll",
      I: ActiveStatus,
      O: SalesReturnsList,
      kind: MethodKind.Unary,
    },
    /**
     * View all with the given entity UUID
     *
     * @generated from rpc Scailo.SalesReturnsService.ViewAllForEntityUUID
     */
    viewAllForEntityUUID: {
      name: "ViewAllForEntityUUID",
      I: IdentifierUUID,
      O: SalesReturnsList,
      kind: MethodKind.Unary,
    },
    /**
     * View with pagination
     *
     * @generated from rpc Scailo.SalesReturnsService.ViewWithPagination
     */
    viewWithPagination: {
      name: "ViewWithPagination",
      I: SalesReturnsServicePaginationReq,
      O: SalesReturnsServicePaginationResponse,
      kind: MethodKind.Unary,
    },
    /**
     * View prospective families for the given sales return
     *
     * @generated from rpc Scailo.SalesReturnsService.ViewProspectiveFamilies
     */
    viewProspectiveFamilies: {
      name: "ViewProspectiveFamilies",
      I: IdentifierWithSearchKey,
      O: FamiliesList,
      kind: MethodKind.Unary,
    },
    /**
     * View prospective sales return item info for the given family ID and sales return ID
     *
     * @generated from rpc Scailo.SalesReturnsService.ViewProspectiveSalesReturnItem
     */
    viewProspectiveSalesReturnItem: {
      name: "ViewProspectiveSalesReturnItem",
      I: SalesReturnItemProspectiveInfoRequest,
      O: SalesReturnsServiceItemCreateRequest,
      kind: MethodKind.Unary,
    },
    /**
     * Checks if the Sales Return has been billed
     *
     * @generated from rpc Scailo.SalesReturnsService.IsBilled
     */
    isBilled: {
      name: "IsBilled",
      I: Identifier,
      O: BooleanResponse,
      kind: MethodKind.Unary,
    },
    /**
     * View already added quantities
     *
     * @generated from rpc Scailo.SalesReturnsService.ViewAddedFamilyQuantityForSource
     */
    viewAddedFamilyQuantityForSource: {
      name: "ViewAddedFamilyQuantityForSource",
      I: SalesReturnsServiceAlreadyAddedQuantityForSourceRequest,
      O: DualQuantitiesResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Download sales return with the given IdentifierUUID (can be used to allow public downloads)
     *
     * @generated from rpc Scailo.SalesReturnsService.DownloadByUUID
     */
    downloadByUUID: {
      name: "DownloadByUUID",
      I: IdentifierUUID,
      O: StandardFile,
      kind: MethodKind.Unary,
    },
    /**
     * View all that match the given search key
     *
     * @generated from rpc Scailo.SalesReturnsService.SearchAll
     */
    searchAll: {
      name: "SearchAll",
      I: SalesReturnsServiceSearchAllReq,
      O: SalesReturnsList,
      kind: MethodKind.Unary,
    },
    /**
     * View all that match the given filter criteria
     *
     * @generated from rpc Scailo.SalesReturnsService.Filter
     */
    filter: {
      name: "Filter",
      I: SalesReturnsServiceFilterReq,
      O: SalesReturnsList,
      kind: MethodKind.Unary,
    },
    /**
     * Count in status
     *
     * @generated from rpc Scailo.SalesReturnsService.CountInStatus
     */
    countInStatus: {
      name: "CountInStatus",
      I: CountInSLCStatusRequest,
      O: CountResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Count all that match the given criteria
     *
     * @generated from rpc Scailo.SalesReturnsService.Count
     */
    count: {
      name: "Count",
      I: SalesReturnsServiceCountReq,
      O: CountResponse,
      kind: MethodKind.Unary,
    },
  }
} as const;

