// @generated by protoc-gen-es v1.5.1 with parameter "target=ts"
// @generated from file components.scailo.proto (package Scailo, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3, protoInt64 } from "@bufbuild/protobuf";
import { BOOL_FILTER, EmployeeMetadata, INVENTORY_LIFECYCLE, INVENTORY_SORT_KEY, LogbookLogInventoryLC, SORT_ORDER } from "./base.scailo_pb.js";

/**
 *
 * Stores all the possible references from which a component can be added
 *
 * @generated from enum Scailo.COMPONENT_REF_FROM
 */
export enum COMPONENT_REF_FROM {
  /**
   * Used only in filters
   *
   * @generated from enum value: COMPONENT_REF_FROM_ANY_UNSPECIFIED = 0;
   */
  COMPONENT_REF_FROM_ANY_UNSPECIFIED = 0,

  /**
   * Denotes that the component originated from initial stock
   *
   * @generated from enum value: COMPONENT_REF_FROM_INITIAL_STOCK = 1;
   */
  COMPONENT_REF_FROM_INITIAL_STOCK = 1,

  /**
   * Denotes that the component originated from a goods receipt
   *
   * @generated from enum value: COMPONENT_REF_FROM_GOODS_RECEIPT = 2;
   */
  COMPONENT_REF_FROM_GOODS_RECEIPT = 2,

  /**
   * Denotes that the component originated from an inward job free issue material
   *
   * @generated from enum value: COMPONENT_REF_FROM_INWARD_JOB_FREE_ISSUE_MATERIAL = 3;
   */
  COMPONENT_REF_FROM_INWARD_JOB_FREE_ISSUE_MATERIAL = 3,

  /**
   * Denotes that the component originated from an outward job free issue material
   *
   * @generated from enum value: COMPONENT_REF_FROM_OUTWARD_JOB_FREE_ISSUE_MATERIAL = 4;
   */
  COMPONENT_REF_FROM_OUTWARD_JOB_FREE_ISSUE_MATERIAL = 4,

  /**
   * Denotes that the component originated from a production plan
   *
   * @generated from enum value: COMPONENT_REF_FROM_PRODUCTION_PLAN = 5;
   */
  COMPONENT_REF_FROM_PRODUCTION_PLAN = 5,
}
// Retrieve enum metadata with: proto3.getEnumType(COMPONENT_REF_FROM)
proto3.util.setEnumType(COMPONENT_REF_FROM, "Scailo.COMPONENT_REF_FROM", [
  { no: 0, name: "COMPONENT_REF_FROM_ANY_UNSPECIFIED" },
  { no: 1, name: "COMPONENT_REF_FROM_INITIAL_STOCK" },
  { no: 2, name: "COMPONENT_REF_FROM_GOODS_RECEIPT" },
  { no: 3, name: "COMPONENT_REF_FROM_INWARD_JOB_FREE_ISSUE_MATERIAL" },
  { no: 4, name: "COMPONENT_REF_FROM_OUTWARD_JOB_FREE_ISSUE_MATERIAL" },
  { no: 5, name: "COMPONENT_REF_FROM_PRODUCTION_PLAN" },
]);

/**
 *
 * Describes the parameters necessary to create a record
 *
 * @generated from message Scailo.ComponentsServiceCreateRequest
 */
export class ComponentsServiceCreateRequest extends Message<ComponentsServiceCreateRequest> {
  /**
   * Stores a globally unique entity UUID. This will be set at the organization level
   *
   * @generated from field: string entity_uuid = 1;
   */
  entityUuid = "";

  /**
   * Stores any comment that the user might add during this operation
   *
   * @generated from field: string user_comment = 2;
   */
  userComment = "";

  /**
   * The associated vault folder ID
   *
   * @generated from field: uint64 vault_folder_id = 18;
   */
  vaultFolderId = protoInt64.zero;

  /**
   * Stores the reference from
   *
   * @generated from field: Scailo.COMPONENT_REF_FROM ref_from = 31;
   */
  refFrom = COMPONENT_REF_FROM.COMPONENT_REF_FROM_ANY_UNSPECIFIED;

  /**
   * Stores the ID of the reference
   *
   * @generated from field: uint64 ref_id = 32;
   */
  refId = protoInt64.zero;

  /**
   * Stores the ID of the associated family
   *
   * @generated from field: uint64 family_id = 33;
   */
  familyId = protoInt64.zero;

  /**
   * Stores the internal code (as given by user)
   *
   * @generated from field: string internal_item_code = 35;
   */
  internalItemCode = "";

  /**
   * Stores the quantity (in cents)
   *
   * @generated from field: uint64 quantity = 37;
   */
  quantity = protoInt64.zero;

  /**
   * Stores an optional secondary unit of component
   *
   * @generated from field: uint64 secondary_uom_id = 39;
   */
  secondaryUomId = protoInt64.zero;

  /**
   * Stores an optional quantity in the secondary unit of component
   *
   * @generated from field: uint64 secondary_quantity = 40;
   */
  secondaryQuantity = protoInt64.zero;

  /**
   * Stores an optional shelf life as a timestamp
   *
   * @generated from field: uint64 shelf_life_timestamp = 41;
   */
  shelfLifeTimestamp = protoInt64.zero;

  /**
   * Stores an optional warranty as a timestamp
   *
   * @generated from field: uint64 warranty_timestamp = 42;
   */
  warrantyTimestamp = protoInt64.zero;

  /**
   * The location ID of where the item needs to be stored
   *
   * @generated from field: uint64 location_id = 54;
   */
  locationId = protoInt64.zero;

  /**
   * The description of the component
   *
   * @generated from field: string description = 60;
   */
  description = "";

  constructor(data?: PartialMessage<ComponentsServiceCreateRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.ComponentsServiceCreateRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "entity_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "user_comment", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 18, name: "vault_folder_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 31, name: "ref_from", kind: "enum", T: proto3.getEnumType(COMPONENT_REF_FROM) },
    { no: 32, name: "ref_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 33, name: "family_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 35, name: "internal_item_code", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 37, name: "quantity", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 39, name: "secondary_uom_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 40, name: "secondary_quantity", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 41, name: "shelf_life_timestamp", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 42, name: "warranty_timestamp", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 54, name: "location_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 60, name: "description", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ComponentsServiceCreateRequest {
    return new ComponentsServiceCreateRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ComponentsServiceCreateRequest {
    return new ComponentsServiceCreateRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ComponentsServiceCreateRequest {
    return new ComponentsServiceCreateRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ComponentsServiceCreateRequest | PlainMessage<ComponentsServiceCreateRequest> | undefined, b: ComponentsServiceCreateRequest | PlainMessage<ComponentsServiceCreateRequest> | undefined): boolean {
    return proto3.util.equals(ComponentsServiceCreateRequest, a, b);
  }
}

/**
 *
 * Describes the parameters necessary to update a record
 *
 * @generated from message Scailo.ComponentsServiceUpdateRequest
 */
export class ComponentsServiceUpdateRequest extends Message<ComponentsServiceUpdateRequest> {
  /**
   * Stores any comment that the user might add during this operation
   *
   * @generated from field: string user_comment = 1;
   */
  userComment = "";

  /**
   * The ID of the record that needs to be updated
   *
   * @generated from field: uint64 id = 2;
   */
  id = protoInt64.zero;

  /**
   * Optional boolean value that stores if a notification needs to be sent to users about the update to the record. This is useful when a subsequent operation needs to be performed immediately (such as send to verification after updating the revision)
   *
   * @generated from field: bool notify_users = 3;
   */
  notifyUsers = false;

  /**
   * The associated vault folder ID
   *
   * @generated from field: uint64 vault_folder_id = 18;
   */
  vaultFolderId = protoInt64.zero;

  /**
   * Stores the internal code (as given by user)
   *
   * @generated from field: string internal_item_code = 35;
   */
  internalItemCode = "";

  /**
   * Stores an optional secondary unit of component
   *
   * @generated from field: uint64 secondary_uom_id = 38;
   */
  secondaryUomId = protoInt64.zero;

  /**
   * Stores an optional quantity in the secondary unit of component
   *
   * @generated from field: uint64 secondary_quantity = 39;
   */
  secondaryQuantity = protoInt64.zero;

  /**
   * Stores an optional shelf life as a timestamp
   *
   * @generated from field: uint64 shelf_life_timestamp = 40;
   */
  shelfLifeTimestamp = protoInt64.zero;

  /**
   * Stores an optional warranty as a timestamp
   *
   * @generated from field: uint64 warranty_timestamp = 41;
   */
  warrantyTimestamp = protoInt64.zero;

  /**
   * Stores an optional ID of the associated storage that the component is stored in
   *
   * @generated from field: uint64 storage_id = 51;
   */
  storageId = protoInt64.zero;

  /**
   * Stores if the associated QC report should be public
   *
   * @generated from field: bool is_qc_report_public = 52;
   */
  isQcReportPublic = false;

  /**
   * Stores any applicable remaining dimensions as a string
   *
   * @generated from field: string remaining_dimensions = 55;
   */
  remainingDimensions = "";

  /**
   * The description of the component
   *
   * @generated from field: string description = 60;
   */
  description = "";

  constructor(data?: PartialMessage<ComponentsServiceUpdateRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.ComponentsServiceUpdateRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "user_comment", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 3, name: "notify_users", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 18, name: "vault_folder_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 35, name: "internal_item_code", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 38, name: "secondary_uom_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 39, name: "secondary_quantity", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 40, name: "shelf_life_timestamp", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 41, name: "warranty_timestamp", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 51, name: "storage_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 52, name: "is_qc_report_public", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 55, name: "remaining_dimensions", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 60, name: "description", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ComponentsServiceUpdateRequest {
    return new ComponentsServiceUpdateRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ComponentsServiceUpdateRequest {
    return new ComponentsServiceUpdateRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ComponentsServiceUpdateRequest {
    return new ComponentsServiceUpdateRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ComponentsServiceUpdateRequest | PlainMessage<ComponentsServiceUpdateRequest> | undefined, b: ComponentsServiceUpdateRequest | PlainMessage<ComponentsServiceUpdateRequest> | undefined): boolean {
    return proto3.util.equals(ComponentsServiceUpdateRequest, a, b);
  }
}

/**
 *
 * Describes the parameters necessary to send a component to store
 *
 * @generated from message Scailo.ComponentsServiceSendToStoreRequest
 */
export class ComponentsServiceSendToStoreRequest extends Message<ComponentsServiceSendToStoreRequest> {
  /**
   * Stores any comment that the user might add during this operation
   *
   * @generated from field: string user_comment = 1;
   */
  userComment = "";

  /**
   * The ID of the record that needs to be updated
   *
   * @generated from field: uint64 id = 2;
   */
  id = protoInt64.zero;

  /**
   * Stores an optional shelf life as a timestamp
   *
   * @generated from field: uint64 shelf_life_timestamp = 40;
   */
  shelfLifeTimestamp = protoInt64.zero;

  /**
   * Stores an optional warranty as a timestamp
   *
   * @generated from field: uint64 warranty_timestamp = 41;
   */
  warrantyTimestamp = protoInt64.zero;

  /**
   * Stores the store to which the component is sent to
   *
   * @generated from field: uint64 store_id = 50;
   */
  storeId = protoInt64.zero;

  /**
   * Stores an optional ID of the associated storage that the component is stored in
   *
   * @generated from field: uint64 storage_id = 51;
   */
  storageId = protoInt64.zero;

  /**
   * Stores if the associated QC report should be public
   *
   * @generated from field: bool is_qc_report_public = 52;
   */
  isQcReportPublic = false;

  /**
   * Stores any applicable remaining dimensions as a string
   *
   * @generated from field: string remaining_dimensions = 55;
   */
  remainingDimensions = "";

  /**
   * The description of the component
   *
   * @generated from field: string description = 60;
   */
  description = "";

  constructor(data?: PartialMessage<ComponentsServiceSendToStoreRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.ComponentsServiceSendToStoreRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "user_comment", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 40, name: "shelf_life_timestamp", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 41, name: "warranty_timestamp", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 50, name: "store_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 51, name: "storage_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 52, name: "is_qc_report_public", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 55, name: "remaining_dimensions", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 60, name: "description", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ComponentsServiceSendToStoreRequest {
    return new ComponentsServiceSendToStoreRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ComponentsServiceSendToStoreRequest {
    return new ComponentsServiceSendToStoreRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ComponentsServiceSendToStoreRequest {
    return new ComponentsServiceSendToStoreRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ComponentsServiceSendToStoreRequest | PlainMessage<ComponentsServiceSendToStoreRequest> | undefined, b: ComponentsServiceSendToStoreRequest | PlainMessage<ComponentsServiceSendToStoreRequest> | undefined): boolean {
    return proto3.util.equals(ComponentsServiceSendToStoreRequest, a, b);
  }
}

/**
 *
 * Describes the parameters that are part of a standard response
 *
 * @generated from message Scailo.Component
 */
export class Component extends Message<Component> {
  /**
   * Stores a globally unique entity UUID. This will be set at the organization level
   *
   * @generated from field: string entity_uuid = 1;
   */
  entityUuid = "";

  /**
   * Stores the metadata of this component
   *
   * @generated from field: Scailo.EmployeeMetadata metadata = 2;
   */
  metadata?: EmployeeMetadata;

  /**
   * The status of this component
   *
   * @generated from field: Scailo.INVENTORY_LIFECYCLE status = 4;
   */
  status = INVENTORY_LIFECYCLE.INVENTORY_LIFECYCLE_ANY_UNSPECIFIED;

  /**
   * Stores the logs of every operation performed on this component
   *
   * @generated from field: repeated Scailo.LogbookLogInventoryLC logs = 5;
   */
  logs: LogbookLogInventoryLC[] = [];

  /**
   * The timestamp of when the item was admitted into store
   *
   * @generated from field: uint64 store_intake_at = 10;
   */
  storeIntakeAt = protoInt64.zero;

  /**
   * The timestamp of when the item was either consumed or rejected
   *
   * @generated from field: uint64 consumed_or_rejected_at = 11;
   */
  consumedOrRejectedAt = protoInt64.zero;

  /**
   * The timestamp of when the rework process began
   *
   * @generated from field: uint64 rework_start_at = 12;
   */
  reworkStartAt = protoInt64.zero;

  /**
   * The timestamp of when the rework process ended
   *
   * @generated from field: uint64 rework_end_at = 13;
   */
  reworkEndAt = protoInt64.zero;

  /**
   * The timestamp of when the item was either returned or scrapped
   *
   * @generated from field: uint64 returned_or_scrapped_at = 14;
   */
  returnedOrScrappedAt = protoInt64.zero;

  /**
   * The timestamp of when the item was discarded
   *
   * @generated from field: uint64 discarded_at = 15;
   */
  discardedAt = protoInt64.zero;

  /**
   * The associated vault folder ID
   *
   * @generated from field: uint64 vault_folder_id = 18;
   */
  vaultFolderId = protoInt64.zero;

  /**
   * The ID of the parent inventory item (if applicable)
   *
   * @generated from field: uint64 parent_ref_id = 30;
   */
  parentRefId = protoInt64.zero;

  /**
   * Stores the reference from
   *
   * @generated from field: Scailo.COMPONENT_REF_FROM ref_from = 31;
   */
  refFrom = COMPONENT_REF_FROM.COMPONENT_REF_FROM_ANY_UNSPECIFIED;

  /**
   * Stores the ID of the reference
   *
   * @generated from field: uint64 ref_id = 32;
   */
  refId = protoInt64.zero;

  /**
   * Stores the ID of the associated family
   *
   * @generated from field: uint64 family_id = 33;
   */
  familyId = protoInt64.zero;

  /**
   * The auto generated code of the component
   *
   * @generated from field: string code = 34;
   */
  code = "";

  /**
   * Stores the internal code (as given by user)
   *
   * @generated from field: string internal_item_code = 35;
   */
  internalItemCode = "";

  /**
   * The computed hash of the component
   *
   * @generated from field: string hash = 36;
   */
  hash = "";

  /**
   * Stores the quantity (in cents)
   *
   * @generated from field: uint64 quantity = 37;
   */
  quantity = protoInt64.zero;

  /**
   * Stores the remaining quantity (in cents)
   *
   * @generated from field: uint64 quantity_remaining = 38;
   */
  quantityRemaining = protoInt64.zero;

  /**
   * Stores an optional secondary unit of component
   *
   * @generated from field: uint64 secondary_uom_id = 39;
   */
  secondaryUomId = protoInt64.zero;

  /**
   * Stores an optional quantity in the secondary unit of component
   *
   * @generated from field: uint64 secondary_quantity = 40;
   */
  secondaryQuantity = protoInt64.zero;

  /**
   * Stores an optional shelf life as a timestamp
   *
   * @generated from field: uint64 shelf_life_timestamp = 41;
   */
  shelfLifeTimestamp = protoInt64.zero;

  /**
   * Stores an optional warranty as a timestamp
   *
   * @generated from field: uint64 warranty_timestamp = 42;
   */
  warrantyTimestamp = protoInt64.zero;

  /**
   * Stores the store to which the component is sent to
   *
   * @generated from field: uint64 store_id = 50;
   */
  storeId = protoInt64.zero;

  /**
   * Stores an optional ID of the associated storage that the component is stored in
   *
   * @generated from field: uint64 storage_id = 51;
   */
  storageId = protoInt64.zero;

  /**
   * Stores if the associated QC report should be public
   *
   * @generated from field: bool is_qc_report_public = 52;
   */
  isQcReportPublic = false;

  /**
   * The location ID of where the item needs to be stored
   *
   * @generated from field: uint64 location_id = 54;
   */
  locationId = protoInt64.zero;

  /**
   * Stores any applicable remaining dimensions as a string
   *
   * @generated from field: string remaining_dimensions = 55;
   */
  remainingDimensions = "";

  /**
   * The description of the component
   *
   * @generated from field: string description = 60;
   */
  description = "";

  /**
   * The short URL of the item
   *
   * @generated from field: string short_url = 70;
   */
  shortUrl = "";

  constructor(data?: PartialMessage<Component>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.Component";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "entity_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "metadata", kind: "message", T: EmployeeMetadata },
    { no: 4, name: "status", kind: "enum", T: proto3.getEnumType(INVENTORY_LIFECYCLE) },
    { no: 5, name: "logs", kind: "message", T: LogbookLogInventoryLC, repeated: true },
    { no: 10, name: "store_intake_at", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 11, name: "consumed_or_rejected_at", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 12, name: "rework_start_at", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 13, name: "rework_end_at", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 14, name: "returned_or_scrapped_at", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 15, name: "discarded_at", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 18, name: "vault_folder_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 30, name: "parent_ref_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 31, name: "ref_from", kind: "enum", T: proto3.getEnumType(COMPONENT_REF_FROM) },
    { no: 32, name: "ref_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 33, name: "family_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 34, name: "code", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 35, name: "internal_item_code", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 36, name: "hash", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 37, name: "quantity", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 38, name: "quantity_remaining", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 39, name: "secondary_uom_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 40, name: "secondary_quantity", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 41, name: "shelf_life_timestamp", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 42, name: "warranty_timestamp", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 50, name: "store_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 51, name: "storage_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 52, name: "is_qc_report_public", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 54, name: "location_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 55, name: "remaining_dimensions", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 60, name: "description", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 70, name: "short_url", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Component {
    return new Component().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Component {
    return new Component().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Component {
    return new Component().fromJsonString(jsonString, options);
  }

  static equals(a: Component | PlainMessage<Component> | undefined, b: Component | PlainMessage<Component> | undefined): boolean {
    return proto3.util.equals(Component, a, b);
  }
}

/**
 *
 * Describes the message consisting of the list of records
 *
 * @generated from message Scailo.ComponentsList
 */
export class ComponentsList extends Message<ComponentsList> {
  /**
   * List of records
   *
   * @generated from field: repeated Scailo.Component list = 1;
   */
  list: Component[] = [];

  constructor(data?: PartialMessage<ComponentsList>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.ComponentsList";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "list", kind: "message", T: Component, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ComponentsList {
    return new ComponentsList().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ComponentsList {
    return new ComponentsList().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ComponentsList {
    return new ComponentsList().fromJsonString(jsonString, options);
  }

  static equals(a: ComponentsList | PlainMessage<ComponentsList> | undefined, b: ComponentsList | PlainMessage<ComponentsList> | undefined): boolean {
    return proto3.util.equals(ComponentsList, a, b);
  }
}

/**
 *
 * Describes a pagination request to retrieve records
 *
 * @generated from message Scailo.ComponentsServicePaginationReq
 */
export class ComponentsServicePaginationReq extends Message<ComponentsServicePaginationReq> {
  /**
   * If true, then returns only active records. If false, then returns only inactive records
   *
   * @generated from field: Scailo.BOOL_FILTER is_active = 1;
   */
  isActive = BOOL_FILTER.BOOL_FILTER_ANY_UNSPECIFIED;

  /**
   * The number of records that need to be sent in the response
   *
   * @generated from field: int64 count = 2;
   */
  count = protoInt64.zero;

  /**
   * The number that need to be offset by before fetching the records
   *
   * @generated from field: uint64 offset = 3;
   */
  offset = protoInt64.zero;

  /**
   * The sort order that is to be used to fetch the pagination response
   *
   * @generated from field: Scailo.SORT_ORDER sort_order = 4;
   */
  sortOrder = SORT_ORDER.ASCENDING_UNSPECIFIED;

  /**
   * The sort key that is to be used to fetch the pagination response
   *
   * @generated from field: Scailo.INVENTORY_SORT_KEY sort_key = 5;
   */
  sortKey = INVENTORY_SORT_KEY.INVENTORY_SORT_KEY_ID_UNSPECIFIED;

  /**
   * The status of this component
   *
   * @generated from field: Scailo.INVENTORY_LIFECYCLE status = 6;
   */
  status = INVENTORY_LIFECYCLE.INVENTORY_LIFECYCLE_ANY_UNSPECIFIED;

  constructor(data?: PartialMessage<ComponentsServicePaginationReq>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.ComponentsServicePaginationReq";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "is_active", kind: "enum", T: proto3.getEnumType(BOOL_FILTER) },
    { no: 2, name: "count", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "offset", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 4, name: "sort_order", kind: "enum", T: proto3.getEnumType(SORT_ORDER) },
    { no: 5, name: "sort_key", kind: "enum", T: proto3.getEnumType(INVENTORY_SORT_KEY) },
    { no: 6, name: "status", kind: "enum", T: proto3.getEnumType(INVENTORY_LIFECYCLE) },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ComponentsServicePaginationReq {
    return new ComponentsServicePaginationReq().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ComponentsServicePaginationReq {
    return new ComponentsServicePaginationReq().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ComponentsServicePaginationReq {
    return new ComponentsServicePaginationReq().fromJsonString(jsonString, options);
  }

  static equals(a: ComponentsServicePaginationReq | PlainMessage<ComponentsServicePaginationReq> | undefined, b: ComponentsServicePaginationReq | PlainMessage<ComponentsServicePaginationReq> | undefined): boolean {
    return proto3.util.equals(ComponentsServicePaginationReq, a, b);
  }
}

/**
 *
 * Describes the response to a pagination request
 *
 * @generated from message Scailo.ComponentsServicePaginationResponse
 */
export class ComponentsServicePaginationResponse extends Message<ComponentsServicePaginationResponse> {
  /**
   * The number of records in this payload
   *
   * @generated from field: uint64 count = 1;
   */
  count = protoInt64.zero;

  /**
   * The number that has been offset before fetching the records. This is the same value that has been sent as part of the pagination request
   *
   * @generated from field: uint64 offset = 2;
   */
  offset = protoInt64.zero;

  /**
   * The total number of records that are available
   *
   * @generated from field: uint64 total = 3;
   */
  total = protoInt64.zero;

  /**
   * The list of records
   *
   * @generated from field: repeated Scailo.Component payload = 4;
   */
  payload: Component[] = [];

  constructor(data?: PartialMessage<ComponentsServicePaginationResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.ComponentsServicePaginationResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "count", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 2, name: "offset", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 3, name: "total", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 4, name: "payload", kind: "message", T: Component, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ComponentsServicePaginationResponse {
    return new ComponentsServicePaginationResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ComponentsServicePaginationResponse {
    return new ComponentsServicePaginationResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ComponentsServicePaginationResponse {
    return new ComponentsServicePaginationResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ComponentsServicePaginationResponse | PlainMessage<ComponentsServicePaginationResponse> | undefined, b: ComponentsServicePaginationResponse | PlainMessage<ComponentsServicePaginationResponse> | undefined): boolean {
    return proto3.util.equals(ComponentsServicePaginationResponse, a, b);
  }
}

/**
 *
 * Describes the base request payload of a filter search
 *
 * @generated from message Scailo.ComponentsServiceFilterReq
 */
export class ComponentsServiceFilterReq extends Message<ComponentsServiceFilterReq> {
  /**
   * If true, then returns only active records. If false, then returns only inactive records
   *
   * @generated from field: Scailo.BOOL_FILTER is_active = 1;
   */
  isActive = BOOL_FILTER.BOOL_FILTER_ANY_UNSPECIFIED;

  /**
   * The number of records that need to be sent in the response. Returns all records if it is set to -1
   *
   * @generated from field: int64 count = 2;
   */
  count = protoInt64.zero;

  /**
   * The number that need to be offset by before fetching the records
   *
   * @generated from field: uint64 offset = 3;
   */
  offset = protoInt64.zero;

  /**
   * The sort order that is to be used to fetch the pagination response
   *
   * @generated from field: Scailo.SORT_ORDER sort_order = 4;
   */
  sortOrder = SORT_ORDER.ASCENDING_UNSPECIFIED;

  /**
   * The sort key that is to be used to fetch the pagination response
   *
   * @generated from field: Scailo.INVENTORY_SORT_KEY sort_key = 5;
   */
  sortKey = INVENTORY_SORT_KEY.INVENTORY_SORT_KEY_ID_UNSPECIFIED;

  /**
   * The minimum timestamp that needs to be considered to filter by creation
   *
   * @generated from field: uint64 creation_timestamp_start = 101;
   */
  creationTimestampStart = protoInt64.zero;

  /**
   * The maximum timestamp that needs to be considered to filter by creation
   *
   * @generated from field: uint64 creation_timestamp_end = 102;
   */
  creationTimestampEnd = protoInt64.zero;

  /**
   * The minimum timestamp that needs to be considered to filter by modification
   *
   * @generated from field: uint64 modification_timestamp_start = 103;
   */
  modificationTimestampStart = protoInt64.zero;

  /**
   * The maximum timestamp that needs to be considered to filter by modification
   *
   * @generated from field: uint64 modification_timestamp_end = 104;
   */
  modificationTimestampEnd = protoInt64.zero;

  /**
   * The entity UUID that is to be used to filter records
   *
   * @generated from field: string entity_uuid = 8;
   */
  entityUuid = "";

  /**
   * The status of this component
   *
   * @generated from field: Scailo.INVENTORY_LIFECYCLE status = 10;
   */
  status = INVENTORY_LIFECYCLE.INVENTORY_LIFECYCLE_ANY_UNSPECIFIED;

  /**
   * The start range of store intake timestamp
   *
   * @generated from field: uint64 store_intake_at_start = 20;
   */
  storeIntakeAtStart = protoInt64.zero;

  /**
   * The end range of store intake timestamp
   *
   * @generated from field: uint64 store_intake_at_end = 21;
   */
  storeIntakeAtEnd = protoInt64.zero;

  /**
   * The start range of discarded timestamp
   *
   * @generated from field: uint64 discarded_at_start = 22;
   */
  discardedAtStart = protoInt64.zero;

  /**
   * The end range of discarded timestamp
   *
   * @generated from field: uint64 discarded_at_end = 23;
   */
  discardedAtEnd = protoInt64.zero;

  /**
   * The ID of the parent inventory item
   *
   * @generated from field: uint64 parent_ref_id = 30;
   */
  parentRefId = protoInt64.zero;

  /**
   * Stores the reference from
   *
   * @generated from field: Scailo.COMPONENT_REF_FROM ref_from = 31;
   */
  refFrom = COMPONENT_REF_FROM.COMPONENT_REF_FROM_ANY_UNSPECIFIED;

  /**
   * Stores the ID of the reference
   *
   * @generated from field: uint64 ref_id = 32;
   */
  refId = protoInt64.zero;

  /**
   * Stores the ID of the associated family
   *
   * @generated from field: uint64 family_id = 33;
   */
  familyId = protoInt64.zero;

  /**
   * The auto generated code of the component
   *
   * @generated from field: string code = 34;
   */
  code = "";

  /**
   * Stores the internal code (as given by user)
   *
   * @generated from field: string internal_item_code = 35;
   */
  internalItemCode = "";

  /**
   * The computed hash of the component
   *
   * @generated from field: string hash = 36;
   */
  hash = "";

  /**
   * The minimum remaining quantity (in cents)
   *
   * @generated from field: uint64 quantity_remaining_min = 37;
   */
  quantityRemainingMin = protoInt64.zero;

  /**
   * The maximum remaining quantity (in cents)
   *
   * @generated from field: uint64 quantity_remaining_max = 38;
   */
  quantityRemainingMax = protoInt64.zero;

  /**
   * Stores an optional secondary unit of component
   *
   * @generated from field: uint64 secondary_uom_id = 39;
   */
  secondaryUomId = protoInt64.zero;

  /**
   * The start range of shelf life timestamp
   *
   * @generated from field: uint64 shelf_life_timestamp_start = 40;
   */
  shelfLifeTimestampStart = protoInt64.zero;

  /**
   * The end range of shelf life timestamp
   *
   * @generated from field: uint64 shelf_life_timestamp_end = 41;
   */
  shelfLifeTimestampEnd = protoInt64.zero;

  /**
   * The start range of the warranty timestamp
   *
   * @generated from field: uint64 warranty_timestamp_start = 42;
   */
  warrantyTimestampStart = protoInt64.zero;

  /**
   * The end range of the warranty timestamp
   *
   * @generated from field: uint64 warranty_timestamp_end = 43;
   */
  warrantyTimestampEnd = protoInt64.zero;

  /**
   * Stores the store to which the component is sent to
   *
   * @generated from field: uint64 store_id = 50;
   */
  storeId = protoInt64.zero;

  /**
   * Stores an optional ID of the associated storage that the component is stored in
   *
   * @generated from field: uint64 storage_id = 51;
   */
  storageId = protoInt64.zero;

  /**
   * Stores if the associated QC report should be public
   *
   * @generated from field: Scailo.BOOL_FILTER is_qc_report_public = 52;
   */
  isQcReportPublic = BOOL_FILTER.BOOL_FILTER_ANY_UNSPECIFIED;

  /**
   * Filter by the location ID
   *
   * @generated from field: uint64 location_id = 54;
   */
  locationId = protoInt64.zero;

  /**
   * Filter by the given vendor ID
   *
   * --------------------------------------------------
   *
   * @generated from field: uint64 vendor_id = 81;
   */
  vendorId = protoInt64.zero;

  constructor(data?: PartialMessage<ComponentsServiceFilterReq>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.ComponentsServiceFilterReq";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "is_active", kind: "enum", T: proto3.getEnumType(BOOL_FILTER) },
    { no: 2, name: "count", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "offset", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 4, name: "sort_order", kind: "enum", T: proto3.getEnumType(SORT_ORDER) },
    { no: 5, name: "sort_key", kind: "enum", T: proto3.getEnumType(INVENTORY_SORT_KEY) },
    { no: 101, name: "creation_timestamp_start", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 102, name: "creation_timestamp_end", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 103, name: "modification_timestamp_start", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 104, name: "modification_timestamp_end", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 8, name: "entity_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 10, name: "status", kind: "enum", T: proto3.getEnumType(INVENTORY_LIFECYCLE) },
    { no: 20, name: "store_intake_at_start", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 21, name: "store_intake_at_end", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 22, name: "discarded_at_start", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 23, name: "discarded_at_end", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 30, name: "parent_ref_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 31, name: "ref_from", kind: "enum", T: proto3.getEnumType(COMPONENT_REF_FROM) },
    { no: 32, name: "ref_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 33, name: "family_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 34, name: "code", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 35, name: "internal_item_code", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 36, name: "hash", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 37, name: "quantity_remaining_min", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 38, name: "quantity_remaining_max", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 39, name: "secondary_uom_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 40, name: "shelf_life_timestamp_start", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 41, name: "shelf_life_timestamp_end", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 42, name: "warranty_timestamp_start", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 43, name: "warranty_timestamp_end", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 50, name: "store_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 51, name: "storage_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 52, name: "is_qc_report_public", kind: "enum", T: proto3.getEnumType(BOOL_FILTER) },
    { no: 54, name: "location_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 81, name: "vendor_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ComponentsServiceFilterReq {
    return new ComponentsServiceFilterReq().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ComponentsServiceFilterReq {
    return new ComponentsServiceFilterReq().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ComponentsServiceFilterReq {
    return new ComponentsServiceFilterReq().fromJsonString(jsonString, options);
  }

  static equals(a: ComponentsServiceFilterReq | PlainMessage<ComponentsServiceFilterReq> | undefined, b: ComponentsServiceFilterReq | PlainMessage<ComponentsServiceFilterReq> | undefined): boolean {
    return proto3.util.equals(ComponentsServiceFilterReq, a, b);
  }
}

/**
 *
 * Describes the base request payload of a count search
 *
 * @generated from message Scailo.ComponentsServiceCountReq
 */
export class ComponentsServiceCountReq extends Message<ComponentsServiceCountReq> {
  /**
   * If true, then returns only active records. If false, then returns only inactive records
   *
   * @generated from field: Scailo.BOOL_FILTER is_active = 1;
   */
  isActive = BOOL_FILTER.BOOL_FILTER_ANY_UNSPECIFIED;

  /**
   * The minimum timestamp that needs to be considered to filter by creation
   *
   * @generated from field: uint64 creation_timestamp_start = 101;
   */
  creationTimestampStart = protoInt64.zero;

  /**
   * The maximum timestamp that needs to be considered to filter by creation
   *
   * @generated from field: uint64 creation_timestamp_end = 102;
   */
  creationTimestampEnd = protoInt64.zero;

  /**
   * The minimum timestamp that needs to be considered to filter by modification
   *
   * @generated from field: uint64 modification_timestamp_start = 103;
   */
  modificationTimestampStart = protoInt64.zero;

  /**
   * The maximum timestamp that needs to be considered to filter by modification
   *
   * @generated from field: uint64 modification_timestamp_end = 104;
   */
  modificationTimestampEnd = protoInt64.zero;

  /**
   * The entity UUID that is to be used to filter records
   *
   * @generated from field: string entity_uuid = 8;
   */
  entityUuid = "";

  /**
   * The status of this component
   *
   * @generated from field: Scailo.INVENTORY_LIFECYCLE status = 10;
   */
  status = INVENTORY_LIFECYCLE.INVENTORY_LIFECYCLE_ANY_UNSPECIFIED;

  /**
   * The start range of store intake timestamp
   *
   * @generated from field: uint64 store_intake_at_start = 20;
   */
  storeIntakeAtStart = protoInt64.zero;

  /**
   * The end range of store intake timestamp
   *
   * @generated from field: uint64 store_intake_at_end = 21;
   */
  storeIntakeAtEnd = protoInt64.zero;

  /**
   * The start range of discarded timestamp
   *
   * @generated from field: uint64 discarded_at_start = 22;
   */
  discardedAtStart = protoInt64.zero;

  /**
   * The end range of discarded timestamp
   *
   * @generated from field: uint64 discarded_at_end = 23;
   */
  discardedAtEnd = protoInt64.zero;

  /**
   * The ID of the parent inventory item
   *
   * @generated from field: uint64 parent_ref_id = 30;
   */
  parentRefId = protoInt64.zero;

  /**
   * Stores the reference from
   *
   * @generated from field: Scailo.COMPONENT_REF_FROM ref_from = 31;
   */
  refFrom = COMPONENT_REF_FROM.COMPONENT_REF_FROM_ANY_UNSPECIFIED;

  /**
   * Stores the ID of the reference
   *
   * @generated from field: uint64 ref_id = 32;
   */
  refId = protoInt64.zero;

  /**
   * Stores the ID of the associated family
   *
   * @generated from field: uint64 family_id = 33;
   */
  familyId = protoInt64.zero;

  /**
   * The auto generated code of the component
   *
   * @generated from field: string code = 34;
   */
  code = "";

  /**
   * Stores the internal code (as given by user)
   *
   * @generated from field: string internal_item_code = 35;
   */
  internalItemCode = "";

  /**
   * The computed hash of the component
   *
   * @generated from field: string hash = 36;
   */
  hash = "";

  /**
   * The minimum remaining quantity (in cents)
   *
   * @generated from field: uint64 quantity_remaining_min = 37;
   */
  quantityRemainingMin = protoInt64.zero;

  /**
   * The maximum remaining quantity (in cents)
   *
   * @generated from field: uint64 quantity_remaining_max = 38;
   */
  quantityRemainingMax = protoInt64.zero;

  /**
   * Stores an optional secondary unit of component
   *
   * @generated from field: uint64 secondary_uom_id = 39;
   */
  secondaryUomId = protoInt64.zero;

  /**
   * The start range of shelf life timestamp
   *
   * @generated from field: uint64 shelf_life_timestamp_start = 40;
   */
  shelfLifeTimestampStart = protoInt64.zero;

  /**
   * The end range of shelf life timestamp
   *
   * @generated from field: uint64 shelf_life_timestamp_end = 41;
   */
  shelfLifeTimestampEnd = protoInt64.zero;

  /**
   * The start range of the warranty timestamp
   *
   * @generated from field: uint64 warranty_timestamp_start = 42;
   */
  warrantyTimestampStart = protoInt64.zero;

  /**
   * The end range of the warranty timestamp
   *
   * @generated from field: uint64 warranty_timestamp_end = 43;
   */
  warrantyTimestampEnd = protoInt64.zero;

  /**
   * Stores the store to which the component is sent to
   *
   * @generated from field: uint64 store_id = 50;
   */
  storeId = protoInt64.zero;

  /**
   * Stores an optional ID of the associated storage that the component is stored in
   *
   * @generated from field: uint64 storage_id = 51;
   */
  storageId = protoInt64.zero;

  /**
   * Stores if the associated QC report should be public
   *
   * @generated from field: Scailo.BOOL_FILTER is_qc_report_public = 52;
   */
  isQcReportPublic = BOOL_FILTER.BOOL_FILTER_ANY_UNSPECIFIED;

  /**
   * Filter by the location ID
   *
   * @generated from field: uint64 location_id = 54;
   */
  locationId = protoInt64.zero;

  /**
   * Filter by the given vendor ID
   *
   * --------------------------------------------------
   *
   * @generated from field: uint64 vendor_id = 81;
   */
  vendorId = protoInt64.zero;

  constructor(data?: PartialMessage<ComponentsServiceCountReq>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.ComponentsServiceCountReq";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "is_active", kind: "enum", T: proto3.getEnumType(BOOL_FILTER) },
    { no: 101, name: "creation_timestamp_start", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 102, name: "creation_timestamp_end", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 103, name: "modification_timestamp_start", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 104, name: "modification_timestamp_end", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 8, name: "entity_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 10, name: "status", kind: "enum", T: proto3.getEnumType(INVENTORY_LIFECYCLE) },
    { no: 20, name: "store_intake_at_start", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 21, name: "store_intake_at_end", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 22, name: "discarded_at_start", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 23, name: "discarded_at_end", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 30, name: "parent_ref_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 31, name: "ref_from", kind: "enum", T: proto3.getEnumType(COMPONENT_REF_FROM) },
    { no: 32, name: "ref_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 33, name: "family_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 34, name: "code", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 35, name: "internal_item_code", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 36, name: "hash", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 37, name: "quantity_remaining_min", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 38, name: "quantity_remaining_max", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 39, name: "secondary_uom_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 40, name: "shelf_life_timestamp_start", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 41, name: "shelf_life_timestamp_end", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 42, name: "warranty_timestamp_start", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 43, name: "warranty_timestamp_end", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 50, name: "store_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 51, name: "storage_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 52, name: "is_qc_report_public", kind: "enum", T: proto3.getEnumType(BOOL_FILTER) },
    { no: 54, name: "location_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 81, name: "vendor_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ComponentsServiceCountReq {
    return new ComponentsServiceCountReq().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ComponentsServiceCountReq {
    return new ComponentsServiceCountReq().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ComponentsServiceCountReq {
    return new ComponentsServiceCountReq().fromJsonString(jsonString, options);
  }

  static equals(a: ComponentsServiceCountReq | PlainMessage<ComponentsServiceCountReq> | undefined, b: ComponentsServiceCountReq | PlainMessage<ComponentsServiceCountReq> | undefined): boolean {
    return proto3.util.equals(ComponentsServiceCountReq, a, b);
  }
}

/**
 *
 * Describes the request payload for performing a generic search operation on records
 *
 * @generated from message Scailo.ComponentsServiceSearchAllReq
 */
export class ComponentsServiceSearchAllReq extends Message<ComponentsServiceSearchAllReq> {
  /**
   * If true, then returns only active records. If false, then returns only inactive records
   *
   * @generated from field: Scailo.BOOL_FILTER is_active = 1;
   */
  isActive = BOOL_FILTER.BOOL_FILTER_ANY_UNSPECIFIED;

  /**
   * The number of records that need to be sent in the response. Returns all records if it is set to -1
   *
   * @generated from field: int64 count = 2;
   */
  count = protoInt64.zero;

  /**
   * The number that need to be offset by before fetching the records
   *
   * @generated from field: uint64 offset = 3;
   */
  offset = protoInt64.zero;

  /**
   * The sort order that is to be used to fetch the pagination response
   *
   * @generated from field: Scailo.SORT_ORDER sort_order = 4;
   */
  sortOrder = SORT_ORDER.ASCENDING_UNSPECIFIED;

  /**
   * The sort key that is to be used to fetch the pagination response
   *
   * @generated from field: Scailo.INVENTORY_SORT_KEY sort_key = 5;
   */
  sortKey = INVENTORY_SORT_KEY.INVENTORY_SORT_KEY_ID_UNSPECIFIED;

  /**
   * The entity UUID that is to be used to filter records
   *
   * @generated from field: string entity_uuid = 6;
   */
  entityUuid = "";

  /**
   * Limit the search space to the given status
   *
   * @generated from field: Scailo.INVENTORY_LIFECYCLE status = 10;
   */
  status = INVENTORY_LIFECYCLE.INVENTORY_LIFECYCLE_ANY_UNSPECIFIED;

  /**
   * Describes the key with which the search operation needs to be performed
   *
   * @generated from field: string search_key = 11;
   */
  searchKey = "";

  /**
   * The ID of the parent inventory item
   *
   * @generated from field: uint64 parent_ref_id = 30;
   */
  parentRefId = protoInt64.zero;

  /**
   * Stores the reference from
   *
   * @generated from field: Scailo.COMPONENT_REF_FROM ref_from = 31;
   */
  refFrom = COMPONENT_REF_FROM.COMPONENT_REF_FROM_ANY_UNSPECIFIED;

  /**
   * Stores the ID of the reference
   *
   * @generated from field: uint64 ref_id = 32;
   */
  refId = protoInt64.zero;

  /**
   * Stores the ID of the associated family
   *
   * @generated from field: uint64 family_id = 33;
   */
  familyId = protoInt64.zero;

  /**
   * Stores an optional secondary unit of component
   *
   * @generated from field: uint64 secondary_uom_id = 38;
   */
  secondaryUomId = protoInt64.zero;

  /**
   * Stores the store to which the component is sent to
   *
   * @generated from field: uint64 store_id = 50;
   */
  storeId = protoInt64.zero;

  /**
   * Stores an optional ID of the associated storage that the component is stored in
   *
   * @generated from field: uint64 storage_id = 51;
   */
  storageId = protoInt64.zero;

  /**
   * Stores if the associated QC report should be public
   *
   * @generated from field: Scailo.BOOL_FILTER is_qc_report_public = 52;
   */
  isQcReportPublic = BOOL_FILTER.BOOL_FILTER_ANY_UNSPECIFIED;

  /**
   * Filter by the location ID
   *
   * @generated from field: uint64 location_id = 54;
   */
  locationId = protoInt64.zero;

  constructor(data?: PartialMessage<ComponentsServiceSearchAllReq>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.ComponentsServiceSearchAllReq";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "is_active", kind: "enum", T: proto3.getEnumType(BOOL_FILTER) },
    { no: 2, name: "count", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "offset", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 4, name: "sort_order", kind: "enum", T: proto3.getEnumType(SORT_ORDER) },
    { no: 5, name: "sort_key", kind: "enum", T: proto3.getEnumType(INVENTORY_SORT_KEY) },
    { no: 6, name: "entity_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 10, name: "status", kind: "enum", T: proto3.getEnumType(INVENTORY_LIFECYCLE) },
    { no: 11, name: "search_key", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 30, name: "parent_ref_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 31, name: "ref_from", kind: "enum", T: proto3.getEnumType(COMPONENT_REF_FROM) },
    { no: 32, name: "ref_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 33, name: "family_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 38, name: "secondary_uom_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 50, name: "store_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 51, name: "storage_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 52, name: "is_qc_report_public", kind: "enum", T: proto3.getEnumType(BOOL_FILTER) },
    { no: 54, name: "location_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ComponentsServiceSearchAllReq {
    return new ComponentsServiceSearchAllReq().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ComponentsServiceSearchAllReq {
    return new ComponentsServiceSearchAllReq().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ComponentsServiceSearchAllReq {
    return new ComponentsServiceSearchAllReq().fromJsonString(jsonString, options);
  }

  static equals(a: ComponentsServiceSearchAllReq | PlainMessage<ComponentsServiceSearchAllReq> | undefined, b: ComponentsServiceSearchAllReq | PlainMessage<ComponentsServiceSearchAllReq> | undefined): boolean {
    return proto3.util.equals(ComponentsServiceSearchAllReq, a, b);
  }
}

