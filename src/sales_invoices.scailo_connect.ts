// @generated by protoc-gen-connect-es v0.12.0 with parameter "target=ts"
// @generated from file sales_invoices.scailo.proto (package Scailo, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { SalesInvoice, SalesInvoiceDispatchedStatisticsList, SalesInvoiceItem, SalesInvoiceItemHistoryRequest, SalesInvoiceItemProspectiveInfoRequest, SalesInvoiceItemsList, SalesInvoiceItemsSearchRequest, SalesInvoiceReference, SalesInvoiceReferencesList, SalesInvoicesList, SalesInvoicesServiceAlreadyAddedQuantityForSourceRequest, SalesInvoicesServiceAutofillRequest, SalesInvoicesServiceCountReq, SalesInvoicesServiceCreateRequest, SalesInvoicesServiceFilterReq, SalesInvoicesServiceItemCreateRequest, SalesInvoicesServiceItemUpdateRequest, SalesInvoicesServicePaginatedItemsResponse, SalesInvoicesServicePaginationReq, SalesInvoicesServicePaginationResponse, SalesInvoicesServiceReferenceCreateRequest, SalesInvoicesServiceSearchAllReq, SalesInvoicesServiceUpdateRequest } from "./sales_invoices.scailo_pb.js";
import { ActiveStatus, AmendmentLogsList, CountInSLCStatusRequest, CountResponse, DualQuantitiesResponse, Identifier, IdentifiersList, IdentifierUUID, IdentifierWithEmailAttributes, IdentifierWithFile, IdentifierWithSearchKey, IdentifierWithUserComment, ReorderItemsRequest, StandardFile, SumResponse } from "./base.scailo_pb.js";
import { MethodKind } from "@bufbuild/protobuf";
import { FamiliesList } from "./families.scailo_pb.js";

/**
 *
 * Describes the common methods applicable on each sales invoice
 *
 * @generated from service Scailo.SalesInvoicesService
 */
export const SalesInvoicesService = {
  typeName: "Scailo.SalesInvoicesService",
  methods: {
    /**
     * Create and send for verification
     *
     * @generated from rpc Scailo.SalesInvoicesService.Create
     */
    create: {
      name: "Create",
      I: SalesInvoicesServiceCreateRequest,
      O: Identifier,
      kind: MethodKind.Unary,
    },
    /**
     * Create and save as draft
     *
     * @generated from rpc Scailo.SalesInvoicesService.Draft
     */
    draft: {
      name: "Draft",
      I: SalesInvoicesServiceCreateRequest,
      O: Identifier,
      kind: MethodKind.Unary,
    },
    /**
     * Update draft
     *
     * @generated from rpc Scailo.SalesInvoicesService.DraftUpdate
     */
    draftUpdate: {
      name: "DraftUpdate",
      I: SalesInvoicesServiceUpdateRequest,
      O: Identifier,
      kind: MethodKind.Unary,
    },
    /**
     * Send for verification
     *
     * @generated from rpc Scailo.SalesInvoicesService.SendForVerification
     */
    sendForVerification: {
      name: "SendForVerification",
      I: IdentifierWithUserComment,
      O: Identifier,
      kind: MethodKind.Unary,
    },
    /**
     * Verify
     *
     * @generated from rpc Scailo.SalesInvoicesService.Verify
     */
    verify: {
      name: "Verify",
      I: IdentifierWithUserComment,
      O: Identifier,
      kind: MethodKind.Unary,
    },
    /**
     * Approve
     *
     * @generated from rpc Scailo.SalesInvoicesService.Approve
     */
    approve: {
      name: "Approve",
      I: IdentifierWithUserComment,
      O: Identifier,
      kind: MethodKind.Unary,
    },
    /**
     * Send For Revision
     *
     * @generated from rpc Scailo.SalesInvoicesService.SendForRevision
     */
    sendForRevision: {
      name: "SendForRevision",
      I: IdentifierWithUserComment,
      O: Identifier,
      kind: MethodKind.Unary,
    },
    /**
     * Update revision
     *
     * @generated from rpc Scailo.SalesInvoicesService.RevisionUpdate
     */
    revisionUpdate: {
      name: "RevisionUpdate",
      I: SalesInvoicesServiceUpdateRequest,
      O: Identifier,
      kind: MethodKind.Unary,
    },
    /**
     * Halt
     *
     * @generated from rpc Scailo.SalesInvoicesService.Halt
     */
    halt: {
      name: "Halt",
      I: IdentifierWithUserComment,
      O: Identifier,
      kind: MethodKind.Unary,
    },
    /**
     * Discard
     *
     * @generated from rpc Scailo.SalesInvoicesService.Discard
     */
    discard: {
      name: "Discard",
      I: IdentifierWithUserComment,
      O: Identifier,
      kind: MethodKind.Unary,
    },
    /**
     * Restore
     *
     * @generated from rpc Scailo.SalesInvoicesService.Restore
     */
    restore: {
      name: "Restore",
      I: IdentifierWithUserComment,
      O: Identifier,
      kind: MethodKind.Unary,
    },
    /**
     * Complete
     *
     * @generated from rpc Scailo.SalesInvoicesService.Complete
     */
    complete: {
      name: "Complete",
      I: IdentifierWithUserComment,
      O: Identifier,
      kind: MethodKind.Unary,
    },
    /**
     * Repeat
     *
     * @generated from rpc Scailo.SalesInvoicesService.Repeat
     */
    repeat: {
      name: "Repeat",
      I: IdentifierWithUserComment,
      O: Identifier,
      kind: MethodKind.Unary,
    },
    /**
     * Reopen
     *
     * @generated from rpc Scailo.SalesInvoicesService.Reopen
     */
    reopen: {
      name: "Reopen",
      I: IdentifierWithUserComment,
      O: Identifier,
      kind: MethodKind.Unary,
    },
    /**
     * Add comment
     *
     * @generated from rpc Scailo.SalesInvoicesService.CommentAdd
     */
    commentAdd: {
      name: "CommentAdd",
      I: IdentifierWithUserComment,
      O: Identifier,
      kind: MethodKind.Unary,
    },
    /**
     * Send Email
     *
     * @generated from rpc Scailo.SalesInvoicesService.SendEmail
     */
    sendEmail: {
      name: "SendEmail",
      I: IdentifierWithEmailAttributes,
      O: Identifier,
      kind: MethodKind.Unary,
    },
    /**
     * Autofill the sales invoice
     *
     * @generated from rpc Scailo.SalesInvoicesService.Autofill
     */
    autofill: {
      name: "Autofill",
      I: SalesInvoicesServiceAutofillRequest,
      O: Identifier,
      kind: MethodKind.Unary,
    },
    /**
     * Amend the sales invoice and send for revision
     *
     * @generated from rpc Scailo.SalesInvoicesService.Amend
     */
    amend: {
      name: "Amend",
      I: IdentifierWithUserComment,
      O: Identifier,
      kind: MethodKind.Unary,
    },
    /**
     * Add an item to a sales invoice
     *
     * @generated from rpc Scailo.SalesInvoicesService.AddSalesInvoiceItem
     */
    addSalesInvoiceItem: {
      name: "AddSalesInvoiceItem",
      I: SalesInvoicesServiceItemCreateRequest,
      O: Identifier,
      kind: MethodKind.Unary,
    },
    /**
     * Modify an item in a sales invoice
     *
     * @generated from rpc Scailo.SalesInvoicesService.ModifySalesInvoiceItem
     */
    modifySalesInvoiceItem: {
      name: "ModifySalesInvoiceItem",
      I: SalesInvoicesServiceItemUpdateRequest,
      O: Identifier,
      kind: MethodKind.Unary,
    },
    /**
     * Approve an item in a sales invoice
     *
     * @generated from rpc Scailo.SalesInvoicesService.ApproveSalesInvoiceItem
     */
    approveSalesInvoiceItem: {
      name: "ApproveSalesInvoiceItem",
      I: IdentifierWithUserComment,
      O: Identifier,
      kind: MethodKind.Unary,
    },
    /**
     * Delete an item in a sales invoice
     *
     * @generated from rpc Scailo.SalesInvoicesService.DeleteSalesInvoiceItem
     */
    deleteSalesInvoiceItem: {
      name: "DeleteSalesInvoiceItem",
      I: IdentifierWithUserComment,
      O: Identifier,
      kind: MethodKind.Unary,
    },
    /**
     * Reorder items in a sales invoice
     *
     * @generated from rpc Scailo.SalesInvoicesService.ReorderSalesInvoiceItems
     */
    reorderSalesInvoiceItems: {
      name: "ReorderSalesInvoiceItems",
      I: ReorderItemsRequest,
      O: Identifier,
      kind: MethodKind.Unary,
    },
    /**
     * View Sales Invoice Item by ID
     *
     * @generated from rpc Scailo.SalesInvoicesService.ViewSalesInvoiceItemByID
     */
    viewSalesInvoiceItemByID: {
      name: "ViewSalesInvoiceItemByID",
      I: Identifier,
      O: SalesInvoiceItem,
      kind: MethodKind.Unary,
    },
    /**
     * View approved sales invoice items for given sales invoice ID
     *
     * @generated from rpc Scailo.SalesInvoicesService.ViewApprovedSalesInvoiceItems
     */
    viewApprovedSalesInvoiceItems: {
      name: "ViewApprovedSalesInvoiceItems",
      I: IdentifierWithSearchKey,
      O: SalesInvoiceItemsList,
      kind: MethodKind.Unary,
    },
    /**
     * View unapproved sales invoice items for given sales invoice ID
     *
     * @generated from rpc Scailo.SalesInvoicesService.ViewUnapprovedSalesInvoiceItems
     */
    viewUnapprovedSalesInvoiceItems: {
      name: "ViewUnapprovedSalesInvoiceItems",
      I: IdentifierWithSearchKey,
      O: SalesInvoiceItemsList,
      kind: MethodKind.Unary,
    },
    /**
     * View the history of the sales invoice item
     *
     * @generated from rpc Scailo.SalesInvoicesService.ViewSalesInvoiceItemHistory
     */
    viewSalesInvoiceItemHistory: {
      name: "ViewSalesInvoiceItemHistory",
      I: SalesInvoiceItemHistoryRequest,
      O: SalesInvoiceItemsList,
      kind: MethodKind.Unary,
    },
    /**
     * View approved sales invoice items for given sales invoice ID with pagination
     *
     * @generated from rpc Scailo.SalesInvoicesService.ViewPaginatedApprovedSalesInvoiceItems
     */
    viewPaginatedApprovedSalesInvoiceItems: {
      name: "ViewPaginatedApprovedSalesInvoiceItems",
      I: SalesInvoiceItemsSearchRequest,
      O: SalesInvoicesServicePaginatedItemsResponse,
      kind: MethodKind.Unary,
    },
    /**
     * View unapproved sales invoice items for given sales invoice ID with pagination
     *
     * @generated from rpc Scailo.SalesInvoicesService.ViewPaginatedUnapprovedSalesInvoiceItems
     */
    viewPaginatedUnapprovedSalesInvoiceItems: {
      name: "ViewPaginatedUnapprovedSalesInvoiceItems",
      I: SalesInvoiceItemsSearchRequest,
      O: SalesInvoicesServicePaginatedItemsResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Search through sales invoice items with pagination
     *
     * @generated from rpc Scailo.SalesInvoicesService.SearchItemsWithPagination
     */
    searchItemsWithPagination: {
      name: "SearchItemsWithPagination",
      I: SalesInvoiceItemsSearchRequest,
      O: SalesInvoicesServicePaginatedItemsResponse,
      kind: MethodKind.Unary,
    },
    /**
     * CSV operations
     * Download the CSV file that could be used to upload items from the filled CSV file. The same file can also be used as a template when there are no existing records
     *
     * @generated from rpc Scailo.SalesInvoicesService.DownloadAsCSV
     */
    downloadAsCSV: {
      name: "DownloadAsCSV",
      I: Identifier,
      O: StandardFile,
      kind: MethodKind.Unary,
    },
    /**
     * Upload items using a CSV file. This is an idempotent operation. All the existing items are deleted before adding the items from the file.
     *
     * @generated from rpc Scailo.SalesInvoicesService.UploadSalesInvoiceItems
     */
    uploadSalesInvoiceItems: {
      name: "UploadSalesInvoiceItems",
      I: IdentifierWithFile,
      O: IdentifiersList,
      kind: MethodKind.Unary,
    },
    /**
     * Add a reference
     *
     * @generated from rpc Scailo.SalesInvoicesService.AddSalesInvoiceReference
     */
    addSalesInvoiceReference: {
      name: "AddSalesInvoiceReference",
      I: SalesInvoicesServiceReferenceCreateRequest,
      O: Identifier,
      kind: MethodKind.Unary,
    },
    /**
     * Approve a reference
     *
     * @generated from rpc Scailo.SalesInvoicesService.ApproveSalesInvoiceReference
     */
    approveSalesInvoiceReference: {
      name: "ApproveSalesInvoiceReference",
      I: IdentifierWithUserComment,
      O: Identifier,
      kind: MethodKind.Unary,
    },
    /**
     * Delete a reference
     *
     * @generated from rpc Scailo.SalesInvoicesService.DeleteSalesInvoiceReference
     */
    deleteSalesInvoiceReference: {
      name: "DeleteSalesInvoiceReference",
      I: IdentifierWithUserComment,
      O: Identifier,
      kind: MethodKind.Unary,
    },
    /**
     * View a reference for the given ID
     *
     * @generated from rpc Scailo.SalesInvoicesService.ViewSalesInvoiceReferenceByID
     */
    viewSalesInvoiceReferenceByID: {
      name: "ViewSalesInvoiceReferenceByID",
      I: Identifier,
      O: SalesInvoiceReference,
      kind: MethodKind.Unary,
    },
    /**
     * View all references for given sales invoice ID
     *
     * @generated from rpc Scailo.SalesInvoicesService.ViewSalesInvoiceReferences
     */
    viewSalesInvoiceReferences: {
      name: "ViewSalesInvoiceReferences",
      I: Identifier,
      O: SalesInvoiceReferencesList,
      kind: MethodKind.Unary,
    },
    /**
     * View by ID
     *
     * @generated from rpc Scailo.SalesInvoicesService.ViewByID
     */
    viewByID: {
      name: "ViewByID",
      I: Identifier,
      O: SalesInvoice,
      kind: MethodKind.Unary,
    },
    /**
     * View by UUID
     *
     * @generated from rpc Scailo.SalesInvoicesService.ViewByUUID
     */
    viewByUUID: {
      name: "ViewByUUID",
      I: IdentifierUUID,
      O: SalesInvoice,
      kind: MethodKind.Unary,
    },
    /**
     * View all
     *
     * @generated from rpc Scailo.SalesInvoicesService.ViewAll
     */
    viewAll: {
      name: "ViewAll",
      I: ActiveStatus,
      O: SalesInvoicesList,
      kind: MethodKind.Unary,
    },
    /**
     * View all with the given entity UUID
     *
     * @generated from rpc Scailo.SalesInvoicesService.ViewAllForEntityUUID
     */
    viewAllForEntityUUID: {
      name: "ViewAllForEntityUUID",
      I: IdentifierUUID,
      O: SalesInvoicesList,
      kind: MethodKind.Unary,
    },
    /**
     * View with pagination
     *
     * @generated from rpc Scailo.SalesInvoicesService.ViewWithPagination
     */
    viewWithPagination: {
      name: "ViewWithPagination",
      I: SalesInvoicesServicePaginationReq,
      O: SalesInvoicesServicePaginationResponse,
      kind: MethodKind.Unary,
    },
    /**
     * View all the amendments made
     *
     * @generated from rpc Scailo.SalesInvoicesService.ViewAmendments
     */
    viewAmendments: {
      name: "ViewAmendments",
      I: Identifier,
      O: AmendmentLogsList,
      kind: MethodKind.Unary,
    },
    /**
     * View prospective families for the given sales invoice
     *
     * @generated from rpc Scailo.SalesInvoicesService.ViewProspectiveFamilies
     */
    viewProspectiveFamilies: {
      name: "ViewProspectiveFamilies",
      I: IdentifierWithSearchKey,
      O: FamiliesList,
      kind: MethodKind.Unary,
    },
    /**
     * View prospective sales invoice item info for the given family ID and sales invoice ID
     *
     * @generated from rpc Scailo.SalesInvoicesService.ViewProspectiveSalesInvoiceItem
     */
    viewProspectiveSalesInvoiceItem: {
      name: "ViewProspectiveSalesInvoiceItem",
      I: SalesInvoiceItemProspectiveInfoRequest,
      O: SalesInvoicesServiceItemCreateRequest,
      kind: MethodKind.Unary,
    },
    /**
     * View dispatched (goods dispatch) statistics of the sales invoice
     *
     * @generated from rpc Scailo.SalesInvoicesService.ViewDispatchedStatistics
     */
    viewDispatchedStatistics: {
      name: "ViewDispatchedStatistics",
      I: Identifier,
      O: SalesInvoiceDispatchedStatisticsList,
      kind: MethodKind.Unary,
    },
    /**
     * View already added quantities
     *
     * @generated from rpc Scailo.SalesInvoicesService.ViewAddedFamilyQuantityForSource
     */
    viewAddedFamilyQuantityForSource: {
      name: "ViewAddedFamilyQuantityForSource",
      I: SalesInvoicesServiceAlreadyAddedQuantityForSourceRequest,
      O: DualQuantitiesResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Download sales invoice with the given IdentifierUUID (can be used to allow public downloads)
     *
     * @generated from rpc Scailo.SalesInvoicesService.DownloadByUUID
     */
    downloadByUUID: {
      name: "DownloadByUUID",
      I: IdentifierUUID,
      O: StandardFile,
      kind: MethodKind.Unary,
    },
    /**
     * View all that match the given search key
     *
     * @generated from rpc Scailo.SalesInvoicesService.SearchAll
     */
    searchAll: {
      name: "SearchAll",
      I: SalesInvoicesServiceSearchAllReq,
      O: SalesInvoicesList,
      kind: MethodKind.Unary,
    },
    /**
     * View all that match the given filter criteria
     *
     * @generated from rpc Scailo.SalesInvoicesService.Filter
     */
    filter: {
      name: "Filter",
      I: SalesInvoicesServiceFilterReq,
      O: SalesInvoicesList,
      kind: MethodKind.Unary,
    },
    /**
     * Count in status
     *
     * @generated from rpc Scailo.SalesInvoicesService.CountInStatus
     */
    countInStatus: {
      name: "CountInStatus",
      I: CountInSLCStatusRequest,
      O: CountResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Count all that match the given criteria
     *
     * @generated from rpc Scailo.SalesInvoicesService.Count
     */
    count: {
      name: "Count",
      I: SalesInvoicesServiceCountReq,
      O: CountResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Returns the sum of the total value of all the records that match the given criteria
     *
     * @generated from rpc Scailo.SalesInvoicesService.AccruedValue
     */
    accruedValue: {
      name: "AccruedValue",
      I: SalesInvoicesServiceCountReq,
      O: SumResponse,
      kind: MethodKind.Unary,
    },
  }
} as const;

