// @generated by protoc-gen-connect-es v0.12.0 with parameter "target=ts"
// @generated from file quotations_responses.scailo.proto (package Scailo, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { QuotationResponse, QuotationResponseAncillaryParameters, QuotationResponseItem, QuotationResponseItemHistoryRequest, QuotationResponseItemsSearchRequest, QuotationsResponsesItemsList, QuotationsResponsesList, QuotationsResponsesServiceCountReq, QuotationsResponsesServiceCreateRequest, QuotationsResponsesServiceFilterReq, QuotationsResponsesServiceItemCreateRequest, QuotationsResponsesServiceItemsFilterReq, QuotationsResponsesServiceItemUpdateRequest, QuotationsResponsesServicePaginatedItemsResponse, QuotationsResponsesServicePaginationReq, QuotationsResponsesServicePaginationResponse, QuotationsResponsesServiceSearchAllReq, QuotationsResponsesServiceUpdateRequest } from "./quotations_responses.scailo_pb.js";
import { ActiveStatus, BooleanResponse, CountInSLCStatusRequest, CountResponse, Identifier, IdentifierResponse, IdentifiersList, IdentifierUUID, IdentifierUUIDWithUserComment, IdentifierWithSearchKey, IdentifierWithUserComment, ReorderItemsRequest, SimpleSearchReq, StandardFile } from "./base.scailo_pb.js";
import { MethodKind } from "@bufbuild/protobuf";
import { MagicLink, MagicLinksServiceCreateRequestForSpecificResource } from "./magic_links.scailo_pb.js";

/**
 *
 * Describes the common methods applicable on each quotation response
 *
 * @generated from service Scailo.QuotationsResponsesService
 */
export const QuotationsResponsesService = {
  typeName: "Scailo.QuotationsResponsesService",
  methods: {
    /**
     * Create and send for verification
     *
     * @generated from rpc Scailo.QuotationsResponsesService.Create
     */
    create: {
      name: "Create",
      I: QuotationsResponsesServiceCreateRequest,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Create and save as draft
     *
     * @generated from rpc Scailo.QuotationsResponsesService.Draft
     */
    draft: {
      name: "Draft",
      I: QuotationsResponsesServiceCreateRequest,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Update draft
     *
     * @generated from rpc Scailo.QuotationsResponsesService.DraftUpdate
     */
    draftUpdate: {
      name: "DraftUpdate",
      I: QuotationsResponsesServiceUpdateRequest,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Send for verification
     *
     * @generated from rpc Scailo.QuotationsResponsesService.SendForVerification
     */
    sendForVerification: {
      name: "SendForVerification",
      I: IdentifierUUIDWithUserComment,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Verify
     *
     * @generated from rpc Scailo.QuotationsResponsesService.Verify
     */
    verify: {
      name: "Verify",
      I: IdentifierUUIDWithUserComment,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Approve
     *
     * @generated from rpc Scailo.QuotationsResponsesService.Approve
     */
    approve: {
      name: "Approve",
      I: IdentifierUUIDWithUserComment,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Send For Revision
     *
     * @generated from rpc Scailo.QuotationsResponsesService.SendForRevision
     */
    sendForRevision: {
      name: "SendForRevision",
      I: IdentifierUUIDWithUserComment,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Update revision
     *
     * @generated from rpc Scailo.QuotationsResponsesService.RevisionUpdate
     */
    revisionUpdate: {
      name: "RevisionUpdate",
      I: QuotationsResponsesServiceUpdateRequest,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Halt
     *
     * @generated from rpc Scailo.QuotationsResponsesService.Halt
     */
    halt: {
      name: "Halt",
      I: IdentifierUUIDWithUserComment,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Discard
     *
     * @generated from rpc Scailo.QuotationsResponsesService.Discard
     */
    discard: {
      name: "Discard",
      I: IdentifierUUIDWithUserComment,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Restore
     *
     * @generated from rpc Scailo.QuotationsResponsesService.Restore
     */
    restore: {
      name: "Restore",
      I: IdentifierUUIDWithUserComment,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Complete
     *
     * @generated from rpc Scailo.QuotationsResponsesService.Complete
     */
    complete: {
      name: "Complete",
      I: IdentifierUUIDWithUserComment,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Repeat
     *
     * @generated from rpc Scailo.QuotationsResponsesService.Repeat
     */
    repeat: {
      name: "Repeat",
      I: IdentifierUUIDWithUserComment,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Reopen
     *
     * @generated from rpc Scailo.QuotationsResponsesService.Reopen
     */
    reopen: {
      name: "Reopen",
      I: IdentifierUUIDWithUserComment,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Add comment
     *
     * @generated from rpc Scailo.QuotationsResponsesService.CommentAdd
     */
    commentAdd: {
      name: "CommentAdd",
      I: IdentifierUUIDWithUserComment,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Create a magic link
     *
     * @generated from rpc Scailo.QuotationsResponsesService.CreateMagicLink
     */
    createMagicLink: {
      name: "CreateMagicLink",
      I: MagicLinksServiceCreateRequestForSpecificResource,
      O: MagicLink,
      kind: MethodKind.Unary,
    },
    /**
     * Add an item to a quotation response
     *
     * @generated from rpc Scailo.QuotationsResponsesService.AddQuotationResponseItem
     */
    addQuotationResponseItem: {
      name: "AddQuotationResponseItem",
      I: QuotationsResponsesServiceItemCreateRequest,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Modify an item in a quotation response
     *
     * @generated from rpc Scailo.QuotationsResponsesService.ModifyQuotationResponseItem
     */
    modifyQuotationResponseItem: {
      name: "ModifyQuotationResponseItem",
      I: QuotationsResponsesServiceItemUpdateRequest,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Approve an item in a quotation response
     *
     * @generated from rpc Scailo.QuotationsResponsesService.ApproveQuotationResponseItem
     */
    approveQuotationResponseItem: {
      name: "ApproveQuotationResponseItem",
      I: IdentifierWithUserComment,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Delete an item in a quotation response
     *
     * @generated from rpc Scailo.QuotationsResponsesService.DeleteQuotationResponseItem
     */
    deleteQuotationResponseItem: {
      name: "DeleteQuotationResponseItem",
      I: IdentifierWithUserComment,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Reorder items in a quotation response
     *
     * @generated from rpc Scailo.QuotationsResponsesService.ReorderQuotationResponseItems
     */
    reorderQuotationResponseItems: {
      name: "ReorderQuotationResponseItems",
      I: ReorderItemsRequest,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * View quotation response Item by ID
     *
     * @generated from rpc Scailo.QuotationsResponsesService.ViewQuotationResponseItemByID
     */
    viewQuotationResponseItemByID: {
      name: "ViewQuotationResponseItemByID",
      I: Identifier,
      O: QuotationResponseItem,
      kind: MethodKind.Unary,
    },
    /**
     * View approved quotation response items for given quotation response ID
     *
     * @generated from rpc Scailo.QuotationsResponsesService.ViewApprovedQuotationResponseItems
     */
    viewApprovedQuotationResponseItems: {
      name: "ViewApprovedQuotationResponseItems",
      I: IdentifierWithSearchKey,
      O: QuotationsResponsesItemsList,
      kind: MethodKind.Unary,
    },
    /**
     * View unapproved quotation response items for given quotation response ID
     *
     * @generated from rpc Scailo.QuotationsResponsesService.ViewUnapprovedQuotationResponseItems
     */
    viewUnapprovedQuotationResponseItems: {
      name: "ViewUnapprovedQuotationResponseItems",
      I: IdentifierWithSearchKey,
      O: QuotationsResponsesItemsList,
      kind: MethodKind.Unary,
    },
    /**
     * View the history of the quotation response item
     *
     * @generated from rpc Scailo.QuotationsResponsesService.ViewQuotationResponseItemHistory
     */
    viewQuotationResponseItemHistory: {
      name: "ViewQuotationResponseItemHistory",
      I: QuotationResponseItemHistoryRequest,
      O: QuotationsResponsesItemsList,
      kind: MethodKind.Unary,
    },
    /**
     * View all the quotation response items that match the given filter criteria
     *
     * @generated from rpc Scailo.QuotationsResponsesService.FilterItems
     */
    filterItems: {
      name: "FilterItems",
      I: QuotationsResponsesServiceItemsFilterReq,
      O: QuotationsResponsesItemsList,
      kind: MethodKind.Unary,
    },
    /**
     * View approved quotation response items for given quotation response ID with pagination
     *
     * @generated from rpc Scailo.QuotationsResponsesService.ViewPaginatedApprovedQuotationResponseItems
     */
    viewPaginatedApprovedQuotationResponseItems: {
      name: "ViewPaginatedApprovedQuotationResponseItems",
      I: QuotationResponseItemsSearchRequest,
      O: QuotationsResponsesServicePaginatedItemsResponse,
      kind: MethodKind.Unary,
    },
    /**
     * View unapproved quotation response items for given quotation response ID with pagination
     *
     * @generated from rpc Scailo.QuotationsResponsesService.ViewPaginatedUnapprovedQuotationResponseItems
     */
    viewPaginatedUnapprovedQuotationResponseItems: {
      name: "ViewPaginatedUnapprovedQuotationResponseItems",
      I: QuotationResponseItemsSearchRequest,
      O: QuotationsResponsesServicePaginatedItemsResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Search through quotation response items with pagination
     *
     * @generated from rpc Scailo.QuotationsResponsesService.SearchItemsWithPagination
     */
    searchItemsWithPagination: {
      name: "SearchItemsWithPagination",
      I: QuotationResponseItemsSearchRequest,
      O: QuotationsResponsesServicePaginatedItemsResponse,
      kind: MethodKind.Unary,
    },
    /**
     * View by ID
     *
     * @generated from rpc Scailo.QuotationsResponsesService.ViewByID
     */
    viewByID: {
      name: "ViewByID",
      I: Identifier,
      O: QuotationResponse,
      kind: MethodKind.Unary,
    },
    /**
     * View by UUID
     *
     * @generated from rpc Scailo.QuotationsResponsesService.ViewByUUID
     */
    viewByUUID: {
      name: "ViewByUUID",
      I: IdentifierUUID,
      O: QuotationResponse,
      kind: MethodKind.Unary,
    },
    /**
     * View by Reference ID (returns the latest record in case of duplicates)
     *
     * @generated from rpc Scailo.QuotationsResponsesService.ViewByReferenceID
     */
    viewByReferenceID: {
      name: "ViewByReferenceID",
      I: SimpleSearchReq,
      O: QuotationResponse,
      kind: MethodKind.Unary,
    },
    /**
     * View only essential components by ID (without logs)
     *
     * @generated from rpc Scailo.QuotationsResponsesService.ViewEssentialByID
     */
    viewEssentialByID: {
      name: "ViewEssentialByID",
      I: Identifier,
      O: QuotationResponse,
      kind: MethodKind.Unary,
    },
    /**
     * View only essential components (without logs) that matches the given UUID
     *
     * @generated from rpc Scailo.QuotationsResponsesService.ViewEssentialByUUID
     */
    viewEssentialByUUID: {
      name: "ViewEssentialByUUID",
      I: IdentifierUUID,
      O: QuotationResponse,
      kind: MethodKind.Unary,
    },
    /**
     * View all records with the given IDs
     *
     * @generated from rpc Scailo.QuotationsResponsesService.ViewFromIDs
     */
    viewFromIDs: {
      name: "ViewFromIDs",
      I: IdentifiersList,
      O: QuotationsResponsesList,
      kind: MethodKind.Unary,
    },
    /**
     * View the ancillary parameters (UUIDs of the internal references) by UUID
     *
     * @generated from rpc Scailo.QuotationsResponsesService.ViewAncillaryParametersByUUID
     */
    viewAncillaryParametersByUUID: {
      name: "ViewAncillaryParametersByUUID",
      I: IdentifierUUID,
      O: QuotationResponseAncillaryParameters,
      kind: MethodKind.Unary,
    },
    /**
     * View all
     *
     * @generated from rpc Scailo.QuotationsResponsesService.ViewAll
     */
    viewAll: {
      name: "ViewAll",
      I: ActiveStatus,
      O: QuotationsResponsesList,
      kind: MethodKind.Unary,
    },
    /**
     * View all with the given entity UUID
     *
     * @generated from rpc Scailo.QuotationsResponsesService.ViewAllForEntityUUID
     */
    viewAllForEntityUUID: {
      name: "ViewAllForEntityUUID",
      I: IdentifierUUID,
      O: QuotationsResponsesList,
      kind: MethodKind.Unary,
    },
    /**
     * View with pagination
     *
     * @generated from rpc Scailo.QuotationsResponsesService.ViewWithPagination
     */
    viewWithPagination: {
      name: "ViewWithPagination",
      I: QuotationsResponsesServicePaginationReq,
      O: QuotationsResponsesServicePaginationResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Checks if the record is downloadable (checks if the custom download function has been implemented)
     *
     * @generated from rpc Scailo.QuotationsResponsesService.IsDownloadable
     */
    isDownloadable: {
      name: "IsDownloadable",
      I: IdentifierUUID,
      O: BooleanResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Download quotation response with the given IdentifierUUID (can be used to allow public downloads)
     *
     * @generated from rpc Scailo.QuotationsResponsesService.DownloadByUUID
     */
    downloadByUUID: {
      name: "DownloadByUUID",
      I: IdentifierUUID,
      O: StandardFile,
      kind: MethodKind.Unary,
    },
    /**
     * View all that match the given search key
     *
     * @generated from rpc Scailo.QuotationsResponsesService.SearchAll
     */
    searchAll: {
      name: "SearchAll",
      I: QuotationsResponsesServiceSearchAllReq,
      O: QuotationsResponsesList,
      kind: MethodKind.Unary,
    },
    /**
     * View all that match the given filter criteria
     *
     * @generated from rpc Scailo.QuotationsResponsesService.Filter
     */
    filter: {
      name: "Filter",
      I: QuotationsResponsesServiceFilterReq,
      O: QuotationsResponsesList,
      kind: MethodKind.Unary,
    },
    /**
     * Count in status
     *
     * @generated from rpc Scailo.QuotationsResponsesService.CountInStatus
     */
    countInStatus: {
      name: "CountInStatus",
      I: CountInSLCStatusRequest,
      O: CountResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Count all that match the given criteria
     *
     * @generated from rpc Scailo.QuotationsResponsesService.Count
     */
    count: {
      name: "Count",
      I: QuotationsResponsesServiceCountReq,
      O: CountResponse,
      kind: MethodKind.Unary,
    },
    /**
     * CSV operations
     * Download the CSV file that consists of the list of records according to the given filter request. The same file could also be used as a template for uploading records
     *
     * @generated from rpc Scailo.QuotationsResponsesService.DownloadAsCSV
     */
    downloadAsCSV: {
      name: "DownloadAsCSV",
      I: QuotationsResponsesServiceFilterReq,
      O: StandardFile,
      kind: MethodKind.Unary,
    },
  }
} as const;

