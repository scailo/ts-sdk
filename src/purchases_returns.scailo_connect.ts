// @generated by protoc-gen-connect-es v0.12.0 with parameter "target=ts"
// @generated from file purchases_returns.scailo.proto (package Scailo, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { PurchaseReturn, PurchaseReturnAncillaryParameters, PurchaseReturnItem, PurchaseReturnItemHistoryRequest, PurchaseReturnItemProspectiveInfoRequest, PurchaseReturnItemsSearchRequest, PurchasesReturnsItemsList, PurchasesReturnsList, PurchasesReturnsServiceAlreadyAddedQuantityForSourceRequest, PurchasesReturnsServiceCountReq, PurchasesReturnsServiceCreateRequest, PurchasesReturnsServiceFilterReq, PurchasesReturnsServiceItemCreateRequest, PurchasesReturnsServiceItemUpdateRequest, PurchasesReturnsServicePaginatedItemsResponse, PurchasesReturnsServicePaginationReq, PurchasesReturnsServicePaginationResponse, PurchasesReturnsServiceSearchAllReq, PurchasesReturnsServiceUpdateRequest } from "./purchases_returns.scailo_pb.js";
import { ActiveStatus, BooleanResponse, CountInSLCStatusRequest, CountResponse, DualQuantitiesResponse, Identifier, IdentifierResponse, IdentifiersList, IdentifierUUID, IdentifierUUIDWithUserComment, IdentifierWithEmailAttributes, IdentifierWithSearchKey, IdentifierWithUserComment, ReorderItemsRequest, SimpleSearchReq, StandardFile } from "./base.scailo_pb.js";
import { MethodKind } from "@bufbuild/protobuf";
import { FamiliesList, FilterFamiliesReqForIdentifier } from "./families.scailo_pb.js";

/**
 *
 * Describes the common methods applicable on each purchase return
 *
 * @generated from service Scailo.PurchasesReturnsService
 */
export const PurchasesReturnsService = {
  typeName: "Scailo.PurchasesReturnsService",
  methods: {
    /**
     * Create and send for verification
     *
     * @generated from rpc Scailo.PurchasesReturnsService.Create
     */
    create: {
      name: "Create",
      I: PurchasesReturnsServiceCreateRequest,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Create and save as draft
     *
     * @generated from rpc Scailo.PurchasesReturnsService.Draft
     */
    draft: {
      name: "Draft",
      I: PurchasesReturnsServiceCreateRequest,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Update draft
     *
     * @generated from rpc Scailo.PurchasesReturnsService.DraftUpdate
     */
    draftUpdate: {
      name: "DraftUpdate",
      I: PurchasesReturnsServiceUpdateRequest,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Send for verification
     *
     * @generated from rpc Scailo.PurchasesReturnsService.SendForVerification
     */
    sendForVerification: {
      name: "SendForVerification",
      I: IdentifierUUIDWithUserComment,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Verify
     *
     * @generated from rpc Scailo.PurchasesReturnsService.Verify
     */
    verify: {
      name: "Verify",
      I: IdentifierUUIDWithUserComment,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Approve
     *
     * @generated from rpc Scailo.PurchasesReturnsService.Approve
     */
    approve: {
      name: "Approve",
      I: IdentifierUUIDWithUserComment,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Send For Revision
     *
     * @generated from rpc Scailo.PurchasesReturnsService.SendForRevision
     */
    sendForRevision: {
      name: "SendForRevision",
      I: IdentifierUUIDWithUserComment,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Update revision
     *
     * @generated from rpc Scailo.PurchasesReturnsService.RevisionUpdate
     */
    revisionUpdate: {
      name: "RevisionUpdate",
      I: PurchasesReturnsServiceUpdateRequest,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Halt
     *
     * @generated from rpc Scailo.PurchasesReturnsService.Halt
     */
    halt: {
      name: "Halt",
      I: IdentifierUUIDWithUserComment,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Discard
     *
     * @generated from rpc Scailo.PurchasesReturnsService.Discard
     */
    discard: {
      name: "Discard",
      I: IdentifierUUIDWithUserComment,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Restore
     *
     * @generated from rpc Scailo.PurchasesReturnsService.Restore
     */
    restore: {
      name: "Restore",
      I: IdentifierUUIDWithUserComment,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Complete
     *
     * @generated from rpc Scailo.PurchasesReturnsService.Complete
     */
    complete: {
      name: "Complete",
      I: IdentifierUUIDWithUserComment,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Repeat
     *
     * @generated from rpc Scailo.PurchasesReturnsService.Repeat
     */
    repeat: {
      name: "Repeat",
      I: IdentifierUUIDWithUserComment,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Reopen
     *
     * @generated from rpc Scailo.PurchasesReturnsService.Reopen
     */
    reopen: {
      name: "Reopen",
      I: IdentifierUUIDWithUserComment,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Add comment
     *
     * @generated from rpc Scailo.PurchasesReturnsService.CommentAdd
     */
    commentAdd: {
      name: "CommentAdd",
      I: IdentifierUUIDWithUserComment,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Send Email
     *
     * @generated from rpc Scailo.PurchasesReturnsService.SendEmail
     */
    sendEmail: {
      name: "SendEmail",
      I: IdentifierWithEmailAttributes,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Checks if the Purchase Return can be marked as completed
     *
     * @generated from rpc Scailo.PurchasesReturnsService.IsCompletable
     */
    isCompletable: {
      name: "IsCompletable",
      I: Identifier,
      O: BooleanResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Add an item to a purchase return
     *
     * @generated from rpc Scailo.PurchasesReturnsService.AddPurchaseReturnItem
     */
    addPurchaseReturnItem: {
      name: "AddPurchaseReturnItem",
      I: PurchasesReturnsServiceItemCreateRequest,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Modify an item in a purchase return
     *
     * @generated from rpc Scailo.PurchasesReturnsService.ModifyPurchaseReturnItem
     */
    modifyPurchaseReturnItem: {
      name: "ModifyPurchaseReturnItem",
      I: PurchasesReturnsServiceItemUpdateRequest,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Approve an item in a purchase return
     *
     * @generated from rpc Scailo.PurchasesReturnsService.ApprovePurchaseReturnItem
     */
    approvePurchaseReturnItem: {
      name: "ApprovePurchaseReturnItem",
      I: IdentifierWithUserComment,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Delete an item in a purchase return
     *
     * @generated from rpc Scailo.PurchasesReturnsService.DeletePurchaseReturnItem
     */
    deletePurchaseReturnItem: {
      name: "DeletePurchaseReturnItem",
      I: IdentifierWithUserComment,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Reorder items in a purchase return
     *
     * @generated from rpc Scailo.PurchasesReturnsService.ReorderPurchaseReturnItems
     */
    reorderPurchaseReturnItems: {
      name: "ReorderPurchaseReturnItems",
      I: ReorderItemsRequest,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * View Purchase Return Item by ID
     *
     * @generated from rpc Scailo.PurchasesReturnsService.ViewPurchaseReturnItemByID
     */
    viewPurchaseReturnItemByID: {
      name: "ViewPurchaseReturnItemByID",
      I: Identifier,
      O: PurchaseReturnItem,
      kind: MethodKind.Unary,
    },
    /**
     * View Purchase Return Item by Inventory Hash
     *
     * @generated from rpc Scailo.PurchasesReturnsService.ViewPurchaseReturnItemByInventoryHash
     */
    viewPurchaseReturnItemByInventoryHash: {
      name: "ViewPurchaseReturnItemByInventoryHash",
      I: SimpleSearchReq,
      O: PurchaseReturnItem,
      kind: MethodKind.Unary,
    },
    /**
     * View approved purchase return items for given purchase return ID
     *
     * @generated from rpc Scailo.PurchasesReturnsService.ViewApprovedPurchaseReturnItems
     */
    viewApprovedPurchaseReturnItems: {
      name: "ViewApprovedPurchaseReturnItems",
      I: IdentifierWithSearchKey,
      O: PurchasesReturnsItemsList,
      kind: MethodKind.Unary,
    },
    /**
     * View unapproved purchase return items for given purchase return ID
     *
     * @generated from rpc Scailo.PurchasesReturnsService.ViewUnapprovedPurchaseReturnItems
     */
    viewUnapprovedPurchaseReturnItems: {
      name: "ViewUnapprovedPurchaseReturnItems",
      I: IdentifierWithSearchKey,
      O: PurchasesReturnsItemsList,
      kind: MethodKind.Unary,
    },
    /**
     * View the history of the purchase return item
     *
     * @generated from rpc Scailo.PurchasesReturnsService.ViewPurchaseReturnItemHistory
     */
    viewPurchaseReturnItemHistory: {
      name: "ViewPurchaseReturnItemHistory",
      I: PurchaseReturnItemHistoryRequest,
      O: PurchasesReturnsItemsList,
      kind: MethodKind.Unary,
    },
    /**
     * View approved sales return items for given sales return ID with pagination
     *
     * @generated from rpc Scailo.PurchasesReturnsService.ViewPaginatedApprovedPurchaseReturnItems
     */
    viewPaginatedApprovedPurchaseReturnItems: {
      name: "ViewPaginatedApprovedPurchaseReturnItems",
      I: PurchaseReturnItemsSearchRequest,
      O: PurchasesReturnsServicePaginatedItemsResponse,
      kind: MethodKind.Unary,
    },
    /**
     * View unapproved sales return items for given sales return ID with pagination
     *
     * @generated from rpc Scailo.PurchasesReturnsService.ViewPaginatedUnapprovedPurchaseReturnItems
     */
    viewPaginatedUnapprovedPurchaseReturnItems: {
      name: "ViewPaginatedUnapprovedPurchaseReturnItems",
      I: PurchaseReturnItemsSearchRequest,
      O: PurchasesReturnsServicePaginatedItemsResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Search through sales return items with pagination
     *
     * @generated from rpc Scailo.PurchasesReturnsService.SearchItemsWithPagination
     */
    searchItemsWithPagination: {
      name: "SearchItemsWithPagination",
      I: PurchaseReturnItemsSearchRequest,
      O: PurchasesReturnsServicePaginatedItemsResponse,
      kind: MethodKind.Unary,
    },
    /**
     * View by ID
     *
     * @generated from rpc Scailo.PurchasesReturnsService.ViewByID
     */
    viewByID: {
      name: "ViewByID",
      I: Identifier,
      O: PurchaseReturn,
      kind: MethodKind.Unary,
    },
    /**
     * View by UUID
     *
     * @generated from rpc Scailo.PurchasesReturnsService.ViewByUUID
     */
    viewByUUID: {
      name: "ViewByUUID",
      I: IdentifierUUID,
      O: PurchaseReturn,
      kind: MethodKind.Unary,
    },
    /**
     * View only essential components by ID (without logs)
     *
     * @generated from rpc Scailo.PurchasesReturnsService.ViewEssentialByID
     */
    viewEssentialByID: {
      name: "ViewEssentialByID",
      I: Identifier,
      O: PurchaseReturn,
      kind: MethodKind.Unary,
    },
    /**
     * View only essential components (without logs) that matches the given UUID
     *
     * @generated from rpc Scailo.PurchasesReturnsService.ViewEssentialByUUID
     */
    viewEssentialByUUID: {
      name: "ViewEssentialByUUID",
      I: IdentifierUUID,
      O: PurchaseReturn,
      kind: MethodKind.Unary,
    },
    /**
     * View all records with the given IDs
     *
     * @generated from rpc Scailo.PurchasesReturnsService.ViewFromIDs
     */
    viewFromIDs: {
      name: "ViewFromIDs",
      I: IdentifiersList,
      O: PurchasesReturnsList,
      kind: MethodKind.Unary,
    },
    /**
     * View the ancillary parameters (UUIDs of the internal references) by UUID
     *
     * @generated from rpc Scailo.PurchasesReturnsService.ViewAncillaryParametersByUUID
     */
    viewAncillaryParametersByUUID: {
      name: "ViewAncillaryParametersByUUID",
      I: IdentifierUUID,
      O: PurchaseReturnAncillaryParameters,
      kind: MethodKind.Unary,
    },
    /**
     * View all
     *
     * @generated from rpc Scailo.PurchasesReturnsService.ViewAll
     */
    viewAll: {
      name: "ViewAll",
      I: ActiveStatus,
      O: PurchasesReturnsList,
      kind: MethodKind.Unary,
    },
    /**
     * View all with the given entity UUID
     *
     * @generated from rpc Scailo.PurchasesReturnsService.ViewAllForEntityUUID
     */
    viewAllForEntityUUID: {
      name: "ViewAllForEntityUUID",
      I: IdentifierUUID,
      O: PurchasesReturnsList,
      kind: MethodKind.Unary,
    },
    /**
     * View with pagination
     *
     * @generated from rpc Scailo.PurchasesReturnsService.ViewWithPagination
     */
    viewWithPagination: {
      name: "ViewWithPagination",
      I: PurchasesReturnsServicePaginationReq,
      O: PurchasesReturnsServicePaginationResponse,
      kind: MethodKind.Unary,
    },
    /**
     * View prospective families for the given purchase return
     *
     * @generated from rpc Scailo.PurchasesReturnsService.ViewProspectiveFamilies
     */
    viewProspectiveFamilies: {
      name: "ViewProspectiveFamilies",
      I: IdentifierWithSearchKey,
      O: FamiliesList,
      kind: MethodKind.Unary,
    },
    /**
     * Filter prospective families for the record represented by the given UUID identifier
     *
     * @generated from rpc Scailo.PurchasesReturnsService.FilterProspectiveFamilies
     */
    filterProspectiveFamilies: {
      name: "FilterProspectiveFamilies",
      I: FilterFamiliesReqForIdentifier,
      O: FamiliesList,
      kind: MethodKind.Unary,
    },
    /**
     * View prospective purchase return item info for the given family ID and purchase return ID
     *
     * @generated from rpc Scailo.PurchasesReturnsService.ViewProspectivePurchaseReturnItem
     */
    viewProspectivePurchaseReturnItem: {
      name: "ViewProspectivePurchaseReturnItem",
      I: PurchaseReturnItemProspectiveInfoRequest,
      O: PurchasesReturnsServiceItemCreateRequest,
      kind: MethodKind.Unary,
    },
    /**
     * Checks if the Purchase Return has been billed
     *
     * @generated from rpc Scailo.PurchasesReturnsService.IsBilled
     */
    isBilled: {
      name: "IsBilled",
      I: Identifier,
      O: BooleanResponse,
      kind: MethodKind.Unary,
    },
    /**
     * View already added quantities
     *
     * @generated from rpc Scailo.PurchasesReturnsService.ViewAddedFamilyQuantityForSource
     */
    viewAddedFamilyQuantityForSource: {
      name: "ViewAddedFamilyQuantityForSource",
      I: PurchasesReturnsServiceAlreadyAddedQuantityForSourceRequest,
      O: DualQuantitiesResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Download purchase return with the given IdentifierUUID (can be used to allow public downloads)
     *
     * @generated from rpc Scailo.PurchasesReturnsService.DownloadByUUID
     */
    downloadByUUID: {
      name: "DownloadByUUID",
      I: IdentifierUUID,
      O: StandardFile,
      kind: MethodKind.Unary,
    },
    /**
     * Download the label for the purchase return with the given IdentifierUUID
     *
     * @generated from rpc Scailo.PurchasesReturnsService.DownloadLabelByUUID
     */
    downloadLabelByUUID: {
      name: "DownloadLabelByUUID",
      I: IdentifierUUID,
      O: StandardFile,
      kind: MethodKind.Unary,
    },
    /**
     * View all that match the given search key
     *
     * @generated from rpc Scailo.PurchasesReturnsService.SearchAll
     */
    searchAll: {
      name: "SearchAll",
      I: PurchasesReturnsServiceSearchAllReq,
      O: PurchasesReturnsList,
      kind: MethodKind.Unary,
    },
    /**
     * View all that match the given filter criteria
     *
     * @generated from rpc Scailo.PurchasesReturnsService.Filter
     */
    filter: {
      name: "Filter",
      I: PurchasesReturnsServiceFilterReq,
      O: PurchasesReturnsList,
      kind: MethodKind.Unary,
    },
    /**
     * Count in status
     *
     * @generated from rpc Scailo.PurchasesReturnsService.CountInStatus
     */
    countInStatus: {
      name: "CountInStatus",
      I: CountInSLCStatusRequest,
      O: CountResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Count all that match the given criteria
     *
     * @generated from rpc Scailo.PurchasesReturnsService.Count
     */
    count: {
      name: "Count",
      I: PurchasesReturnsServiceCountReq,
      O: CountResponse,
      kind: MethodKind.Unary,
    },
    /**
     * CSV operations
     * Download the CSV file that consists of the list of records according to the given filter request. The same file could also be used as a template for uploading records
     *
     * @generated from rpc Scailo.PurchasesReturnsService.DownloadAsCSV
     */
    downloadAsCSV: {
      name: "DownloadAsCSV",
      I: PurchasesReturnsServiceFilterReq,
      O: StandardFile,
      kind: MethodKind.Unary,
    },
  }
} as const;

