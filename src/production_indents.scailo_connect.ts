// @generated by protoc-gen-connect-es v0.12.0 with parameter "target=ts"
// @generated from file production_indents.scailo.proto (package Scailo, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { ProductionIndent, ProductionIndentIssuedStatisticsList, ProductionIndentItem, ProductionIndentItemHistoryRequest, ProductionIndentItemProspectiveInfoRequest, ProductionIndentItemsSearchRequest, ProductionIndentsItemsList, ProductionIndentsList, ProductionIndentsServiceAutofillRequest, ProductionIndentsServiceCountReq, ProductionIndentsServiceCreateRequest, ProductionIndentsServiceFilterReq, ProductionIndentsServiceItemCreateRequest, ProductionIndentsServiceItemUpdateRequest, ProductionIndentsServicePaginatedItemsResponse, ProductionIndentsServicePaginationReq, ProductionIndentsServicePaginationResponse, ProductionIndentsServiceSearchAllReq, ProductionIndentsServiceUpdateRequest } from "./production_indents.scailo_pb.js";
import { ActiveStatus, BooleanResponse, CountInSLCStatusRequest, CountResponse, Empty, Identifier, IdentifierResponse, IdentifiersList, IdentifierUUID, IdentifierUUIDWithFile, IdentifierUUIDWithUserComment, IdentifierWithEmailAttributes, IdentifierWithSearchKey, IdentifierWithUserComment, QuantityResponse, ReorderItemsRequest, SimpleSearchReq, StandardFile } from "./base.scailo_pb.js";
import { MethodKind } from "@bufbuild/protobuf";
import { MagicLink, MagicLinksServiceCreateRequestForSpecificResource } from "./magic_links.scailo_pb.js";
import { FamiliesList, FilterFamiliesReqForIdentifier } from "./families.scailo_pb.js";

/**
 *
 * Describes the common methods applicable on each production indent
 *
 * @generated from service Scailo.ProductionIndentsService
 */
export const ProductionIndentsService = {
  typeName: "Scailo.ProductionIndentsService",
  methods: {
    /**
     * Create and send for verification
     *
     * @generated from rpc Scailo.ProductionIndentsService.Create
     */
    create: {
      name: "Create",
      I: ProductionIndentsServiceCreateRequest,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Create and save as draft
     *
     * @generated from rpc Scailo.ProductionIndentsService.Draft
     */
    draft: {
      name: "Draft",
      I: ProductionIndentsServiceCreateRequest,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Update draft
     *
     * @generated from rpc Scailo.ProductionIndentsService.DraftUpdate
     */
    draftUpdate: {
      name: "DraftUpdate",
      I: ProductionIndentsServiceUpdateRequest,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Send for verification
     *
     * @generated from rpc Scailo.ProductionIndentsService.SendForVerification
     */
    sendForVerification: {
      name: "SendForVerification",
      I: IdentifierUUIDWithUserComment,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Verify
     *
     * @generated from rpc Scailo.ProductionIndentsService.Verify
     */
    verify: {
      name: "Verify",
      I: IdentifierUUIDWithUserComment,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Approve
     *
     * @generated from rpc Scailo.ProductionIndentsService.Approve
     */
    approve: {
      name: "Approve",
      I: IdentifierUUIDWithUserComment,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Send For Revision
     *
     * @generated from rpc Scailo.ProductionIndentsService.SendForRevision
     */
    sendForRevision: {
      name: "SendForRevision",
      I: IdentifierUUIDWithUserComment,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Update revision
     *
     * @generated from rpc Scailo.ProductionIndentsService.RevisionUpdate
     */
    revisionUpdate: {
      name: "RevisionUpdate",
      I: ProductionIndentsServiceUpdateRequest,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Halt
     *
     * @generated from rpc Scailo.ProductionIndentsService.Halt
     */
    halt: {
      name: "Halt",
      I: IdentifierUUIDWithUserComment,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Discard
     *
     * @generated from rpc Scailo.ProductionIndentsService.Discard
     */
    discard: {
      name: "Discard",
      I: IdentifierUUIDWithUserComment,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Restore
     *
     * @generated from rpc Scailo.ProductionIndentsService.Restore
     */
    restore: {
      name: "Restore",
      I: IdentifierUUIDWithUserComment,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Complete
     *
     * @generated from rpc Scailo.ProductionIndentsService.Complete
     */
    complete: {
      name: "Complete",
      I: IdentifierUUIDWithUserComment,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Repeat
     *
     * @generated from rpc Scailo.ProductionIndentsService.Repeat
     */
    repeat: {
      name: "Repeat",
      I: IdentifierUUIDWithUserComment,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Reopen
     *
     * @generated from rpc Scailo.ProductionIndentsService.Reopen
     */
    reopen: {
      name: "Reopen",
      I: IdentifierUUIDWithUserComment,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Add comment
     *
     * @generated from rpc Scailo.ProductionIndentsService.CommentAdd
     */
    commentAdd: {
      name: "CommentAdd",
      I: IdentifierUUIDWithUserComment,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Send Email
     *
     * @generated from rpc Scailo.ProductionIndentsService.SendEmail
     */
    sendEmail: {
      name: "SendEmail",
      I: IdentifierWithEmailAttributes,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Create a magic link
     *
     * @generated from rpc Scailo.ProductionIndentsService.CreateMagicLink
     */
    createMagicLink: {
      name: "CreateMagicLink",
      I: MagicLinksServiceCreateRequestForSpecificResource,
      O: MagicLink,
      kind: MethodKind.Unary,
    },
    /**
     * Autofill the production indent
     *
     * @generated from rpc Scailo.ProductionIndentsService.Autofill
     */
    autofill: {
      name: "Autofill",
      I: ProductionIndentsServiceAutofillRequest,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Checks if the Production Indent can be marked as completed
     *
     * @generated from rpc Scailo.ProductionIndentsService.IsCompletable
     */
    isCompletable: {
      name: "IsCompletable",
      I: IdentifierUUID,
      O: BooleanResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Add an item to a production indent
     *
     * @generated from rpc Scailo.ProductionIndentsService.AddProductionIndentItem
     */
    addProductionIndentItem: {
      name: "AddProductionIndentItem",
      I: ProductionIndentsServiceItemCreateRequest,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Modify an item in a production indent
     *
     * @generated from rpc Scailo.ProductionIndentsService.ModifyProductionIndentItem
     */
    modifyProductionIndentItem: {
      name: "ModifyProductionIndentItem",
      I: ProductionIndentsServiceItemUpdateRequest,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Approve an item in a production indent
     *
     * @generated from rpc Scailo.ProductionIndentsService.ApproveProductionIndentItem
     */
    approveProductionIndentItem: {
      name: "ApproveProductionIndentItem",
      I: IdentifierWithUserComment,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Delete an item in a production indent
     *
     * @generated from rpc Scailo.ProductionIndentsService.DeleteProductionIndentItem
     */
    deleteProductionIndentItem: {
      name: "DeleteProductionIndentItem",
      I: IdentifierWithUserComment,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Reorder items in a production indent
     *
     * @generated from rpc Scailo.ProductionIndentsService.ReorderProductionIndentItems
     */
    reorderProductionIndentItems: {
      name: "ReorderProductionIndentItems",
      I: ReorderItemsRequest,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * View Production Indent Item by ID
     *
     * @generated from rpc Scailo.ProductionIndentsService.ViewProductionIndentItemByID
     */
    viewProductionIndentItemByID: {
      name: "ViewProductionIndentItemByID",
      I: Identifier,
      O: ProductionIndentItem,
      kind: MethodKind.Unary,
    },
    /**
     * View approved production indent items for given production indent ID
     *
     * @generated from rpc Scailo.ProductionIndentsService.ViewApprovedProductionIndentItems
     */
    viewApprovedProductionIndentItems: {
      name: "ViewApprovedProductionIndentItems",
      I: IdentifierWithSearchKey,
      O: ProductionIndentsItemsList,
      kind: MethodKind.Unary,
    },
    /**
     * View unapproved production indent items for given production indent ID
     *
     * @generated from rpc Scailo.ProductionIndentsService.ViewUnapprovedProductionIndentItems
     */
    viewUnapprovedProductionIndentItems: {
      name: "ViewUnapprovedProductionIndentItems",
      I: IdentifierWithSearchKey,
      O: ProductionIndentsItemsList,
      kind: MethodKind.Unary,
    },
    /**
     * View the history of the production indent item
     *
     * @generated from rpc Scailo.ProductionIndentsService.ViewProductionIndentItemHistory
     */
    viewProductionIndentItemHistory: {
      name: "ViewProductionIndentItemHistory",
      I: ProductionIndentItemHistoryRequest,
      O: ProductionIndentsItemsList,
      kind: MethodKind.Unary,
    },
    /**
     * View approved production indent items for given production indent ID with pagination
     *
     * @generated from rpc Scailo.ProductionIndentsService.ViewPaginatedApprovedProductionIndentItems
     */
    viewPaginatedApprovedProductionIndentItems: {
      name: "ViewPaginatedApprovedProductionIndentItems",
      I: ProductionIndentItemsSearchRequest,
      O: ProductionIndentsServicePaginatedItemsResponse,
      kind: MethodKind.Unary,
    },
    /**
     * View unapproved production indent items for given production indent ID with pagination
     *
     * @generated from rpc Scailo.ProductionIndentsService.ViewPaginatedUnapprovedProductionIndentItems
     */
    viewPaginatedUnapprovedProductionIndentItems: {
      name: "ViewPaginatedUnapprovedProductionIndentItems",
      I: ProductionIndentItemsSearchRequest,
      O: ProductionIndentsServicePaginatedItemsResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Search through production indent items with pagination
     *
     * @generated from rpc Scailo.ProductionIndentsService.SearchItemsWithPagination
     */
    searchItemsWithPagination: {
      name: "SearchItemsWithPagination",
      I: ProductionIndentItemsSearchRequest,
      O: ProductionIndentsServicePaginatedItemsResponse,
      kind: MethodKind.Unary,
    },
    /**
     * CSV operations
     * Download the CSV file with the associated line items. The same file could then be used to upload line items.
     *
     * @generated from rpc Scailo.ProductionIndentsService.DownloadItemsAsCSV
     */
    downloadItemsAsCSV: {
      name: "DownloadItemsAsCSV",
      I: IdentifierUUID,
      O: StandardFile,
      kind: MethodKind.Unary,
    },
    /**
     * Download the CSV template that could be used to upload items
     *
     * @generated from rpc Scailo.ProductionIndentsService.DownloadItemsTemplateAsCSV
     */
    downloadItemsTemplateAsCSV: {
      name: "DownloadItemsTemplateAsCSV",
      I: Empty,
      O: StandardFile,
      kind: MethodKind.Unary,
    },
    /**
     * Upload items using a CSV file. This is an idempotent operation. All the existing items are deleted before adding the items from the file.
     *
     * @generated from rpc Scailo.ProductionIndentsService.UploadProductionIndentItems
     */
    uploadProductionIndentItems: {
      name: "UploadProductionIndentItems",
      I: IdentifierUUIDWithFile,
      O: IdentifiersList,
      kind: MethodKind.Unary,
    },
    /**
     * View by ID
     *
     * @generated from rpc Scailo.ProductionIndentsService.ViewByID
     */
    viewByID: {
      name: "ViewByID",
      I: Identifier,
      O: ProductionIndent,
      kind: MethodKind.Unary,
    },
    /**
     * View by UUID
     *
     * @generated from rpc Scailo.ProductionIndentsService.ViewByUUID
     */
    viewByUUID: {
      name: "ViewByUUID",
      I: IdentifierUUID,
      O: ProductionIndent,
      kind: MethodKind.Unary,
    },
    /**
     * View by Reference ID (returns the latest record in case of duplicates)
     *
     * @generated from rpc Scailo.ProductionIndentsService.ViewByReferenceID
     */
    viewByReferenceID: {
      name: "ViewByReferenceID",
      I: SimpleSearchReq,
      O: ProductionIndent,
      kind: MethodKind.Unary,
    },
    /**
     * View only essential components by ID (without logs)
     *
     * @generated from rpc Scailo.ProductionIndentsService.ViewEssentialByID
     */
    viewEssentialByID: {
      name: "ViewEssentialByID",
      I: Identifier,
      O: ProductionIndent,
      kind: MethodKind.Unary,
    },
    /**
     * View only essential components (without logs) that matches the given UUID
     *
     * @generated from rpc Scailo.ProductionIndentsService.ViewEssentialByUUID
     */
    viewEssentialByUUID: {
      name: "ViewEssentialByUUID",
      I: IdentifierUUID,
      O: ProductionIndent,
      kind: MethodKind.Unary,
    },
    /**
     * View all records with the given IDs
     *
     * @generated from rpc Scailo.ProductionIndentsService.ViewFromIDs
     */
    viewFromIDs: {
      name: "ViewFromIDs",
      I: IdentifiersList,
      O: ProductionIndentsList,
      kind: MethodKind.Unary,
    },
    /**
     * View all
     *
     * @generated from rpc Scailo.ProductionIndentsService.ViewAll
     */
    viewAll: {
      name: "ViewAll",
      I: ActiveStatus,
      O: ProductionIndentsList,
      kind: MethodKind.Unary,
    },
    /**
     * View all with the given entity UUID
     *
     * @generated from rpc Scailo.ProductionIndentsService.ViewAllForEntityUUID
     */
    viewAllForEntityUUID: {
      name: "ViewAllForEntityUUID",
      I: IdentifierUUID,
      O: ProductionIndentsList,
      kind: MethodKind.Unary,
    },
    /**
     * View with pagination
     *
     * @generated from rpc Scailo.ProductionIndentsService.ViewWithPagination
     */
    viewWithPagination: {
      name: "ViewWithPagination",
      I: ProductionIndentsServicePaginationReq,
      O: ProductionIndentsServicePaginationResponse,
      kind: MethodKind.Unary,
    },
    /**
     * View prospective families for the given production indent
     *
     * @generated from rpc Scailo.ProductionIndentsService.ViewProspectiveFamilies
     */
    viewProspectiveFamilies: {
      name: "ViewProspectiveFamilies",
      I: IdentifierWithSearchKey,
      O: FamiliesList,
      kind: MethodKind.Unary,
    },
    /**
     * Filter prospective families for the record represented by the given UUID identifier
     *
     * @generated from rpc Scailo.ProductionIndentsService.FilterProspectiveFamilies
     */
    filterProspectiveFamilies: {
      name: "FilterProspectiveFamilies",
      I: FilterFamiliesReqForIdentifier,
      O: FamiliesList,
      kind: MethodKind.Unary,
    },
    /**
     * View prospective production indent item info for the given family ID and production indent ID
     *
     * @generated from rpc Scailo.ProductionIndentsService.ViewProspectiveProductionIndentItem
     */
    viewProspectiveProductionIndentItem: {
      name: "ViewProspectiveProductionIndentItem",
      I: ProductionIndentItemProspectiveInfoRequest,
      O: ProductionIndentsServiceItemCreateRequest,
      kind: MethodKind.Unary,
    },
    /**
     * Checks if the record is downloadable (checks if the custom download function has been implemented)
     *
     * @generated from rpc Scailo.ProductionIndentsService.IsDownloadable
     */
    isDownloadable: {
      name: "IsDownloadable",
      I: IdentifierUUID,
      O: BooleanResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Download production indent with the given IdentifierUUID (can be used to allow public downloads)
     *
     * @generated from rpc Scailo.ProductionIndentsService.DownloadByUUID
     */
    downloadByUUID: {
      name: "DownloadByUUID",
      I: IdentifierUUID,
      O: StandardFile,
      kind: MethodKind.Unary,
    },
    /**
     * View issued (stock issuance) statistics of the production indent
     *
     * @generated from rpc Scailo.ProductionIndentsService.ViewIssuedStatistics
     */
    viewIssuedStatistics: {
      name: "ViewIssuedStatistics",
      I: IdentifierUUID,
      O: ProductionIndentIssuedStatisticsList,
      kind: MethodKind.Unary,
    },
    /**
     * View the added quantity for the family with the given request payload
     *
     * @generated from rpc Scailo.ProductionIndentsService.ViewAddedQuantityForFamily
     */
    viewAddedQuantityForFamily: {
      name: "ViewAddedQuantityForFamily",
      I: ProductionIndentItemProspectiveInfoRequest,
      O: QuantityResponse,
      kind: MethodKind.Unary,
    },
    /**
     * View all that match the given search key
     *
     * @generated from rpc Scailo.ProductionIndentsService.SearchAll
     */
    searchAll: {
      name: "SearchAll",
      I: ProductionIndentsServiceSearchAllReq,
      O: ProductionIndentsList,
      kind: MethodKind.Unary,
    },
    /**
     * View all that match the given filter criteria
     *
     * @generated from rpc Scailo.ProductionIndentsService.Filter
     */
    filter: {
      name: "Filter",
      I: ProductionIndentsServiceFilterReq,
      O: ProductionIndentsList,
      kind: MethodKind.Unary,
    },
    /**
     * Count in status
     *
     * @generated from rpc Scailo.ProductionIndentsService.CountInStatus
     */
    countInStatus: {
      name: "CountInStatus",
      I: CountInSLCStatusRequest,
      O: CountResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Count all that match the given criteria
     *
     * @generated from rpc Scailo.ProductionIndentsService.Count
     */
    count: {
      name: "Count",
      I: ProductionIndentsServiceCountReq,
      O: CountResponse,
      kind: MethodKind.Unary,
    },
    /**
     * CSV operations
     * Download the CSV file that consists of the list of records according to the given filter request. The same file could also be used as a template for uploading records
     *
     * @generated from rpc Scailo.ProductionIndentsService.DownloadAsCSV
     */
    downloadAsCSV: {
      name: "DownloadAsCSV",
      I: ProductionIndentsServiceFilterReq,
      O: StandardFile,
      kind: MethodKind.Unary,
    },
  }
} as const;

