// @generated by protoc-gen-connect-es v0.12.0 with parameter "target=ts"
// @generated from file vendor_streams.scailo.proto (package Scailo, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { VendorStream, VendorStreamInternalSubscriber, VendorStreamInternalSubscribersList, VendorStreamMessage, VendorStreamMessageReceiptsList, VendorStreamMessagesList, VendorStreamMessagesSearchRequest, VendorStreamsList, VendorStreamsServiceCountReq, VendorStreamsServiceCreateRequest, VendorStreamsServiceFilterReq, VendorStreamsServiceImportInternalSubscribersRequest, VendorStreamsServiceInternalSubscriberCreateRequest, VendorStreamsServiceMessageCreateRequest, VendorStreamsServicePaginatedMessagesResponse, VendorStreamsServicePaginationReq, VendorStreamsServicePaginationResponse, VendorStreamsServiceSearchAllReq, VendorStreamsServiceUpdateRequest, VendorStreamsServiceVendorSubscriberCreateRequest, VendorStreamVendorSubscriber, VendorStreamVendorSubscribersList } from "./vendor_streams.scailo_pb.js";
import { ActiveStatus, CountResponse, Identifier, IdentifierUUID, IdentifierWithUserComment } from "./base.scailo_pb.js";
import { MethodKind } from "@bufbuild/protobuf";

/**
 *
 * Describes the common methods applicable on each vendor stream
 *
 * @generated from service Scailo.VendorStreamsService
 */
export const VendorStreamsService = {
  typeName: "Scailo.VendorStreamsService",
  methods: {
    /**
     * Create
     *
     * @generated from rpc Scailo.VendorStreamsService.Create
     */
    create: {
      name: "Create",
      I: VendorStreamsServiceCreateRequest,
      O: IdentifierUUID,
      kind: MethodKind.Unary,
    },
    /**
     * Update
     *
     * @generated from rpc Scailo.VendorStreamsService.Update
     */
    update: {
      name: "Update",
      I: VendorStreamsServiceUpdateRequest,
      O: IdentifierUUID,
      kind: MethodKind.Unary,
    },
    /**
     * Cancel
     *
     * @generated from rpc Scailo.VendorStreamsService.Cancel
     */
    cancel: {
      name: "Cancel",
      I: IdentifierWithUserComment,
      O: IdentifierUUID,
      kind: MethodKind.Unary,
    },
    /**
     * Complete
     *
     * @generated from rpc Scailo.VendorStreamsService.Complete
     */
    complete: {
      name: "Complete",
      I: IdentifierWithUserComment,
      O: IdentifierUUID,
      kind: MethodKind.Unary,
    },
    /**
     * Reopen
     *
     * @generated from rpc Scailo.VendorStreamsService.Reopen
     */
    reopen: {
      name: "Reopen",
      I: IdentifierWithUserComment,
      O: IdentifierUUID,
      kind: MethodKind.Unary,
    },
    /**
     * Repeat
     *
     * @generated from rpc Scailo.VendorStreamsService.Repeat
     */
    repeat: {
      name: "Repeat",
      I: IdentifierWithUserComment,
      O: IdentifierUUID,
      kind: MethodKind.Unary,
    },
    /**
     * Add comment
     *
     * Send Email
     * rpc SendEmail(IdentifierWithEmailAttributes) returns (IdentifierUUID);
     *
     * @generated from rpc Scailo.VendorStreamsService.CommentAdd
     */
    commentAdd: {
      name: "CommentAdd",
      I: IdentifierWithUserComment,
      O: IdentifierUUID,
      kind: MethodKind.Unary,
    },
    /**
     * Add a message to an vendor stream
     *
     * @generated from rpc Scailo.VendorStreamsService.AddMessage
     */
    addMessage: {
      name: "AddMessage",
      I: VendorStreamsServiceMessageCreateRequest,
      O: IdentifierUUID,
      kind: MethodKind.Unary,
    },
    /**
     * Saves a message for viewing it later
     *
     * @generated from rpc Scailo.VendorStreamsService.SaveMessageForLater
     */
    saveMessageForLater: {
      name: "SaveMessageForLater",
      I: IdentifierUUID,
      O: IdentifierUUID,
      kind: MethodKind.Unary,
    },
    /**
     * Delete a message in an vendor stream
     *
     * @generated from rpc Scailo.VendorStreamsService.DeleteMessage
     */
    deleteMessage: {
      name: "DeleteMessage",
      I: IdentifierUUID,
      O: IdentifierUUID,
      kind: MethodKind.Unary,
    },
    /**
     * View Vendor Stream Message by UUID
     *
     * @generated from rpc Scailo.VendorStreamsService.ViewMessageByUUID
     */
    viewMessageByUUID: {
      name: "ViewMessageByUUID",
      I: IdentifierUUID,
      O: VendorStreamMessage,
      kind: MethodKind.Unary,
    },
    /**
     * View all messages for given vendor stream UUID
     *
     * @generated from rpc Scailo.VendorStreamsService.ViewMessages
     */
    viewMessages: {
      name: "ViewMessages",
      I: IdentifierUUID,
      O: VendorStreamMessagesList,
      kind: MethodKind.Unary,
    },
    /**
     * View vendor stream messages for given vendor stream ID with pagination
     *
     * @generated from rpc Scailo.VendorStreamsService.ViewPaginatedMessages
     */
    viewPaginatedMessages: {
      name: "ViewPaginatedMessages",
      I: VendorStreamMessagesSearchRequest,
      O: VendorStreamsServicePaginatedMessagesResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Search through vendor stream messages with pagination
     *
     * @generated from rpc Scailo.VendorStreamsService.SearchMessagesWithPagination
     */
    searchMessagesWithPagination: {
      name: "SearchMessagesWithPagination",
      I: VendorStreamMessagesSearchRequest,
      O: VendorStreamsServicePaginatedMessagesResponse,
      kind: MethodKind.Unary,
    },
    /**
     * View all receipts for the given message UUID
     *
     * @generated from rpc Scailo.VendorStreamsService.ViewMessageReceipts
     */
    viewMessageReceipts: {
      name: "ViewMessageReceipts",
      I: IdentifierUUID,
      O: VendorStreamMessageReceiptsList,
      kind: MethodKind.Unary,
    },
    /**
     * Add an internal subscriber
     *
     * @generated from rpc Scailo.VendorStreamsService.AddInternalSubscriber
     */
    addInternalSubscriber: {
      name: "AddInternalSubscriber",
      I: VendorStreamsServiceInternalSubscriberCreateRequest,
      O: Identifier,
      kind: MethodKind.Unary,
    },
    /**
     * Delete an internal subscriber
     *
     * @generated from rpc Scailo.VendorStreamsService.DeleteInternalSubscriber
     */
    deleteInternalSubscriber: {
      name: "DeleteInternalSubscriber",
      I: IdentifierWithUserComment,
      O: Identifier,
      kind: MethodKind.Unary,
    },
    /**
     * View an internal subscriber for the given ID
     *
     * @generated from rpc Scailo.VendorStreamsService.ViewInternalSubscriberByID
     */
    viewInternalSubscriberByID: {
      name: "ViewInternalSubscriberByID",
      I: Identifier,
      O: VendorStreamInternalSubscriber,
      kind: MethodKind.Unary,
    },
    /**
     * View all internal subscribers for given vendor stream UUID
     *
     * @generated from rpc Scailo.VendorStreamsService.ViewInternalSubscribers
     */
    viewInternalSubscribers: {
      name: "ViewInternalSubscribers",
      I: IdentifierUUID,
      O: VendorStreamInternalSubscribersList,
      kind: MethodKind.Unary,
    },
    /**
     * Import users as internal subscribers from team and returns the ID of the vendor stream
     *
     * @generated from rpc Scailo.VendorStreamsService.ImportInternalSubscribersFromTeam
     */
    importInternalSubscribersFromTeam: {
      name: "ImportInternalSubscribersFromTeam",
      I: VendorStreamsServiceImportInternalSubscribersRequest,
      O: Identifier,
      kind: MethodKind.Unary,
    },
    /**
     * Import users as internal subscribers from department and returns the ID of the vendor stream
     *
     * @generated from rpc Scailo.VendorStreamsService.ImportInternalSubscribersFromDepartment
     */
    importInternalSubscribersFromDepartment: {
      name: "ImportInternalSubscribersFromDepartment",
      I: VendorStreamsServiceImportInternalSubscribersRequest,
      O: Identifier,
      kind: MethodKind.Unary,
    },
    /**
     * Add a vendor subscriber
     *
     * @generated from rpc Scailo.VendorStreamsService.AddVendorSubscriber
     */
    addVendorSubscriber: {
      name: "AddVendorSubscriber",
      I: VendorStreamsServiceVendorSubscriberCreateRequest,
      O: Identifier,
      kind: MethodKind.Unary,
    },
    /**
     * Delete a vendor subscriber
     *
     * @generated from rpc Scailo.VendorStreamsService.DeleteVendorSubscriber
     */
    deleteVendorSubscriber: {
      name: "DeleteVendorSubscriber",
      I: IdentifierWithUserComment,
      O: Identifier,
      kind: MethodKind.Unary,
    },
    /**
     * View vendor subscriber for the given ID
     *
     * @generated from rpc Scailo.VendorStreamsService.ViewVendorSubscriberByID
     */
    viewVendorSubscriberByID: {
      name: "ViewVendorSubscriberByID",
      I: Identifier,
      O: VendorStreamVendorSubscriber,
      kind: MethodKind.Unary,
    },
    /**
     * View all vendor subscribers for given vendor stream UUID
     *
     * @generated from rpc Scailo.VendorStreamsService.ViewVendorSubscribers
     */
    viewVendorSubscribers: {
      name: "ViewVendorSubscribers",
      I: IdentifierUUID,
      O: VendorStreamVendorSubscribersList,
      kind: MethodKind.Unary,
    },
    /**
     * View by ID
     *
     * @generated from rpc Scailo.VendorStreamsService.ViewByID
     */
    viewByID: {
      name: "ViewByID",
      I: Identifier,
      O: VendorStream,
      kind: MethodKind.Unary,
    },
    /**
     * View by UUID
     *
     * @generated from rpc Scailo.VendorStreamsService.ViewByUUID
     */
    viewByUUID: {
      name: "ViewByUUID",
      I: IdentifierUUID,
      O: VendorStream,
      kind: MethodKind.Unary,
    },
    /**
     * View all
     *
     * @generated from rpc Scailo.VendorStreamsService.ViewAll
     */
    viewAll: {
      name: "ViewAll",
      I: ActiveStatus,
      O: VendorStreamsList,
      kind: MethodKind.Unary,
    },
    /**
     * View all with the given entity UUID
     *
     * @generated from rpc Scailo.VendorStreamsService.ViewAllForEntityUUID
     */
    viewAllForEntityUUID: {
      name: "ViewAllForEntityUUID",
      I: IdentifierUUID,
      O: VendorStreamsList,
      kind: MethodKind.Unary,
    },
    /**
     * View with pagination
     *
     * @generated from rpc Scailo.VendorStreamsService.ViewWithPagination
     */
    viewWithPagination: {
      name: "ViewWithPagination",
      I: VendorStreamsServicePaginationReq,
      O: VendorStreamsServicePaginationResponse,
      kind: MethodKind.Unary,
    },
    /**
     * View all that match the given search key
     *
     * @generated from rpc Scailo.VendorStreamsService.SearchAll
     */
    searchAll: {
      name: "SearchAll",
      I: VendorStreamsServiceSearchAllReq,
      O: VendorStreamsList,
      kind: MethodKind.Unary,
    },
    /**
     * View all that match the given filter criteria
     *
     * @generated from rpc Scailo.VendorStreamsService.Filter
     */
    filter: {
      name: "Filter",
      I: VendorStreamsServiceFilterReq,
      O: VendorStreamsList,
      kind: MethodKind.Unary,
    },
    /**
     * Count all that match the given criteria
     *
     * @generated from rpc Scailo.VendorStreamsService.Count
     */
    count: {
      name: "Count",
      I: VendorStreamsServiceCountReq,
      O: CountResponse,
      kind: MethodKind.Unary,
    },
  }
} as const;

