// @generated by protoc-gen-connect-es v0.12.0 with parameter "target=ts"
// @generated from file outward_jobs.scailo.proto (package Scailo, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { OutwardJob, OutwardJobAncillaryParameters, OutwardJobContact, OutwardJobContactsList, OutwardJobInwardItem, OutwardJobInwardItemHistoryRequest, OutwardJobInwardItemProspectiveInfoRequest, OutwardJobInwardItemsSearchRequest, OutwardJobOutwardItem, OutwardJobOutwardItemHistoryRequest, OutwardJobOutwardItemProspectiveInfoRequest, OutwardJobOutwardItemsSearchRequest, OutwardJobsInwardItemsList, OutwardJobsList, OutwardJobsOutwardItemsList, OutwardJobsServiceAutofillRequest, OutwardJobsServiceContactCreateRequest, OutwardJobsServiceCountReq, OutwardJobsServiceCreateRequest, OutwardJobsServiceFilterReq, OutwardJobsServiceInwardItemCreateRequest, OutwardJobsServiceInwardItemUpdateRequest, OutwardJobsServiceMultipleInwardItemsCreateRequest, OutwardJobsServiceMultipleOutwardItemsCreateRequest, OutwardJobsServiceOutwardItemCreateRequest, OutwardJobsServiceOutwardItemUpdateRequest, OutwardJobsServicePaginatedInwardItemsResponse, OutwardJobsServicePaginatedOutwardItemsResponse, OutwardJobsServicePaginationReq, OutwardJobsServicePaginationResponse, OutwardJobsServiceSearchAllReq, OutwardJobsServiceUpdateRequest } from "./outward_jobs.scailo_pb.js";
import { ActiveStatus, BooleanResponse, CountInSLCStatusRequest, CountResponse, Identifier, IdentifierResponse, IdentifiersList, IdentifierUUID, IdentifierUUIDWithUserComment, IdentifierWithEmailAttributes, IdentifierWithFile, IdentifierWithSearchKey, IdentifierWithUserComment, ReorderItemsRequest, RepeatWithDeliveryDate, StandardFile } from "./base.scailo_pb.js";
import { MethodKind } from "@bufbuild/protobuf";
import { FamiliesList } from "./families.scailo_pb.js";

/**
 *
 * Describes the common methods applicable on each outward job
 *
 * @generated from service Scailo.OutwardJobsService
 */
export const OutwardJobsService = {
  typeName: "Scailo.OutwardJobsService",
  methods: {
    /**
     * Create and send for verification
     *
     * @generated from rpc Scailo.OutwardJobsService.Create
     */
    create: {
      name: "Create",
      I: OutwardJobsServiceCreateRequest,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Create and save as draft
     *
     * @generated from rpc Scailo.OutwardJobsService.Draft
     */
    draft: {
      name: "Draft",
      I: OutwardJobsServiceCreateRequest,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Update draft
     *
     * @generated from rpc Scailo.OutwardJobsService.DraftUpdate
     */
    draftUpdate: {
      name: "DraftUpdate",
      I: OutwardJobsServiceUpdateRequest,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Send for verification
     *
     * @generated from rpc Scailo.OutwardJobsService.SendForVerification
     */
    sendForVerification: {
      name: "SendForVerification",
      I: IdentifierUUIDWithUserComment,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Verify
     *
     * @generated from rpc Scailo.OutwardJobsService.Verify
     */
    verify: {
      name: "Verify",
      I: IdentifierUUIDWithUserComment,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Approve
     *
     * @generated from rpc Scailo.OutwardJobsService.Approve
     */
    approve: {
      name: "Approve",
      I: IdentifierUUIDWithUserComment,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Send For Revision
     *
     * @generated from rpc Scailo.OutwardJobsService.SendForRevision
     */
    sendForRevision: {
      name: "SendForRevision",
      I: IdentifierUUIDWithUserComment,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Update revision
     *
     * @generated from rpc Scailo.OutwardJobsService.RevisionUpdate
     */
    revisionUpdate: {
      name: "RevisionUpdate",
      I: OutwardJobsServiceUpdateRequest,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Halt
     *
     * @generated from rpc Scailo.OutwardJobsService.Halt
     */
    halt: {
      name: "Halt",
      I: IdentifierUUIDWithUserComment,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Discard
     *
     * @generated from rpc Scailo.OutwardJobsService.Discard
     */
    discard: {
      name: "Discard",
      I: IdentifierUUIDWithUserComment,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Restore
     *
     * @generated from rpc Scailo.OutwardJobsService.Restore
     */
    restore: {
      name: "Restore",
      I: IdentifierUUIDWithUserComment,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Complete
     *
     * @generated from rpc Scailo.OutwardJobsService.Complete
     */
    complete: {
      name: "Complete",
      I: IdentifierUUIDWithUserComment,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Repeat
     *
     * @generated from rpc Scailo.OutwardJobsService.Repeat
     */
    repeat: {
      name: "Repeat",
      I: RepeatWithDeliveryDate,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Reopen
     *
     * @generated from rpc Scailo.OutwardJobsService.Reopen
     */
    reopen: {
      name: "Reopen",
      I: IdentifierUUIDWithUserComment,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Add comment
     *
     * @generated from rpc Scailo.OutwardJobsService.CommentAdd
     */
    commentAdd: {
      name: "CommentAdd",
      I: IdentifierUUIDWithUserComment,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Send Email
     *
     * @generated from rpc Scailo.OutwardJobsService.SendEmail
     */
    sendEmail: {
      name: "SendEmail",
      I: IdentifierWithEmailAttributes,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Autofill the outward job
     *
     * @generated from rpc Scailo.OutwardJobsService.Autofill
     */
    autofill: {
      name: "Autofill",
      I: OutwardJobsServiceAutofillRequest,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Checks if the Outward Job can be marked as completed (is true when all the inward items have been ordered and all the outward items have been dispatched)
     *
     * @generated from rpc Scailo.OutwardJobsService.IsCompletable
     */
    isCompletable: {
      name: "IsCompletable",
      I: Identifier,
      O: BooleanResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Checks if the Inward items within an Outward Job have been ordered (through a Purchase Order)
     *
     * @generated from rpc Scailo.OutwardJobsService.IsOrdered
     */
    isOrdered: {
      name: "IsOrdered",
      I: Identifier,
      O: BooleanResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Checks if the Outward items within an Outward Job have been dispatched (through Free Issue Material)
     *
     * @generated from rpc Scailo.OutwardJobsService.IsDispatched
     */
    isDispatched: {
      name: "IsDispatched",
      I: Identifier,
      O: BooleanResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Add multiple items to a outward job
     *
     * @generated from rpc Scailo.OutwardJobsService.AddMultipleOutwardJobInwardItems
     */
    addMultipleOutwardJobInwardItems: {
      name: "AddMultipleOutwardJobInwardItems",
      I: OutwardJobsServiceMultipleInwardItemsCreateRequest,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Add an inward item to a outward job
     *
     * @generated from rpc Scailo.OutwardJobsService.AddOutwardJobInwardItem
     */
    addOutwardJobInwardItem: {
      name: "AddOutwardJobInwardItem",
      I: OutwardJobsServiceInwardItemCreateRequest,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Modify an inward item in a outward job
     *
     * @generated from rpc Scailo.OutwardJobsService.ModifyOutwardJobInwardItem
     */
    modifyOutwardJobInwardItem: {
      name: "ModifyOutwardJobInwardItem",
      I: OutwardJobsServiceInwardItemUpdateRequest,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Approve an inward item in a outward job
     *
     * @generated from rpc Scailo.OutwardJobsService.ApproveOutwardJobInwardItem
     */
    approveOutwardJobInwardItem: {
      name: "ApproveOutwardJobInwardItem",
      I: IdentifierWithUserComment,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Delete an inward item in a outward job
     *
     * @generated from rpc Scailo.OutwardJobsService.DeleteOutwardJobInwardItem
     */
    deleteOutwardJobInwardItem: {
      name: "DeleteOutwardJobInwardItem",
      I: IdentifierWithUserComment,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Reorder items in a outward job
     *
     * @generated from rpc Scailo.OutwardJobsService.ReorderOutwardJobInwardItems
     */
    reorderOutwardJobInwardItems: {
      name: "ReorderOutwardJobInwardItems",
      I: ReorderItemsRequest,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * View Outward Job Inward Item by ID
     *
     * @generated from rpc Scailo.OutwardJobsService.ViewOutwardJobInwardItemByID
     */
    viewOutwardJobInwardItemByID: {
      name: "ViewOutwardJobInwardItemByID",
      I: Identifier,
      O: OutwardJobInwardItem,
      kind: MethodKind.Unary,
    },
    /**
     * View approved outward job inward items for given outward job ID
     *
     * @generated from rpc Scailo.OutwardJobsService.ViewApprovedOutwardJobInwardItems
     */
    viewApprovedOutwardJobInwardItems: {
      name: "ViewApprovedOutwardJobInwardItems",
      I: IdentifierWithSearchKey,
      O: OutwardJobsInwardItemsList,
      kind: MethodKind.Unary,
    },
    /**
     * View unapproved outward job inward items for given outward job ID
     *
     * @generated from rpc Scailo.OutwardJobsService.ViewUnapprovedOutwardJobInwardItems
     */
    viewUnapprovedOutwardJobInwardItems: {
      name: "ViewUnapprovedOutwardJobInwardItems",
      I: IdentifierWithSearchKey,
      O: OutwardJobsInwardItemsList,
      kind: MethodKind.Unary,
    },
    /**
     * View the history of the outward job inward item
     *
     * @generated from rpc Scailo.OutwardJobsService.ViewOutwardJobInwardItemHistory
     */
    viewOutwardJobInwardItemHistory: {
      name: "ViewOutwardJobInwardItemHistory",
      I: OutwardJobInwardItemHistoryRequest,
      O: OutwardJobsInwardItemsList,
      kind: MethodKind.Unary,
    },
    /**
     * View approved outward job inward items for given outward job ID with pagination
     *
     * @generated from rpc Scailo.OutwardJobsService.ViewPaginatedApprovedOutwardJobInwardItems
     */
    viewPaginatedApprovedOutwardJobInwardItems: {
      name: "ViewPaginatedApprovedOutwardJobInwardItems",
      I: OutwardJobInwardItemsSearchRequest,
      O: OutwardJobsServicePaginatedInwardItemsResponse,
      kind: MethodKind.Unary,
    },
    /**
     * View unapproved outward job inward items for given outward job ID with pagination
     *
     * @generated from rpc Scailo.OutwardJobsService.ViewPaginatedUnapprovedOutwardJobInwardItems
     */
    viewPaginatedUnapprovedOutwardJobInwardItems: {
      name: "ViewPaginatedUnapprovedOutwardJobInwardItems",
      I: OutwardJobInwardItemsSearchRequest,
      O: OutwardJobsServicePaginatedInwardItemsResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Search through outward job inward items with pagination
     *
     * @generated from rpc Scailo.OutwardJobsService.SearchInwardItemsWithPagination
     */
    searchInwardItemsWithPagination: {
      name: "SearchInwardItemsWithPagination",
      I: OutwardJobInwardItemsSearchRequest,
      O: OutwardJobsServicePaginatedInwardItemsResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Download the CSV template that could be used to upload inward items from the filled CSV file
     *
     * @generated from rpc Scailo.OutwardJobsService.DownloadInwardItemsCSVTemplate
     */
    downloadInwardItemsCSVTemplate: {
      name: "DownloadInwardItemsCSVTemplate",
      I: IdentifierUUID,
      O: StandardFile,
      kind: MethodKind.Unary,
    },
    /**
     * Upload inward items using a CSV file. This is an idempotent operation. All the existing items are deleted before adding the items from the file.
     *
     * @generated from rpc Scailo.OutwardJobsService.UploadOutwardJobInwardItems
     */
    uploadOutwardJobInwardItems: {
      name: "UploadOutwardJobInwardItems",
      I: IdentifierWithFile,
      O: IdentifiersList,
      kind: MethodKind.Unary,
    },
    /**
     * Add multiple items to a outward job
     *
     * @generated from rpc Scailo.OutwardJobsService.AddMultipleOutwardJobOutwardItems
     */
    addMultipleOutwardJobOutwardItems: {
      name: "AddMultipleOutwardJobOutwardItems",
      I: OutwardJobsServiceMultipleOutwardItemsCreateRequest,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Add an outward item to a outward job
     *
     * @generated from rpc Scailo.OutwardJobsService.AddOutwardJobOutwardItem
     */
    addOutwardJobOutwardItem: {
      name: "AddOutwardJobOutwardItem",
      I: OutwardJobsServiceOutwardItemCreateRequest,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Modify an outward item in a outward job
     *
     * @generated from rpc Scailo.OutwardJobsService.ModifyOutwardJobOutwardItem
     */
    modifyOutwardJobOutwardItem: {
      name: "ModifyOutwardJobOutwardItem",
      I: OutwardJobsServiceOutwardItemUpdateRequest,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Approve an outward item in a outward job
     *
     * @generated from rpc Scailo.OutwardJobsService.ApproveOutwardJobOutwardItem
     */
    approveOutwardJobOutwardItem: {
      name: "ApproveOutwardJobOutwardItem",
      I: IdentifierWithUserComment,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Delete an outward item in a outward job
     *
     * @generated from rpc Scailo.OutwardJobsService.DeleteOutwardJobOutwardItem
     */
    deleteOutwardJobOutwardItem: {
      name: "DeleteOutwardJobOutwardItem",
      I: IdentifierWithUserComment,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Reorder items in a outward job
     *
     * @generated from rpc Scailo.OutwardJobsService.ReorderOutwardJobOutwardItems
     */
    reorderOutwardJobOutwardItems: {
      name: "ReorderOutwardJobOutwardItems",
      I: ReorderItemsRequest,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * View Outward Job Outward Item by ID
     *
     * @generated from rpc Scailo.OutwardJobsService.ViewOutwardJobOutwardItemByID
     */
    viewOutwardJobOutwardItemByID: {
      name: "ViewOutwardJobOutwardItemByID",
      I: Identifier,
      O: OutwardJobOutwardItem,
      kind: MethodKind.Unary,
    },
    /**
     * View approved outward job outward items for given outward job ID
     *
     * @generated from rpc Scailo.OutwardJobsService.ViewApprovedOutwardJobOutwardItems
     */
    viewApprovedOutwardJobOutwardItems: {
      name: "ViewApprovedOutwardJobOutwardItems",
      I: IdentifierWithSearchKey,
      O: OutwardJobsOutwardItemsList,
      kind: MethodKind.Unary,
    },
    /**
     * View unapproved outward job outward items for given outward job ID
     *
     * @generated from rpc Scailo.OutwardJobsService.ViewUnapprovedOutwardJobOutwardItems
     */
    viewUnapprovedOutwardJobOutwardItems: {
      name: "ViewUnapprovedOutwardJobOutwardItems",
      I: IdentifierWithSearchKey,
      O: OutwardJobsOutwardItemsList,
      kind: MethodKind.Unary,
    },
    /**
     * View the history of the outward job outward item
     *
     * @generated from rpc Scailo.OutwardJobsService.ViewOutwardJobOutwardItemHistory
     */
    viewOutwardJobOutwardItemHistory: {
      name: "ViewOutwardJobOutwardItemHistory",
      I: OutwardJobOutwardItemHistoryRequest,
      O: OutwardJobsOutwardItemsList,
      kind: MethodKind.Unary,
    },
    /**
     * View approved outward job outward items for given outward job ID with pagination
     *
     * @generated from rpc Scailo.OutwardJobsService.ViewPaginatedApprovedOutwardJobOutwardItems
     */
    viewPaginatedApprovedOutwardJobOutwardItems: {
      name: "ViewPaginatedApprovedOutwardJobOutwardItems",
      I: OutwardJobOutwardItemsSearchRequest,
      O: OutwardJobsServicePaginatedOutwardItemsResponse,
      kind: MethodKind.Unary,
    },
    /**
     * View unapproved outward job outward items for given outward job ID with pagination
     *
     * @generated from rpc Scailo.OutwardJobsService.ViewPaginatedUnapprovedOutwardJobOutwardItems
     */
    viewPaginatedUnapprovedOutwardJobOutwardItems: {
      name: "ViewPaginatedUnapprovedOutwardJobOutwardItems",
      I: OutwardJobOutwardItemsSearchRequest,
      O: OutwardJobsServicePaginatedOutwardItemsResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Search through outward job outward items with pagination
     *
     * @generated from rpc Scailo.OutwardJobsService.SearchOutwardItemsWithPagination
     */
    searchOutwardItemsWithPagination: {
      name: "SearchOutwardItemsWithPagination",
      I: OutwardJobOutwardItemsSearchRequest,
      O: OutwardJobsServicePaginatedOutwardItemsResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Download the CSV template that could be used to upload outward items from the filled CSV file
     *
     * @generated from rpc Scailo.OutwardJobsService.DownloadOutwardItemsCSVTemplate
     */
    downloadOutwardItemsCSVTemplate: {
      name: "DownloadOutwardItemsCSVTemplate",
      I: IdentifierUUID,
      O: StandardFile,
      kind: MethodKind.Unary,
    },
    /**
     * Upload outward items using a CSV file. This is an idempotent operation. All the existing items are deleted before adding the items from the file.
     *
     * @generated from rpc Scailo.OutwardJobsService.UploadOutwardJobOutwardItems
     */
    uploadOutwardJobOutwardItems: {
      name: "UploadOutwardJobOutwardItems",
      I: IdentifierWithFile,
      O: IdentifiersList,
      kind: MethodKind.Unary,
    },
    /**
     * Add a contact
     *
     * @generated from rpc Scailo.OutwardJobsService.AddOutwardJobContact
     */
    addOutwardJobContact: {
      name: "AddOutwardJobContact",
      I: OutwardJobsServiceContactCreateRequest,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Approve a contact
     *
     * @generated from rpc Scailo.OutwardJobsService.ApproveOutwardJobContact
     */
    approveOutwardJobContact: {
      name: "ApproveOutwardJobContact",
      I: IdentifierWithUserComment,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Delete a contact
     *
     * @generated from rpc Scailo.OutwardJobsService.DeleteOutwardJobContact
     */
    deleteOutwardJobContact: {
      name: "DeleteOutwardJobContact",
      I: IdentifierWithUserComment,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * View a contact for the given ID
     *
     * @generated from rpc Scailo.OutwardJobsService.ViewOutwardJobContactByID
     */
    viewOutwardJobContactByID: {
      name: "ViewOutwardJobContactByID",
      I: Identifier,
      O: OutwardJobContact,
      kind: MethodKind.Unary,
    },
    /**
     * View all contacts for given outward job UUID
     *
     * @generated from rpc Scailo.OutwardJobsService.ViewOutwardJobContacts
     */
    viewOutwardJobContacts: {
      name: "ViewOutwardJobContacts",
      I: IdentifierUUID,
      O: OutwardJobContactsList,
      kind: MethodKind.Unary,
    },
    /**
     * View by ID
     *
     * @generated from rpc Scailo.OutwardJobsService.ViewByID
     */
    viewByID: {
      name: "ViewByID",
      I: Identifier,
      O: OutwardJob,
      kind: MethodKind.Unary,
    },
    /**
     * View by UUID
     *
     * @generated from rpc Scailo.OutwardJobsService.ViewByUUID
     */
    viewByUUID: {
      name: "ViewByUUID",
      I: IdentifierUUID,
      O: OutwardJob,
      kind: MethodKind.Unary,
    },
    /**
     * View the ancillary parameters (UUIDs of the internal references) by UUID
     *
     * @generated from rpc Scailo.OutwardJobsService.ViewAncillaryParametersByUUID
     */
    viewAncillaryParametersByUUID: {
      name: "ViewAncillaryParametersByUUID",
      I: IdentifierUUID,
      O: OutwardJobAncillaryParameters,
      kind: MethodKind.Unary,
    },
    /**
     * View all
     *
     * @generated from rpc Scailo.OutwardJobsService.ViewAll
     */
    viewAll: {
      name: "ViewAll",
      I: ActiveStatus,
      O: OutwardJobsList,
      kind: MethodKind.Unary,
    },
    /**
     * View all with the given entity UUID
     *
     * @generated from rpc Scailo.OutwardJobsService.ViewAllForEntityUUID
     */
    viewAllForEntityUUID: {
      name: "ViewAllForEntityUUID",
      I: IdentifierUUID,
      O: OutwardJobsList,
      kind: MethodKind.Unary,
    },
    /**
     * View with pagination
     *
     * @generated from rpc Scailo.OutwardJobsService.ViewWithPagination
     */
    viewWithPagination: {
      name: "ViewWithPagination",
      I: OutwardJobsServicePaginationReq,
      O: OutwardJobsServicePaginationResponse,
      kind: MethodKind.Unary,
    },
    /**
     * View all purchase order IDs that are associated with the given outward job ID
     *
     * @generated from rpc Scailo.OutwardJobsService.ViewAssociatedPurchaseOrderIDs
     */
    viewAssociatedPurchaseOrderIDs: {
      name: "ViewAssociatedPurchaseOrderIDs",
      I: Identifier,
      O: IdentifiersList,
      kind: MethodKind.Unary,
    },
    /**
     * View prospective inward items for the given outward job
     *
     * @generated from rpc Scailo.OutwardJobsService.ViewProspectiveInwardFamilies
     */
    viewProspectiveInwardFamilies: {
      name: "ViewProspectiveInwardFamilies",
      I: IdentifierWithSearchKey,
      O: FamiliesList,
      kind: MethodKind.Unary,
    },
    /**
     * View prospective outward job inward item info for the given family ID and outward job ID
     *
     * @generated from rpc Scailo.OutwardJobsService.ViewProspectiveOutwardJobInwardItem
     */
    viewProspectiveOutwardJobInwardItem: {
      name: "ViewProspectiveOutwardJobInwardItem",
      I: OutwardJobInwardItemProspectiveInfoRequest,
      O: OutwardJobsServiceInwardItemCreateRequest,
      kind: MethodKind.Unary,
    },
    /**
     * View prospective outward items for the given outward job
     *
     * @generated from rpc Scailo.OutwardJobsService.ViewProspectiveOutwardFamilies
     */
    viewProspectiveOutwardFamilies: {
      name: "ViewProspectiveOutwardFamilies",
      I: IdentifierWithSearchKey,
      O: FamiliesList,
      kind: MethodKind.Unary,
    },
    /**
     * View prospective outward job outward item info for the given family ID and outward job ID
     *
     * @generated from rpc Scailo.OutwardJobsService.ViewProspectiveOutwardJobOutwardItem
     */
    viewProspectiveOutwardJobOutwardItem: {
      name: "ViewProspectiveOutwardJobOutwardItem",
      I: OutwardJobOutwardItemProspectiveInfoRequest,
      O: OutwardJobsServiceOutwardItemCreateRequest,
      kind: MethodKind.Unary,
    },
    /**
     * Download outward job with the given IdentifierUUID (can be used to allow public downloads)
     *
     * @generated from rpc Scailo.OutwardJobsService.DownloadByUUID
     */
    downloadByUUID: {
      name: "DownloadByUUID",
      I: IdentifierUUID,
      O: StandardFile,
      kind: MethodKind.Unary,
    },
    /**
     * View all that match the given search key
     *
     * @generated from rpc Scailo.OutwardJobsService.SearchAll
     */
    searchAll: {
      name: "SearchAll",
      I: OutwardJobsServiceSearchAllReq,
      O: OutwardJobsList,
      kind: MethodKind.Unary,
    },
    /**
     * View all that match the given filter criteria
     *
     * @generated from rpc Scailo.OutwardJobsService.Filter
     */
    filter: {
      name: "Filter",
      I: OutwardJobsServiceFilterReq,
      O: OutwardJobsList,
      kind: MethodKind.Unary,
    },
    /**
     * Count in status
     *
     * @generated from rpc Scailo.OutwardJobsService.CountInStatus
     */
    countInStatus: {
      name: "CountInStatus",
      I: CountInSLCStatusRequest,
      O: CountResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Count all that match the given criteria
     *
     * @generated from rpc Scailo.OutwardJobsService.Count
     */
    count: {
      name: "Count",
      I: OutwardJobsServiceCountReq,
      O: CountResponse,
      kind: MethodKind.Unary,
    },
  }
} as const;

