// @generated by protoc-gen-connect-es v0.12.0 with parameter "target=ts"
// @generated from file sales_orders.scailo.proto (package Scailo, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { SalesOrder, SalesOrderAncillaryParameters, SalesOrderBillingStatistics, SalesOrderContact, SalesOrderContactsList, SalesOrderInventoryMatchList, SalesOrderInventoryStatistics, SalesOrderItem, SalesOrderItemHistoryRequest, SalesOrderItemProspectiveInfoRequest, SalesOrderItemsList, SalesOrderItemsSearchRequest, SalesOrderReference, SalesOrderReferencesList, SalesOrdersList, SalesOrdersServiceAutofillRequest, SalesOrdersServiceContactCreateRequest, SalesOrdersServiceCountReq, SalesOrdersServiceCreateRequest, SalesOrdersServiceFilterReq, SalesOrdersServiceItemCreateRequest, SalesOrdersServiceItemUpdateRequest, SalesOrdersServicePaginatedItemsResponse, SalesOrdersServicePaginationReq, SalesOrdersServicePaginationResponse, SalesOrdersServiceReferenceCreateRequest, SalesOrdersServiceSearchAllReq, SalesOrdersServiceUpdateRequest } from "./sales_orders.scailo_pb.js";
import { ActiveStatus, AmendmentLogsList, CountInSLCStatusRequest, CountResponse, Identifier, IdentifierResponse, IdentifiersList, IdentifierUUID, IdentifierUUIDWithUserComment, IdentifierWithEmailAttributes, IdentifierWithFile, IdentifierWithSearchKey, IdentifierWithUserComment, PriceResponse, ReorderItemsRequest, RepeatWithDeliveryDate, StandardFile, SumResponse } from "./base.scailo_pb.js";
import { MethodKind } from "@bufbuild/protobuf";
import { FamiliesList } from "./families.scailo_pb.js";

/**
 *
 * Describes the common methods applicable on each sales order
 *
 * @generated from service Scailo.SalesOrdersService
 */
export const SalesOrdersService = {
  typeName: "Scailo.SalesOrdersService",
  methods: {
    /**
     * Create and send for verification
     *
     * @generated from rpc Scailo.SalesOrdersService.Create
     */
    create: {
      name: "Create",
      I: SalesOrdersServiceCreateRequest,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Create and save as draft
     *
     * @generated from rpc Scailo.SalesOrdersService.Draft
     */
    draft: {
      name: "Draft",
      I: SalesOrdersServiceCreateRequest,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Update draft
     *
     * @generated from rpc Scailo.SalesOrdersService.DraftUpdate
     */
    draftUpdate: {
      name: "DraftUpdate",
      I: SalesOrdersServiceUpdateRequest,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Send for verification
     *
     * @generated from rpc Scailo.SalesOrdersService.SendForVerification
     */
    sendForVerification: {
      name: "SendForVerification",
      I: IdentifierUUIDWithUserComment,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Verify
     *
     * @generated from rpc Scailo.SalesOrdersService.Verify
     */
    verify: {
      name: "Verify",
      I: IdentifierUUIDWithUserComment,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Approve
     *
     * @generated from rpc Scailo.SalesOrdersService.Approve
     */
    approve: {
      name: "Approve",
      I: IdentifierUUIDWithUserComment,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Send For Revision
     *
     * @generated from rpc Scailo.SalesOrdersService.SendForRevision
     */
    sendForRevision: {
      name: "SendForRevision",
      I: IdentifierUUIDWithUserComment,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Update revision
     *
     * @generated from rpc Scailo.SalesOrdersService.RevisionUpdate
     */
    revisionUpdate: {
      name: "RevisionUpdate",
      I: SalesOrdersServiceUpdateRequest,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Halt
     *
     * @generated from rpc Scailo.SalesOrdersService.Halt
     */
    halt: {
      name: "Halt",
      I: IdentifierUUIDWithUserComment,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Discard
     *
     * @generated from rpc Scailo.SalesOrdersService.Discard
     */
    discard: {
      name: "Discard",
      I: IdentifierUUIDWithUserComment,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Restore
     *
     * @generated from rpc Scailo.SalesOrdersService.Restore
     */
    restore: {
      name: "Restore",
      I: IdentifierUUIDWithUserComment,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Complete
     *
     * @generated from rpc Scailo.SalesOrdersService.Complete
     */
    complete: {
      name: "Complete",
      I: IdentifierUUIDWithUserComment,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Repeat
     *
     * @generated from rpc Scailo.SalesOrdersService.Repeat
     */
    repeat: {
      name: "Repeat",
      I: RepeatWithDeliveryDate,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Reopen
     *
     * @generated from rpc Scailo.SalesOrdersService.Reopen
     */
    reopen: {
      name: "Reopen",
      I: IdentifierUUIDWithUserComment,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Add comment
     *
     * @generated from rpc Scailo.SalesOrdersService.CommentAdd
     */
    commentAdd: {
      name: "CommentAdd",
      I: IdentifierUUIDWithUserComment,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Send Email
     *
     * @generated from rpc Scailo.SalesOrdersService.SendEmail
     */
    sendEmail: {
      name: "SendEmail",
      I: IdentifierWithEmailAttributes,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Autofill the sales order
     *
     * @generated from rpc Scailo.SalesOrdersService.Autofill
     */
    autofill: {
      name: "Autofill",
      I: SalesOrdersServiceAutofillRequest,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Amend the sales order and send for revision
     *
     * @generated from rpc Scailo.SalesOrdersService.Amend
     */
    amend: {
      name: "Amend",
      I: IdentifierUUIDWithUserComment,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Add an item to a sales order
     *
     * @generated from rpc Scailo.SalesOrdersService.AddSalesOrderItem
     */
    addSalesOrderItem: {
      name: "AddSalesOrderItem",
      I: SalesOrdersServiceItemCreateRequest,
      O: IdentifiersList,
      kind: MethodKind.Unary,
    },
    /**
     * Modify an item in a sales order
     *
     * @generated from rpc Scailo.SalesOrdersService.ModifySalesOrderItem
     */
    modifySalesOrderItem: {
      name: "ModifySalesOrderItem",
      I: SalesOrdersServiceItemUpdateRequest,
      O: IdentifiersList,
      kind: MethodKind.Unary,
    },
    /**
     * Approve an item in a sales order
     *
     * @generated from rpc Scailo.SalesOrdersService.ApproveSalesOrderItem
     */
    approveSalesOrderItem: {
      name: "ApproveSalesOrderItem",
      I: IdentifierWithUserComment,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Delete an item in a sales order
     *
     * @generated from rpc Scailo.SalesOrdersService.DeleteSalesOrderItem
     */
    deleteSalesOrderItem: {
      name: "DeleteSalesOrderItem",
      I: IdentifierWithUserComment,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Reorder items in a sales order
     *
     * @generated from rpc Scailo.SalesOrdersService.ReorderSalesOrderItems
     */
    reorderSalesOrderItems: {
      name: "ReorderSalesOrderItems",
      I: ReorderItemsRequest,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * View Sales Order Item by ID
     *
     * @generated from rpc Scailo.SalesOrdersService.ViewSalesOrderItemByID
     */
    viewSalesOrderItemByID: {
      name: "ViewSalesOrderItemByID",
      I: Identifier,
      O: SalesOrderItem,
      kind: MethodKind.Unary,
    },
    /**
     * View Sales Order Item's price after factoring in the discount
     *
     * @generated from rpc Scailo.SalesOrdersService.ViewSalesOrderItemPrice
     */
    viewSalesOrderItemPrice: {
      name: "ViewSalesOrderItemPrice",
      I: SalesOrderItemProspectiveInfoRequest,
      O: PriceResponse,
      kind: MethodKind.Unary,
    },
    /**
     * View approved sales order items for given sales order ID
     *
     * @generated from rpc Scailo.SalesOrdersService.ViewApprovedSalesOrderItems
     */
    viewApprovedSalesOrderItems: {
      name: "ViewApprovedSalesOrderItems",
      I: IdentifierWithSearchKey,
      O: SalesOrderItemsList,
      kind: MethodKind.Unary,
    },
    /**
     * View unapproved sales order items for given sales order ID
     *
     * @generated from rpc Scailo.SalesOrdersService.ViewUnapprovedSalesOrderItems
     */
    viewUnapprovedSalesOrderItems: {
      name: "ViewUnapprovedSalesOrderItems",
      I: IdentifierWithSearchKey,
      O: SalesOrderItemsList,
      kind: MethodKind.Unary,
    },
    /**
     * View the history of the sales order item
     *
     * @generated from rpc Scailo.SalesOrdersService.ViewSalesOrderItemHistory
     */
    viewSalesOrderItemHistory: {
      name: "ViewSalesOrderItemHistory",
      I: SalesOrderItemHistoryRequest,
      O: SalesOrderItemsList,
      kind: MethodKind.Unary,
    },
    /**
     * View approved sales order items for given sales order ID with pagination
     *
     * @generated from rpc Scailo.SalesOrdersService.ViewPaginatedApprovedSalesOrderItems
     */
    viewPaginatedApprovedSalesOrderItems: {
      name: "ViewPaginatedApprovedSalesOrderItems",
      I: SalesOrderItemsSearchRequest,
      O: SalesOrdersServicePaginatedItemsResponse,
      kind: MethodKind.Unary,
    },
    /**
     * View unapproved sales order items for given sales order ID with pagination
     *
     * @generated from rpc Scailo.SalesOrdersService.ViewPaginatedUnapprovedSalesOrderItems
     */
    viewPaginatedUnapprovedSalesOrderItems: {
      name: "ViewPaginatedUnapprovedSalesOrderItems",
      I: SalesOrderItemsSearchRequest,
      O: SalesOrdersServicePaginatedItemsResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Search through sales order items with pagination
     *
     * @generated from rpc Scailo.SalesOrdersService.SearchItemsWithPagination
     */
    searchItemsWithPagination: {
      name: "SearchItemsWithPagination",
      I: SalesOrderItemsSearchRequest,
      O: SalesOrdersServicePaginatedItemsResponse,
      kind: MethodKind.Unary,
    },
    /**
     * CSV operations
     * Download the CSV file that could be used to upload items from the filled CSV file. The same file can also be used as a template when there are no existing records
     *
     * @generated from rpc Scailo.SalesOrdersService.DownloadItemsAsCSV
     */
    downloadItemsAsCSV: {
      name: "DownloadItemsAsCSV",
      I: IdentifierUUID,
      O: StandardFile,
      kind: MethodKind.Unary,
    },
    /**
     * Upload items using a CSV file. This is an idempotent operation. All the existing items are deleted before adding the items from the file.
     *
     * @generated from rpc Scailo.SalesOrdersService.UploadSalesOrderItems
     */
    uploadSalesOrderItems: {
      name: "UploadSalesOrderItems",
      I: IdentifierWithFile,
      O: IdentifiersList,
      kind: MethodKind.Unary,
    },
    /**
     * Add a contact
     *
     * @generated from rpc Scailo.SalesOrdersService.AddSalesOrderContact
     */
    addSalesOrderContact: {
      name: "AddSalesOrderContact",
      I: SalesOrdersServiceContactCreateRequest,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Approve a contact
     *
     * @generated from rpc Scailo.SalesOrdersService.ApproveSalesOrderContact
     */
    approveSalesOrderContact: {
      name: "ApproveSalesOrderContact",
      I: IdentifierWithUserComment,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Delete a contact
     *
     * @generated from rpc Scailo.SalesOrdersService.DeleteSalesOrderContact
     */
    deleteSalesOrderContact: {
      name: "DeleteSalesOrderContact",
      I: IdentifierWithUserComment,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * View a contact for the given ID
     *
     * @generated from rpc Scailo.SalesOrdersService.ViewSalesOrderContactByID
     */
    viewSalesOrderContactByID: {
      name: "ViewSalesOrderContactByID",
      I: Identifier,
      O: SalesOrderContact,
      kind: MethodKind.Unary,
    },
    /**
     * View all contacts for given sales order UUID
     *
     * @generated from rpc Scailo.SalesOrdersService.ViewSalesOrderContacts
     */
    viewSalesOrderContacts: {
      name: "ViewSalesOrderContacts",
      I: IdentifierUUID,
      O: SalesOrderContactsList,
      kind: MethodKind.Unary,
    },
    /**
     * Add a reference
     *
     * @generated from rpc Scailo.SalesOrdersService.AddSalesOrderReference
     */
    addSalesOrderReference: {
      name: "AddSalesOrderReference",
      I: SalesOrdersServiceReferenceCreateRequest,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Approve a reference
     *
     * @generated from rpc Scailo.SalesOrdersService.ApproveSalesOrderReference
     */
    approveSalesOrderReference: {
      name: "ApproveSalesOrderReference",
      I: IdentifierWithUserComment,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Delete a reference
     *
     * @generated from rpc Scailo.SalesOrdersService.DeleteSalesOrderReference
     */
    deleteSalesOrderReference: {
      name: "DeleteSalesOrderReference",
      I: IdentifierWithUserComment,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * View a reference for the given ID
     *
     * @generated from rpc Scailo.SalesOrdersService.ViewSalesOrderReferenceByID
     */
    viewSalesOrderReferenceByID: {
      name: "ViewSalesOrderReferenceByID",
      I: Identifier,
      O: SalesOrderReference,
      kind: MethodKind.Unary,
    },
    /**
     * View all references for given sales order ID
     *
     * @generated from rpc Scailo.SalesOrdersService.ViewSalesOrderReferences
     */
    viewSalesOrderReferences: {
      name: "ViewSalesOrderReferences",
      I: Identifier,
      O: SalesOrderReferencesList,
      kind: MethodKind.Unary,
    },
    /**
     * View by ID
     *
     * @generated from rpc Scailo.SalesOrdersService.ViewByID
     */
    viewByID: {
      name: "ViewByID",
      I: Identifier,
      O: SalesOrder,
      kind: MethodKind.Unary,
    },
    /**
     * View by UUID
     *
     * @generated from rpc Scailo.SalesOrdersService.ViewByUUID
     */
    viewByUUID: {
      name: "ViewByUUID",
      I: IdentifierUUID,
      O: SalesOrder,
      kind: MethodKind.Unary,
    },
    /**
     * View the ancillary parameters (UUIDs of the internal references) by UUID
     *
     * @generated from rpc Scailo.SalesOrdersService.ViewAncillaryParametersByUUID
     */
    viewAncillaryParametersByUUID: {
      name: "ViewAncillaryParametersByUUID",
      I: IdentifierUUID,
      O: SalesOrderAncillaryParameters,
      kind: MethodKind.Unary,
    },
    /**
     * View only essential components of the record
     *
     * @generated from rpc Scailo.SalesOrdersService.ViewEssentialByID
     */
    viewEssentialByID: {
      name: "ViewEssentialByID",
      I: Identifier,
      O: SalesOrder,
      kind: MethodKind.Unary,
    },
    /**
     * View all
     *
     * @generated from rpc Scailo.SalesOrdersService.ViewAll
     */
    viewAll: {
      name: "ViewAll",
      I: ActiveStatus,
      O: SalesOrdersList,
      kind: MethodKind.Unary,
    },
    /**
     * View all with the given entity UUID
     *
     * @generated from rpc Scailo.SalesOrdersService.ViewAllForEntityUUID
     */
    viewAllForEntityUUID: {
      name: "ViewAllForEntityUUID",
      I: IdentifierUUID,
      O: SalesOrdersList,
      kind: MethodKind.Unary,
    },
    /**
     * View with pagination
     *
     * @generated from rpc Scailo.SalesOrdersService.ViewWithPagination
     */
    viewWithPagination: {
      name: "ViewWithPagination",
      I: SalesOrdersServicePaginationReq,
      O: SalesOrdersServicePaginationResponse,
      kind: MethodKind.Unary,
    },
    /**
     * View all the amendments made
     *
     * @generated from rpc Scailo.SalesOrdersService.ViewAmendments
     */
    viewAmendments: {
      name: "ViewAmendments",
      I: Identifier,
      O: AmendmentLogsList,
      kind: MethodKind.Unary,
    },
    /**
     * View Inventory Statistics of Sales Order
     *
     * @generated from rpc Scailo.SalesOrdersService.ViewInventoryStatistics
     */
    viewInventoryStatistics: {
      name: "ViewInventoryStatistics",
      I: IdentifierUUID,
      O: SalesOrderInventoryStatistics,
      kind: MethodKind.Unary,
    },
    /**
     * View Billing Statistics of Sales Order
     *
     * @generated from rpc Scailo.SalesOrdersService.ViewBillingStatistics
     */
    viewBillingStatistics: {
      name: "ViewBillingStatistics",
      I: IdentifierUUID,
      O: SalesOrderBillingStatistics,
      kind: MethodKind.Unary,
    },
    /**
     * View Inventory Match of all the families within a Sales Order
     *
     * @generated from rpc Scailo.SalesOrdersService.ViewInventoryMatch
     */
    viewInventoryMatch: {
      name: "ViewInventoryMatch",
      I: IdentifierUUID,
      O: SalesOrderInventoryMatchList,
      kind: MethodKind.Unary,
    },
    /**
     * View prospective families for the given sales order
     *
     * @generated from rpc Scailo.SalesOrdersService.ViewProspectiveFamilies
     */
    viewProspectiveFamilies: {
      name: "ViewProspectiveFamilies",
      I: IdentifierWithSearchKey,
      O: FamiliesList,
      kind: MethodKind.Unary,
    },
    /**
     * View prospective sales order item info for the given family ID and sales order ID
     *
     * @generated from rpc Scailo.SalesOrdersService.ViewProspectiveSalesOrderItem
     */
    viewProspectiveSalesOrderItem: {
      name: "ViewProspectiveSalesOrderItem",
      I: SalesOrderItemProspectiveInfoRequest,
      O: SalesOrdersServiceItemCreateRequest,
      kind: MethodKind.Unary,
    },
    /**
     * Other view operations
     * Download sales order with the given IdentifierUUID (can be used to allow public downloads)
     *
     * @generated from rpc Scailo.SalesOrdersService.DownloadByUUID
     */
    downloadByUUID: {
      name: "DownloadByUUID",
      I: IdentifierUUID,
      O: StandardFile,
      kind: MethodKind.Unary,
    },
    /**
     * View all that match the given search key
     *
     * @generated from rpc Scailo.SalesOrdersService.SearchAll
     */
    searchAll: {
      name: "SearchAll",
      I: SalesOrdersServiceSearchAllReq,
      O: SalesOrdersList,
      kind: MethodKind.Unary,
    },
    /**
     * View all that match the given filter criteria
     *
     * @generated from rpc Scailo.SalesOrdersService.Filter
     */
    filter: {
      name: "Filter",
      I: SalesOrdersServiceFilterReq,
      O: SalesOrdersList,
      kind: MethodKind.Unary,
    },
    /**
     * Count in status
     *
     * @generated from rpc Scailo.SalesOrdersService.CountInStatus
     */
    countInStatus: {
      name: "CountInStatus",
      I: CountInSLCStatusRequest,
      O: CountResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Count all that match the given criteria
     *
     * @generated from rpc Scailo.SalesOrdersService.Count
     */
    count: {
      name: "Count",
      I: SalesOrdersServiceCountReq,
      O: CountResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Returns the sum of the total value of all the records that match the given criteria
     *
     * @generated from rpc Scailo.SalesOrdersService.AccruedValue
     */
    accruedValue: {
      name: "AccruedValue",
      I: SalesOrdersServiceCountReq,
      O: SumResponse,
      kind: MethodKind.Unary,
    },
  }
} as const;

