// @generated by protoc-gen-es v1.5.1 with parameter "target=ts"
// @generated from file families.scailo.proto (package Scailo, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3, protoInt64 } from "@bufbuild/protobuf";
import { ApprovalMetadata, BOOL_FILTER, EmployeeMetadata, LogbookLogConciseSLC, SORT_ORDER, STANDARD_LIFECYCLE_STATUS } from "./base.scailo_pb.js";

/**
 *
 * Stores the available family types
 *
 * @generated from enum Scailo.FAMILY_TYPE
 */
export enum FAMILY_TYPE {
  /**
   * Denotes any family type (only used for filter and search queries, when family type needs to be disregarded)
   *
   * @generated from enum value: FAMILY_TYPE_ANY_UNSPECIFIED = 0;
   */
  FAMILY_TYPE_ANY_UNSPECIFIED = 0,

  /**
   * Denotes a component (a family that can be sold, bought, and manufactured - this is a general purpose family)
   *
   * @generated from enum value: FAMILY_TYPE_COMPONENT = 1;
   */
  FAMILY_TYPE_COMPONENT = 1,

  /**
   * Denotes equipment (a family that can be used within manufacturing process as a capex item, such as machines)
   *
   * @generated from enum value: FAMILY_TYPE_EQUIPMENT = 2;
   */
  FAMILY_TYPE_EQUIPMENT = 2,

  /**
   * Denotes feedstock (a family that will be used as raw material within manufacturing process, and will be consumed)
   *
   * @generated from enum value: FAMILY_TYPE_FEEDSTOCK = 3;
   */
  FAMILY_TYPE_FEEDSTOCK = 3,

  /**
   * Denotes infrastructure (a family that can be used for any non-manufacturing purpose. Examples include cars, rtubelights, computers, etc.)
   *
   * @generated from enum value: FAMILY_TYPE_INFRASTRUCTURE = 4;
   */
  FAMILY_TYPE_INFRASTRUCTURE = 4,

  /**
   * Denotes merchandise (a family that can only be bought and sold, and will not be a part of any value addition processes)
   *
   * @generated from enum value: FAMILY_TYPE_MERCHANDISE = 5;
   */
  FAMILY_TYPE_MERCHANDISE = 5,

  /**
   * Denotes product (a family that is the final outcome of a manufacturing process. Can only be sold, but not purchased)
   *
   * @generated from enum value: FAMILY_TYPE_PRODUCT = 6;
   */
  FAMILY_TYPE_PRODUCT = 6,

  /**
   * Denotes service (a family that deals exclusively with services, and no goods)
   *
   * @generated from enum value: FAMILY_TYPE_SERVICE = 7;
   */
  FAMILY_TYPE_SERVICE = 7,
}
// Retrieve enum metadata with: proto3.getEnumType(FAMILY_TYPE)
proto3.util.setEnumType(FAMILY_TYPE, "Scailo.FAMILY_TYPE", [
  { no: 0, name: "FAMILY_TYPE_ANY_UNSPECIFIED" },
  { no: 1, name: "FAMILY_TYPE_COMPONENT" },
  { no: 2, name: "FAMILY_TYPE_EQUIPMENT" },
  { no: 3, name: "FAMILY_TYPE_FEEDSTOCK" },
  { no: 4, name: "FAMILY_TYPE_INFRASTRUCTURE" },
  { no: 5, name: "FAMILY_TYPE_MERCHANDISE" },
  { no: 6, name: "FAMILY_TYPE_PRODUCT" },
  { no: 7, name: "FAMILY_TYPE_SERVICE" },
]);

/**
 *
 * Stores the available consumption sequences
 *
 * @generated from enum Scailo.CONSUMPTION_SEQUENCE
 */
export enum CONSUMPTION_SEQUENCE {
  /**
   * Denotes any consumption sequence (only used for filter and search queries, when consumption sequence needs to be disregarded)
   *
   * @generated from enum value: CONSUMPTION_SEQUENCE_ANY_UNSPECIFIED = 0;
   */
  CONSUMPTION_SEQUENCE_ANY_UNSPECIFIED = 0,

  /**
   * Denotes first-in-first-out according to the intake timestamp
   *
   * @generated from enum value: CONSUMPTION_SEQUENCE_FIFO_INTAKE = 1;
   */
  CONSUMPTION_SEQUENCE_FIFO_INTAKE = 1,

  /**
   * Denotes first-in-first-out according to the shelf life
   *
   * @generated from enum value: CONSUMPTION_SEQUENCE_FIFO_SHELF_LIFE = 2;
   */
  CONSUMPTION_SEQUENCE_FIFO_SHELF_LIFE = 2,

  /**
   * Denotes first-in-first-out according to the warranty
   *
   * @generated from enum value: CONSUMPTION_SEQUENCE_FIFO_WARRANTY = 3;
   */
  CONSUMPTION_SEQUENCE_FIFO_WARRANTY = 3,

  /**
   * Denotes last-in-first-out according to the intake timestamp
   *
   * @generated from enum value: CONSUMPTION_SEQUENCE_LIFO_INTAKE = 4;
   */
  CONSUMPTION_SEQUENCE_LIFO_INTAKE = 4,

  /**
   * Denotes last-in-first-out according to the shelf life
   *
   * @generated from enum value: CONSUMPTION_SEQUENCE_LIFO_SHELF_LIFE = 5;
   */
  CONSUMPTION_SEQUENCE_LIFO_SHELF_LIFE = 5,

  /**
   * Denotes last-in-first-out according to the warranty
   *
   * @generated from enum value: CONSUMPTION_SEQUENCE_LIFO_WARRANTY = 6;
   */
  CONSUMPTION_SEQUENCE_LIFO_WARRANTY = 6,
}
// Retrieve enum metadata with: proto3.getEnumType(CONSUMPTION_SEQUENCE)
proto3.util.setEnumType(CONSUMPTION_SEQUENCE, "Scailo.CONSUMPTION_SEQUENCE", [
  { no: 0, name: "CONSUMPTION_SEQUENCE_ANY_UNSPECIFIED" },
  { no: 1, name: "CONSUMPTION_SEQUENCE_FIFO_INTAKE" },
  { no: 2, name: "CONSUMPTION_SEQUENCE_FIFO_SHELF_LIFE" },
  { no: 3, name: "CONSUMPTION_SEQUENCE_FIFO_WARRANTY" },
  { no: 4, name: "CONSUMPTION_SEQUENCE_LIFO_INTAKE" },
  { no: 5, name: "CONSUMPTION_SEQUENCE_LIFO_SHELF_LIFE" },
  { no: 6, name: "CONSUMPTION_SEQUENCE_LIFO_WARRANTY" },
]);

/**
 *
 * Describes the available sort keys
 *
 * @generated from enum Scailo.FAMILY_SORT_KEY
 */
export enum FAMILY_SORT_KEY {
  /**
   * Fetch ordered results by id
   *
   * @generated from enum value: FAMILY_SORT_KEY_ID_UNSPECIFIED = 0;
   */
  FAMILY_SORT_KEY_ID_UNSPECIFIED = 0,

  /**
   * Fetch ordered results by the creation timestamp
   *
   * @generated from enum value: FAMILY_SORT_KEY_CREATED_AT = 1;
   */
  FAMILY_SORT_KEY_CREATED_AT = 1,

  /**
   * Fetch ordered results by the modified timestamp
   *
   * @generated from enum value: FAMILY_SORT_KEY_MODIFIED_AT = 2;
   */
  FAMILY_SORT_KEY_MODIFIED_AT = 2,

  /**
   * Fetch ordered results by the approved on timestamp
   *
   * @generated from enum value: FAMILY_SORT_KEY_APPROVED_ON = 3;
   */
  FAMILY_SORT_KEY_APPROVED_ON = 3,

  /**
   * Fetch ordered results by the approved by field
   *
   * @generated from enum value: FAMILY_SORT_KEY_APPROVED_BY = 4;
   */
  FAMILY_SORT_KEY_APPROVED_BY = 4,

  /**
   * Fetch ordered results by the approver's role ID
   *
   * @generated from enum value: FAMILY_SORT_KEY_APPROVER_ROLE_ID = 5;
   */
  FAMILY_SORT_KEY_APPROVER_ROLE_ID = 5,

  /**
   * Fetch ordered results by the name
   *
   * @generated from enum value: FAMILY_SORT_KEY_NAME = 10;
   */
  FAMILY_SORT_KEY_NAME = 10,

  /**
   * Fetch ordered results by the drawing number
   *
   * @generated from enum value: FAMILY_SORT_KEY_DRAWING_NUMBER = 11;
   */
  FAMILY_SORT_KEY_DRAWING_NUMBER = 11,

  /**
   * Fetch ordered results by the code
   *
   * @generated from enum value: FAMILY_SORT_KEY_CODE = 12;
   */
  FAMILY_SORT_KEY_CODE = 12,

  /**
   * Fetch ordered results by the unit quantity
   *
   * @generated from enum value: FAMILY_SORT_KEY_UNIT_QUANTITY = 13;
   */
  FAMILY_SORT_KEY_UNIT_QUANTITY = 13,

  /**
   * Fetch ordered results by the price
   *
   * @generated from enum value: FAMILY_SORT_KEY_PRICE = 14;
   */
  FAMILY_SORT_KEY_PRICE = 14,

  /**
   * Fetch ordered results by the amendment count
   *
   * @generated from enum value: FAMILY_SORT_KEY_AMENDMENT_COUNT = 15;
   */
  FAMILY_SORT_KEY_AMENDMENT_COUNT = 15,
}
// Retrieve enum metadata with: proto3.getEnumType(FAMILY_SORT_KEY)
proto3.util.setEnumType(FAMILY_SORT_KEY, "Scailo.FAMILY_SORT_KEY", [
  { no: 0, name: "FAMILY_SORT_KEY_ID_UNSPECIFIED" },
  { no: 1, name: "FAMILY_SORT_KEY_CREATED_AT" },
  { no: 2, name: "FAMILY_SORT_KEY_MODIFIED_AT" },
  { no: 3, name: "FAMILY_SORT_KEY_APPROVED_ON" },
  { no: 4, name: "FAMILY_SORT_KEY_APPROVED_BY" },
  { no: 5, name: "FAMILY_SORT_KEY_APPROVER_ROLE_ID" },
  { no: 10, name: "FAMILY_SORT_KEY_NAME" },
  { no: 11, name: "FAMILY_SORT_KEY_DRAWING_NUMBER" },
  { no: 12, name: "FAMILY_SORT_KEY_CODE" },
  { no: 13, name: "FAMILY_SORT_KEY_UNIT_QUANTITY" },
  { no: 14, name: "FAMILY_SORT_KEY_PRICE" },
  { no: 15, name: "FAMILY_SORT_KEY_AMENDMENT_COUNT" },
]);

/**
 *
 * Describes the message consisting of the list of family types
 *
 * @generated from message Scailo.FamilyTypesList
 */
export class FamilyTypesList extends Message<FamilyTypesList> {
  /**
   * List of family types
   *
   * @generated from field: repeated Scailo.FAMILY_TYPE list = 1;
   */
  list: FAMILY_TYPE[] = [];

  constructor(data?: PartialMessage<FamilyTypesList>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.FamilyTypesList";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "list", kind: "enum", T: proto3.getEnumType(FAMILY_TYPE), repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): FamilyTypesList {
    return new FamilyTypesList().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): FamilyTypesList {
    return new FamilyTypesList().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): FamilyTypesList {
    return new FamilyTypesList().fromJsonString(jsonString, options);
  }

  static equals(a: FamilyTypesList | PlainMessage<FamilyTypesList> | undefined, b: FamilyTypesList | PlainMessage<FamilyTypesList> | undefined): boolean {
    return proto3.util.equals(FamilyTypesList, a, b);
  }
}

/**
 *
 * Describes the parameters necessary to create a record
 *
 * @generated from message Scailo.FamiliesServiceCreateRequest
 */
export class FamiliesServiceCreateRequest extends Message<FamiliesServiceCreateRequest> {
  /**
   * Stores a globally unique entity UUID. This will be set at the organization level
   *
   * @generated from field: string entity_uuid = 1;
   */
  entityUuid = "";

  /**
   * Stores any comment that the user might add during this operation
   *
   * @generated from field: string user_comment = 2;
   */
  userComment = "";

  /**
   * The associated vault folder ID
   *
   * @generated from field: uint64 vault_folder_id = 9;
   */
  vaultFolderId = protoInt64.zero;

  /**
   * The name of the family
   *
   * @generated from field: string name = 10;
   */
  name = "";

  /**
   * The name of the family that is to be used on prints
   *
   * @generated from field: string print_name = 11;
   */
  printName = "";

  /**
   * The unique code that represents the family
   *
   * @generated from field: string code = 12;
   */
  code = "";

  /**
   * The drawing number of the family
   *
   * @generated from field: string drawing_number = 13;
   */
  drawingNumber = "";

  /**
   * The description of the family
   *
   * @generated from field: string description = 14;
   */
  description = "";

  /**
   * The type of the family
   *
   * @generated from field: Scailo.FAMILY_TYPE family_type = 15;
   */
  familyType = FAMILY_TYPE.FAMILY_TYPE_ANY_UNSPECIFIED;

  /**
   * The HSN/SAC code of the family
   *
   * @generated from field: string hsn_sac_code = 16;
   */
  hsnSacCode = "";

  /**
   * Stores the ID of the associated unit of material
   *
   * @generated from field: uint64 uom_id = 17;
   */
  uomId = protoInt64.zero;

  /**
   * Stores the unit quantity
   *
   * @generated from field: uint64 unit_quantity = 18;
   */
  unitQuantity = protoInt64.zero;

  /**
   * Stores the ID of the parent family
   *
   * @generated from field: uint64 parent_id = 19;
   */
  parentId = protoInt64.zero;

  /**
   * Stores if the family is a leaf family
   *
   * @generated from field: bool is_leaf = 20;
   */
  isLeaf = false;

  /**
   * Stores the ID of the ledger
   *
   * @generated from field: uint64 ledger_id = 21;
   */
  ledgerId = protoInt64.zero;

  /**
   * Stores the ID of the tax group
   *
   * @generated from field: uint64 tax_group_id = 23;
   */
  taxGroupId = protoInt64.zero;

  /**
   * Stores the unit price
   *
   * @generated from field: uint64 price = 26;
   */
  price = protoInt64.zero;

  /**
   * Stores the minimum stock to maintain
   *
   * @generated from field: uint64 min_stock_to_maintain = 27;
   */
  minStockToMaintain = protoInt64.zero;

  /**
   * Stores the consumption sequence
   *
   * @generated from field: Scailo.CONSUMPTION_SEQUENCE consumption_sequence = 28;
   */
  consumptionSequence = CONSUMPTION_SEQUENCE.CONSUMPTION_SEQUENCE_ANY_UNSPECIFIED;

  constructor(data?: PartialMessage<FamiliesServiceCreateRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.FamiliesServiceCreateRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "entity_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "user_comment", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 9, name: "vault_folder_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 10, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 11, name: "print_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 12, name: "code", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 13, name: "drawing_number", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 14, name: "description", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 15, name: "family_type", kind: "enum", T: proto3.getEnumType(FAMILY_TYPE) },
    { no: 16, name: "hsn_sac_code", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 17, name: "uom_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 18, name: "unit_quantity", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 19, name: "parent_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 20, name: "is_leaf", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 21, name: "ledger_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 23, name: "tax_group_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 26, name: "price", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 27, name: "min_stock_to_maintain", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 28, name: "consumption_sequence", kind: "enum", T: proto3.getEnumType(CONSUMPTION_SEQUENCE) },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): FamiliesServiceCreateRequest {
    return new FamiliesServiceCreateRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): FamiliesServiceCreateRequest {
    return new FamiliesServiceCreateRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): FamiliesServiceCreateRequest {
    return new FamiliesServiceCreateRequest().fromJsonString(jsonString, options);
  }

  static equals(a: FamiliesServiceCreateRequest | PlainMessage<FamiliesServiceCreateRequest> | undefined, b: FamiliesServiceCreateRequest | PlainMessage<FamiliesServiceCreateRequest> | undefined): boolean {
    return proto3.util.equals(FamiliesServiceCreateRequest, a, b);
  }
}

/**
 *
 * Describes the parameters necessary to update a record
 *
 * @generated from message Scailo.FamiliesServiceUpdateRequest
 */
export class FamiliesServiceUpdateRequest extends Message<FamiliesServiceUpdateRequest> {
  /**
   * Stores any comment that the user might add during this operation
   *
   * @generated from field: string user_comment = 1;
   */
  userComment = "";

  /**
   * The ID of the record that needs to be updated
   *
   * @generated from field: uint64 id = 2;
   */
  id = protoInt64.zero;

  /**
   * Optional boolean value that denotes if a notification needs to be sent to users about the update to the record. This is useful when a subsequent operation needs to be performed immediately (such as send to verification after updating the revision)
   *
   * @generated from field: bool notify_users = 3;
   */
  notifyUsers = false;

  /**
   * The associated vault folder ID
   *
   * @generated from field: uint64 vault_folder_id = 9;
   */
  vaultFolderId = protoInt64.zero;

  /**
   * The name of the family
   *
   * @generated from field: string name = 10;
   */
  name = "";

  /**
   * The name of the family that is to be used on prints
   *
   * @generated from field: string print_name = 11;
   */
  printName = "";

  /**
   * The unique code that represents the family
   *
   * @generated from field: string code = 12;
   */
  code = "";

  /**
   * The drawing number of the family
   *
   * @generated from field: string drawing_number = 13;
   */
  drawingNumber = "";

  /**
   * The description of the family
   *
   * @generated from field: string description = 14;
   */
  description = "";

  /**
   * The type of the family
   *
   * @generated from field: Scailo.FAMILY_TYPE family_type = 15;
   */
  familyType = FAMILY_TYPE.FAMILY_TYPE_ANY_UNSPECIFIED;

  /**
   * The HSN/SAC code of the family
   *
   * @generated from field: string hsn_sac_code = 16;
   */
  hsnSacCode = "";

  /**
   * Stores the ID of the associated unit of material
   *
   * @generated from field: uint64 uom_id = 17;
   */
  uomId = protoInt64.zero;

  /**
   * Stores the unit quantity
   *
   * @generated from field: uint64 unit_quantity = 18;
   */
  unitQuantity = protoInt64.zero;

  /**
   * Stores the ID of the parent family
   *
   * @generated from field: uint64 parent_id = 19;
   */
  parentId = protoInt64.zero;

  /**
   * Stores if the family is a leaf family
   *
   * @generated from field: bool is_leaf = 20;
   */
  isLeaf = false;

  /**
   * Stores the ID of the ledger
   *
   * @generated from field: uint64 ledger_id = 21;
   */
  ledgerId = protoInt64.zero;

  /**
   * Stores the ID of the tax group
   *
   * @generated from field: uint64 tax_group_id = 23;
   */
  taxGroupId = protoInt64.zero;

  /**
   * Stores the unit price
   *
   * @generated from field: uint64 price = 26;
   */
  price = protoInt64.zero;

  /**
   * Stores the minimum stock to maintain
   *
   * @generated from field: uint64 min_stock_to_maintain = 27;
   */
  minStockToMaintain = protoInt64.zero;

  /**
   * Stores the consumption sequence
   *
   * @generated from field: Scailo.CONSUMPTION_SEQUENCE consumption_sequence = 28;
   */
  consumptionSequence = CONSUMPTION_SEQUENCE.CONSUMPTION_SEQUENCE_ANY_UNSPECIFIED;

  constructor(data?: PartialMessage<FamiliesServiceUpdateRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.FamiliesServiceUpdateRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "user_comment", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 3, name: "notify_users", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 9, name: "vault_folder_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 10, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 11, name: "print_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 12, name: "code", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 13, name: "drawing_number", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 14, name: "description", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 15, name: "family_type", kind: "enum", T: proto3.getEnumType(FAMILY_TYPE) },
    { no: 16, name: "hsn_sac_code", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 17, name: "uom_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 18, name: "unit_quantity", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 19, name: "parent_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 20, name: "is_leaf", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 21, name: "ledger_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 23, name: "tax_group_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 26, name: "price", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 27, name: "min_stock_to_maintain", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 28, name: "consumption_sequence", kind: "enum", T: proto3.getEnumType(CONSUMPTION_SEQUENCE) },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): FamiliesServiceUpdateRequest {
    return new FamiliesServiceUpdateRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): FamiliesServiceUpdateRequest {
    return new FamiliesServiceUpdateRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): FamiliesServiceUpdateRequest {
    return new FamiliesServiceUpdateRequest().fromJsonString(jsonString, options);
  }

  static equals(a: FamiliesServiceUpdateRequest | PlainMessage<FamiliesServiceUpdateRequest> | undefined, b: FamiliesServiceUpdateRequest | PlainMessage<FamiliesServiceUpdateRequest> | undefined): boolean {
    return proto3.util.equals(FamiliesServiceUpdateRequest, a, b);
  }
}

/**
 *
 * Describes the parameters that are part of a family structure
 *
 * @generated from message Scailo.Family
 */
export class Family extends Message<Family> {
  /**
   * Stores a globally unique entity UUID. This will be set at the organization level
   *
   * @generated from field: string entity_uuid = 1;
   */
  entityUuid = "";

  /**
   * Stores the metadata of this family
   *
   * @generated from field: Scailo.EmployeeMetadata metadata = 2;
   */
  metadata?: EmployeeMetadata;

  /**
   * Stores the approval metadata
   *
   * @generated from field: Scailo.ApprovalMetadata approval_metadata = 3;
   */
  approvalMetadata?: ApprovalMetadata;

  /**
   * The status of this family
   *
   * @generated from field: Scailo.STANDARD_LIFECYCLE_STATUS status = 4;
   */
  status = STANDARD_LIFECYCLE_STATUS.ANY_UNSPECIFIED;

  /**
   * Stores the logs of every operation performed on this purchase order
   *
   * @generated from field: repeated Scailo.LogbookLogConciseSLC logs = 5;
   */
  logs: LogbookLogConciseSLC[] = [];

  /**
   * The associated vault folder ID
   *
   * @generated from field: uint64 vault_folder_id = 9;
   */
  vaultFolderId = protoInt64.zero;

  /**
   * The name of the family
   *
   * @generated from field: string name = 10;
   */
  name = "";

  /**
   * The name of the family that is to be used on prints
   *
   * @generated from field: string print_name = 11;
   */
  printName = "";

  /**
   * The unique code that represents the family
   *
   * @generated from field: string code = 12;
   */
  code = "";

  /**
   * The drawing number of the family
   *
   * @generated from field: string drawing_number = 13;
   */
  drawingNumber = "";

  /**
   * The description of the family
   *
   * @generated from field: string description = 14;
   */
  description = "";

  /**
   * The type of the family
   *
   * @generated from field: Scailo.FAMILY_TYPE family_type = 15;
   */
  familyType = FAMILY_TYPE.FAMILY_TYPE_ANY_UNSPECIFIED;

  /**
   * The HSN/SAC code of the family
   *
   * @generated from field: string hsn_sac_code = 16;
   */
  hsnSacCode = "";

  /**
   * Stores the ID of the associated unit of material
   *
   * @generated from field: uint64 uom_id = 17;
   */
  uomId = protoInt64.zero;

  /**
   * Stores the unit quantity
   *
   * @generated from field: uint64 unit_quantity = 18;
   */
  unitQuantity = protoInt64.zero;

  /**
   * Stores the ID of the parent family
   *
   * @generated from field: uint64 parent_id = 19;
   */
  parentId = protoInt64.zero;

  /**
   * Stores if the family is a leaf family
   *
   * @generated from field: bool is_leaf = 20;
   */
  isLeaf = false;

  /**
   * Stores the ID of the ledger
   *
   * @generated from field: uint64 ledger_id = 21;
   */
  ledgerId = protoInt64.zero;

  /**
   * Stores the ID of the tax group
   *
   * @generated from field: uint64 tax_group_id = 23;
   */
  taxGroupId = protoInt64.zero;

  /**
   * Stores the unit price
   *
   * @generated from field: uint64 price = 26;
   */
  price = protoInt64.zero;

  /**
   * Stores the minimum stock to maintain
   *
   * @generated from field: uint64 min_stock_to_maintain = 27;
   */
  minStockToMaintain = protoInt64.zero;

  /**
   * Stores the consumption sequence
   *
   * @generated from field: Scailo.CONSUMPTION_SEQUENCE consumption_sequence = 29;
   */
  consumptionSequence = CONSUMPTION_SEQUENCE.CONSUMPTION_SEQUENCE_ANY_UNSPECIFIED;

  /**
   * The number of times that the family has been amended
   *
   * @generated from field: uint64 amendment_count = 40;
   */
  amendmentCount = protoInt64.zero;

  constructor(data?: PartialMessage<Family>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.Family";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "entity_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "metadata", kind: "message", T: EmployeeMetadata },
    { no: 3, name: "approval_metadata", kind: "message", T: ApprovalMetadata },
    { no: 4, name: "status", kind: "enum", T: proto3.getEnumType(STANDARD_LIFECYCLE_STATUS) },
    { no: 5, name: "logs", kind: "message", T: LogbookLogConciseSLC, repeated: true },
    { no: 9, name: "vault_folder_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 10, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 11, name: "print_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 12, name: "code", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 13, name: "drawing_number", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 14, name: "description", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 15, name: "family_type", kind: "enum", T: proto3.getEnumType(FAMILY_TYPE) },
    { no: 16, name: "hsn_sac_code", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 17, name: "uom_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 18, name: "unit_quantity", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 19, name: "parent_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 20, name: "is_leaf", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 21, name: "ledger_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 23, name: "tax_group_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 26, name: "price", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 27, name: "min_stock_to_maintain", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 29, name: "consumption_sequence", kind: "enum", T: proto3.getEnumType(CONSUMPTION_SEQUENCE) },
    { no: 40, name: "amendment_count", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Family {
    return new Family().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Family {
    return new Family().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Family {
    return new Family().fromJsonString(jsonString, options);
  }

  static equals(a: Family | PlainMessage<Family> | undefined, b: Family | PlainMessage<Family> | undefined): boolean {
    return proto3.util.equals(Family, a, b);
  }
}

/**
 *
 * Describes the message consisting of the list of families
 *
 * @generated from message Scailo.FamiliesList
 */
export class FamiliesList extends Message<FamiliesList> {
  /**
   * List of families
   *
   * @generated from field: repeated Scailo.Family list = 1;
   */
  list: Family[] = [];

  constructor(data?: PartialMessage<FamiliesList>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.FamiliesList";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "list", kind: "message", T: Family, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): FamiliesList {
    return new FamiliesList().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): FamiliesList {
    return new FamiliesList().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): FamiliesList {
    return new FamiliesList().fromJsonString(jsonString, options);
  }

  static equals(a: FamiliesList | PlainMessage<FamiliesList> | undefined, b: FamiliesList | PlainMessage<FamiliesList> | undefined): boolean {
    return proto3.util.equals(FamiliesList, a, b);
  }
}

/**
 *
 * Describes a pagination request to retrieve records
 *
 * @generated from message Scailo.FamiliesServicePaginationReq
 */
export class FamiliesServicePaginationReq extends Message<FamiliesServicePaginationReq> {
  /**
   * If true, then returns only active records. If false, then returns only inactive records
   *
   * @generated from field: Scailo.BOOL_FILTER is_active = 1;
   */
  isActive = BOOL_FILTER.BOOL_FILTER_ANY_UNSPECIFIED;

  /**
   * The number of records that need to be sent in the response
   *
   * @generated from field: int64 count = 2;
   */
  count = protoInt64.zero;

  /**
   * The number that need to be offset by before fetching the records
   *
   * @generated from field: uint64 offset = 3;
   */
  offset = protoInt64.zero;

  /**
   * The sort order that is to be used to fetch the pagination response
   *
   * @generated from field: Scailo.SORT_ORDER sort_order = 4;
   */
  sortOrder = SORT_ORDER.ASCENDING_UNSPECIFIED;

  /**
   * The sort key that is to be used to fetch the pagination response
   *
   * @generated from field: Scailo.FAMILY_SORT_KEY sort_key = 5;
   */
  sortKey = FAMILY_SORT_KEY.FAMILY_SORT_KEY_ID_UNSPECIFIED;

  /**
   * The status of this family
   *
   * @generated from field: Scailo.STANDARD_LIFECYCLE_STATUS status = 6;
   */
  status = STANDARD_LIFECYCLE_STATUS.ANY_UNSPECIFIED;

  constructor(data?: PartialMessage<FamiliesServicePaginationReq>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.FamiliesServicePaginationReq";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "is_active", kind: "enum", T: proto3.getEnumType(BOOL_FILTER) },
    { no: 2, name: "count", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "offset", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 4, name: "sort_order", kind: "enum", T: proto3.getEnumType(SORT_ORDER) },
    { no: 5, name: "sort_key", kind: "enum", T: proto3.getEnumType(FAMILY_SORT_KEY) },
    { no: 6, name: "status", kind: "enum", T: proto3.getEnumType(STANDARD_LIFECYCLE_STATUS) },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): FamiliesServicePaginationReq {
    return new FamiliesServicePaginationReq().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): FamiliesServicePaginationReq {
    return new FamiliesServicePaginationReq().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): FamiliesServicePaginationReq {
    return new FamiliesServicePaginationReq().fromJsonString(jsonString, options);
  }

  static equals(a: FamiliesServicePaginationReq | PlainMessage<FamiliesServicePaginationReq> | undefined, b: FamiliesServicePaginationReq | PlainMessage<FamiliesServicePaginationReq> | undefined): boolean {
    return proto3.util.equals(FamiliesServicePaginationReq, a, b);
  }
}

/**
 *
 * Describes the response to a pagination request
 *
 * @generated from message Scailo.FamiliesServicePaginationResponse
 */
export class FamiliesServicePaginationResponse extends Message<FamiliesServicePaginationResponse> {
  /**
   * The number of records in this payload
   *
   * @generated from field: uint64 count = 1;
   */
  count = protoInt64.zero;

  /**
   * The number that has been offset before fetching the records. This is the same value that has been sent as part of the pagination request
   *
   * @generated from field: uint64 offset = 2;
   */
  offset = protoInt64.zero;

  /**
   * The total number of records that are available
   *
   * @generated from field: uint64 total = 3;
   */
  total = protoInt64.zero;

  /**
   * The list of records
   *
   * @generated from field: repeated Scailo.Family payload = 4;
   */
  payload: Family[] = [];

  constructor(data?: PartialMessage<FamiliesServicePaginationResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.FamiliesServicePaginationResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "count", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 2, name: "offset", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 3, name: "total", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 4, name: "payload", kind: "message", T: Family, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): FamiliesServicePaginationResponse {
    return new FamiliesServicePaginationResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): FamiliesServicePaginationResponse {
    return new FamiliesServicePaginationResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): FamiliesServicePaginationResponse {
    return new FamiliesServicePaginationResponse().fromJsonString(jsonString, options);
  }

  static equals(a: FamiliesServicePaginationResponse | PlainMessage<FamiliesServicePaginationResponse> | undefined, b: FamiliesServicePaginationResponse | PlainMessage<FamiliesServicePaginationResponse> | undefined): boolean {
    return proto3.util.equals(FamiliesServicePaginationResponse, a, b);
  }
}

/**
 *
 * Describes the base request payload of a filter search
 *
 * @generated from message Scailo.FamiliesServiceFilterReq
 */
export class FamiliesServiceFilterReq extends Message<FamiliesServiceFilterReq> {
  /**
   * If true, then returns only active records. If false, then returns only inactive records
   *
   * @generated from field: Scailo.BOOL_FILTER is_active = 1;
   */
  isActive = BOOL_FILTER.BOOL_FILTER_ANY_UNSPECIFIED;

  /**
   * The number of records that need to be sent in the response. Returns all records if it is set to -1
   *
   * @generated from field: int64 count = 2;
   */
  count = protoInt64.zero;

  /**
   * The number that need to be offset by before fetching the records
   *
   * @generated from field: uint64 offset = 3;
   */
  offset = protoInt64.zero;

  /**
   * The sort order that is to be used to fetch the pagination response
   *
   * @generated from field: Scailo.SORT_ORDER sort_order = 4;
   */
  sortOrder = SORT_ORDER.ASCENDING_UNSPECIFIED;

  /**
   * The sort key that is to be used to fetch the pagination response
   *
   * @generated from field: Scailo.FAMILY_SORT_KEY sort_key = 5;
   */
  sortKey = FAMILY_SORT_KEY.FAMILY_SORT_KEY_ID_UNSPECIFIED;

  /**
   * The minimum timestamp that needs to be considered to filter by creation
   *
   * @generated from field: uint64 creation_timestamp_start = 101;
   */
  creationTimestampStart = protoInt64.zero;

  /**
   * The maximum timestamp that needs to be considered to filter by creation
   *
   * @generated from field: uint64 creation_timestamp_end = 102;
   */
  creationTimestampEnd = protoInt64.zero;

  /**
   * The minimum timestamp that needs to be considered to filter by modification
   *
   * @generated from field: uint64 modification_timestamp_start = 103;
   */
  modificationTimestampStart = protoInt64.zero;

  /**
   * The maximum timestamp that needs to be considered to filter by modification
   *
   * @generated from field: uint64 modification_timestamp_end = 104;
   */
  modificationTimestampEnd = protoInt64.zero;

  /**
   * The entity UUID that is to be used to filter records
   *
   * @generated from field: string entity_uuid = 8;
   */
  entityUuid = "";

  /**
   * The status of this family
   *
   * @generated from field: Scailo.STANDARD_LIFECYCLE_STATUS status = 10;
   */
  status = STANDARD_LIFECYCLE_STATUS.ANY_UNSPECIFIED;

  /**
   * The start range of approved timestamp
   *
   * @generated from field: uint64 approved_on_start = 11;
   */
  approvedOnStart = protoInt64.zero;

  /**
   * The end range of approved timestamp
   *
   * @generated from field: uint64 approved_on_end = 12;
   */
  approvedOnEnd = protoInt64.zero;

  /**
   * The ID of the approver
   *
   * @generated from field: uint64 approved_by_user_id = 13;
   */
  approvedByUserId = protoInt64.zero;

  /**
   * The role ID of the approver
   *
   * @generated from field: uint64 approver_role_id = 14;
   */
  approverRoleId = protoInt64.zero;

  /**
   * The name of the family
   *
   * @generated from field: string name = 20;
   */
  name = "";

  /**
   * The unique code that represents the family
   *
   * @generated from field: string code = 22;
   */
  code = "";

  /**
   * The drawing number of the family
   *
   * @generated from field: string drawing_number = 23;
   */
  drawingNumber = "";

  /**
   * The type of the family
   *
   * @generated from field: Scailo.FAMILY_TYPE family_type = 25;
   */
  familyType = FAMILY_TYPE.FAMILY_TYPE_ANY_UNSPECIFIED;

  /**
   * The HSN/SAC code of the family
   *
   * @generated from field: string hsn_sac_code = 26;
   */
  hsnSacCode = "";

  /**
   * Stores the ID of the associated unit of material
   *
   * @generated from field: uint64 uom_id = 27;
   */
  uomId = protoInt64.zero;

  /**
   * Stores the unit quantity
   *
   * @generated from field: uint64 unit_quantity = 28;
   */
  unitQuantity = protoInt64.zero;

  /**
   * Stores the ID of the parent family
   *
   * @generated from field: uint64 parent_id = 29;
   */
  parentId = protoInt64.zero;

  /**
   * Filter with the given leaf property
   *
   * @generated from field: Scailo.BOOL_FILTER is_leaf = 30;
   */
  isLeaf = BOOL_FILTER.BOOL_FILTER_ANY_UNSPECIFIED;

  /**
   * Stores the ID of the ledger
   *
   * @generated from field: uint64 ledger_id = 31;
   */
  ledgerId = protoInt64.zero;

  /**
   * Stores the ID of the QC group
   *
   * @generated from field: uint64 qc_group_id = 32;
   */
  qcGroupId = protoInt64.zero;

  /**
   * Stores the ID of the tax group
   *
   * @generated from field: uint64 tax_group_id = 33;
   */
  taxGroupId = protoInt64.zero;

  /**
   * Stores the consumption sequence
   *
   * @generated from field: Scailo.CONSUMPTION_SEQUENCE consumption_sequence = 39;
   */
  consumptionSequence = CONSUMPTION_SEQUENCE.CONSUMPTION_SEQUENCE_ANY_UNSPECIFIED;

  /**
   * Filter by families that are present in the given parent storage ID (and all the corresponding child storage IDs)
   *
   * @generated from field: uint64 parent_storage_id = 50;
   */
  parentStorageId = protoInt64.zero;

  /**
   * Filter by families that have the given label ID
   *
   * @generated from field: uint64 label_id = 60;
   */
  labelId = protoInt64.zero;

  constructor(data?: PartialMessage<FamiliesServiceFilterReq>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.FamiliesServiceFilterReq";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "is_active", kind: "enum", T: proto3.getEnumType(BOOL_FILTER) },
    { no: 2, name: "count", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "offset", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 4, name: "sort_order", kind: "enum", T: proto3.getEnumType(SORT_ORDER) },
    { no: 5, name: "sort_key", kind: "enum", T: proto3.getEnumType(FAMILY_SORT_KEY) },
    { no: 101, name: "creation_timestamp_start", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 102, name: "creation_timestamp_end", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 103, name: "modification_timestamp_start", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 104, name: "modification_timestamp_end", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 8, name: "entity_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 10, name: "status", kind: "enum", T: proto3.getEnumType(STANDARD_LIFECYCLE_STATUS) },
    { no: 11, name: "approved_on_start", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 12, name: "approved_on_end", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 13, name: "approved_by_user_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 14, name: "approver_role_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 20, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 22, name: "code", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 23, name: "drawing_number", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 25, name: "family_type", kind: "enum", T: proto3.getEnumType(FAMILY_TYPE) },
    { no: 26, name: "hsn_sac_code", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 27, name: "uom_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 28, name: "unit_quantity", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 29, name: "parent_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 30, name: "is_leaf", kind: "enum", T: proto3.getEnumType(BOOL_FILTER) },
    { no: 31, name: "ledger_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 32, name: "qc_group_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 33, name: "tax_group_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 39, name: "consumption_sequence", kind: "enum", T: proto3.getEnumType(CONSUMPTION_SEQUENCE) },
    { no: 50, name: "parent_storage_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 60, name: "label_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): FamiliesServiceFilterReq {
    return new FamiliesServiceFilterReq().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): FamiliesServiceFilterReq {
    return new FamiliesServiceFilterReq().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): FamiliesServiceFilterReq {
    return new FamiliesServiceFilterReq().fromJsonString(jsonString, options);
  }

  static equals(a: FamiliesServiceFilterReq | PlainMessage<FamiliesServiceFilterReq> | undefined, b: FamiliesServiceFilterReq | PlainMessage<FamiliesServiceFilterReq> | undefined): boolean {
    return proto3.util.equals(FamiliesServiceFilterReq, a, b);
  }
}

/**
 *
 * Describes the request to count all families with the given criteria
 *
 * @generated from message Scailo.FamiliesServiceCountReq
 */
export class FamiliesServiceCountReq extends Message<FamiliesServiceCountReq> {
  /**
   * If true, then returns only active records. If false, then returns only inactive records
   *
   * @generated from field: Scailo.BOOL_FILTER is_active = 1;
   */
  isActive = BOOL_FILTER.BOOL_FILTER_ANY_UNSPECIFIED;

  /**
   * The minimum timestamp that needs to be considered to filter by creation
   *
   * @generated from field: uint64 creation_timestamp_start = 101;
   */
  creationTimestampStart = protoInt64.zero;

  /**
   * The maximum timestamp that needs to be considered to filter by creation
   *
   * @generated from field: uint64 creation_timestamp_end = 102;
   */
  creationTimestampEnd = protoInt64.zero;

  /**
   * The minimum timestamp that needs to be considered to filter by modification
   *
   * @generated from field: uint64 modification_timestamp_start = 103;
   */
  modificationTimestampStart = protoInt64.zero;

  /**
   * The maximum timestamp that needs to be considered to filter by modification
   *
   * @generated from field: uint64 modification_timestamp_end = 104;
   */
  modificationTimestampEnd = protoInt64.zero;

  /**
   * The entity UUID that is to be used to filter records
   *
   * @generated from field: string entity_uuid = 8;
   */
  entityUuid = "";

  /**
   * The status of this family
   *
   * @generated from field: Scailo.STANDARD_LIFECYCLE_STATUS status = 10;
   */
  status = STANDARD_LIFECYCLE_STATUS.ANY_UNSPECIFIED;

  /**
   * The start range of approved timestamp
   *
   * @generated from field: uint64 approved_on_start = 11;
   */
  approvedOnStart = protoInt64.zero;

  /**
   * The end range of approved timestamp
   *
   * @generated from field: uint64 approved_on_end = 12;
   */
  approvedOnEnd = protoInt64.zero;

  /**
   * The ID of the approver
   *
   * @generated from field: uint64 approved_by_user_id = 13;
   */
  approvedByUserId = protoInt64.zero;

  /**
   * The role ID of the approver
   *
   * @generated from field: uint64 approver_role_id = 14;
   */
  approverRoleId = protoInt64.zero;

  /**
   * The name of the family
   *
   * @generated from field: string name = 20;
   */
  name = "";

  /**
   * The unique code that represents the family
   *
   * @generated from field: string code = 22;
   */
  code = "";

  /**
   * The drawing number of the family
   *
   * @generated from field: string drawing_number = 23;
   */
  drawingNumber = "";

  /**
   * The type of the family
   *
   * @generated from field: Scailo.FAMILY_TYPE family_type = 25;
   */
  familyType = FAMILY_TYPE.FAMILY_TYPE_ANY_UNSPECIFIED;

  /**
   * The HSN/SAC code of the family
   *
   * @generated from field: string hsn_sac_code = 26;
   */
  hsnSacCode = "";

  /**
   * Stores the ID of the associated unit of material
   *
   * @generated from field: uint64 uom_id = 27;
   */
  uomId = protoInt64.zero;

  /**
   * Stores the unit quantity
   *
   * @generated from field: uint64 unit_quantity = 28;
   */
  unitQuantity = protoInt64.zero;

  /**
   * Stores the ID of the parent family
   *
   * @generated from field: uint64 parent_id = 29;
   */
  parentId = protoInt64.zero;

  /**
   * Filter with the given leaf property
   *
   * @generated from field: Scailo.BOOL_FILTER is_leaf = 30;
   */
  isLeaf = BOOL_FILTER.BOOL_FILTER_ANY_UNSPECIFIED;

  /**
   * Stores the ID of the ledger
   *
   * @generated from field: uint64 ledger_id = 31;
   */
  ledgerId = protoInt64.zero;

  /**
   * Stores the ID of the QC group
   *
   * @generated from field: uint64 qc_group_id = 32;
   */
  qcGroupId = protoInt64.zero;

  /**
   * Stores the ID of the tax group
   *
   * @generated from field: uint64 tax_group_id = 33;
   */
  taxGroupId = protoInt64.zero;

  /**
   * Stores the consumption sequence
   *
   * @generated from field: Scailo.CONSUMPTION_SEQUENCE consumption_sequence = 39;
   */
  consumptionSequence = CONSUMPTION_SEQUENCE.CONSUMPTION_SEQUENCE_ANY_UNSPECIFIED;

  /**
   * Filter by families that are present in the given parent storage ID (and all the corresponding child storage IDs)
   *
   * @generated from field: uint64 parent_storage_id = 50;
   */
  parentStorageId = protoInt64.zero;

  /**
   * Filter by families that have the given label ID
   *
   * @generated from field: uint64 label_id = 60;
   */
  labelId = protoInt64.zero;

  constructor(data?: PartialMessage<FamiliesServiceCountReq>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.FamiliesServiceCountReq";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "is_active", kind: "enum", T: proto3.getEnumType(BOOL_FILTER) },
    { no: 101, name: "creation_timestamp_start", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 102, name: "creation_timestamp_end", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 103, name: "modification_timestamp_start", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 104, name: "modification_timestamp_end", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 8, name: "entity_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 10, name: "status", kind: "enum", T: proto3.getEnumType(STANDARD_LIFECYCLE_STATUS) },
    { no: 11, name: "approved_on_start", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 12, name: "approved_on_end", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 13, name: "approved_by_user_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 14, name: "approver_role_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 20, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 22, name: "code", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 23, name: "drawing_number", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 25, name: "family_type", kind: "enum", T: proto3.getEnumType(FAMILY_TYPE) },
    { no: 26, name: "hsn_sac_code", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 27, name: "uom_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 28, name: "unit_quantity", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 29, name: "parent_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 30, name: "is_leaf", kind: "enum", T: proto3.getEnumType(BOOL_FILTER) },
    { no: 31, name: "ledger_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 32, name: "qc_group_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 33, name: "tax_group_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 39, name: "consumption_sequence", kind: "enum", T: proto3.getEnumType(CONSUMPTION_SEQUENCE) },
    { no: 50, name: "parent_storage_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 60, name: "label_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): FamiliesServiceCountReq {
    return new FamiliesServiceCountReq().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): FamiliesServiceCountReq {
    return new FamiliesServiceCountReq().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): FamiliesServiceCountReq {
    return new FamiliesServiceCountReq().fromJsonString(jsonString, options);
  }

  static equals(a: FamiliesServiceCountReq | PlainMessage<FamiliesServiceCountReq> | undefined, b: FamiliesServiceCountReq | PlainMessage<FamiliesServiceCountReq> | undefined): boolean {
    return proto3.util.equals(FamiliesServiceCountReq, a, b);
  }
}

/**
 *
 * Describes the request payload for performing a generic search operation on records
 *
 * @generated from message Scailo.FamiliesServiceSearchAllReq
 */
export class FamiliesServiceSearchAllReq extends Message<FamiliesServiceSearchAllReq> {
  /**
   * If true, then returns only active records. If false, then returns only inactive records
   *
   * @generated from field: Scailo.BOOL_FILTER is_active = 1;
   */
  isActive = BOOL_FILTER.BOOL_FILTER_ANY_UNSPECIFIED;

  /**
   * The number of records that need to be sent in the response. Returns all records if it is set to -1
   *
   * @generated from field: int64 count = 2;
   */
  count = protoInt64.zero;

  /**
   * The number that need to be offset by before fetching the records
   *
   * @generated from field: uint64 offset = 3;
   */
  offset = protoInt64.zero;

  /**
   * The sort order that is to be used to fetch the pagination response
   *
   * @generated from field: Scailo.SORT_ORDER sort_order = 4;
   */
  sortOrder = SORT_ORDER.ASCENDING_UNSPECIFIED;

  /**
   * The sort key that is to be used to fetch the pagination response
   *
   * @generated from field: Scailo.FAMILY_SORT_KEY sort_key = 5;
   */
  sortKey = FAMILY_SORT_KEY.FAMILY_SORT_KEY_ID_UNSPECIFIED;

  /**
   * The entity UUID that is to be used to filter records
   *
   * @generated from field: string entity_uuid = 6;
   */
  entityUuid = "";

  /**
   * Limit the search space to the given status
   *
   * @generated from field: Scailo.STANDARD_LIFECYCLE_STATUS status = 10;
   */
  status = STANDARD_LIFECYCLE_STATUS.ANY_UNSPECIFIED;

  /**
   * Describes the key with which the search operation needs to be performed
   *
   * @generated from field: string search_key = 11;
   */
  searchKey = "";

  /**
   * The type of the family
   *
   * @generated from field: Scailo.FAMILY_TYPE family_type = 25;
   */
  familyType = FAMILY_TYPE.FAMILY_TYPE_ANY_UNSPECIFIED;

  /**
   * The ID of the associated non-leaf parent family
   *
   * @generated from field: uint64 parent_id = 29;
   */
  parentId = protoInt64.zero;

  /**
   * Filter with the given leaf property
   *
   * @generated from field: Scailo.BOOL_FILTER is_leaf = 30;
   */
  isLeaf = BOOL_FILTER.BOOL_FILTER_ANY_UNSPECIFIED;

  constructor(data?: PartialMessage<FamiliesServiceSearchAllReq>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.FamiliesServiceSearchAllReq";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "is_active", kind: "enum", T: proto3.getEnumType(BOOL_FILTER) },
    { no: 2, name: "count", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "offset", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 4, name: "sort_order", kind: "enum", T: proto3.getEnumType(SORT_ORDER) },
    { no: 5, name: "sort_key", kind: "enum", T: proto3.getEnumType(FAMILY_SORT_KEY) },
    { no: 6, name: "entity_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 10, name: "status", kind: "enum", T: proto3.getEnumType(STANDARD_LIFECYCLE_STATUS) },
    { no: 11, name: "search_key", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 25, name: "family_type", kind: "enum", T: proto3.getEnumType(FAMILY_TYPE) },
    { no: 29, name: "parent_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 30, name: "is_leaf", kind: "enum", T: proto3.getEnumType(BOOL_FILTER) },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): FamiliesServiceSearchAllReq {
    return new FamiliesServiceSearchAllReq().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): FamiliesServiceSearchAllReq {
    return new FamiliesServiceSearchAllReq().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): FamiliesServiceSearchAllReq {
    return new FamiliesServiceSearchAllReq().fromJsonString(jsonString, options);
  }

  static equals(a: FamiliesServiceSearchAllReq | PlainMessage<FamiliesServiceSearchAllReq> | undefined, b: FamiliesServiceSearchAllReq | PlainMessage<FamiliesServiceSearchAllReq> | undefined): boolean {
    return proto3.util.equals(FamiliesServiceSearchAllReq, a, b);
  }
}

/**
 *
 * Describes the parameters necessary to create a family label
 *
 * @generated from message Scailo.FamiliesServiceLabelCreateRequest
 */
export class FamiliesServiceLabelCreateRequest extends Message<FamiliesServiceLabelCreateRequest> {
  /**
   * Stores any comment that the user might add during this operation
   *
   * @generated from field: string user_comment = 1;
   */
  userComment = "";

  /**
   * Stores the family ID
   *
   * @generated from field: uint64 family_id = 10;
   */
  familyId = protoInt64.zero;

  /**
   * Stores the label ID
   *
   * @generated from field: uint64 label_id = 11;
   */
  labelId = protoInt64.zero;

  constructor(data?: PartialMessage<FamiliesServiceLabelCreateRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.FamiliesServiceLabelCreateRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "user_comment", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 10, name: "family_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 11, name: "label_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): FamiliesServiceLabelCreateRequest {
    return new FamiliesServiceLabelCreateRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): FamiliesServiceLabelCreateRequest {
    return new FamiliesServiceLabelCreateRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): FamiliesServiceLabelCreateRequest {
    return new FamiliesServiceLabelCreateRequest().fromJsonString(jsonString, options);
  }

  static equals(a: FamiliesServiceLabelCreateRequest | PlainMessage<FamiliesServiceLabelCreateRequest> | undefined, b: FamiliesServiceLabelCreateRequest | PlainMessage<FamiliesServiceLabelCreateRequest> | undefined): boolean {
    return proto3.util.equals(FamiliesServiceLabelCreateRequest, a, b);
  }
}

/**
 *
 * Describes the parameters that constitute a family label
 *
 * @generated from message Scailo.FamilyLabel
 */
export class FamilyLabel extends Message<FamilyLabel> {
  /**
   * Stores a globally unique entity UUID. This will be set at the organization level
   *
   * @generated from field: string entity_uuid = 1;
   */
  entityUuid = "";

  /**
   * Stores the metadata of this family
   *
   * @generated from field: Scailo.EmployeeMetadata metadata = 2;
   */
  metadata?: EmployeeMetadata;

  /**
   * Stores the approval metadata
   *
   * @generated from field: Scailo.ApprovalMetadata approval_metadata = 3;
   */
  approvalMetadata?: ApprovalMetadata;

  /**
   * Denotes if this record requires approval (or has been approved)
   *
   * @generated from field: bool need_approval = 4;
   */
  needApproval = false;

  /**
   * Stores any comment that the user might have added during an operation
   *
   * @generated from field: string user_comment = 5;
   */
  userComment = "";

  /**
   * Stores the family ID
   *
   * @generated from field: uint64 family_id = 10;
   */
  familyId = protoInt64.zero;

  /**
   * Stores the label ID
   *
   * @generated from field: uint64 label_id = 11;
   */
  labelId = protoInt64.zero;

  constructor(data?: PartialMessage<FamilyLabel>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.FamilyLabel";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "entity_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "metadata", kind: "message", T: EmployeeMetadata },
    { no: 3, name: "approval_metadata", kind: "message", T: ApprovalMetadata },
    { no: 4, name: "need_approval", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 5, name: "user_comment", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 10, name: "family_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 11, name: "label_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): FamilyLabel {
    return new FamilyLabel().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): FamilyLabel {
    return new FamilyLabel().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): FamilyLabel {
    return new FamilyLabel().fromJsonString(jsonString, options);
  }

  static equals(a: FamilyLabel | PlainMessage<FamilyLabel> | undefined, b: FamilyLabel | PlainMessage<FamilyLabel> | undefined): boolean {
    return proto3.util.equals(FamilyLabel, a, b);
  }
}

/**
 *
 * Describes the message consisting of the list of family labels
 *
 * @generated from message Scailo.FamilyLabelsList
 */
export class FamilyLabelsList extends Message<FamilyLabelsList> {
  /**
   * List of records
   *
   * @generated from field: repeated Scailo.FamilyLabel list = 1;
   */
  list: FamilyLabel[] = [];

  constructor(data?: PartialMessage<FamilyLabelsList>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.FamilyLabelsList";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "list", kind: "message", T: FamilyLabel, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): FamilyLabelsList {
    return new FamilyLabelsList().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): FamilyLabelsList {
    return new FamilyLabelsList().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): FamilyLabelsList {
    return new FamilyLabelsList().fromJsonString(jsonString, options);
  }

  static equals(a: FamilyLabelsList | PlainMessage<FamilyLabelsList> | undefined, b: FamilyLabelsList | PlainMessage<FamilyLabelsList> | undefined): boolean {
    return proto3.util.equals(FamilyLabelsList, a, b);
  }
}

/**
 *
 * Describes the parameters necessary to create a family storage
 *
 * @generated from message Scailo.FamiliesServiceStorageCreateRequest
 */
export class FamiliesServiceStorageCreateRequest extends Message<FamiliesServiceStorageCreateRequest> {
  /**
   * Stores any comment that the user might add during this operation
   *
   * @generated from field: string user_comment = 1;
   */
  userComment = "";

  /**
   * Stores the family ID
   *
   * @generated from field: uint64 family_id = 10;
   */
  familyId = protoInt64.zero;

  /**
   * Stores the storage ID
   *
   * @generated from field: uint64 storage_id = 11;
   */
  storageId = protoInt64.zero;

  constructor(data?: PartialMessage<FamiliesServiceStorageCreateRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.FamiliesServiceStorageCreateRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "user_comment", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 10, name: "family_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 11, name: "storage_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): FamiliesServiceStorageCreateRequest {
    return new FamiliesServiceStorageCreateRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): FamiliesServiceStorageCreateRequest {
    return new FamiliesServiceStorageCreateRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): FamiliesServiceStorageCreateRequest {
    return new FamiliesServiceStorageCreateRequest().fromJsonString(jsonString, options);
  }

  static equals(a: FamiliesServiceStorageCreateRequest | PlainMessage<FamiliesServiceStorageCreateRequest> | undefined, b: FamiliesServiceStorageCreateRequest | PlainMessage<FamiliesServiceStorageCreateRequest> | undefined): boolean {
    return proto3.util.equals(FamiliesServiceStorageCreateRequest, a, b);
  }
}

/**
 *
 * Describes the parameters that constitute a family storage
 *
 * @generated from message Scailo.FamilyStorage
 */
export class FamilyStorage extends Message<FamilyStorage> {
  /**
   * Stores a globally unique entity UUID. This will be set at the organization level
   *
   * @generated from field: string entity_uuid = 1;
   */
  entityUuid = "";

  /**
   * Stores the metadata of this family
   *
   * @generated from field: Scailo.EmployeeMetadata metadata = 2;
   */
  metadata?: EmployeeMetadata;

  /**
   * Stores the approval metadata
   *
   * @generated from field: Scailo.ApprovalMetadata approval_metadata = 3;
   */
  approvalMetadata?: ApprovalMetadata;

  /**
   * Denotes if this record requires approval (or has been approved)
   *
   * @generated from field: bool need_approval = 4;
   */
  needApproval = false;

  /**
   * Stores any comment that the user might have added during an operation
   *
   * @generated from field: string user_comment = 5;
   */
  userComment = "";

  /**
   * Stores the family ID
   *
   * @generated from field: uint64 family_id = 10;
   */
  familyId = protoInt64.zero;

  /**
   * Stores the storage ID
   *
   * @generated from field: uint64 storage_id = 11;
   */
  storageId = protoInt64.zero;

  constructor(data?: PartialMessage<FamilyStorage>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.FamilyStorage";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "entity_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "metadata", kind: "message", T: EmployeeMetadata },
    { no: 3, name: "approval_metadata", kind: "message", T: ApprovalMetadata },
    { no: 4, name: "need_approval", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 5, name: "user_comment", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 10, name: "family_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 11, name: "storage_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): FamilyStorage {
    return new FamilyStorage().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): FamilyStorage {
    return new FamilyStorage().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): FamilyStorage {
    return new FamilyStorage().fromJsonString(jsonString, options);
  }

  static equals(a: FamilyStorage | PlainMessage<FamilyStorage> | undefined, b: FamilyStorage | PlainMessage<FamilyStorage> | undefined): boolean {
    return proto3.util.equals(FamilyStorage, a, b);
  }
}

/**
 *
 * Describes the message consisting of the list of family storages
 *
 * @generated from message Scailo.FamilyStoragesList
 */
export class FamilyStoragesList extends Message<FamilyStoragesList> {
  /**
   * List of records
   *
   * @generated from field: repeated Scailo.FamilyStorage list = 1;
   */
  list: FamilyStorage[] = [];

  constructor(data?: PartialMessage<FamilyStoragesList>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.FamilyStoragesList";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "list", kind: "message", T: FamilyStorage, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): FamilyStoragesList {
    return new FamilyStoragesList().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): FamilyStoragesList {
    return new FamilyStoragesList().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): FamilyStoragesList {
    return new FamilyStoragesList().fromJsonString(jsonString, options);
  }

  static equals(a: FamilyStoragesList | PlainMessage<FamilyStoragesList> | undefined, b: FamilyStoragesList | PlainMessage<FamilyStoragesList> | undefined): boolean {
    return proto3.util.equals(FamilyStoragesList, a, b);
  }
}

/**
 *
 * Describes the parameters necessary to check if a family unit conversion is available
 *
 * @generated from message Scailo.FamiliesServiceUnitConversionPresenceRequest
 */
export class FamiliesServiceUnitConversionPresenceRequest extends Message<FamiliesServiceUnitConversionPresenceRequest> {
  /**
   * Stores the family ID
   *
   * @generated from field: uint64 family_id = 10;
   */
  familyId = protoInt64.zero;

  /**
   * Stores the unit of material ID
   *
   * @generated from field: uint64 uom_id = 11;
   */
  uomId = protoInt64.zero;

  constructor(data?: PartialMessage<FamiliesServiceUnitConversionPresenceRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.FamiliesServiceUnitConversionPresenceRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 10, name: "family_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 11, name: "uom_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): FamiliesServiceUnitConversionPresenceRequest {
    return new FamiliesServiceUnitConversionPresenceRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): FamiliesServiceUnitConversionPresenceRequest {
    return new FamiliesServiceUnitConversionPresenceRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): FamiliesServiceUnitConversionPresenceRequest {
    return new FamiliesServiceUnitConversionPresenceRequest().fromJsonString(jsonString, options);
  }

  static equals(a: FamiliesServiceUnitConversionPresenceRequest | PlainMessage<FamiliesServiceUnitConversionPresenceRequest> | undefined, b: FamiliesServiceUnitConversionPresenceRequest | PlainMessage<FamiliesServiceUnitConversionPresenceRequest> | undefined): boolean {
    return proto3.util.equals(FamiliesServiceUnitConversionPresenceRequest, a, b);
  }
}

/**
 *
 * Describes the parameters necessary to create a family unit conversion
 *
 * @generated from message Scailo.FamiliesServiceUnitConversionCreateRequest
 */
export class FamiliesServiceUnitConversionCreateRequest extends Message<FamiliesServiceUnitConversionCreateRequest> {
  /**
   * Stores any comment that the user might add during this operation
   *
   * @generated from field: string user_comment = 1;
   */
  userComment = "";

  /**
   * Stores the family ID
   *
   * @generated from field: uint64 family_id = 10;
   */
  familyId = protoInt64.zero;

  /**
   * Stores the unit of material ID
   *
   * @generated from field: uint64 uom_id = 11;
   */
  uomId = protoInt64.zero;

  /**
   * Stores the factor
   *
   * @generated from field: uint64 factor = 12;
   */
  factor = protoInt64.zero;

  /**
   * Stores the divisor
   *
   * @generated from field: uint64 divisor = 13;
   */
  divisor = protoInt64.zero;

  constructor(data?: PartialMessage<FamiliesServiceUnitConversionCreateRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.FamiliesServiceUnitConversionCreateRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "user_comment", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 10, name: "family_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 11, name: "uom_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 12, name: "factor", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 13, name: "divisor", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): FamiliesServiceUnitConversionCreateRequest {
    return new FamiliesServiceUnitConversionCreateRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): FamiliesServiceUnitConversionCreateRequest {
    return new FamiliesServiceUnitConversionCreateRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): FamiliesServiceUnitConversionCreateRequest {
    return new FamiliesServiceUnitConversionCreateRequest().fromJsonString(jsonString, options);
  }

  static equals(a: FamiliesServiceUnitConversionCreateRequest | PlainMessage<FamiliesServiceUnitConversionCreateRequest> | undefined, b: FamiliesServiceUnitConversionCreateRequest | PlainMessage<FamiliesServiceUnitConversionCreateRequest> | undefined): boolean {
    return proto3.util.equals(FamiliesServiceUnitConversionCreateRequest, a, b);
  }
}

/**
 *
 * Describes the parameters that constitute a family unit conversion
 *
 * @generated from message Scailo.FamilyUnitConversion
 */
export class FamilyUnitConversion extends Message<FamilyUnitConversion> {
  /**
   * Stores a globally unique entity UUID. This will be set at the organization level
   *
   * @generated from field: string entity_uuid = 1;
   */
  entityUuid = "";

  /**
   * Stores the metadata of this family
   *
   * @generated from field: Scailo.EmployeeMetadata metadata = 2;
   */
  metadata?: EmployeeMetadata;

  /**
   * Stores the approval metadata
   *
   * @generated from field: Scailo.ApprovalMetadata approval_metadata = 3;
   */
  approvalMetadata?: ApprovalMetadata;

  /**
   * Denotes if this record requires approval (or has been approved)
   *
   * @generated from field: bool need_approval = 4;
   */
  needApproval = false;

  /**
   * Stores any comment that the user might have added during an operation
   *
   * @generated from field: string user_comment = 5;
   */
  userComment = "";

  /**
   * Stores the family ID
   *
   * @generated from field: uint64 family_id = 10;
   */
  familyId = protoInt64.zero;

  /**
   * Stores the unit of material ID
   *
   * @generated from field: uint64 uom_id = 11;
   */
  uomId = protoInt64.zero;

  /**
   * Stores the factor
   *
   * @generated from field: uint64 factor = 12;
   */
  factor = protoInt64.zero;

  /**
   * Stores the divisor
   *
   * @generated from field: uint64 divisor = 13;
   */
  divisor = protoInt64.zero;

  constructor(data?: PartialMessage<FamilyUnitConversion>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.FamilyUnitConversion";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "entity_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "metadata", kind: "message", T: EmployeeMetadata },
    { no: 3, name: "approval_metadata", kind: "message", T: ApprovalMetadata },
    { no: 4, name: "need_approval", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 5, name: "user_comment", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 10, name: "family_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 11, name: "uom_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 12, name: "factor", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 13, name: "divisor", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): FamilyUnitConversion {
    return new FamilyUnitConversion().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): FamilyUnitConversion {
    return new FamilyUnitConversion().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): FamilyUnitConversion {
    return new FamilyUnitConversion().fromJsonString(jsonString, options);
  }

  static equals(a: FamilyUnitConversion | PlainMessage<FamilyUnitConversion> | undefined, b: FamilyUnitConversion | PlainMessage<FamilyUnitConversion> | undefined): boolean {
    return proto3.util.equals(FamilyUnitConversion, a, b);
  }
}

/**
 *
 * Describes the message consisting of the list of family unit conversions
 *
 * @generated from message Scailo.FamilyUnitConversionsList
 */
export class FamilyUnitConversionsList extends Message<FamilyUnitConversionsList> {
  /**
   * List of records
   *
   * @generated from field: repeated Scailo.FamilyUnitConversion list = 1;
   */
  list: FamilyUnitConversion[] = [];

  constructor(data?: PartialMessage<FamilyUnitConversionsList>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.FamilyUnitConversionsList";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "list", kind: "message", T: FamilyUnitConversion, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): FamilyUnitConversionsList {
    return new FamilyUnitConversionsList().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): FamilyUnitConversionsList {
    return new FamilyUnitConversionsList().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): FamilyUnitConversionsList {
    return new FamilyUnitConversionsList().fromJsonString(jsonString, options);
  }

  static equals(a: FamilyUnitConversionsList | PlainMessage<FamilyUnitConversionsList> | undefined, b: FamilyUnitConversionsList | PlainMessage<FamilyUnitConversionsList> | undefined): boolean {
    return proto3.util.equals(FamilyUnitConversionsList, a, b);
  }
}

/**
 *
 * Describes the parameters necessary to create a family qc group
 *
 * @generated from message Scailo.FamiliesServiceQCGroupCreateRequest
 */
export class FamiliesServiceQCGroupCreateRequest extends Message<FamiliesServiceQCGroupCreateRequest> {
  /**
   * Stores any comment that the user might add during this operation
   *
   * @generated from field: string user_comment = 1;
   */
  userComment = "";

  /**
   * Stores the family ID
   *
   * @generated from field: uint64 family_id = 10;
   */
  familyId = protoInt64.zero;

  /**
   * Stores the qc group ID
   *
   * @generated from field: uint64 qc_group_id = 11;
   */
  qcGroupId = protoInt64.zero;

  constructor(data?: PartialMessage<FamiliesServiceQCGroupCreateRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.FamiliesServiceQCGroupCreateRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "user_comment", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 10, name: "family_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 11, name: "qc_group_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): FamiliesServiceQCGroupCreateRequest {
    return new FamiliesServiceQCGroupCreateRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): FamiliesServiceQCGroupCreateRequest {
    return new FamiliesServiceQCGroupCreateRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): FamiliesServiceQCGroupCreateRequest {
    return new FamiliesServiceQCGroupCreateRequest().fromJsonString(jsonString, options);
  }

  static equals(a: FamiliesServiceQCGroupCreateRequest | PlainMessage<FamiliesServiceQCGroupCreateRequest> | undefined, b: FamiliesServiceQCGroupCreateRequest | PlainMessage<FamiliesServiceQCGroupCreateRequest> | undefined): boolean {
    return proto3.util.equals(FamiliesServiceQCGroupCreateRequest, a, b);
  }
}

/**
 *
 * Describes the parameters that constitute a family qc group
 *
 * @generated from message Scailo.FamilyQCGroup
 */
export class FamilyQCGroup extends Message<FamilyQCGroup> {
  /**
   * Stores a globally unique entity UUID. This will be set at the organization level
   *
   * @generated from field: string entity_uuid = 1;
   */
  entityUuid = "";

  /**
   * Stores the metadata of this family
   *
   * @generated from field: Scailo.EmployeeMetadata metadata = 2;
   */
  metadata?: EmployeeMetadata;

  /**
   * Stores the approval metadata
   *
   * @generated from field: Scailo.ApprovalMetadata approval_metadata = 3;
   */
  approvalMetadata?: ApprovalMetadata;

  /**
   * Denotes if this record requires approval (or has been approved)
   *
   * @generated from field: bool need_approval = 4;
   */
  needApproval = false;

  /**
   * Stores any comment that the user might have added during an operation
   *
   * @generated from field: string user_comment = 5;
   */
  userComment = "";

  /**
   * Stores the family ID
   *
   * @generated from field: uint64 family_id = 10;
   */
  familyId = protoInt64.zero;

  /**
   * Stores the qc group ID
   *
   * @generated from field: uint64 qc_group_id = 11;
   */
  qcGroupId = protoInt64.zero;

  constructor(data?: PartialMessage<FamilyQCGroup>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.FamilyQCGroup";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "entity_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "metadata", kind: "message", T: EmployeeMetadata },
    { no: 3, name: "approval_metadata", kind: "message", T: ApprovalMetadata },
    { no: 4, name: "need_approval", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 5, name: "user_comment", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 10, name: "family_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 11, name: "qc_group_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): FamilyQCGroup {
    return new FamilyQCGroup().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): FamilyQCGroup {
    return new FamilyQCGroup().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): FamilyQCGroup {
    return new FamilyQCGroup().fromJsonString(jsonString, options);
  }

  static equals(a: FamilyQCGroup | PlainMessage<FamilyQCGroup> | undefined, b: FamilyQCGroup | PlainMessage<FamilyQCGroup> | undefined): boolean {
    return proto3.util.equals(FamilyQCGroup, a, b);
  }
}

/**
 *
 * Describes the message consisting of the list of family qc groups
 *
 * @generated from message Scailo.FamilyQCGroupsList
 */
export class FamilyQCGroupsList extends Message<FamilyQCGroupsList> {
  /**
   * List of records
   *
   * @generated from field: repeated Scailo.FamilyQCGroup list = 1;
   */
  list: FamilyQCGroup[] = [];

  constructor(data?: PartialMessage<FamilyQCGroupsList>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.FamilyQCGroupsList";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "list", kind: "message", T: FamilyQCGroup, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): FamilyQCGroupsList {
    return new FamilyQCGroupsList().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): FamilyQCGroupsList {
    return new FamilyQCGroupsList().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): FamilyQCGroupsList {
    return new FamilyQCGroupsList().fromJsonString(jsonString, options);
  }

  static equals(a: FamilyQCGroupsList | PlainMessage<FamilyQCGroupsList> | undefined, b: FamilyQCGroupsList | PlainMessage<FamilyQCGroupsList> | undefined): boolean {
    return proto3.util.equals(FamilyQCGroupsList, a, b);
  }
}

/**
 *
 * Describes the parameters necessary to adjust a family's price
 *
 * @generated from message Scailo.FamiliesServiceAdjustPriceRequest
 */
export class FamiliesServiceAdjustPriceRequest extends Message<FamiliesServiceAdjustPriceRequest> {
  /**
   * Stores any comment that the user might add during this operation
   *
   * @generated from field: string user_comment = 1;
   */
  userComment = "";

  /**
   * The UUID of the family
   *
   * @generated from field: string uuid = 10;
   */
  uuid = "";

  /**
   * Stores the unit price
   *
   * @generated from field: uint64 price = 26;
   */
  price = protoInt64.zero;

  constructor(data?: PartialMessage<FamiliesServiceAdjustPriceRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.FamiliesServiceAdjustPriceRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "user_comment", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 10, name: "uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 26, name: "price", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): FamiliesServiceAdjustPriceRequest {
    return new FamiliesServiceAdjustPriceRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): FamiliesServiceAdjustPriceRequest {
    return new FamiliesServiceAdjustPriceRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): FamiliesServiceAdjustPriceRequest {
    return new FamiliesServiceAdjustPriceRequest().fromJsonString(jsonString, options);
  }

  static equals(a: FamiliesServiceAdjustPriceRequest | PlainMessage<FamiliesServiceAdjustPriceRequest> | undefined, b: FamiliesServiceAdjustPriceRequest | PlainMessage<FamiliesServiceAdjustPriceRequest> | undefined): boolean {
    return proto3.util.equals(FamiliesServiceAdjustPriceRequest, a, b);
  }
}

