// @generated by protoc-gen-es v1.5.1 with parameter "target=ts"
// @generated from file production_indents.scailo.proto (package Scailo, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3, protoInt64 } from "@bufbuild/protobuf";
import { FormFieldDatum, FormFieldDatumCreateRequest } from "./forms_fields_data.scailo_pb.js";
import { ApprovalMetadata, BOOL_FILTER, EmployeeMetadata, LogbookLogConciseSLC, SORT_ORDER, STANDARD_LIFECYCLE_STATUS } from "./base.scailo_pb.js";

/**
 *
 * Stores all the possible production references from which a production indent can be added
 *
 * @generated from enum Scailo.PRODUCTION_INDENT_PRODUCTION_REF_FOR
 */
export enum PRODUCTION_INDENT_PRODUCTION_REF_FOR {
  /**
   * Used only in filters
   *
   * @generated from enum value: PRODUCTION_INDENT_PRODUCTION_REF_FOR_ANY_UNSPECIFIED = 0;
   */
  PRODUCTION_INDENT_PRODUCTION_REF_FOR_ANY_UNSPECIFIED = 0,

  /**
   * Denotes that the production indent is not associated to any production plan
   *
   * @generated from enum value: PRODUCTION_INDENT_PRODUCTION_REF_FOR_NONE = 1;
   */
  PRODUCTION_INDENT_PRODUCTION_REF_FOR_NONE = 1,

  /**
   * Denotes that the production indent is associated to a production plan
   *
   * @generated from enum value: PRODUCTION_INDENT_PRODUCTION_REF_FOR_PRODUCTION_PLAN = 2;
   */
  PRODUCTION_INDENT_PRODUCTION_REF_FOR_PRODUCTION_PLAN = 2,
}
// Retrieve enum metadata with: proto3.getEnumType(PRODUCTION_INDENT_PRODUCTION_REF_FOR)
proto3.util.setEnumType(PRODUCTION_INDENT_PRODUCTION_REF_FOR, "Scailo.PRODUCTION_INDENT_PRODUCTION_REF_FOR", [
  { no: 0, name: "PRODUCTION_INDENT_PRODUCTION_REF_FOR_ANY_UNSPECIFIED" },
  { no: 1, name: "PRODUCTION_INDENT_PRODUCTION_REF_FOR_NONE" },
  { no: 2, name: "PRODUCTION_INDENT_PRODUCTION_REF_FOR_PRODUCTION_PLAN" },
]);

/**
 *
 * Stores all the possible indent references from which a production indent can be added
 *
 * @generated from enum Scailo.PRODUCTION_INDENT_INDENT_REF_FOR
 */
export enum PRODUCTION_INDENT_INDENT_REF_FOR {
  /**
   * Used only in filters
   *
   * @generated from enum value: PRODUCTION_INDENT_INDENT_REF_FOR_ANY_UNSPECIFIED = 0;
   */
  PRODUCTION_INDENT_INDENT_REF_FOR_ANY_UNSPECIFIED = 0,

  /**
   * Denotes that the production indent is not associated to any indent
   *
   * @generated from enum value: PRODUCTION_INDENT_INDENT_REF_FOR_NONE = 1;
   */
  PRODUCTION_INDENT_INDENT_REF_FOR_NONE = 1,

  /**
   * Denotes that the indent is created on the basis of a family
   *
   * @generated from enum value: PRODUCTION_INDENT_INDENT_REF_FOR_FAMILY = 2;
   */
  PRODUCTION_INDENT_INDENT_REF_FOR_FAMILY = 2,

  /**
   * Denotes that the indent is created on the basis of a work order
   *
   * @generated from enum value: PRODUCTION_INDENT_INDENT_REF_FOR_WORK_ORDER = 3;
   */
  PRODUCTION_INDENT_INDENT_REF_FOR_WORK_ORDER = 3,
}
// Retrieve enum metadata with: proto3.getEnumType(PRODUCTION_INDENT_INDENT_REF_FOR)
proto3.util.setEnumType(PRODUCTION_INDENT_INDENT_REF_FOR, "Scailo.PRODUCTION_INDENT_INDENT_REF_FOR", [
  { no: 0, name: "PRODUCTION_INDENT_INDENT_REF_FOR_ANY_UNSPECIFIED" },
  { no: 1, name: "PRODUCTION_INDENT_INDENT_REF_FOR_NONE" },
  { no: 2, name: "PRODUCTION_INDENT_INDENT_REF_FOR_FAMILY" },
  { no: 3, name: "PRODUCTION_INDENT_INDENT_REF_FOR_WORK_ORDER" },
]);

/**
 *
 * Describes the available sort keys
 *
 * @generated from enum Scailo.PRODUCTION_INDENT_SORT_KEY
 */
export enum PRODUCTION_INDENT_SORT_KEY {
  /**
   * Fetch ordered results by id
   *
   * @generated from enum value: PRODUCTION_INDENT_SORT_KEY_ID_UNSPECIFIED = 0;
   */
  PRODUCTION_INDENT_SORT_KEY_ID_UNSPECIFIED = 0,

  /**
   * Fetch ordered results by the creation timestamp
   *
   * @generated from enum value: PRODUCTION_INDENT_SORT_KEY_CREATED_AT = 1;
   */
  PRODUCTION_INDENT_SORT_KEY_CREATED_AT = 1,

  /**
   * Fetch ordered results by the modified timestamp
   *
   * @generated from enum value: PRODUCTION_INDENT_SORT_KEY_MODIFIED_AT = 2;
   */
  PRODUCTION_INDENT_SORT_KEY_MODIFIED_AT = 2,

  /**
   * Fetch ordered results by the approved on timestamp
   *
   * @generated from enum value: PRODUCTION_INDENT_SORT_KEY_APPROVED_ON = 3;
   */
  PRODUCTION_INDENT_SORT_KEY_APPROVED_ON = 3,

  /**
   * Fetch ordered results by the approved by field
   *
   * @generated from enum value: PRODUCTION_INDENT_SORT_KEY_APPROVED_BY = 4;
   */
  PRODUCTION_INDENT_SORT_KEY_APPROVED_BY = 4,

  /**
   * Fetch ordered results by the approver's role ID
   *
   * @generated from enum value: PRODUCTION_INDENT_SORT_KEY_APPROVER_ROLE_ID = 5;
   */
  PRODUCTION_INDENT_SORT_KEY_APPROVER_ROLE_ID = 5,

  /**
   * Fetch ordered results by the approver's completed on timestamp
   *
   * @generated from enum value: PRODUCTION_INDENT_SORT_KEY_COMPLETED_ON = 6;
   */
  PRODUCTION_INDENT_SORT_KEY_COMPLETED_ON = 6,

  /**
   * Fetch ordered results by the reference ID
   *
   * @generated from enum value: PRODUCTION_INDENT_SORT_KEY_REFERENCE_ID = 10;
   */
  PRODUCTION_INDENT_SORT_KEY_REFERENCE_ID = 10,

  /**
   * Fetch ordered results by the final ref number
   *
   * @generated from enum value: PRODUCTION_INDENT_SORT_KEY_FINAL_REF_NUMBER = 11;
   */
  PRODUCTION_INDENT_SORT_KEY_FINAL_REF_NUMBER = 11,

  /**
   * Fetch ordered results by the location ID
   *
   * @generated from enum value: PRODUCTION_INDENT_SORT_KEY_LOCATION_ID = 12;
   */
  PRODUCTION_INDENT_SORT_KEY_LOCATION_ID = 12,
}
// Retrieve enum metadata with: proto3.getEnumType(PRODUCTION_INDENT_SORT_KEY)
proto3.util.setEnumType(PRODUCTION_INDENT_SORT_KEY, "Scailo.PRODUCTION_INDENT_SORT_KEY", [
  { no: 0, name: "PRODUCTION_INDENT_SORT_KEY_ID_UNSPECIFIED" },
  { no: 1, name: "PRODUCTION_INDENT_SORT_KEY_CREATED_AT" },
  { no: 2, name: "PRODUCTION_INDENT_SORT_KEY_MODIFIED_AT" },
  { no: 3, name: "PRODUCTION_INDENT_SORT_KEY_APPROVED_ON" },
  { no: 4, name: "PRODUCTION_INDENT_SORT_KEY_APPROVED_BY" },
  { no: 5, name: "PRODUCTION_INDENT_SORT_KEY_APPROVER_ROLE_ID" },
  { no: 6, name: "PRODUCTION_INDENT_SORT_KEY_COMPLETED_ON" },
  { no: 10, name: "PRODUCTION_INDENT_SORT_KEY_REFERENCE_ID" },
  { no: 11, name: "PRODUCTION_INDENT_SORT_KEY_FINAL_REF_NUMBER" },
  { no: 12, name: "PRODUCTION_INDENT_SORT_KEY_LOCATION_ID" },
]);

/**
 *
 * Describes the available sort keys
 *
 * @generated from enum Scailo.PRODUCTION_INDENT_ITEM_SORT_KEY
 */
export enum PRODUCTION_INDENT_ITEM_SORT_KEY {
  /**
   * Fetch results by id
   *
   * @generated from enum value: PRODUCTION_INDENT_ITEM_SORT_KEY_ID_UNSPECIFIED = 0;
   */
  PRODUCTION_INDENT_ITEM_SORT_KEY_ID_UNSPECIFIED = 0,

  /**
   * Fetch results by the creation timestamp
   *
   * @generated from enum value: PRODUCTION_INDENT_ITEM_SORT_KEY_CREATED_AT = 1;
   */
  PRODUCTION_INDENT_ITEM_SORT_KEY_CREATED_AT = 1,

  /**
   * Fetch results by the modified timestamp
   *
   * @generated from enum value: PRODUCTION_INDENT_ITEM_SORT_KEY_MODIFIED_AT = 2;
   */
  PRODUCTION_INDENT_ITEM_SORT_KEY_MODIFIED_AT = 2,

  /**
   * Fetch results by the approved on timestamp
   *
   * @generated from enum value: PRODUCTION_INDENT_ITEM_SORT_KEY_APPROVED_ON = 3;
   */
  PRODUCTION_INDENT_ITEM_SORT_KEY_APPROVED_ON = 3,

  /**
   * Fetch results by the approved by field
   *
   * @generated from enum value: PRODUCTION_INDENT_ITEM_SORT_KEY_APPROVED_BY = 4;
   */
  PRODUCTION_INDENT_ITEM_SORT_KEY_APPROVED_BY = 4,

  /**
   * Fetch results by the approver's role ID
   *
   * @generated from enum value: PRODUCTION_INDENT_ITEM_SORT_KEY_APPROVER_ROLE_ID = 5;
   */
  PRODUCTION_INDENT_ITEM_SORT_KEY_APPROVER_ROLE_ID = 5,

  /**
   * Fetch results by the family ID
   *
   * @generated from enum value: PRODUCTION_INDENT_ITEM_SORT_KEY_FAMILY_ID = 10;
   */
  PRODUCTION_INDENT_ITEM_SORT_KEY_FAMILY_ID = 10,

  /**
   * Fetch results by the internal quantity
   *
   * @generated from enum value: PRODUCTION_INDENT_ITEM_SORT_KEY_INTERNAL_QUANTITY = 11;
   */
  PRODUCTION_INDENT_ITEM_SORT_KEY_INTERNAL_QUANTITY = 11,
}
// Retrieve enum metadata with: proto3.getEnumType(PRODUCTION_INDENT_ITEM_SORT_KEY)
proto3.util.setEnumType(PRODUCTION_INDENT_ITEM_SORT_KEY, "Scailo.PRODUCTION_INDENT_ITEM_SORT_KEY", [
  { no: 0, name: "PRODUCTION_INDENT_ITEM_SORT_KEY_ID_UNSPECIFIED" },
  { no: 1, name: "PRODUCTION_INDENT_ITEM_SORT_KEY_CREATED_AT" },
  { no: 2, name: "PRODUCTION_INDENT_ITEM_SORT_KEY_MODIFIED_AT" },
  { no: 3, name: "PRODUCTION_INDENT_ITEM_SORT_KEY_APPROVED_ON" },
  { no: 4, name: "PRODUCTION_INDENT_ITEM_SORT_KEY_APPROVED_BY" },
  { no: 5, name: "PRODUCTION_INDENT_ITEM_SORT_KEY_APPROVER_ROLE_ID" },
  { no: 10, name: "PRODUCTION_INDENT_ITEM_SORT_KEY_FAMILY_ID" },
  { no: 11, name: "PRODUCTION_INDENT_ITEM_SORT_KEY_INTERNAL_QUANTITY" },
]);

/**
 *
 * Describes the applicable statuses of production indent items
 *
 * @generated from enum Scailo.PRODUCTION_INDENT_ITEM_STATUS
 */
export enum PRODUCTION_INDENT_ITEM_STATUS {
  /**
   * Denotes that status be disregarded. This is used only within search APIs
   *
   * @generated from enum value: PRODUCTION_INDENT_ITEM_STATUS_ANY_UNSPECIFIED = 0;
   */
  PRODUCTION_INDENT_ITEM_STATUS_ANY_UNSPECIFIED = 0,

  /**
   * Denotes that the production indent items must have been approved
   *
   * @generated from enum value: PRODUCTION_INDENT_ITEM_STATUS_APPROVED = 1;
   */
  PRODUCTION_INDENT_ITEM_STATUS_APPROVED = 1,

  /**
   * Denotes that the production indent items must be waiting for approval
   *
   * @generated from enum value: PRODUCTION_INDENT_ITEM_STATUS_UNAPPROVED = 2;
   */
  PRODUCTION_INDENT_ITEM_STATUS_UNAPPROVED = 2,
}
// Retrieve enum metadata with: proto3.getEnumType(PRODUCTION_INDENT_ITEM_STATUS)
proto3.util.setEnumType(PRODUCTION_INDENT_ITEM_STATUS, "Scailo.PRODUCTION_INDENT_ITEM_STATUS", [
  { no: 0, name: "PRODUCTION_INDENT_ITEM_STATUS_ANY_UNSPECIFIED" },
  { no: 1, name: "PRODUCTION_INDENT_ITEM_STATUS_APPROVED" },
  { no: 2, name: "PRODUCTION_INDENT_ITEM_STATUS_UNAPPROVED" },
]);

/**
 *
 * Describes the parameters necessary to create a record
 *
 * @generated from message Scailo.ProductionIndentsServiceCreateRequest
 */
export class ProductionIndentsServiceCreateRequest extends Message<ProductionIndentsServiceCreateRequest> {
  /**
   * Stores a globally unique entity UUID. This will be set at the organization level
   *
   * @generated from field: string entity_uuid = 1;
   */
  entityUuid = "";

  /**
   * Stores any comment that the user might add during this operation
   *
   * @generated from field: string user_comment = 2;
   */
  userComment = "";

  /**
   * The associated vault folder ID
   *
   * @generated from field: uint64 vault_folder_id = 9;
   */
  vaultFolderId = protoInt64.zero;

  /**
   * The reference ID of the production indent
   *
   * @generated from field: string reference_id = 10;
   */
  referenceId = "";

  /**
   * The ID of the location
   *
   * @generated from field: uint64 location_id = 14;
   */
  locationId = protoInt64.zero;

  /**
   * The username of the supervisor
   *
   * @generated from field: string supervisor = 15;
   */
  supervisor = "";

  /**
   * Stores if the indent is associated to a production plan
   *
   * @generated from field: Scailo.PRODUCTION_INDENT_PRODUCTION_REF_FOR production_ref_for = 16;
   */
  productionRefFor = PRODUCTION_INDENT_PRODUCTION_REF_FOR.PRODUCTION_INDENT_PRODUCTION_REF_FOR_ANY_UNSPECIFIED;

  /**
   * Stores the production plan ID if production_ref_for is production-plan
   *
   * @generated from field: uint64 production_ref_id = 17;
   */
  productionRefId = protoInt64.zero;

  /**
   * Stores if the indent should be created on the basis of a work order or a family
   *
   * @generated from field: Scailo.PRODUCTION_INDENT_INDENT_REF_FOR indent_ref_for = 18;
   */
  indentRefFor = PRODUCTION_INDENT_INDENT_REF_FOR.PRODUCTION_INDENT_INDENT_REF_FOR_ANY_UNSPECIFIED;

  /**
   * Stores the ID of the associated family or work order
   *
   * @generated from field: uint64 indent_ref_id = 19;
   */
  indentRefId = protoInt64.zero;

  /**
   * The list of dynamic forms
   *
   * @generated from field: repeated Scailo.FormFieldDatumCreateRequest form_data = 30;
   */
  formData: FormFieldDatumCreateRequest[] = [];

  constructor(data?: PartialMessage<ProductionIndentsServiceCreateRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.ProductionIndentsServiceCreateRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "entity_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "user_comment", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 9, name: "vault_folder_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 10, name: "reference_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 14, name: "location_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 15, name: "supervisor", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 16, name: "production_ref_for", kind: "enum", T: proto3.getEnumType(PRODUCTION_INDENT_PRODUCTION_REF_FOR) },
    { no: 17, name: "production_ref_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 18, name: "indent_ref_for", kind: "enum", T: proto3.getEnumType(PRODUCTION_INDENT_INDENT_REF_FOR) },
    { no: 19, name: "indent_ref_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 30, name: "form_data", kind: "message", T: FormFieldDatumCreateRequest, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ProductionIndentsServiceCreateRequest {
    return new ProductionIndentsServiceCreateRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ProductionIndentsServiceCreateRequest {
    return new ProductionIndentsServiceCreateRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ProductionIndentsServiceCreateRequest {
    return new ProductionIndentsServiceCreateRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ProductionIndentsServiceCreateRequest | PlainMessage<ProductionIndentsServiceCreateRequest> | undefined, b: ProductionIndentsServiceCreateRequest | PlainMessage<ProductionIndentsServiceCreateRequest> | undefined): boolean {
    return proto3.util.equals(ProductionIndentsServiceCreateRequest, a, b);
  }
}

/**
 *
 * Describes the parameters necessary to update a record
 *
 * @generated from message Scailo.ProductionIndentsServiceUpdateRequest
 */
export class ProductionIndentsServiceUpdateRequest extends Message<ProductionIndentsServiceUpdateRequest> {
  /**
   * Stores any comment that the user might add during this operation
   *
   * @generated from field: string user_comment = 1;
   */
  userComment = "";

  /**
   * The ID of the record that needs to be updated
   *
   * @generated from field: uint64 id = 2;
   */
  id = protoInt64.zero;

  /**
   * Optional boolean value that stores if a notification needs to be sent to users about the update to the record. This is useful when a subsequent operation needs to be performed immediately (such as send to verification after updating the revision)
   *
   * @generated from field: bool notify_users = 3;
   */
  notifyUsers = false;

  /**
   * The associated vault folder ID
   *
   * @generated from field: uint64 vault_folder_id = 9;
   */
  vaultFolderId = protoInt64.zero;

  /**
   * The reference ID of the production indent
   *
   * @generated from field: string reference_id = 10;
   */
  referenceId = "";

  /**
   * The username of the supervisor
   *
   * @generated from field: string supervisor = 15;
   */
  supervisor = "";

  /**
   * The list of dynamic forms
   *
   * @generated from field: repeated Scailo.FormFieldDatumCreateRequest form_data = 30;
   */
  formData: FormFieldDatumCreateRequest[] = [];

  constructor(data?: PartialMessage<ProductionIndentsServiceUpdateRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.ProductionIndentsServiceUpdateRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "user_comment", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 3, name: "notify_users", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 9, name: "vault_folder_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 10, name: "reference_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 15, name: "supervisor", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 30, name: "form_data", kind: "message", T: FormFieldDatumCreateRequest, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ProductionIndentsServiceUpdateRequest {
    return new ProductionIndentsServiceUpdateRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ProductionIndentsServiceUpdateRequest {
    return new ProductionIndentsServiceUpdateRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ProductionIndentsServiceUpdateRequest {
    return new ProductionIndentsServiceUpdateRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ProductionIndentsServiceUpdateRequest | PlainMessage<ProductionIndentsServiceUpdateRequest> | undefined, b: ProductionIndentsServiceUpdateRequest | PlainMessage<ProductionIndentsServiceUpdateRequest> | undefined): boolean {
    return proto3.util.equals(ProductionIndentsServiceUpdateRequest, a, b);
  }
}

/**
 *
 * Describes the parameters necessary to perform an autofill request
 *
 * @generated from message Scailo.ProductionIndentsServiceAutofillRequest
 */
export class ProductionIndentsServiceAutofillRequest extends Message<ProductionIndentsServiceAutofillRequest> {
  /**
   * Stores any comment that the user might add during this operation
   *
   * @generated from field: string user_comment = 1;
   */
  userComment = "";

  /**
   * The UUID of the record that needs to be updated
   *
   * @generated from field: string uuid = 2;
   */
  uuid = "";

  /**
   * Denotes if all the equation dependencies (if applicable) should also be automatically added to the production indent
   *
   * @generated from field: bool populate_using_equation_dependencies = 3;
   */
  populateUsingEquationDependencies = false;

  constructor(data?: PartialMessage<ProductionIndentsServiceAutofillRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.ProductionIndentsServiceAutofillRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "user_comment", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "populate_using_equation_dependencies", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ProductionIndentsServiceAutofillRequest {
    return new ProductionIndentsServiceAutofillRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ProductionIndentsServiceAutofillRequest {
    return new ProductionIndentsServiceAutofillRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ProductionIndentsServiceAutofillRequest {
    return new ProductionIndentsServiceAutofillRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ProductionIndentsServiceAutofillRequest | PlainMessage<ProductionIndentsServiceAutofillRequest> | undefined, b: ProductionIndentsServiceAutofillRequest | PlainMessage<ProductionIndentsServiceAutofillRequest> | undefined): boolean {
    return proto3.util.equals(ProductionIndentsServiceAutofillRequest, a, b);
  }
}

/**
 *
 * Describes the parameters that are part of a standard response
 *
 * @generated from message Scailo.ProductionIndent
 */
export class ProductionIndent extends Message<ProductionIndent> {
  /**
   * Stores a globally unique entity UUID. This will be set at the organization level
   *
   * @generated from field: string entity_uuid = 1;
   */
  entityUuid = "";

  /**
   * Stores the metadata of this production indent
   *
   * @generated from field: Scailo.EmployeeMetadata metadata = 2;
   */
  metadata?: EmployeeMetadata;

  /**
   * Stores the approval metadata
   *
   * @generated from field: Scailo.ApprovalMetadata approval_metadata = 3;
   */
  approvalMetadata?: ApprovalMetadata;

  /**
   * The status of this production indent
   *
   * @generated from field: Scailo.STANDARD_LIFECYCLE_STATUS status = 4;
   */
  status = STANDARD_LIFECYCLE_STATUS.ANY_UNSPECIFIED;

  /**
   * Stores the logs of every operation performed on this production indent
   *
   * @generated from field: repeated Scailo.LogbookLogConciseSLC logs = 5;
   */
  logs: LogbookLogConciseSLC[] = [];

  /**
   * The timestamp of when this production indent was marked as completed
   *
   * @generated from field: uint64 completed_on = 6;
   */
  completedOn = protoInt64.zero;

  /**
   * The associated vault folder ID
   *
   * @generated from field: uint64 vault_folder_id = 9;
   */
  vaultFolderId = protoInt64.zero;

  /**
   * The reference ID of the production indent
   *
   * @generated from field: string reference_id = 10;
   */
  referenceId = "";

  /**
   * The unique reference number that has been automatically generated
   *
   * @generated from field: string final_ref_number = 11;
   */
  finalRefNumber = "";

  /**
   * The ID of the location
   *
   * @generated from field: uint64 location_id = 14;
   */
  locationId = protoInt64.zero;

  /**
   * The username of the supervisor
   *
   * @generated from field: string supervisor = 15;
   */
  supervisor = "";

  /**
   * Stores if the indent is associated to a production plan
   *
   * @generated from field: Scailo.PRODUCTION_INDENT_PRODUCTION_REF_FOR production_ref_for = 16;
   */
  productionRefFor = PRODUCTION_INDENT_PRODUCTION_REF_FOR.PRODUCTION_INDENT_PRODUCTION_REF_FOR_ANY_UNSPECIFIED;

  /**
   * Stores the production plan ID if production_ref_for is production-plan
   *
   * @generated from field: uint64 production_ref_id = 17;
   */
  productionRefId = protoInt64.zero;

  /**
   * Stores if the indent should be created on the basis of a work order or a family
   *
   * @generated from field: Scailo.PRODUCTION_INDENT_INDENT_REF_FOR indent_ref_for = 18;
   */
  indentRefFor = PRODUCTION_INDENT_INDENT_REF_FOR.PRODUCTION_INDENT_INDENT_REF_FOR_ANY_UNSPECIFIED;

  /**
   * Stores the ID of the associated family or work order
   *
   * @generated from field: uint64 indent_ref_id = 19;
   */
  indentRefId = protoInt64.zero;

  /**
   * The list of associated production indent items
   *
   * @generated from field: repeated Scailo.ProductionIndentItem list = 30;
   */
  list: ProductionIndentItem[] = [];

  /**
   * The list of dynamic forms
   *
   * @generated from field: repeated Scailo.FormFieldDatum form_data = 40;
   */
  formData: FormFieldDatum[] = [];

  constructor(data?: PartialMessage<ProductionIndent>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.ProductionIndent";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "entity_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "metadata", kind: "message", T: EmployeeMetadata },
    { no: 3, name: "approval_metadata", kind: "message", T: ApprovalMetadata },
    { no: 4, name: "status", kind: "enum", T: proto3.getEnumType(STANDARD_LIFECYCLE_STATUS) },
    { no: 5, name: "logs", kind: "message", T: LogbookLogConciseSLC, repeated: true },
    { no: 6, name: "completed_on", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 9, name: "vault_folder_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 10, name: "reference_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 11, name: "final_ref_number", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 14, name: "location_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 15, name: "supervisor", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 16, name: "production_ref_for", kind: "enum", T: proto3.getEnumType(PRODUCTION_INDENT_PRODUCTION_REF_FOR) },
    { no: 17, name: "production_ref_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 18, name: "indent_ref_for", kind: "enum", T: proto3.getEnumType(PRODUCTION_INDENT_INDENT_REF_FOR) },
    { no: 19, name: "indent_ref_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 30, name: "list", kind: "message", T: ProductionIndentItem, repeated: true },
    { no: 40, name: "form_data", kind: "message", T: FormFieldDatum, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ProductionIndent {
    return new ProductionIndent().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ProductionIndent {
    return new ProductionIndent().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ProductionIndent {
    return new ProductionIndent().fromJsonString(jsonString, options);
  }

  static equals(a: ProductionIndent | PlainMessage<ProductionIndent> | undefined, b: ProductionIndent | PlainMessage<ProductionIndent> | undefined): boolean {
    return proto3.util.equals(ProductionIndent, a, b);
  }
}

/**
 *
 * Describes the parameters required to add an item to a production indent
 *
 * @generated from message Scailo.ProductionIndentsServiceItemCreateRequest
 */
export class ProductionIndentsServiceItemCreateRequest extends Message<ProductionIndentsServiceItemCreateRequest> {
  /**
   * Stores any comment that the user might add during this operation
   *
   * @generated from field: string user_comment = 1;
   */
  userComment = "";

  /**
   * Stores the production indent ID
   *
   * @generated from field: uint64 production_indent_id = 10;
   */
  productionIndentId = protoInt64.zero;

  /**
   * Stores the family ID
   *
   * @generated from field: uint64 family_id = 11;
   */
  familyId = protoInt64.zero;

  /**
   * The quantity required
   *
   * @generated from field: uint64 internal_quantity = 12;
   */
  internalQuantity = protoInt64.zero;

  constructor(data?: PartialMessage<ProductionIndentsServiceItemCreateRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.ProductionIndentsServiceItemCreateRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "user_comment", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 10, name: "production_indent_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 11, name: "family_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 12, name: "internal_quantity", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ProductionIndentsServiceItemCreateRequest {
    return new ProductionIndentsServiceItemCreateRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ProductionIndentsServiceItemCreateRequest {
    return new ProductionIndentsServiceItemCreateRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ProductionIndentsServiceItemCreateRequest {
    return new ProductionIndentsServiceItemCreateRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ProductionIndentsServiceItemCreateRequest | PlainMessage<ProductionIndentsServiceItemCreateRequest> | undefined, b: ProductionIndentsServiceItemCreateRequest | PlainMessage<ProductionIndentsServiceItemCreateRequest> | undefined): boolean {
    return proto3.util.equals(ProductionIndentsServiceItemCreateRequest, a, b);
  }
}

/**
 *
 * Describes the parameters required to update an item in a production indent
 *
 * @generated from message Scailo.ProductionIndentsServiceItemUpdateRequest
 */
export class ProductionIndentsServiceItemUpdateRequest extends Message<ProductionIndentsServiceItemUpdateRequest> {
  /**
   * Stores any comment that the user might add during this operation
   *
   * @generated from field: string user_comment = 1;
   */
  userComment = "";

  /**
   * The ID of the record
   *
   * @generated from field: uint64 id = 2;
   */
  id = protoInt64.zero;

  /**
   * The quantity required
   *
   * @generated from field: uint64 internal_quantity = 12;
   */
  internalQuantity = protoInt64.zero;

  constructor(data?: PartialMessage<ProductionIndentsServiceItemUpdateRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.ProductionIndentsServiceItemUpdateRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "user_comment", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 12, name: "internal_quantity", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ProductionIndentsServiceItemUpdateRequest {
    return new ProductionIndentsServiceItemUpdateRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ProductionIndentsServiceItemUpdateRequest {
    return new ProductionIndentsServiceItemUpdateRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ProductionIndentsServiceItemUpdateRequest {
    return new ProductionIndentsServiceItemUpdateRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ProductionIndentsServiceItemUpdateRequest | PlainMessage<ProductionIndentsServiceItemUpdateRequest> | undefined, b: ProductionIndentsServiceItemUpdateRequest | PlainMessage<ProductionIndentsServiceItemUpdateRequest> | undefined): boolean {
    return proto3.util.equals(ProductionIndentsServiceItemUpdateRequest, a, b);
  }
}

/**
 *
 * Describes the parameters that constitute an item associated to a production indent
 *
 * @generated from message Scailo.ProductionIndentItem
 */
export class ProductionIndentItem extends Message<ProductionIndentItem> {
  /**
   * Stores a globally unique entity UUID. This will be set at the organization level
   *
   * @generated from field: string entity_uuid = 1;
   */
  entityUuid = "";

  /**
   * Stores the metadata of this production indent
   *
   * @generated from field: Scailo.EmployeeMetadata metadata = 2;
   */
  metadata?: EmployeeMetadata;

  /**
   * Stores the approval metadata
   *
   * @generated from field: Scailo.ApprovalMetadata approval_metadata = 3;
   */
  approvalMetadata?: ApprovalMetadata;

  /**
   * Denotes if this record requires approval (or has been approved)
   *
   * @generated from field: bool need_approval = 4;
   */
  needApproval = false;

  /**
   * Stores any comment that the user might have added during an operation
   *
   * @generated from field: string user_comment = 5;
   */
  userComment = "";

  /**
   * Stores the production indent ID
   *
   * @generated from field: uint64 production_indent_id = 10;
   */
  productionIndentId = protoInt64.zero;

  /**
   * Stores the family ID
   *
   * @generated from field: uint64 family_id = 11;
   */
  familyId = protoInt64.zero;

  /**
   * The quantity required
   *
   * @generated from field: uint64 internal_quantity = 12;
   */
  internalQuantity = protoInt64.zero;

  constructor(data?: PartialMessage<ProductionIndentItem>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.ProductionIndentItem";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "entity_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "metadata", kind: "message", T: EmployeeMetadata },
    { no: 3, name: "approval_metadata", kind: "message", T: ApprovalMetadata },
    { no: 4, name: "need_approval", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 5, name: "user_comment", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 10, name: "production_indent_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 11, name: "family_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 12, name: "internal_quantity", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ProductionIndentItem {
    return new ProductionIndentItem().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ProductionIndentItem {
    return new ProductionIndentItem().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ProductionIndentItem {
    return new ProductionIndentItem().fromJsonString(jsonString, options);
  }

  static equals(a: ProductionIndentItem | PlainMessage<ProductionIndentItem> | undefined, b: ProductionIndentItem | PlainMessage<ProductionIndentItem> | undefined): boolean {
    return proto3.util.equals(ProductionIndentItem, a, b);
  }
}

/**
 *
 * Describes the message consisting of the list of production indents
 *
 * @generated from message Scailo.ProductionIndentsList
 */
export class ProductionIndentsList extends Message<ProductionIndentsList> {
  /**
   * List of records
   *
   * @generated from field: repeated Scailo.ProductionIndent list = 1;
   */
  list: ProductionIndent[] = [];

  constructor(data?: PartialMessage<ProductionIndentsList>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.ProductionIndentsList";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "list", kind: "message", T: ProductionIndent, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ProductionIndentsList {
    return new ProductionIndentsList().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ProductionIndentsList {
    return new ProductionIndentsList().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ProductionIndentsList {
    return new ProductionIndentsList().fromJsonString(jsonString, options);
  }

  static equals(a: ProductionIndentsList | PlainMessage<ProductionIndentsList> | undefined, b: ProductionIndentsList | PlainMessage<ProductionIndentsList> | undefined): boolean {
    return proto3.util.equals(ProductionIndentsList, a, b);
  }
}

/**
 *
 * Describes the message consisting of the list of production indent items
 *
 * @generated from message Scailo.ProductionIndentsItemsList
 */
export class ProductionIndentsItemsList extends Message<ProductionIndentsItemsList> {
  /**
   * List of records
   *
   * @generated from field: repeated Scailo.ProductionIndentItem list = 1;
   */
  list: ProductionIndentItem[] = [];

  constructor(data?: PartialMessage<ProductionIndentsItemsList>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.ProductionIndentsItemsList";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "list", kind: "message", T: ProductionIndentItem, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ProductionIndentsItemsList {
    return new ProductionIndentsItemsList().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ProductionIndentsItemsList {
    return new ProductionIndentsItemsList().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ProductionIndentsItemsList {
    return new ProductionIndentsItemsList().fromJsonString(jsonString, options);
  }

  static equals(a: ProductionIndentsItemsList | PlainMessage<ProductionIndentsItemsList> | undefined, b: ProductionIndentsItemsList | PlainMessage<ProductionIndentsItemsList> | undefined): boolean {
    return proto3.util.equals(ProductionIndentsItemsList, a, b);
  }
}

/**
 *
 * Describes the parameters that are required to retrieve the history of the record
 *
 * @generated from message Scailo.ProductionIndentItemHistoryRequest
 */
export class ProductionIndentItemHistoryRequest extends Message<ProductionIndentItemHistoryRequest> {
  /**
   * Stores the production indent ID
   *
   * @generated from field: uint64 production_indent_id = 10;
   */
  productionIndentId = protoInt64.zero;

  /**
   * Stores the family ID
   *
   * @generated from field: uint64 family_id = 11;
   */
  familyId = protoInt64.zero;

  constructor(data?: PartialMessage<ProductionIndentItemHistoryRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.ProductionIndentItemHistoryRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 10, name: "production_indent_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 11, name: "family_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ProductionIndentItemHistoryRequest {
    return new ProductionIndentItemHistoryRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ProductionIndentItemHistoryRequest {
    return new ProductionIndentItemHistoryRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ProductionIndentItemHistoryRequest {
    return new ProductionIndentItemHistoryRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ProductionIndentItemHistoryRequest | PlainMessage<ProductionIndentItemHistoryRequest> | undefined, b: ProductionIndentItemHistoryRequest | PlainMessage<ProductionIndentItemHistoryRequest> | undefined): boolean {
    return proto3.util.equals(ProductionIndentItemHistoryRequest, a, b);
  }
}

/**
 *
 * Describes the parameters that are required to retrieve the info of a prospective production indent item
 *
 * @generated from message Scailo.ProductionIndentItemProspectiveInfoRequest
 */
export class ProductionIndentItemProspectiveInfoRequest extends Message<ProductionIndentItemProspectiveInfoRequest> {
  /**
   * Stores the production indent ID
   *
   * @generated from field: uint64 production_indent_id = 10;
   */
  productionIndentId = protoInt64.zero;

  /**
   * Stores the family ID
   *
   * @generated from field: uint64 family_id = 11;
   */
  familyId = protoInt64.zero;

  constructor(data?: PartialMessage<ProductionIndentItemProspectiveInfoRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.ProductionIndentItemProspectiveInfoRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 10, name: "production_indent_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 11, name: "family_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ProductionIndentItemProspectiveInfoRequest {
    return new ProductionIndentItemProspectiveInfoRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ProductionIndentItemProspectiveInfoRequest {
    return new ProductionIndentItemProspectiveInfoRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ProductionIndentItemProspectiveInfoRequest {
    return new ProductionIndentItemProspectiveInfoRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ProductionIndentItemProspectiveInfoRequest | PlainMessage<ProductionIndentItemProspectiveInfoRequest> | undefined, b: ProductionIndentItemProspectiveInfoRequest | PlainMessage<ProductionIndentItemProspectiveInfoRequest> | undefined): boolean {
    return proto3.util.equals(ProductionIndentItemProspectiveInfoRequest, a, b);
  }
}

/**
 *
 * Describes a pagination request to retrieve records
 *
 * @generated from message Scailo.ProductionIndentsServicePaginationReq
 */
export class ProductionIndentsServicePaginationReq extends Message<ProductionIndentsServicePaginationReq> {
  /**
   * If true, then returns only active records. If false, then returns only inactive records
   *
   * @generated from field: Scailo.BOOL_FILTER is_active = 1;
   */
  isActive = BOOL_FILTER.BOOL_FILTER_ANY_UNSPECIFIED;

  /**
   * The number of records that need to be sent in the response
   *
   * @generated from field: int64 count = 2;
   */
  count = protoInt64.zero;

  /**
   * The number that need to be offset by before fetching the records
   *
   * @generated from field: uint64 offset = 3;
   */
  offset = protoInt64.zero;

  /**
   * The sort order that is to be used to fetch the pagination response
   *
   * @generated from field: Scailo.SORT_ORDER sort_order = 4;
   */
  sortOrder = SORT_ORDER.ASCENDING_UNSPECIFIED;

  /**
   * The sort key that is to be used to fetch the pagination response
   *
   * @generated from field: Scailo.PRODUCTION_INDENT_SORT_KEY sort_key = 5;
   */
  sortKey = PRODUCTION_INDENT_SORT_KEY.PRODUCTION_INDENT_SORT_KEY_ID_UNSPECIFIED;

  /**
   * The status of this production indent
   *
   * @generated from field: Scailo.STANDARD_LIFECYCLE_STATUS status = 6;
   */
  status = STANDARD_LIFECYCLE_STATUS.ANY_UNSPECIFIED;

  constructor(data?: PartialMessage<ProductionIndentsServicePaginationReq>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.ProductionIndentsServicePaginationReq";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "is_active", kind: "enum", T: proto3.getEnumType(BOOL_FILTER) },
    { no: 2, name: "count", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "offset", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 4, name: "sort_order", kind: "enum", T: proto3.getEnumType(SORT_ORDER) },
    { no: 5, name: "sort_key", kind: "enum", T: proto3.getEnumType(PRODUCTION_INDENT_SORT_KEY) },
    { no: 6, name: "status", kind: "enum", T: proto3.getEnumType(STANDARD_LIFECYCLE_STATUS) },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ProductionIndentsServicePaginationReq {
    return new ProductionIndentsServicePaginationReq().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ProductionIndentsServicePaginationReq {
    return new ProductionIndentsServicePaginationReq().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ProductionIndentsServicePaginationReq {
    return new ProductionIndentsServicePaginationReq().fromJsonString(jsonString, options);
  }

  static equals(a: ProductionIndentsServicePaginationReq | PlainMessage<ProductionIndentsServicePaginationReq> | undefined, b: ProductionIndentsServicePaginationReq | PlainMessage<ProductionIndentsServicePaginationReq> | undefined): boolean {
    return proto3.util.equals(ProductionIndentsServicePaginationReq, a, b);
  }
}

/**
 *
 * Describes the response to a pagination request
 *
 * @generated from message Scailo.ProductionIndentsServicePaginationResponse
 */
export class ProductionIndentsServicePaginationResponse extends Message<ProductionIndentsServicePaginationResponse> {
  /**
   * The number of records in this payload
   *
   * @generated from field: uint64 count = 1;
   */
  count = protoInt64.zero;

  /**
   * The number that has been offset before fetching the records. This is the same value that has been sent as part of the pagination request
   *
   * @generated from field: uint64 offset = 2;
   */
  offset = protoInt64.zero;

  /**
   * The total number of records that are available
   *
   * @generated from field: uint64 total = 3;
   */
  total = protoInt64.zero;

  /**
   * The list of records
   *
   * @generated from field: repeated Scailo.ProductionIndent payload = 4;
   */
  payload: ProductionIndent[] = [];

  constructor(data?: PartialMessage<ProductionIndentsServicePaginationResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.ProductionIndentsServicePaginationResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "count", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 2, name: "offset", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 3, name: "total", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 4, name: "payload", kind: "message", T: ProductionIndent, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ProductionIndentsServicePaginationResponse {
    return new ProductionIndentsServicePaginationResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ProductionIndentsServicePaginationResponse {
    return new ProductionIndentsServicePaginationResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ProductionIndentsServicePaginationResponse {
    return new ProductionIndentsServicePaginationResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ProductionIndentsServicePaginationResponse | PlainMessage<ProductionIndentsServicePaginationResponse> | undefined, b: ProductionIndentsServicePaginationResponse | PlainMessage<ProductionIndentsServicePaginationResponse> | undefined): boolean {
    return proto3.util.equals(ProductionIndentsServicePaginationResponse, a, b);
  }
}

/**
 *
 * Describes the base request payload of a filter search
 *
 * @generated from message Scailo.ProductionIndentsServiceFilterReq
 */
export class ProductionIndentsServiceFilterReq extends Message<ProductionIndentsServiceFilterReq> {
  /**
   * If true, then returns only active records. If false, then returns only inactive records
   *
   * @generated from field: Scailo.BOOL_FILTER is_active = 1;
   */
  isActive = BOOL_FILTER.BOOL_FILTER_ANY_UNSPECIFIED;

  /**
   * The number of records that need to be sent in the response. Returns all records if it is set to -1
   *
   * @generated from field: int64 count = 2;
   */
  count = protoInt64.zero;

  /**
   * The number that need to be offset by before fetching the records
   *
   * @generated from field: uint64 offset = 3;
   */
  offset = protoInt64.zero;

  /**
   * The sort order that is to be used to fetch the pagination response
   *
   * @generated from field: Scailo.SORT_ORDER sort_order = 4;
   */
  sortOrder = SORT_ORDER.ASCENDING_UNSPECIFIED;

  /**
   * The sort key that is to be used to fetch the pagination response
   *
   * @generated from field: Scailo.PRODUCTION_INDENT_SORT_KEY sort_key = 5;
   */
  sortKey = PRODUCTION_INDENT_SORT_KEY.PRODUCTION_INDENT_SORT_KEY_ID_UNSPECIFIED;

  /**
   * The minimum timestamp that needs to be considered to filter by creation
   *
   * @generated from field: uint64 creation_timestamp_start = 101;
   */
  creationTimestampStart = protoInt64.zero;

  /**
   * The maximum timestamp that needs to be considered to filter by creation
   *
   * @generated from field: uint64 creation_timestamp_end = 102;
   */
  creationTimestampEnd = protoInt64.zero;

  /**
   * The minimum timestamp that needs to be considered to filter by modification
   *
   * @generated from field: uint64 modification_timestamp_start = 103;
   */
  modificationTimestampStart = protoInt64.zero;

  /**
   * The maximum timestamp that needs to be considered to filter by modification
   *
   * @generated from field: uint64 modification_timestamp_end = 104;
   */
  modificationTimestampEnd = protoInt64.zero;

  /**
   * The entity UUID that is to be used to filter records
   *
   * @generated from field: string entity_uuid = 8;
   */
  entityUuid = "";

  /**
   * The status of this production indent
   *
   * @generated from field: Scailo.STANDARD_LIFECYCLE_STATUS status = 10;
   */
  status = STANDARD_LIFECYCLE_STATUS.ANY_UNSPECIFIED;

  /**
   * The start range of approved timestamp
   *
   * @generated from field: uint64 approved_on_start = 11;
   */
  approvedOnStart = protoInt64.zero;

  /**
   * The end range of approved timestamp
   *
   * @generated from field: uint64 approved_on_end = 12;
   */
  approvedOnEnd = protoInt64.zero;

  /**
   * The ID of the approver
   *
   * @generated from field: uint64 approved_by_user_id = 13;
   */
  approvedByUserId = protoInt64.zero;

  /**
   * The role ID of the approver
   *
   * @generated from field: uint64 approver_role_id = 14;
   */
  approverRoleId = protoInt64.zero;

  /**
   * The start range of completed timestamp
   *
   * @generated from field: uint64 completed_on_start = 15;
   */
  completedOnStart = protoInt64.zero;

  /**
   * The end range of completed timestamp
   *
   * @generated from field: uint64 completed_on_end = 16;
   */
  completedOnEnd = protoInt64.zero;

  /**
   * The reference ID of the production indent
   *
   * @generated from field: string reference_id = 20;
   */
  referenceId = "";

  /**
   * The unique reference number that has been automatically generated
   *
   * @generated from field: string final_ref_number = 21;
   */
  finalRefNumber = "";

  /**
   * The ID of the location
   *
   * @generated from field: uint64 location_id = 24;
   */
  locationId = protoInt64.zero;

  /**
   * The username of the supervisor
   *
   * @generated from field: string supervisor = 25;
   */
  supervisor = "";

  /**
   * Stores if the indent is associated to a production plan
   *
   * @generated from field: Scailo.PRODUCTION_INDENT_PRODUCTION_REF_FOR production_ref_for = 26;
   */
  productionRefFor = PRODUCTION_INDENT_PRODUCTION_REF_FOR.PRODUCTION_INDENT_PRODUCTION_REF_FOR_ANY_UNSPECIFIED;

  /**
   * Stores the production plan ID if production_ref_for is production-plan
   *
   * @generated from field: uint64 production_ref_id = 27;
   */
  productionRefId = protoInt64.zero;

  /**
   * Stores if the indent should be created on the basis of a work order or a family
   *
   * @generated from field: Scailo.PRODUCTION_INDENT_INDENT_REF_FOR indent_ref_for = 28;
   */
  indentRefFor = PRODUCTION_INDENT_INDENT_REF_FOR.PRODUCTION_INDENT_INDENT_REF_FOR_ANY_UNSPECIFIED;

  /**
   * Stores the ID of the associated family or work order
   *
   * @generated from field: uint64 indent_ref_id = 29;
   */
  indentRefId = protoInt64.zero;

  /**
   * The ID of the family
   *
   * @generated from field: uint64 family_id = 40;
   */
  familyId = protoInt64.zero;

  constructor(data?: PartialMessage<ProductionIndentsServiceFilterReq>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.ProductionIndentsServiceFilterReq";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "is_active", kind: "enum", T: proto3.getEnumType(BOOL_FILTER) },
    { no: 2, name: "count", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "offset", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 4, name: "sort_order", kind: "enum", T: proto3.getEnumType(SORT_ORDER) },
    { no: 5, name: "sort_key", kind: "enum", T: proto3.getEnumType(PRODUCTION_INDENT_SORT_KEY) },
    { no: 101, name: "creation_timestamp_start", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 102, name: "creation_timestamp_end", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 103, name: "modification_timestamp_start", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 104, name: "modification_timestamp_end", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 8, name: "entity_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 10, name: "status", kind: "enum", T: proto3.getEnumType(STANDARD_LIFECYCLE_STATUS) },
    { no: 11, name: "approved_on_start", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 12, name: "approved_on_end", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 13, name: "approved_by_user_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 14, name: "approver_role_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 15, name: "completed_on_start", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 16, name: "completed_on_end", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 20, name: "reference_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 21, name: "final_ref_number", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 24, name: "location_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 25, name: "supervisor", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 26, name: "production_ref_for", kind: "enum", T: proto3.getEnumType(PRODUCTION_INDENT_PRODUCTION_REF_FOR) },
    { no: 27, name: "production_ref_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 28, name: "indent_ref_for", kind: "enum", T: proto3.getEnumType(PRODUCTION_INDENT_INDENT_REF_FOR) },
    { no: 29, name: "indent_ref_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 40, name: "family_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ProductionIndentsServiceFilterReq {
    return new ProductionIndentsServiceFilterReq().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ProductionIndentsServiceFilterReq {
    return new ProductionIndentsServiceFilterReq().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ProductionIndentsServiceFilterReq {
    return new ProductionIndentsServiceFilterReq().fromJsonString(jsonString, options);
  }

  static equals(a: ProductionIndentsServiceFilterReq | PlainMessage<ProductionIndentsServiceFilterReq> | undefined, b: ProductionIndentsServiceFilterReq | PlainMessage<ProductionIndentsServiceFilterReq> | undefined): boolean {
    return proto3.util.equals(ProductionIndentsServiceFilterReq, a, b);
  }
}

/**
 *
 * Describes the base request payload of a count search
 *
 * @generated from message Scailo.ProductionIndentsServiceCountReq
 */
export class ProductionIndentsServiceCountReq extends Message<ProductionIndentsServiceCountReq> {
  /**
   * If true, then returns only active records. If false, then returns only inactive records
   *
   * @generated from field: Scailo.BOOL_FILTER is_active = 1;
   */
  isActive = BOOL_FILTER.BOOL_FILTER_ANY_UNSPECIFIED;

  /**
   * The minimum timestamp that needs to be considered to filter by creation
   *
   * @generated from field: uint64 creation_timestamp_start = 101;
   */
  creationTimestampStart = protoInt64.zero;

  /**
   * The maximum timestamp that needs to be considered to filter by creation
   *
   * @generated from field: uint64 creation_timestamp_end = 102;
   */
  creationTimestampEnd = protoInt64.zero;

  /**
   * The minimum timestamp that needs to be considered to filter by modification
   *
   * @generated from field: uint64 modification_timestamp_start = 103;
   */
  modificationTimestampStart = protoInt64.zero;

  /**
   * The maximum timestamp that needs to be considered to filter by modification
   *
   * @generated from field: uint64 modification_timestamp_end = 104;
   */
  modificationTimestampEnd = protoInt64.zero;

  /**
   * The entity UUID that is to be used to filter records
   *
   * @generated from field: string entity_uuid = 8;
   */
  entityUuid = "";

  /**
   * The status of this production indent
   *
   * @generated from field: Scailo.STANDARD_LIFECYCLE_STATUS status = 10;
   */
  status = STANDARD_LIFECYCLE_STATUS.ANY_UNSPECIFIED;

  /**
   * The start range of approved timestamp
   *
   * @generated from field: uint64 approved_on_start = 11;
   */
  approvedOnStart = protoInt64.zero;

  /**
   * The end range of approved timestamp
   *
   * @generated from field: uint64 approved_on_end = 12;
   */
  approvedOnEnd = protoInt64.zero;

  /**
   * The ID of the approver
   *
   * @generated from field: uint64 approved_by_user_id = 13;
   */
  approvedByUserId = protoInt64.zero;

  /**
   * The role ID of the approver
   *
   * @generated from field: uint64 approver_role_id = 14;
   */
  approverRoleId = protoInt64.zero;

  /**
   * The start range of completed timestamp
   *
   * @generated from field: uint64 completed_on_start = 15;
   */
  completedOnStart = protoInt64.zero;

  /**
   * The end range of completed timestamp
   *
   * @generated from field: uint64 completed_on_end = 16;
   */
  completedOnEnd = protoInt64.zero;

  /**
   * The reference ID of the production indent
   *
   * @generated from field: string reference_id = 20;
   */
  referenceId = "";

  /**
   * The unique reference number that has been automatically generated
   *
   * @generated from field: string final_ref_number = 21;
   */
  finalRefNumber = "";

  /**
   * The ID of the location
   *
   * @generated from field: uint64 location_id = 24;
   */
  locationId = protoInt64.zero;

  /**
   * The username of the supervisor
   *
   * @generated from field: string supervisor = 25;
   */
  supervisor = "";

  /**
   * Stores if the indent is associated to a production plan
   *
   * @generated from field: Scailo.PRODUCTION_INDENT_PRODUCTION_REF_FOR production_ref_for = 26;
   */
  productionRefFor = PRODUCTION_INDENT_PRODUCTION_REF_FOR.PRODUCTION_INDENT_PRODUCTION_REF_FOR_ANY_UNSPECIFIED;

  /**
   * Stores the production plan ID if production_ref_for is production-plan
   *
   * @generated from field: uint64 production_ref_id = 27;
   */
  productionRefId = protoInt64.zero;

  /**
   * Stores if the indent should be created on the basis of a work order or a family
   *
   * @generated from field: Scailo.PRODUCTION_INDENT_INDENT_REF_FOR indent_ref_for = 28;
   */
  indentRefFor = PRODUCTION_INDENT_INDENT_REF_FOR.PRODUCTION_INDENT_INDENT_REF_FOR_ANY_UNSPECIFIED;

  /**
   * Stores the ID of the associated family or work order
   *
   * @generated from field: uint64 indent_ref_id = 29;
   */
  indentRefId = protoInt64.zero;

  /**
   * The ID of the family
   *
   * @generated from field: uint64 family_id = 40;
   */
  familyId = protoInt64.zero;

  constructor(data?: PartialMessage<ProductionIndentsServiceCountReq>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.ProductionIndentsServiceCountReq";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "is_active", kind: "enum", T: proto3.getEnumType(BOOL_FILTER) },
    { no: 101, name: "creation_timestamp_start", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 102, name: "creation_timestamp_end", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 103, name: "modification_timestamp_start", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 104, name: "modification_timestamp_end", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 8, name: "entity_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 10, name: "status", kind: "enum", T: proto3.getEnumType(STANDARD_LIFECYCLE_STATUS) },
    { no: 11, name: "approved_on_start", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 12, name: "approved_on_end", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 13, name: "approved_by_user_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 14, name: "approver_role_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 15, name: "completed_on_start", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 16, name: "completed_on_end", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 20, name: "reference_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 21, name: "final_ref_number", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 24, name: "location_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 25, name: "supervisor", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 26, name: "production_ref_for", kind: "enum", T: proto3.getEnumType(PRODUCTION_INDENT_PRODUCTION_REF_FOR) },
    { no: 27, name: "production_ref_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 28, name: "indent_ref_for", kind: "enum", T: proto3.getEnumType(PRODUCTION_INDENT_INDENT_REF_FOR) },
    { no: 29, name: "indent_ref_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 40, name: "family_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ProductionIndentsServiceCountReq {
    return new ProductionIndentsServiceCountReq().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ProductionIndentsServiceCountReq {
    return new ProductionIndentsServiceCountReq().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ProductionIndentsServiceCountReq {
    return new ProductionIndentsServiceCountReq().fromJsonString(jsonString, options);
  }

  static equals(a: ProductionIndentsServiceCountReq | PlainMessage<ProductionIndentsServiceCountReq> | undefined, b: ProductionIndentsServiceCountReq | PlainMessage<ProductionIndentsServiceCountReq> | undefined): boolean {
    return proto3.util.equals(ProductionIndentsServiceCountReq, a, b);
  }
}

/**
 *
 * Describes the request payload for performing a generic search operation on records
 *
 * @generated from message Scailo.ProductionIndentsServiceSearchAllReq
 */
export class ProductionIndentsServiceSearchAllReq extends Message<ProductionIndentsServiceSearchAllReq> {
  /**
   * If true, then returns only active records. If false, then returns only inactive records
   *
   * @generated from field: Scailo.BOOL_FILTER is_active = 1;
   */
  isActive = BOOL_FILTER.BOOL_FILTER_ANY_UNSPECIFIED;

  /**
   * The number of records that need to be sent in the response. Returns all records if it is set to -1
   *
   * @generated from field: int64 count = 2;
   */
  count = protoInt64.zero;

  /**
   * The number that need to be offset by before fetching the records
   *
   * @generated from field: uint64 offset = 3;
   */
  offset = protoInt64.zero;

  /**
   * The sort order that is to be used to fetch the pagination response
   *
   * @generated from field: Scailo.SORT_ORDER sort_order = 4;
   */
  sortOrder = SORT_ORDER.ASCENDING_UNSPECIFIED;

  /**
   * The sort key that is to be used to fetch the pagination response
   *
   * @generated from field: Scailo.PRODUCTION_INDENT_SORT_KEY sort_key = 5;
   */
  sortKey = PRODUCTION_INDENT_SORT_KEY.PRODUCTION_INDENT_SORT_KEY_ID_UNSPECIFIED;

  /**
   * The entity UUID that is to be used to filter records
   *
   * @generated from field: string entity_uuid = 6;
   */
  entityUuid = "";

  /**
   * Limit the search space to the given status
   *
   * @generated from field: Scailo.STANDARD_LIFECYCLE_STATUS status = 10;
   */
  status = STANDARD_LIFECYCLE_STATUS.ANY_UNSPECIFIED;

  /**
   * Describes the key with which the search operation needs to be performed
   *
   * @generated from field: string search_key = 11;
   */
  searchKey = "";

  /**
   * The ID of the location
   *
   * @generated from field: uint64 location_id = 24;
   */
  locationId = protoInt64.zero;

  /**
   * The username of the supervisor
   *
   * @generated from field: string supervisor = 25;
   */
  supervisor = "";

  /**
   * Stores if the indent is associated to a production plan
   *
   * @generated from field: Scailo.PRODUCTION_INDENT_PRODUCTION_REF_FOR production_ref_for = 26;
   */
  productionRefFor = PRODUCTION_INDENT_PRODUCTION_REF_FOR.PRODUCTION_INDENT_PRODUCTION_REF_FOR_ANY_UNSPECIFIED;

  /**
   * Stores the production plan ID if production_ref_for is production-plan
   *
   * @generated from field: uint64 production_ref_id = 27;
   */
  productionRefId = protoInt64.zero;

  /**
   * Stores if the indent should be created on the basis of a work order or a family
   *
   * @generated from field: Scailo.PRODUCTION_INDENT_INDENT_REF_FOR indent_ref_for = 28;
   */
  indentRefFor = PRODUCTION_INDENT_INDENT_REF_FOR.PRODUCTION_INDENT_INDENT_REF_FOR_ANY_UNSPECIFIED;

  /**
   * Stores the ID of the associated family or work order
   *
   * @generated from field: uint64 indent_ref_id = 29;
   */
  indentRefId = protoInt64.zero;

  constructor(data?: PartialMessage<ProductionIndentsServiceSearchAllReq>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.ProductionIndentsServiceSearchAllReq";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "is_active", kind: "enum", T: proto3.getEnumType(BOOL_FILTER) },
    { no: 2, name: "count", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "offset", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 4, name: "sort_order", kind: "enum", T: proto3.getEnumType(SORT_ORDER) },
    { no: 5, name: "sort_key", kind: "enum", T: proto3.getEnumType(PRODUCTION_INDENT_SORT_KEY) },
    { no: 6, name: "entity_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 10, name: "status", kind: "enum", T: proto3.getEnumType(STANDARD_LIFECYCLE_STATUS) },
    { no: 11, name: "search_key", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 24, name: "location_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 25, name: "supervisor", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 26, name: "production_ref_for", kind: "enum", T: proto3.getEnumType(PRODUCTION_INDENT_PRODUCTION_REF_FOR) },
    { no: 27, name: "production_ref_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 28, name: "indent_ref_for", kind: "enum", T: proto3.getEnumType(PRODUCTION_INDENT_INDENT_REF_FOR) },
    { no: 29, name: "indent_ref_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ProductionIndentsServiceSearchAllReq {
    return new ProductionIndentsServiceSearchAllReq().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ProductionIndentsServiceSearchAllReq {
    return new ProductionIndentsServiceSearchAllReq().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ProductionIndentsServiceSearchAllReq {
    return new ProductionIndentsServiceSearchAllReq().fromJsonString(jsonString, options);
  }

  static equals(a: ProductionIndentsServiceSearchAllReq | PlainMessage<ProductionIndentsServiceSearchAllReq> | undefined, b: ProductionIndentsServiceSearchAllReq | PlainMessage<ProductionIndentsServiceSearchAllReq> | undefined): boolean {
    return proto3.util.equals(ProductionIndentsServiceSearchAllReq, a, b);
  }
}

/**
 *
 * Describes the request payload to retrieve approved or unapproved items.
 *
 * @generated from message Scailo.ProductionIndentItemsSearchRequest
 */
export class ProductionIndentItemsSearchRequest extends Message<ProductionIndentItemsSearchRequest> {
  /**
   * If true, then returns only active records. If false, then returns only inactive records
   *
   * @generated from field: Scailo.BOOL_FILTER is_active = 1;
   */
  isActive = BOOL_FILTER.BOOL_FILTER_ANY_UNSPECIFIED;

  /**
   * The number of records that need to be sent in the response. Returns all records if it is set to -1
   *
   * @generated from field: int64 count = 2;
   */
  count = protoInt64.zero;

  /**
   * The number that need to be offset by before fetching the records
   *
   * @generated from field: uint64 offset = 3;
   */
  offset = protoInt64.zero;

  /**
   * The sort order that is to be used to fetch the pagination response
   *
   * @generated from field: Scailo.SORT_ORDER sort_order = 4;
   */
  sortOrder = SORT_ORDER.ASCENDING_UNSPECIFIED;

  /**
   * The sort key that is to be used to fetch the pagination response
   *
   * @generated from field: Scailo.PRODUCTION_INDENT_ITEM_SORT_KEY sort_key = 5;
   */
  sortKey = PRODUCTION_INDENT_ITEM_SORT_KEY.PRODUCTION_INDENT_ITEM_SORT_KEY_ID_UNSPECIFIED;

  /**
   * The entity UUID that is to be used to filter records
   *
   * @generated from field: string entity_uuid = 6;
   */
  entityUuid = "";

  /**
   * The status of the items
   *
   * @generated from field: Scailo.PRODUCTION_INDENT_ITEM_STATUS status = 7;
   */
  status = PRODUCTION_INDENT_ITEM_STATUS.PRODUCTION_INDENT_ITEM_STATUS_ANY_UNSPECIFIED;

  /**
   * The start range of approved timestamp
   *
   * @generated from field: uint64 approved_on_start = 10;
   */
  approvedOnStart = protoInt64.zero;

  /**
   * The end range of approved timestamp
   *
   * @generated from field: uint64 approved_on_end = 11;
   */
  approvedOnEnd = protoInt64.zero;

  /**
   * The ID of the approver
   *
   * @generated from field: uint64 approved_by_user_id = 12;
   */
  approvedByUserId = protoInt64.zero;

  /**
   * The role ID of the approver
   *
   * @generated from field: uint64 approver_role_id = 13;
   */
  approverRoleId = protoInt64.zero;

  /**
   * The ID of the production indent
   *
   * @generated from field: uint64 production_indent_id = 20;
   */
  productionIndentId = protoInt64.zero;

  /**
   * The ID of the family
   *
   * @generated from field: uint64 family_id = 21;
   */
  familyId = protoInt64.zero;

  /**
   * Describes the key with which the search operation needs to be performed
   *
   * @generated from field: string search_key = 40;
   */
  searchKey = "";

  constructor(data?: PartialMessage<ProductionIndentItemsSearchRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.ProductionIndentItemsSearchRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "is_active", kind: "enum", T: proto3.getEnumType(BOOL_FILTER) },
    { no: 2, name: "count", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "offset", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 4, name: "sort_order", kind: "enum", T: proto3.getEnumType(SORT_ORDER) },
    { no: 5, name: "sort_key", kind: "enum", T: proto3.getEnumType(PRODUCTION_INDENT_ITEM_SORT_KEY) },
    { no: 6, name: "entity_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 7, name: "status", kind: "enum", T: proto3.getEnumType(PRODUCTION_INDENT_ITEM_STATUS) },
    { no: 10, name: "approved_on_start", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 11, name: "approved_on_end", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 12, name: "approved_by_user_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 13, name: "approver_role_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 20, name: "production_indent_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 21, name: "family_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 40, name: "search_key", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ProductionIndentItemsSearchRequest {
    return new ProductionIndentItemsSearchRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ProductionIndentItemsSearchRequest {
    return new ProductionIndentItemsSearchRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ProductionIndentItemsSearchRequest {
    return new ProductionIndentItemsSearchRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ProductionIndentItemsSearchRequest | PlainMessage<ProductionIndentItemsSearchRequest> | undefined, b: ProductionIndentItemsSearchRequest | PlainMessage<ProductionIndentItemsSearchRequest> | undefined): boolean {
    return proto3.util.equals(ProductionIndentItemsSearchRequest, a, b);
  }
}

/**
 *
 * Describes the response to a pagination items request
 *
 * @generated from message Scailo.ProductionIndentsServicePaginatedItemsResponse
 */
export class ProductionIndentsServicePaginatedItemsResponse extends Message<ProductionIndentsServicePaginatedItemsResponse> {
  /**
   * The number of records in this payload
   *
   * @generated from field: uint64 count = 1;
   */
  count = protoInt64.zero;

  /**
   * The number that has been offset before fetching the records. This is the same value that has been sent as part of the pagination request
   *
   * @generated from field: uint64 offset = 2;
   */
  offset = protoInt64.zero;

  /**
   * The total number of records that are available
   *
   * @generated from field: uint64 total = 3;
   */
  total = protoInt64.zero;

  /**
   * The list of records
   *
   * @generated from field: repeated Scailo.ProductionIndentItem payload = 4;
   */
  payload: ProductionIndentItem[] = [];

  constructor(data?: PartialMessage<ProductionIndentsServicePaginatedItemsResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.ProductionIndentsServicePaginatedItemsResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "count", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 2, name: "offset", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 3, name: "total", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 4, name: "payload", kind: "message", T: ProductionIndentItem, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ProductionIndentsServicePaginatedItemsResponse {
    return new ProductionIndentsServicePaginatedItemsResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ProductionIndentsServicePaginatedItemsResponse {
    return new ProductionIndentsServicePaginatedItemsResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ProductionIndentsServicePaginatedItemsResponse {
    return new ProductionIndentsServicePaginatedItemsResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ProductionIndentsServicePaginatedItemsResponse | PlainMessage<ProductionIndentsServicePaginatedItemsResponse> | undefined, b: ProductionIndentsServicePaginatedItemsResponse | PlainMessage<ProductionIndentsServicePaginatedItemsResponse> | undefined): boolean {
    return proto3.util.equals(ProductionIndentsServicePaginatedItemsResponse, a, b);
  }
}

/**
 *
 * Describes the issued statistics of the production indent
 *
 * @generated from message Scailo.ProductionIndentIssuedStatistics
 */
export class ProductionIndentIssuedStatistics extends Message<ProductionIndentIssuedStatistics> {
  /**
   * Stores the ID of the family
   *
   * @generated from field: uint64 family_id = 1;
   */
  familyId = protoInt64.zero;

  /**
   * Stores the indented quantity
   *
   * @generated from field: uint64 indented_quantity = 2;
   */
  indentedQuantity = protoInt64.zero;

  /**
   * Stores the unapproved issued quantity
   *
   * @generated from field: uint64 unapproved_issued_quantity = 3;
   */
  unapprovedIssuedQuantity = protoInt64.zero;

  /**
   * Stores the approved issued quantity
   *
   * @generated from field: uint64 approved_issued_quantity = 4;
   */
  approvedIssuedQuantity = protoInt64.zero;

  constructor(data?: PartialMessage<ProductionIndentIssuedStatistics>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.ProductionIndentIssuedStatistics";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "family_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 2, name: "indented_quantity", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 3, name: "unapproved_issued_quantity", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 4, name: "approved_issued_quantity", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ProductionIndentIssuedStatistics {
    return new ProductionIndentIssuedStatistics().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ProductionIndentIssuedStatistics {
    return new ProductionIndentIssuedStatistics().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ProductionIndentIssuedStatistics {
    return new ProductionIndentIssuedStatistics().fromJsonString(jsonString, options);
  }

  static equals(a: ProductionIndentIssuedStatistics | PlainMessage<ProductionIndentIssuedStatistics> | undefined, b: ProductionIndentIssuedStatistics | PlainMessage<ProductionIndentIssuedStatistics> | undefined): boolean {
    return proto3.util.equals(ProductionIndentIssuedStatistics, a, b);
  }
}

/**
 *
 * Describes the list of issued statistics of the production indent
 *
 * @generated from message Scailo.ProductionIndentIssuedStatisticsList
 */
export class ProductionIndentIssuedStatisticsList extends Message<ProductionIndentIssuedStatisticsList> {
  /**
   * @generated from field: repeated Scailo.ProductionIndentIssuedStatistics list = 1;
   */
  list: ProductionIndentIssuedStatistics[] = [];

  constructor(data?: PartialMessage<ProductionIndentIssuedStatisticsList>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.ProductionIndentIssuedStatisticsList";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "list", kind: "message", T: ProductionIndentIssuedStatistics, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ProductionIndentIssuedStatisticsList {
    return new ProductionIndentIssuedStatisticsList().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ProductionIndentIssuedStatisticsList {
    return new ProductionIndentIssuedStatisticsList().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ProductionIndentIssuedStatisticsList {
    return new ProductionIndentIssuedStatisticsList().fromJsonString(jsonString, options);
  }

  static equals(a: ProductionIndentIssuedStatisticsList | PlainMessage<ProductionIndentIssuedStatisticsList> | undefined, b: ProductionIndentIssuedStatisticsList | PlainMessage<ProductionIndentIssuedStatisticsList> | undefined): boolean {
    return proto3.util.equals(ProductionIndentIssuedStatisticsList, a, b);
  }
}

