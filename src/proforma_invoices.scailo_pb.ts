// @generated by protoc-gen-es v1.5.1 with parameter "target=ts"
// @generated from file proforma_invoices.scailo.proto (package Scailo, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3, protoInt64 } from "@bufbuild/protobuf";
import { FormFieldDatum, FormFieldDatumCreateRequest } from "./forms_fields_data.scailo_pb.js";
import { ApprovalMetadata, BOOL_FILTER, EmployeeMetadata, LogbookLogConciseSLC, SORT_ORDER, STANDARD_LIFECYCLE_STATUS } from "./base.scailo_pb.js";

/**
 *
 * Describes the available sort keys
 *
 * @generated from enum Scailo.PROFORMA_INVOICE_SORT_KEY
 */
export enum PROFORMA_INVOICE_SORT_KEY {
  /**
   * Fetch ordered results by id
   *
   * @generated from enum value: PROFORMA_INVOICE_SORT_KEY_ID_UNSPECIFIED = 0;
   */
  PROFORMA_INVOICE_SORT_KEY_ID_UNSPECIFIED = 0,

  /**
   * Fetch ordered results by the creation timestamp
   *
   * @generated from enum value: PROFORMA_INVOICE_SORT_KEY_CREATED_AT = 1;
   */
  PROFORMA_INVOICE_SORT_KEY_CREATED_AT = 1,

  /**
   * Fetch ordered results by the modified timestamp
   *
   * @generated from enum value: PROFORMA_INVOICE_SORT_KEY_MODIFIED_AT = 2;
   */
  PROFORMA_INVOICE_SORT_KEY_MODIFIED_AT = 2,

  /**
   * Fetch ordered results by the approved on timestamp
   *
   * @generated from enum value: PROFORMA_INVOICE_SORT_KEY_APPROVED_ON = 3;
   */
  PROFORMA_INVOICE_SORT_KEY_APPROVED_ON = 3,

  /**
   * Fetch ordered results by the approved by field
   *
   * @generated from enum value: PROFORMA_INVOICE_SORT_KEY_APPROVED_BY = 4;
   */
  PROFORMA_INVOICE_SORT_KEY_APPROVED_BY = 4,

  /**
   * Fetch ordered results by the approver's role ID
   *
   * @generated from enum value: PROFORMA_INVOICE_SORT_KEY_APPROVER_ROLE_ID = 5;
   */
  PROFORMA_INVOICE_SORT_KEY_APPROVER_ROLE_ID = 5,

  /**
   * Fetch ordered results by the approver's completed on timestamp
   *
   * @generated from enum value: PROFORMA_INVOICE_SORT_KEY_COMPLETED_ON = 6;
   */
  PROFORMA_INVOICE_SORT_KEY_COMPLETED_ON = 6,

  /**
   * Fetch ordered results by the reference ID
   *
   * @generated from enum value: PROFORMA_INVOICE_SORT_KEY_REFERENCE_ID = 10;
   */
  PROFORMA_INVOICE_SORT_KEY_REFERENCE_ID = 10,

  /**
   * Fetch ordered results by the final ref number
   *
   * @generated from enum value: PROFORMA_INVOICE_SORT_KEY_FINAL_REF_NUMBER = 11;
   */
  PROFORMA_INVOICE_SORT_KEY_FINAL_REF_NUMBER = 11,

  /**
   * Fetch ordered results by the amendment count
   *
   * @generated from enum value: PROFORMA_INVOICE_SORT_KEY_AMENDMENT_COUNT = 18;
   */
  PROFORMA_INVOICE_SORT_KEY_AMENDMENT_COUNT = 18,

  /**
   * Fetch ordered results by the total value
   *
   * @generated from enum value: PROFORMA_INVOICE_SORT_KEY_TOTAL_VALUE = 30;
   */
  PROFORMA_INVOICE_SORT_KEY_TOTAL_VALUE = 30,
}
// Retrieve enum metadata with: proto3.getEnumType(PROFORMA_INVOICE_SORT_KEY)
proto3.util.setEnumType(PROFORMA_INVOICE_SORT_KEY, "Scailo.PROFORMA_INVOICE_SORT_KEY", [
  { no: 0, name: "PROFORMA_INVOICE_SORT_KEY_ID_UNSPECIFIED" },
  { no: 1, name: "PROFORMA_INVOICE_SORT_KEY_CREATED_AT" },
  { no: 2, name: "PROFORMA_INVOICE_SORT_KEY_MODIFIED_AT" },
  { no: 3, name: "PROFORMA_INVOICE_SORT_KEY_APPROVED_ON" },
  { no: 4, name: "PROFORMA_INVOICE_SORT_KEY_APPROVED_BY" },
  { no: 5, name: "PROFORMA_INVOICE_SORT_KEY_APPROVER_ROLE_ID" },
  { no: 6, name: "PROFORMA_INVOICE_SORT_KEY_COMPLETED_ON" },
  { no: 10, name: "PROFORMA_INVOICE_SORT_KEY_REFERENCE_ID" },
  { no: 11, name: "PROFORMA_INVOICE_SORT_KEY_FINAL_REF_NUMBER" },
  { no: 18, name: "PROFORMA_INVOICE_SORT_KEY_AMENDMENT_COUNT" },
  { no: 30, name: "PROFORMA_INVOICE_SORT_KEY_TOTAL_VALUE" },
]);

/**
 *
 * Describes the available billing statuses
 *
 * @generated from enum Scailo.PROFORMA_INVOICE_BILLING_STATUS
 */
export enum PROFORMA_INVOICE_BILLING_STATUS {
  /**
   * Any billing status
   *
   * @generated from enum value: PROFORMA_INVOICE_BILLING_STATUS_ANY_UNSPECIFIED = 0;
   */
  PROFORMA_INVOICE_BILLING_STATUS_ANY_UNSPECIFIED = 0,

  /**
   * Goods dispatch is billed
   *
   * @generated from enum value: PROFORMA_INVOICE_BILLING_STATUS_BILLED = 1;
   */
  PROFORMA_INVOICE_BILLING_STATUS_BILLED = 1,

  /**
   * Goods dispatch is unbilled
   *
   * @generated from enum value: PROFORMA_INVOICE_BILLING_STATUS_UNBILLED = 2;
   */
  PROFORMA_INVOICE_BILLING_STATUS_UNBILLED = 2,
}
// Retrieve enum metadata with: proto3.getEnumType(PROFORMA_INVOICE_BILLING_STATUS)
proto3.util.setEnumType(PROFORMA_INVOICE_BILLING_STATUS, "Scailo.PROFORMA_INVOICE_BILLING_STATUS", [
  { no: 0, name: "PROFORMA_INVOICE_BILLING_STATUS_ANY_UNSPECIFIED" },
  { no: 1, name: "PROFORMA_INVOICE_BILLING_STATUS_BILLED" },
  { no: 2, name: "PROFORMA_INVOICE_BILLING_STATUS_UNBILLED" },
]);

/**
 *
 * Describes the available sort keys
 *
 * @generated from enum Scailo.PROFORMA_INVOICE_ITEM_SORT_KEY
 */
export enum PROFORMA_INVOICE_ITEM_SORT_KEY {
  /**
   * Fetch invoiced results by id
   *
   * @generated from enum value: PROFORMA_INVOICE_ITEM_SORT_KEY_ID_UNSPECIFIED = 0;
   */
  PROFORMA_INVOICE_ITEM_SORT_KEY_ID_UNSPECIFIED = 0,

  /**
   * Fetch invoiced results by the creation timestamp
   *
   * @generated from enum value: PROFORMA_INVOICE_ITEM_SORT_KEY_CREATED_AT = 1;
   */
  PROFORMA_INVOICE_ITEM_SORT_KEY_CREATED_AT = 1,

  /**
   * Fetch invoiced results by the modified timestamp
   *
   * @generated from enum value: PROFORMA_INVOICE_ITEM_SORT_KEY_MODIFIED_AT = 2;
   */
  PROFORMA_INVOICE_ITEM_SORT_KEY_MODIFIED_AT = 2,

  /**
   * Fetch invoiced results by the approved on timestamp
   *
   * @generated from enum value: PROFORMA_INVOICE_ITEM_SORT_KEY_APPROVED_ON = 3;
   */
  PROFORMA_INVOICE_ITEM_SORT_KEY_APPROVED_ON = 3,

  /**
   * Fetch invoiced results by the approved by field
   *
   * @generated from enum value: PROFORMA_INVOICE_ITEM_SORT_KEY_APPROVED_BY = 4;
   */
  PROFORMA_INVOICE_ITEM_SORT_KEY_APPROVED_BY = 4,

  /**
   * Fetch invoiced results by the approver's role ID
   *
   * @generated from enum value: PROFORMA_INVOICE_ITEM_SORT_KEY_APPROVER_ROLE_ID = 5;
   */
  PROFORMA_INVOICE_ITEM_SORT_KEY_APPROVER_ROLE_ID = 5,

  /**
   * Fetch invoiced results by the family ID
   *
   * @generated from enum value: PROFORMA_INVOICE_ITEM_SORT_KEY_FAMILY_ID = 10;
   */
  PROFORMA_INVOICE_ITEM_SORT_KEY_FAMILY_ID = 10,

  /**
   * Fetch invoiced results by the internal quantity
   *
   * @generated from enum value: PROFORMA_INVOICE_ITEM_SORT_KEY_INTERNAL_QUANTITY = 11;
   */
  PROFORMA_INVOICE_ITEM_SORT_KEY_INTERNAL_QUANTITY = 11,

  /**
   * Fetch invoiced results by the client unit of material ID
   *
   * @generated from enum value: PROFORMA_INVOICE_ITEM_SORT_KEY_CLIENT_UOM_ID = 12;
   */
  PROFORMA_INVOICE_ITEM_SORT_KEY_CLIENT_UOM_ID = 12,

  /**
   * Fetch invoiced results by the client quantity
   *
   * @generated from enum value: PROFORMA_INVOICE_ITEM_SORT_KEY_CLIENT_QUANTITY = 13;
   */
  PROFORMA_INVOICE_ITEM_SORT_KEY_CLIENT_QUANTITY = 13,

  /**
   * Fetch invoiced results by the client family code
   *
   * @generated from enum value: PROFORMA_INVOICE_ITEM_SORT_KEY_CLIENT_FAMILY_CODE = 14;
   */
  PROFORMA_INVOICE_ITEM_SORT_KEY_CLIENT_FAMILY_CODE = 14,

  /**
   * Fetch invoiced results by the unit price
   *
   * @generated from enum value: PROFORMA_INVOICE_ITEM_SORT_KEY_UNIT_PRICE = 15;
   */
  PROFORMA_INVOICE_ITEM_SORT_KEY_UNIT_PRICE = 15,

  /**
   * Fetch invoiced results by the tax group ID
   *
   * @generated from enum value: PROFORMA_INVOICE_ITEM_SORT_KEY_TAX_GROUP_ID = 16;
   */
  PROFORMA_INVOICE_ITEM_SORT_KEY_TAX_GROUP_ID = 16,
}
// Retrieve enum metadata with: proto3.getEnumType(PROFORMA_INVOICE_ITEM_SORT_KEY)
proto3.util.setEnumType(PROFORMA_INVOICE_ITEM_SORT_KEY, "Scailo.PROFORMA_INVOICE_ITEM_SORT_KEY", [
  { no: 0, name: "PROFORMA_INVOICE_ITEM_SORT_KEY_ID_UNSPECIFIED" },
  { no: 1, name: "PROFORMA_INVOICE_ITEM_SORT_KEY_CREATED_AT" },
  { no: 2, name: "PROFORMA_INVOICE_ITEM_SORT_KEY_MODIFIED_AT" },
  { no: 3, name: "PROFORMA_INVOICE_ITEM_SORT_KEY_APPROVED_ON" },
  { no: 4, name: "PROFORMA_INVOICE_ITEM_SORT_KEY_APPROVED_BY" },
  { no: 5, name: "PROFORMA_INVOICE_ITEM_SORT_KEY_APPROVER_ROLE_ID" },
  { no: 10, name: "PROFORMA_INVOICE_ITEM_SORT_KEY_FAMILY_ID" },
  { no: 11, name: "PROFORMA_INVOICE_ITEM_SORT_KEY_INTERNAL_QUANTITY" },
  { no: 12, name: "PROFORMA_INVOICE_ITEM_SORT_KEY_CLIENT_UOM_ID" },
  { no: 13, name: "PROFORMA_INVOICE_ITEM_SORT_KEY_CLIENT_QUANTITY" },
  { no: 14, name: "PROFORMA_INVOICE_ITEM_SORT_KEY_CLIENT_FAMILY_CODE" },
  { no: 15, name: "PROFORMA_INVOICE_ITEM_SORT_KEY_UNIT_PRICE" },
  { no: 16, name: "PROFORMA_INVOICE_ITEM_SORT_KEY_TAX_GROUP_ID" },
]);

/**
 *
 * Describes the applicable statuses of proforma invoice items
 *
 * @generated from enum Scailo.PROFORMA_INVOICE_ITEM_STATUS
 */
export enum PROFORMA_INVOICE_ITEM_STATUS {
  /**
   * Denotes that status be disregarded. This is used only within search APIs
   *
   * @generated from enum value: PROFORMA_INVOICE_ITEM_STATUS_ANY_UNSPECIFIED = 0;
   */
  PROFORMA_INVOICE_ITEM_STATUS_ANY_UNSPECIFIED = 0,

  /**
   * Denotes that the proforma invoice items must have been approved
   *
   * @generated from enum value: PROFORMA_INVOICE_ITEM_STATUS_APPROVED = 1;
   */
  PROFORMA_INVOICE_ITEM_STATUS_APPROVED = 1,

  /**
   * Denotes that the proforma invoice items must be waiting for approval
   *
   * @generated from enum value: PROFORMA_INVOICE_ITEM_STATUS_UNAPPROVED = 2;
   */
  PROFORMA_INVOICE_ITEM_STATUS_UNAPPROVED = 2,
}
// Retrieve enum metadata with: proto3.getEnumType(PROFORMA_INVOICE_ITEM_STATUS)
proto3.util.setEnumType(PROFORMA_INVOICE_ITEM_STATUS, "Scailo.PROFORMA_INVOICE_ITEM_STATUS", [
  { no: 0, name: "PROFORMA_INVOICE_ITEM_STATUS_ANY_UNSPECIFIED" },
  { no: 1, name: "PROFORMA_INVOICE_ITEM_STATUS_APPROVED" },
  { no: 2, name: "PROFORMA_INVOICE_ITEM_STATUS_UNAPPROVED" },
]);

/**
 *
 * Describes the parameters necessary to create a record
 *
 * @generated from message Scailo.ProformaInvoicesServiceCreateRequest
 */
export class ProformaInvoicesServiceCreateRequest extends Message<ProformaInvoicesServiceCreateRequest> {
  /**
   * Stores a globally unique entity UUID. This will be set at the organization level
   *
   * @generated from field: string entity_uuid = 1;
   */
  entityUuid = "";

  /**
   * Stores any comment that the user might add during this operation
   *
   * @generated from field: string user_comment = 2;
   */
  userComment = "";

  /**
   * The associated vault folder ID
   *
   * @generated from field: uint64 vault_folder_id = 9;
   */
  vaultFolderId = protoInt64.zero;

  /**
   * The reference ID of the proforma invoice
   *
   * @generated from field: string reference_id = 10;
   */
  referenceId = "";

  /**
   * The associated reference
   *
   * @generated from field: string ref_from = 12;
   */
  refFrom = "";

  /**
   * The associated ID of the reference
   *
   * @generated from field: uint64 ref_id = 13;
   */
  refId = protoInt64.zero;

  /**
   * The associated ID of the currency
   *
   * @generated from field: uint64 currency_id = 14;
   */
  currencyId = protoInt64.zero;

  /**
   * The associated ID of the bank account
   *
   * @generated from field: uint64 bank_account_id = 15;
   */
  bankAccountId = protoInt64.zero;

  /**
   * Any miscellaneous cost
   *
   * @generated from field: uint64 miscellaneous_cost = 16;
   */
  miscellaneousCost = protoInt64.zero;

  /**
   * The optional discount amount
   *
   * @generated from field: uint64 overall_discount = 17;
   */
  overallDiscount = protoInt64.zero;

  /**
   * The applicable round off amount (optional, and can be positive or negative)
   *
   * @generated from field: int64 round_off = 18;
   */
  roundOff = protoInt64.zero;

  /**
   * The excess tax group
   *
   * @generated from field: uint64 cumulative_excess_tax_group_id = 19;
   */
  cumulativeExcessTaxGroupId = protoInt64.zero;

  /**
   * The excess tax amount
   *
   * @generated from field: uint64 cumulative_excess_tax_amount = 20;
   */
  cumulativeExcessTaxAmount = protoInt64.zero;

  /**
   * The list of dynamic forms
   *
   * @generated from field: repeated Scailo.FormFieldDatumCreateRequest form_data = 30;
   */
  formData: FormFieldDatumCreateRequest[] = [];

  constructor(data?: PartialMessage<ProformaInvoicesServiceCreateRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.ProformaInvoicesServiceCreateRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "entity_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "user_comment", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 9, name: "vault_folder_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 10, name: "reference_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 12, name: "ref_from", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 13, name: "ref_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 14, name: "currency_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 15, name: "bank_account_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 16, name: "miscellaneous_cost", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 17, name: "overall_discount", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 18, name: "round_off", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 19, name: "cumulative_excess_tax_group_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 20, name: "cumulative_excess_tax_amount", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 30, name: "form_data", kind: "message", T: FormFieldDatumCreateRequest, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ProformaInvoicesServiceCreateRequest {
    return new ProformaInvoicesServiceCreateRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ProformaInvoicesServiceCreateRequest {
    return new ProformaInvoicesServiceCreateRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ProformaInvoicesServiceCreateRequest {
    return new ProformaInvoicesServiceCreateRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ProformaInvoicesServiceCreateRequest | PlainMessage<ProformaInvoicesServiceCreateRequest> | undefined, b: ProformaInvoicesServiceCreateRequest | PlainMessage<ProformaInvoicesServiceCreateRequest> | undefined): boolean {
    return proto3.util.equals(ProformaInvoicesServiceCreateRequest, a, b);
  }
}

/**
 *
 * Describes the parameters necessary to update a record
 *
 * @generated from message Scailo.ProformaInvoicesServiceUpdateRequest
 */
export class ProformaInvoicesServiceUpdateRequest extends Message<ProformaInvoicesServiceUpdateRequest> {
  /**
   * Stores any comment that the user might add during this operation
   *
   * @generated from field: string user_comment = 1;
   */
  userComment = "";

  /**
   * The ID of the record that needs to be updated
   *
   * @generated from field: uint64 id = 2;
   */
  id = protoInt64.zero;

  /**
   * Optional boolean value that stores if a notification needs to be sent to users about the update to the record. This is useful when a subsequent operation needs to be performed immediately (such as send to verification after updating the revision)
   *
   * @generated from field: bool notify_users = 3;
   */
  notifyUsers = false;

  /**
   * The associated vault folder ID
   *
   * @generated from field: uint64 vault_folder_id = 9;
   */
  vaultFolderId = protoInt64.zero;

  /**
   * The reference ID of the proforma invoice
   *
   * @generated from field: string reference_id = 10;
   */
  referenceId = "";

  /**
   * The associated ID of the currency
   *
   * @generated from field: uint64 currency_id = 14;
   */
  currencyId = protoInt64.zero;

  /**
   * The associated ID of the bank account
   *
   * @generated from field: uint64 bank_account_id = 15;
   */
  bankAccountId = protoInt64.zero;

  /**
   * Any miscellaneous cost
   *
   * @generated from field: uint64 miscellaneous_cost = 16;
   */
  miscellaneousCost = protoInt64.zero;

  /**
   * The optional discount amount
   *
   * @generated from field: uint64 overall_discount = 17;
   */
  overallDiscount = protoInt64.zero;

  /**
   * The applicable round off amount (optional, and can be positive or negative)
   *
   * @generated from field: int64 round_off = 18;
   */
  roundOff = protoInt64.zero;

  /**
   * The excess tax group
   *
   * @generated from field: uint64 cumulative_excess_tax_group_id = 19;
   */
  cumulativeExcessTaxGroupId = protoInt64.zero;

  /**
   * The excess tax amount
   *
   * @generated from field: uint64 cumulative_excess_tax_amount = 20;
   */
  cumulativeExcessTaxAmount = protoInt64.zero;

  /**
   * The list of dynamic forms
   *
   * @generated from field: repeated Scailo.FormFieldDatumCreateRequest form_data = 30;
   */
  formData: FormFieldDatumCreateRequest[] = [];

  constructor(data?: PartialMessage<ProformaInvoicesServiceUpdateRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.ProformaInvoicesServiceUpdateRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "user_comment", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 3, name: "notify_users", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 9, name: "vault_folder_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 10, name: "reference_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 14, name: "currency_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 15, name: "bank_account_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 16, name: "miscellaneous_cost", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 17, name: "overall_discount", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 18, name: "round_off", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 19, name: "cumulative_excess_tax_group_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 20, name: "cumulative_excess_tax_amount", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 30, name: "form_data", kind: "message", T: FormFieldDatumCreateRequest, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ProformaInvoicesServiceUpdateRequest {
    return new ProformaInvoicesServiceUpdateRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ProformaInvoicesServiceUpdateRequest {
    return new ProformaInvoicesServiceUpdateRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ProformaInvoicesServiceUpdateRequest {
    return new ProformaInvoicesServiceUpdateRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ProformaInvoicesServiceUpdateRequest | PlainMessage<ProformaInvoicesServiceUpdateRequest> | undefined, b: ProformaInvoicesServiceUpdateRequest | PlainMessage<ProformaInvoicesServiceUpdateRequest> | undefined): boolean {
    return proto3.util.equals(ProformaInvoicesServiceUpdateRequest, a, b);
  }
}

/**
 *
 * Describes the parameters necessary to perform an autofill request
 *
 * @generated from message Scailo.ProformaInvoicesServiceAutofillRequest
 */
export class ProformaInvoicesServiceAutofillRequest extends Message<ProformaInvoicesServiceAutofillRequest> {
  /**
   * Stores any comment that the user might add during this operation
   *
   * @generated from field: string user_comment = 1;
   */
  userComment = "";

  /**
   * The ID of the record that needs to be updated
   *
   * @generated from field: uint64 id = 2;
   */
  id = protoInt64.zero;

  /**
   * Stores if services should also be autofilled
   *
   * @generated from field: bool include_services = 10;
   */
  includeServices = false;

  constructor(data?: PartialMessage<ProformaInvoicesServiceAutofillRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.ProformaInvoicesServiceAutofillRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "user_comment", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 10, name: "include_services", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ProformaInvoicesServiceAutofillRequest {
    return new ProformaInvoicesServiceAutofillRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ProformaInvoicesServiceAutofillRequest {
    return new ProformaInvoicesServiceAutofillRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ProformaInvoicesServiceAutofillRequest {
    return new ProformaInvoicesServiceAutofillRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ProformaInvoicesServiceAutofillRequest | PlainMessage<ProformaInvoicesServiceAutofillRequest> | undefined, b: ProformaInvoicesServiceAutofillRequest | PlainMessage<ProformaInvoicesServiceAutofillRequest> | undefined): boolean {
    return proto3.util.equals(ProformaInvoicesServiceAutofillRequest, a, b);
  }
}

/**
 *
 * Stores the UUID references of the record
 *
 * @generated from message Scailo.ProformaInvoiceAncillaryParameters
 */
export class ProformaInvoiceAncillaryParameters extends Message<ProformaInvoiceAncillaryParameters> {
  /**
   * The UUID of the ref_id (the UUID of the associated ref_id)
   *
   * @generated from field: string ref_uuid = 213;
   */
  refUuid = "";

  /**
   * The UUID of the currency (the UUID of the associated currency)
   *
   * @generated from field: string currency_uuid = 214;
   */
  currencyUuid = "";

  constructor(data?: PartialMessage<ProformaInvoiceAncillaryParameters>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.ProformaInvoiceAncillaryParameters";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 213, name: "ref_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 214, name: "currency_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ProformaInvoiceAncillaryParameters {
    return new ProformaInvoiceAncillaryParameters().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ProformaInvoiceAncillaryParameters {
    return new ProformaInvoiceAncillaryParameters().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ProformaInvoiceAncillaryParameters {
    return new ProformaInvoiceAncillaryParameters().fromJsonString(jsonString, options);
  }

  static equals(a: ProformaInvoiceAncillaryParameters | PlainMessage<ProformaInvoiceAncillaryParameters> | undefined, b: ProformaInvoiceAncillaryParameters | PlainMessage<ProformaInvoiceAncillaryParameters> | undefined): boolean {
    return proto3.util.equals(ProformaInvoiceAncillaryParameters, a, b);
  }
}

/**
 *
 * Describes the parameters that are part of a standard response
 *
 * @generated from message Scailo.ProformaInvoice
 */
export class ProformaInvoice extends Message<ProformaInvoice> {
  /**
   * Stores a globally unique entity UUID. This will be set at the organization level
   *
   * @generated from field: string entity_uuid = 1;
   */
  entityUuid = "";

  /**
   * Stores the metadata of this proforma invoice
   *
   * @generated from field: Scailo.EmployeeMetadata metadata = 2;
   */
  metadata?: EmployeeMetadata;

  /**
   * Stores the approval metadata
   *
   * @generated from field: Scailo.ApprovalMetadata approval_metadata = 3;
   */
  approvalMetadata?: ApprovalMetadata;

  /**
   * The status of this proforma invoice
   *
   * @generated from field: Scailo.STANDARD_LIFECYCLE_STATUS status = 4;
   */
  status = STANDARD_LIFECYCLE_STATUS.ANY_UNSPECIFIED;

  /**
   * Stores the logs of every operation performed on this proforma invoice
   *
   * @generated from field: repeated Scailo.LogbookLogConciseSLC logs = 5;
   */
  logs: LogbookLogConciseSLC[] = [];

  /**
   * The timestamp of when this proforma invoice was marked as completed
   *
   * @generated from field: uint64 completed_on = 6;
   */
  completedOn = protoInt64.zero;

  /**
   * The associated vault folder ID
   *
   * @generated from field: uint64 vault_folder_id = 9;
   */
  vaultFolderId = protoInt64.zero;

  /**
   * The reference ID of the proforma invoice
   *
   * @generated from field: string reference_id = 10;
   */
  referenceId = "";

  /**
   * The unique reference number that has been automatically generated
   *
   * @generated from field: string final_ref_number = 11;
   */
  finalRefNumber = "";

  /**
   * The associated reference
   *
   * @generated from field: string ref_from = 12;
   */
  refFrom = "";

  /**
   * The associated ID of the reference
   *
   * @generated from field: uint64 ref_id = 13;
   */
  refId = protoInt64.zero;

  /**
   * The associated ID of the currency
   *
   * @generated from field: uint64 currency_id = 14;
   */
  currencyId = protoInt64.zero;

  /**
   * The associated ID of the bank account
   *
   * @generated from field: uint64 bank_account_id = 15;
   */
  bankAccountId = protoInt64.zero;

  /**
   * Any miscellaneous cost
   *
   * @generated from field: uint64 miscellaneous_cost = 16;
   */
  miscellaneousCost = protoInt64.zero;

  /**
   * The optional discount amount
   *
   * @generated from field: uint64 overall_discount = 17;
   */
  overallDiscount = protoInt64.zero;

  /**
   * The applicable round off amount (optional, and can be positive or negative)
   *
   * @generated from field: int64 round_off = 18;
   */
  roundOff = protoInt64.zero;

  /**
   * The excess tax group
   *
   * @generated from field: uint64 cumulative_excess_tax_group_id = 19;
   */
  cumulativeExcessTaxGroupId = protoInt64.zero;

  /**
   * The excess tax amount
   *
   * @generated from field: uint64 cumulative_excess_tax_amount = 20;
   */
  cumulativeExcessTaxAmount = protoInt64.zero;

  /**
   * Stores the total value of the proforma invoice (as a double, which requires no adjustments)
   *
   * @generated from field: double total_value = 21;
   */
  totalValue = 0;

  /**
   * The number of times that the proforma invoice has been amended
   *
   * @generated from field: uint64 amendment_count = 22;
   */
  amendmentCount = protoInt64.zero;

  /**
   * The list of associated proforma invoice items
   *
   * @generated from field: repeated Scailo.ProformaInvoiceItem list = 30;
   */
  list: ProformaInvoiceItem[] = [];

  /**
   * The list of dynamic forms
   *
   * @generated from field: repeated Scailo.FormFieldDatum form_data = 40;
   */
  formData: FormFieldDatum[] = [];

  constructor(data?: PartialMessage<ProformaInvoice>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.ProformaInvoice";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "entity_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "metadata", kind: "message", T: EmployeeMetadata },
    { no: 3, name: "approval_metadata", kind: "message", T: ApprovalMetadata },
    { no: 4, name: "status", kind: "enum", T: proto3.getEnumType(STANDARD_LIFECYCLE_STATUS) },
    { no: 5, name: "logs", kind: "message", T: LogbookLogConciseSLC, repeated: true },
    { no: 6, name: "completed_on", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 9, name: "vault_folder_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 10, name: "reference_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 11, name: "final_ref_number", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 12, name: "ref_from", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 13, name: "ref_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 14, name: "currency_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 15, name: "bank_account_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 16, name: "miscellaneous_cost", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 17, name: "overall_discount", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 18, name: "round_off", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 19, name: "cumulative_excess_tax_group_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 20, name: "cumulative_excess_tax_amount", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 21, name: "total_value", kind: "scalar", T: 1 /* ScalarType.DOUBLE */ },
    { no: 22, name: "amendment_count", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 30, name: "list", kind: "message", T: ProformaInvoiceItem, repeated: true },
    { no: 40, name: "form_data", kind: "message", T: FormFieldDatum, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ProformaInvoice {
    return new ProformaInvoice().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ProformaInvoice {
    return new ProformaInvoice().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ProformaInvoice {
    return new ProformaInvoice().fromJsonString(jsonString, options);
  }

  static equals(a: ProformaInvoice | PlainMessage<ProformaInvoice> | undefined, b: ProformaInvoice | PlainMessage<ProformaInvoice> | undefined): boolean {
    return proto3.util.equals(ProformaInvoice, a, b);
  }
}

/**
 *
 * Describes the parameters required to add an item to a proforma invoice
 *
 * @generated from message Scailo.ProformaInvoicesServiceItemCreateRequest
 */
export class ProformaInvoicesServiceItemCreateRequest extends Message<ProformaInvoicesServiceItemCreateRequest> {
  /**
   * Stores any comment that the user might add during this operation
   *
   * @generated from field: string user_comment = 1;
   */
  userComment = "";

  /**
   * Stores the proforma invoice ID
   *
   * @generated from field: uint64 proforma_invoice_id = 10;
   */
  proformaInvoiceId = protoInt64.zero;

  /**
   * Stores the family ID
   *
   * @generated from field: uint64 family_id = 11;
   */
  familyId = protoInt64.zero;

  /**
   * The quantity (in cents) being supplied in internal unit of material
   *
   * @generated from field: uint64 internal_quantity = 12;
   */
  internalQuantity = protoInt64.zero;

  /**
   * Stores the ID of the client's unit of material
   *
   * @generated from field: uint64 client_uom_id = 13;
   */
  clientUomId = protoInt64.zero;

  /**
   * Stores the quantity (in cents) being admitted in client's unit of material
   *
   * @generated from field: uint64 client_quantity = 14;
   */
  clientQuantity = protoInt64.zero;

  /**
   * The family code as represented by the client
   *
   * @generated from field: string client_family_code = 15;
   */
  clientFamilyCode = "";

  /**
   * The unit price of the item (as supplied to the client)
   *
   * @generated from field: uint64 unit_price = 16;
   */
  unitPrice = protoInt64.zero;

  /**
   * The ID of the associated tax group
   *
   * @generated from field: uint64 tax_group_id = 17;
   */
  taxGroupId = protoInt64.zero;

  /**
   * The applicable round off amount (optional, and can be positive or negative)
   *
   * @generated from field: int64 round_off = 18;
   */
  roundOff = protoInt64.zero;

  /**
   * Optional specifications
   *
   * @generated from field: string specifications = 19;
   */
  specifications = "";

  constructor(data?: PartialMessage<ProformaInvoicesServiceItemCreateRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.ProformaInvoicesServiceItemCreateRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "user_comment", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 10, name: "proforma_invoice_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 11, name: "family_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 12, name: "internal_quantity", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 13, name: "client_uom_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 14, name: "client_quantity", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 15, name: "client_family_code", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 16, name: "unit_price", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 17, name: "tax_group_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 18, name: "round_off", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 19, name: "specifications", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ProformaInvoicesServiceItemCreateRequest {
    return new ProformaInvoicesServiceItemCreateRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ProformaInvoicesServiceItemCreateRequest {
    return new ProformaInvoicesServiceItemCreateRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ProformaInvoicesServiceItemCreateRequest {
    return new ProformaInvoicesServiceItemCreateRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ProformaInvoicesServiceItemCreateRequest | PlainMessage<ProformaInvoicesServiceItemCreateRequest> | undefined, b: ProformaInvoicesServiceItemCreateRequest | PlainMessage<ProformaInvoicesServiceItemCreateRequest> | undefined): boolean {
    return proto3.util.equals(ProformaInvoicesServiceItemCreateRequest, a, b);
  }
}

/**
 *
 * Describes the parameters required to update an item in a proforma invoice
 *
 * @generated from message Scailo.ProformaInvoicesServiceItemUpdateRequest
 */
export class ProformaInvoicesServiceItemUpdateRequest extends Message<ProformaInvoicesServiceItemUpdateRequest> {
  /**
   * Stores any comment that the user might add during this operation
   *
   * @generated from field: string user_comment = 1;
   */
  userComment = "";

  /**
   * The ID of the record
   *
   * @generated from field: uint64 id = 2;
   */
  id = protoInt64.zero;

  /**
   * The quantity (in cents) being supplied in internal unit of material
   *
   * @generated from field: uint64 internal_quantity = 12;
   */
  internalQuantity = protoInt64.zero;

  /**
   * Stores the ID of the client's unit of material
   *
   * @generated from field: uint64 client_uom_id = 13;
   */
  clientUomId = protoInt64.zero;

  /**
   * Stores the quantity (in cents) being admitted in client's unit of material
   *
   * @generated from field: uint64 client_quantity = 14;
   */
  clientQuantity = protoInt64.zero;

  /**
   * The family code as represented by the client
   *
   * @generated from field: string client_family_code = 15;
   */
  clientFamilyCode = "";

  /**
   * The unit price of the item (as supplied to the client)
   *
   * @generated from field: uint64 unit_price = 16;
   */
  unitPrice = protoInt64.zero;

  /**
   * The ID of the associated tax group
   *
   * @generated from field: uint64 tax_group_id = 17;
   */
  taxGroupId = protoInt64.zero;

  /**
   * The applicable round off amount (optional, and can be positive or negative)
   *
   * @generated from field: int64 round_off = 18;
   */
  roundOff = protoInt64.zero;

  /**
   * Optional specifications
   *
   * @generated from field: string specifications = 19;
   */
  specifications = "";

  constructor(data?: PartialMessage<ProformaInvoicesServiceItemUpdateRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.ProformaInvoicesServiceItemUpdateRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "user_comment", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 12, name: "internal_quantity", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 13, name: "client_uom_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 14, name: "client_quantity", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 15, name: "client_family_code", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 16, name: "unit_price", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 17, name: "tax_group_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 18, name: "round_off", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 19, name: "specifications", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ProformaInvoicesServiceItemUpdateRequest {
    return new ProformaInvoicesServiceItemUpdateRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ProformaInvoicesServiceItemUpdateRequest {
    return new ProformaInvoicesServiceItemUpdateRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ProformaInvoicesServiceItemUpdateRequest {
    return new ProformaInvoicesServiceItemUpdateRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ProformaInvoicesServiceItemUpdateRequest | PlainMessage<ProformaInvoicesServiceItemUpdateRequest> | undefined, b: ProformaInvoicesServiceItemUpdateRequest | PlainMessage<ProformaInvoicesServiceItemUpdateRequest> | undefined): boolean {
    return proto3.util.equals(ProformaInvoicesServiceItemUpdateRequest, a, b);
  }
}

/**
 *
 * Describes the parameters that constitute an item associated to a proforma invoice
 *
 * @generated from message Scailo.ProformaInvoiceItem
 */
export class ProformaInvoiceItem extends Message<ProformaInvoiceItem> {
  /**
   * Stores a globally unique entity UUID. This will be set at the organization level
   *
   * @generated from field: string entity_uuid = 1;
   */
  entityUuid = "";

  /**
   * Stores the metadata of this proforma invoice
   *
   * @generated from field: Scailo.EmployeeMetadata metadata = 2;
   */
  metadata?: EmployeeMetadata;

  /**
   * Stores the approval metadata
   *
   * @generated from field: Scailo.ApprovalMetadata approval_metadata = 3;
   */
  approvalMetadata?: ApprovalMetadata;

  /**
   * Denotes if this record requires approval (or has been approved)
   *
   * @generated from field: bool need_approval = 4;
   */
  needApproval = false;

  /**
   * Stores any comment that the user might have added during an operation
   *
   * @generated from field: string user_comment = 5;
   */
  userComment = "";

  /**
   * Stores the proforma invoice ID
   *
   * @generated from field: uint64 proforma_invoice_id = 10;
   */
  proformaInvoiceId = protoInt64.zero;

  /**
   * Stores the family ID
   *
   * @generated from field: uint64 family_id = 11;
   */
  familyId = protoInt64.zero;

  /**
   * The quantity (in cents) being supplied in internal unit of material
   *
   * @generated from field: uint64 internal_quantity = 12;
   */
  internalQuantity = protoInt64.zero;

  /**
   * Stores the ID of the client's unit of material
   *
   * @generated from field: uint64 client_uom_id = 13;
   */
  clientUomId = protoInt64.zero;

  /**
   * Stores the quantity (in cents) being admitted in client's unit of material
   *
   * @generated from field: uint64 client_quantity = 14;
   */
  clientQuantity = protoInt64.zero;

  /**
   * The family code as represented by the client
   *
   * @generated from field: string client_family_code = 15;
   */
  clientFamilyCode = "";

  /**
   * The unit price of the item (as supplied to the client)
   *
   * @generated from field: uint64 unit_price = 16;
   */
  unitPrice = protoInt64.zero;

  /**
   * The ID of the associated tax group
   *
   * @generated from field: uint64 tax_group_id = 17;
   */
  taxGroupId = protoInt64.zero;

  /**
   * The applicable round off amount (optional, and can be positive or negative)
   *
   * @generated from field: int64 round_off = 18;
   */
  roundOff = protoInt64.zero;

  /**
   * Optional specifications
   *
   * @generated from field: string specifications = 19;
   */
  specifications = "";

  constructor(data?: PartialMessage<ProformaInvoiceItem>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.ProformaInvoiceItem";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "entity_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "metadata", kind: "message", T: EmployeeMetadata },
    { no: 3, name: "approval_metadata", kind: "message", T: ApprovalMetadata },
    { no: 4, name: "need_approval", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 5, name: "user_comment", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 10, name: "proforma_invoice_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 11, name: "family_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 12, name: "internal_quantity", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 13, name: "client_uom_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 14, name: "client_quantity", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 15, name: "client_family_code", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 16, name: "unit_price", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 17, name: "tax_group_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 18, name: "round_off", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 19, name: "specifications", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ProformaInvoiceItem {
    return new ProformaInvoiceItem().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ProformaInvoiceItem {
    return new ProformaInvoiceItem().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ProformaInvoiceItem {
    return new ProformaInvoiceItem().fromJsonString(jsonString, options);
  }

  static equals(a: ProformaInvoiceItem | PlainMessage<ProformaInvoiceItem> | undefined, b: ProformaInvoiceItem | PlainMessage<ProformaInvoiceItem> | undefined): boolean {
    return proto3.util.equals(ProformaInvoiceItem, a, b);
  }
}

/**
 *
 * Describes the message consisting of the list of proforma invoices
 *
 * @generated from message Scailo.ProformaInvoicesList
 */
export class ProformaInvoicesList extends Message<ProformaInvoicesList> {
  /**
   * List of records
   *
   * @generated from field: repeated Scailo.ProformaInvoice list = 1;
   */
  list: ProformaInvoice[] = [];

  constructor(data?: PartialMessage<ProformaInvoicesList>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.ProformaInvoicesList";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "list", kind: "message", T: ProformaInvoice, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ProformaInvoicesList {
    return new ProformaInvoicesList().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ProformaInvoicesList {
    return new ProformaInvoicesList().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ProformaInvoicesList {
    return new ProformaInvoicesList().fromJsonString(jsonString, options);
  }

  static equals(a: ProformaInvoicesList | PlainMessage<ProformaInvoicesList> | undefined, b: ProformaInvoicesList | PlainMessage<ProformaInvoicesList> | undefined): boolean {
    return proto3.util.equals(ProformaInvoicesList, a, b);
  }
}

/**
 *
 * Describes the message consisting of the list of proforma invoice items
 *
 * @generated from message Scailo.ProformaInvoiceItemsList
 */
export class ProformaInvoiceItemsList extends Message<ProformaInvoiceItemsList> {
  /**
   * List of records
   *
   * @generated from field: repeated Scailo.ProformaInvoiceItem list = 1;
   */
  list: ProformaInvoiceItem[] = [];

  constructor(data?: PartialMessage<ProformaInvoiceItemsList>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.ProformaInvoiceItemsList";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "list", kind: "message", T: ProformaInvoiceItem, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ProformaInvoiceItemsList {
    return new ProformaInvoiceItemsList().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ProformaInvoiceItemsList {
    return new ProformaInvoiceItemsList().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ProformaInvoiceItemsList {
    return new ProformaInvoiceItemsList().fromJsonString(jsonString, options);
  }

  static equals(a: ProformaInvoiceItemsList | PlainMessage<ProformaInvoiceItemsList> | undefined, b: ProformaInvoiceItemsList | PlainMessage<ProformaInvoiceItemsList> | undefined): boolean {
    return proto3.util.equals(ProformaInvoiceItemsList, a, b);
  }
}

/**
 *
 * Describes the parameters that are required to retrieve the history of the record
 *
 * @generated from message Scailo.ProformaInvoiceItemHistoryRequest
 */
export class ProformaInvoiceItemHistoryRequest extends Message<ProformaInvoiceItemHistoryRequest> {
  /**
   * Stores the proforma invoice ID
   *
   * @generated from field: uint64 proforma_invoice_id = 10;
   */
  proformaInvoiceId = protoInt64.zero;

  /**
   * Stores the family ID
   *
   * @generated from field: uint64 family_id = 11;
   */
  familyId = protoInt64.zero;

  constructor(data?: PartialMessage<ProformaInvoiceItemHistoryRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.ProformaInvoiceItemHistoryRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 10, name: "proforma_invoice_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 11, name: "family_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ProformaInvoiceItemHistoryRequest {
    return new ProformaInvoiceItemHistoryRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ProformaInvoiceItemHistoryRequest {
    return new ProformaInvoiceItemHistoryRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ProformaInvoiceItemHistoryRequest {
    return new ProformaInvoiceItemHistoryRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ProformaInvoiceItemHistoryRequest | PlainMessage<ProformaInvoiceItemHistoryRequest> | undefined, b: ProformaInvoiceItemHistoryRequest | PlainMessage<ProformaInvoiceItemHistoryRequest> | undefined): boolean {
    return proto3.util.equals(ProformaInvoiceItemHistoryRequest, a, b);
  }
}

/**
 *
 * Describes the parameters that are required to retrieve the info of a prospective proforma invoice item
 *
 * @generated from message Scailo.ProformaInvoiceItemProspectiveInfoRequest
 */
export class ProformaInvoiceItemProspectiveInfoRequest extends Message<ProformaInvoiceItemProspectiveInfoRequest> {
  /**
   * Stores the proforma invoice ID
   *
   * @generated from field: uint64 proforma_invoice_id = 10;
   */
  proformaInvoiceId = protoInt64.zero;

  /**
   * Stores the family ID
   *
   * @generated from field: uint64 family_id = 11;
   */
  familyId = protoInt64.zero;

  constructor(data?: PartialMessage<ProformaInvoiceItemProspectiveInfoRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.ProformaInvoiceItemProspectiveInfoRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 10, name: "proforma_invoice_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 11, name: "family_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ProformaInvoiceItemProspectiveInfoRequest {
    return new ProformaInvoiceItemProspectiveInfoRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ProformaInvoiceItemProspectiveInfoRequest {
    return new ProformaInvoiceItemProspectiveInfoRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ProformaInvoiceItemProspectiveInfoRequest {
    return new ProformaInvoiceItemProspectiveInfoRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ProformaInvoiceItemProspectiveInfoRequest | PlainMessage<ProformaInvoiceItemProspectiveInfoRequest> | undefined, b: ProformaInvoiceItemProspectiveInfoRequest | PlainMessage<ProformaInvoiceItemProspectiveInfoRequest> | undefined): boolean {
    return proto3.util.equals(ProformaInvoiceItemProspectiveInfoRequest, a, b);
  }
}

/**
 *
 * Describes the request payload to retrieve the quantity that has already been added for the specific ref_from, ref_id and family_id
 *
 * @generated from message Scailo.ProformaInvoicesServiceAlreadyAddedQuantityForSourceRequest
 */
export class ProformaInvoicesServiceAlreadyAddedQuantityForSourceRequest extends Message<ProformaInvoicesServiceAlreadyAddedQuantityForSourceRequest> {
  /**
   * The associated reference
   *
   * @generated from field: string ref_from = 1;
   */
  refFrom = "";

  /**
   * The associated ID of the reference
   *
   * @generated from field: uint64 ref_id = 2;
   */
  refId = protoInt64.zero;

  /**
   * The associated family ID
   *
   * @generated from field: uint64 family_id = 3;
   */
  familyId = protoInt64.zero;

  constructor(data?: PartialMessage<ProformaInvoicesServiceAlreadyAddedQuantityForSourceRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.ProformaInvoicesServiceAlreadyAddedQuantityForSourceRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "ref_from", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "ref_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 3, name: "family_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ProformaInvoicesServiceAlreadyAddedQuantityForSourceRequest {
    return new ProformaInvoicesServiceAlreadyAddedQuantityForSourceRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ProformaInvoicesServiceAlreadyAddedQuantityForSourceRequest {
    return new ProformaInvoicesServiceAlreadyAddedQuantityForSourceRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ProformaInvoicesServiceAlreadyAddedQuantityForSourceRequest {
    return new ProformaInvoicesServiceAlreadyAddedQuantityForSourceRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ProformaInvoicesServiceAlreadyAddedQuantityForSourceRequest | PlainMessage<ProformaInvoicesServiceAlreadyAddedQuantityForSourceRequest> | undefined, b: ProformaInvoicesServiceAlreadyAddedQuantityForSourceRequest | PlainMessage<ProformaInvoicesServiceAlreadyAddedQuantityForSourceRequest> | undefined): boolean {
    return proto3.util.equals(ProformaInvoicesServiceAlreadyAddedQuantityForSourceRequest, a, b);
  }
}

/**
 *
 * Describes a pagination request to retrieve records
 *
 * @generated from message Scailo.ProformaInvoicesServicePaginationReq
 */
export class ProformaInvoicesServicePaginationReq extends Message<ProformaInvoicesServicePaginationReq> {
  /**
   * If true, then returns only active records. If false, then returns only inactive records
   *
   * @generated from field: Scailo.BOOL_FILTER is_active = 1;
   */
  isActive = BOOL_FILTER.BOOL_FILTER_ANY_UNSPECIFIED;

  /**
   * The number of records that need to be sent in the response
   *
   * @generated from field: int64 count = 2;
   */
  count = protoInt64.zero;

  /**
   * The number that need to be offset by before fetching the records
   *
   * @generated from field: uint64 offset = 3;
   */
  offset = protoInt64.zero;

  /**
   * The sort order that is to be used to fetch the pagination response
   *
   * @generated from field: Scailo.SORT_ORDER sort_order = 4;
   */
  sortOrder = SORT_ORDER.ASCENDING_UNSPECIFIED;

  /**
   * The sort key that is to be used to fetch the pagination response
   *
   * @generated from field: Scailo.PROFORMA_INVOICE_SORT_KEY sort_key = 5;
   */
  sortKey = PROFORMA_INVOICE_SORT_KEY.PROFORMA_INVOICE_SORT_KEY_ID_UNSPECIFIED;

  /**
   * The status of this proforma invoice
   *
   * @generated from field: Scailo.STANDARD_LIFECYCLE_STATUS status = 6;
   */
  status = STANDARD_LIFECYCLE_STATUS.ANY_UNSPECIFIED;

  constructor(data?: PartialMessage<ProformaInvoicesServicePaginationReq>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.ProformaInvoicesServicePaginationReq";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "is_active", kind: "enum", T: proto3.getEnumType(BOOL_FILTER) },
    { no: 2, name: "count", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "offset", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 4, name: "sort_order", kind: "enum", T: proto3.getEnumType(SORT_ORDER) },
    { no: 5, name: "sort_key", kind: "enum", T: proto3.getEnumType(PROFORMA_INVOICE_SORT_KEY) },
    { no: 6, name: "status", kind: "enum", T: proto3.getEnumType(STANDARD_LIFECYCLE_STATUS) },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ProformaInvoicesServicePaginationReq {
    return new ProformaInvoicesServicePaginationReq().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ProformaInvoicesServicePaginationReq {
    return new ProformaInvoicesServicePaginationReq().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ProformaInvoicesServicePaginationReq {
    return new ProformaInvoicesServicePaginationReq().fromJsonString(jsonString, options);
  }

  static equals(a: ProformaInvoicesServicePaginationReq | PlainMessage<ProformaInvoicesServicePaginationReq> | undefined, b: ProformaInvoicesServicePaginationReq | PlainMessage<ProformaInvoicesServicePaginationReq> | undefined): boolean {
    return proto3.util.equals(ProformaInvoicesServicePaginationReq, a, b);
  }
}

/**
 *
 * Describes the response to a pagination request
 *
 * @generated from message Scailo.ProformaInvoicesServicePaginationResponse
 */
export class ProformaInvoicesServicePaginationResponse extends Message<ProformaInvoicesServicePaginationResponse> {
  /**
   * The number of records in this payload
   *
   * @generated from field: uint64 count = 1;
   */
  count = protoInt64.zero;

  /**
   * The number that has been offset before fetching the records. This is the same value that has been sent as part of the pagination request
   *
   * @generated from field: uint64 offset = 2;
   */
  offset = protoInt64.zero;

  /**
   * The total number of records that are available
   *
   * @generated from field: uint64 total = 3;
   */
  total = protoInt64.zero;

  /**
   * The list of records
   *
   * @generated from field: repeated Scailo.ProformaInvoice payload = 4;
   */
  payload: ProformaInvoice[] = [];

  constructor(data?: PartialMessage<ProformaInvoicesServicePaginationResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.ProformaInvoicesServicePaginationResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "count", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 2, name: "offset", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 3, name: "total", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 4, name: "payload", kind: "message", T: ProformaInvoice, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ProformaInvoicesServicePaginationResponse {
    return new ProformaInvoicesServicePaginationResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ProformaInvoicesServicePaginationResponse {
    return new ProformaInvoicesServicePaginationResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ProformaInvoicesServicePaginationResponse {
    return new ProformaInvoicesServicePaginationResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ProformaInvoicesServicePaginationResponse | PlainMessage<ProformaInvoicesServicePaginationResponse> | undefined, b: ProformaInvoicesServicePaginationResponse | PlainMessage<ProformaInvoicesServicePaginationResponse> | undefined): boolean {
    return proto3.util.equals(ProformaInvoicesServicePaginationResponse, a, b);
  }
}

/**
 *
 * Describes the base request payload of a filter search
 *
 * @generated from message Scailo.ProformaInvoicesServiceFilterReq
 */
export class ProformaInvoicesServiceFilterReq extends Message<ProformaInvoicesServiceFilterReq> {
  /**
   * If true, then returns only active records. If false, then returns only inactive records
   *
   * @generated from field: Scailo.BOOL_FILTER is_active = 1;
   */
  isActive = BOOL_FILTER.BOOL_FILTER_ANY_UNSPECIFIED;

  /**
   * The number of records that need to be sent in the response. Returns all records if it is set to -1
   *
   * @generated from field: int64 count = 2;
   */
  count = protoInt64.zero;

  /**
   * The number that need to be offset by before fetching the records
   *
   * @generated from field: uint64 offset = 3;
   */
  offset = protoInt64.zero;

  /**
   * The sort order that is to be used to fetch the pagination response
   *
   * @generated from field: Scailo.SORT_ORDER sort_order = 4;
   */
  sortOrder = SORT_ORDER.ASCENDING_UNSPECIFIED;

  /**
   * The sort key that is to be used to fetch the pagination response
   *
   * @generated from field: Scailo.PROFORMA_INVOICE_SORT_KEY sort_key = 5;
   */
  sortKey = PROFORMA_INVOICE_SORT_KEY.PROFORMA_INVOICE_SORT_KEY_ID_UNSPECIFIED;

  /**
   * The minimum timestamp that needs to be considered to filter by creation
   *
   * @generated from field: uint64 creation_timestamp_start = 101;
   */
  creationTimestampStart = protoInt64.zero;

  /**
   * The maximum timestamp that needs to be considered to filter by creation
   *
   * @generated from field: uint64 creation_timestamp_end = 102;
   */
  creationTimestampEnd = protoInt64.zero;

  /**
   * The minimum timestamp that needs to be considered to filter by modification
   *
   * @generated from field: uint64 modification_timestamp_start = 103;
   */
  modificationTimestampStart = protoInt64.zero;

  /**
   * The maximum timestamp that needs to be considered to filter by modification
   *
   * @generated from field: uint64 modification_timestamp_end = 104;
   */
  modificationTimestampEnd = protoInt64.zero;

  /**
   * The entity UUID that is to be used to filter records
   *
   * @generated from field: string entity_uuid = 8;
   */
  entityUuid = "";

  /**
   * The status of this proforma invoice
   *
   * @generated from field: Scailo.STANDARD_LIFECYCLE_STATUS status = 10;
   */
  status = STANDARD_LIFECYCLE_STATUS.ANY_UNSPECIFIED;

  /**
   * The start range of approved timestamp
   *
   * @generated from field: uint64 approved_on_start = 11;
   */
  approvedOnStart = protoInt64.zero;

  /**
   * The end range of approved timestamp
   *
   * @generated from field: uint64 approved_on_end = 12;
   */
  approvedOnEnd = protoInt64.zero;

  /**
   * The ID of the approver
   *
   * @generated from field: uint64 approved_by_user_id = 13;
   */
  approvedByUserId = protoInt64.zero;

  /**
   * The role ID of the approver
   *
   * @generated from field: uint64 approver_role_id = 14;
   */
  approverRoleId = protoInt64.zero;

  /**
   * The start range of completed timestamp
   *
   * @generated from field: uint64 completed_on_start = 15;
   */
  completedOnStart = protoInt64.zero;

  /**
   * The end range of completed timestamp
   *
   * @generated from field: uint64 completed_on_end = 16;
   */
  completedOnEnd = protoInt64.zero;

  /**
   * The reference ID of the proforma invoice
   *
   * @generated from field: string reference_id = 20;
   */
  referenceId = "";

  /**
   * The unique reference number that has been automatically generated
   *
   * @generated from field: string final_ref_number = 21;
   */
  finalRefNumber = "";

  /**
   * The associated reference
   *
   * @generated from field: string ref_from = 22;
   */
  refFrom = "";

  /**
   * The associated ID of the reference
   *
   * @generated from field: uint64 ref_id = 23;
   */
  refId = protoInt64.zero;

  /**
   * The ID of the associated currency
   *
   * @generated from field: uint64 currency_id = 24;
   */
  currencyId = protoInt64.zero;

  /**
   * The associated ID of the bank account
   *
   * @generated from field: uint64 bank_account_id = 25;
   */
  bankAccountId = protoInt64.zero;

  /**
   * The ID of the family
   *
   * @generated from field: uint64 family_id = 40;
   */
  familyId = protoInt64.zero;

  /**
   * The status of the proforma invoice bill
   *
   * @generated from field: Scailo.PROFORMA_INVOICE_BILLING_STATUS billing_status = 50;
   */
  billingStatus = PROFORMA_INVOICE_BILLING_STATUS.PROFORMA_INVOICE_BILLING_STATUS_ANY_UNSPECIFIED;

  /**
   * Sales Order related filters
   * The associated consignee client ID of the linked sales order
   *
   * @generated from field: uint64 consignee_client_id = 60;
   */
  consigneeClientId = protoInt64.zero;

  /**
   * The associated buyer client ID of the linked sales order
   *
   * @generated from field: uint64 buyer_client_id = 61;
   */
  buyerClientId = protoInt64.zero;

  /**
   * The ID of the associated project of the linked sales order
   *
   * @generated from field: uint64 project_id = 62;
   */
  projectId = protoInt64.zero;

  /**
   * Stores the minimum value of the proforma invoice (ignored if 0)
   *
   * @generated from field: uint64 total_value_min = 80;
   */
  totalValueMin = protoInt64.zero;

  /**
   * Stores the maximum value of the proforma invoice (ignored if 0)
   *
   * @generated from field: uint64 total_value_max = 81;
   */
  totalValueMax = protoInt64.zero;

  constructor(data?: PartialMessage<ProformaInvoicesServiceFilterReq>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.ProformaInvoicesServiceFilterReq";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "is_active", kind: "enum", T: proto3.getEnumType(BOOL_FILTER) },
    { no: 2, name: "count", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "offset", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 4, name: "sort_order", kind: "enum", T: proto3.getEnumType(SORT_ORDER) },
    { no: 5, name: "sort_key", kind: "enum", T: proto3.getEnumType(PROFORMA_INVOICE_SORT_KEY) },
    { no: 101, name: "creation_timestamp_start", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 102, name: "creation_timestamp_end", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 103, name: "modification_timestamp_start", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 104, name: "modification_timestamp_end", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 8, name: "entity_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 10, name: "status", kind: "enum", T: proto3.getEnumType(STANDARD_LIFECYCLE_STATUS) },
    { no: 11, name: "approved_on_start", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 12, name: "approved_on_end", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 13, name: "approved_by_user_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 14, name: "approver_role_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 15, name: "completed_on_start", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 16, name: "completed_on_end", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 20, name: "reference_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 21, name: "final_ref_number", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 22, name: "ref_from", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 23, name: "ref_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 24, name: "currency_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 25, name: "bank_account_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 40, name: "family_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 50, name: "billing_status", kind: "enum", T: proto3.getEnumType(PROFORMA_INVOICE_BILLING_STATUS) },
    { no: 60, name: "consignee_client_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 61, name: "buyer_client_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 62, name: "project_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 80, name: "total_value_min", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 81, name: "total_value_max", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ProformaInvoicesServiceFilterReq {
    return new ProformaInvoicesServiceFilterReq().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ProformaInvoicesServiceFilterReq {
    return new ProformaInvoicesServiceFilterReq().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ProformaInvoicesServiceFilterReq {
    return new ProformaInvoicesServiceFilterReq().fromJsonString(jsonString, options);
  }

  static equals(a: ProformaInvoicesServiceFilterReq | PlainMessage<ProformaInvoicesServiceFilterReq> | undefined, b: ProformaInvoicesServiceFilterReq | PlainMessage<ProformaInvoicesServiceFilterReq> | undefined): boolean {
    return proto3.util.equals(ProformaInvoicesServiceFilterReq, a, b);
  }
}

/**
 *
 * Describes the base request payload of a count search
 *
 * @generated from message Scailo.ProformaInvoicesServiceCountReq
 */
export class ProformaInvoicesServiceCountReq extends Message<ProformaInvoicesServiceCountReq> {
  /**
   * If true, then returns only active records. If false, then returns only inactive records
   *
   * @generated from field: Scailo.BOOL_FILTER is_active = 1;
   */
  isActive = BOOL_FILTER.BOOL_FILTER_ANY_UNSPECIFIED;

  /**
   * The minimum timestamp that needs to be considered to filter by creation
   *
   * @generated from field: uint64 creation_timestamp_start = 101;
   */
  creationTimestampStart = protoInt64.zero;

  /**
   * The maximum timestamp that needs to be considered to filter by creation
   *
   * @generated from field: uint64 creation_timestamp_end = 102;
   */
  creationTimestampEnd = protoInt64.zero;

  /**
   * The minimum timestamp that needs to be considered to filter by modification
   *
   * @generated from field: uint64 modification_timestamp_start = 103;
   */
  modificationTimestampStart = protoInt64.zero;

  /**
   * The maximum timestamp that needs to be considered to filter by modification
   *
   * @generated from field: uint64 modification_timestamp_end = 104;
   */
  modificationTimestampEnd = protoInt64.zero;

  /**
   * The entity UUID that is to be used to filter records
   *
   * @generated from field: string entity_uuid = 8;
   */
  entityUuid = "";

  /**
   * The status of this proforma invoice
   *
   * @generated from field: Scailo.STANDARD_LIFECYCLE_STATUS status = 10;
   */
  status = STANDARD_LIFECYCLE_STATUS.ANY_UNSPECIFIED;

  /**
   * The start range of approved timestamp
   *
   * @generated from field: uint64 approved_on_start = 11;
   */
  approvedOnStart = protoInt64.zero;

  /**
   * The end range of approved timestamp
   *
   * @generated from field: uint64 approved_on_end = 12;
   */
  approvedOnEnd = protoInt64.zero;

  /**
   * The ID of the approver
   *
   * @generated from field: uint64 approved_by_user_id = 13;
   */
  approvedByUserId = protoInt64.zero;

  /**
   * The role ID of the approver
   *
   * @generated from field: uint64 approver_role_id = 14;
   */
  approverRoleId = protoInt64.zero;

  /**
   * The start range of completed timestamp
   *
   * @generated from field: uint64 completed_on_start = 15;
   */
  completedOnStart = protoInt64.zero;

  /**
   * The end range of completed timestamp
   *
   * @generated from field: uint64 completed_on_end = 16;
   */
  completedOnEnd = protoInt64.zero;

  /**
   * The reference ID of the proforma invoice
   *
   * @generated from field: string reference_id = 20;
   */
  referenceId = "";

  /**
   * The unique reference number that has been automatically generated
   *
   * @generated from field: string final_ref_number = 21;
   */
  finalRefNumber = "";

  /**
   * The associated reference
   *
   * @generated from field: string ref_from = 22;
   */
  refFrom = "";

  /**
   * The associated ID of the reference
   *
   * @generated from field: uint64 ref_id = 23;
   */
  refId = protoInt64.zero;

  /**
   * The ID of the associated currency
   *
   * @generated from field: uint64 currency_id = 24;
   */
  currencyId = protoInt64.zero;

  /**
   * The associated ID of the bank account
   *
   * @generated from field: uint64 bank_account_id = 25;
   */
  bankAccountId = protoInt64.zero;

  /**
   * The ID of the family
   *
   * @generated from field: uint64 family_id = 40;
   */
  familyId = protoInt64.zero;

  /**
   * The status of the proforma invoice bill
   *
   * @generated from field: Scailo.PROFORMA_INVOICE_BILLING_STATUS billing_status = 50;
   */
  billingStatus = PROFORMA_INVOICE_BILLING_STATUS.PROFORMA_INVOICE_BILLING_STATUS_ANY_UNSPECIFIED;

  /**
   * Sales Order related filters
   * The associated consignee client ID of the linked sales order
   *
   * @generated from field: uint64 consignee_client_id = 60;
   */
  consigneeClientId = protoInt64.zero;

  /**
   * The associated buyer client ID of the linked sales order
   *
   * @generated from field: uint64 buyer_client_id = 61;
   */
  buyerClientId = protoInt64.zero;

  /**
   * The ID of the associated project of the linked sales order
   *
   * @generated from field: uint64 project_id = 62;
   */
  projectId = protoInt64.zero;

  /**
   * Stores the minimum value of the proforma invoice (ignored if 0)
   *
   * @generated from field: uint64 total_value_min = 80;
   */
  totalValueMin = protoInt64.zero;

  /**
   * Stores the maximum value of the proforma invoice (ignored if 0)
   *
   * @generated from field: uint64 total_value_max = 81;
   */
  totalValueMax = protoInt64.zero;

  constructor(data?: PartialMessage<ProformaInvoicesServiceCountReq>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.ProformaInvoicesServiceCountReq";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "is_active", kind: "enum", T: proto3.getEnumType(BOOL_FILTER) },
    { no: 101, name: "creation_timestamp_start", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 102, name: "creation_timestamp_end", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 103, name: "modification_timestamp_start", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 104, name: "modification_timestamp_end", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 8, name: "entity_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 10, name: "status", kind: "enum", T: proto3.getEnumType(STANDARD_LIFECYCLE_STATUS) },
    { no: 11, name: "approved_on_start", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 12, name: "approved_on_end", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 13, name: "approved_by_user_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 14, name: "approver_role_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 15, name: "completed_on_start", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 16, name: "completed_on_end", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 20, name: "reference_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 21, name: "final_ref_number", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 22, name: "ref_from", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 23, name: "ref_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 24, name: "currency_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 25, name: "bank_account_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 40, name: "family_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 50, name: "billing_status", kind: "enum", T: proto3.getEnumType(PROFORMA_INVOICE_BILLING_STATUS) },
    { no: 60, name: "consignee_client_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 61, name: "buyer_client_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 62, name: "project_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 80, name: "total_value_min", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 81, name: "total_value_max", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ProformaInvoicesServiceCountReq {
    return new ProformaInvoicesServiceCountReq().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ProformaInvoicesServiceCountReq {
    return new ProformaInvoicesServiceCountReq().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ProformaInvoicesServiceCountReq {
    return new ProformaInvoicesServiceCountReq().fromJsonString(jsonString, options);
  }

  static equals(a: ProformaInvoicesServiceCountReq | PlainMessage<ProformaInvoicesServiceCountReq> | undefined, b: ProformaInvoicesServiceCountReq | PlainMessage<ProformaInvoicesServiceCountReq> | undefined): boolean {
    return proto3.util.equals(ProformaInvoicesServiceCountReq, a, b);
  }
}

/**
 *
 * Describes the request payload for performing a generic search operation on records
 *
 * @generated from message Scailo.ProformaInvoicesServiceSearchAllReq
 */
export class ProformaInvoicesServiceSearchAllReq extends Message<ProformaInvoicesServiceSearchAllReq> {
  /**
   * If true, then returns only active records. If false, then returns only inactive records
   *
   * @generated from field: Scailo.BOOL_FILTER is_active = 1;
   */
  isActive = BOOL_FILTER.BOOL_FILTER_ANY_UNSPECIFIED;

  /**
   * The number of records that need to be sent in the response. Returns all records if it is set to -1
   *
   * @generated from field: int64 count = 2;
   */
  count = protoInt64.zero;

  /**
   * The number that need to be offset by before fetching the records
   *
   * @generated from field: uint64 offset = 3;
   */
  offset = protoInt64.zero;

  /**
   * The sort order that is to be used to fetch the pagination response
   *
   * @generated from field: Scailo.SORT_ORDER sort_order = 4;
   */
  sortOrder = SORT_ORDER.ASCENDING_UNSPECIFIED;

  /**
   * The sort key that is to be used to fetch the pagination response
   *
   * @generated from field: Scailo.PROFORMA_INVOICE_SORT_KEY sort_key = 5;
   */
  sortKey = PROFORMA_INVOICE_SORT_KEY.PROFORMA_INVOICE_SORT_KEY_ID_UNSPECIFIED;

  /**
   * The entity UUID that is to be used to filter records
   *
   * @generated from field: string entity_uuid = 6;
   */
  entityUuid = "";

  /**
   * Limit the search space to the given status
   *
   * @generated from field: Scailo.STANDARD_LIFECYCLE_STATUS status = 10;
   */
  status = STANDARD_LIFECYCLE_STATUS.ANY_UNSPECIFIED;

  /**
   * Describes the key with which the search operation needs to be performed
   *
   * @generated from field: string search_key = 11;
   */
  searchKey = "";

  /**
   * The associated reference
   *
   * @generated from field: string ref_from = 22;
   */
  refFrom = "";

  /**
   * The associated ID of the reference
   *
   * @generated from field: uint64 ref_id = 23;
   */
  refId = protoInt64.zero;

  /**
   * The status of the proforma invoice bill
   *
   * @generated from field: Scailo.PROFORMA_INVOICE_BILLING_STATUS billing_status = 40;
   */
  billingStatus = PROFORMA_INVOICE_BILLING_STATUS.PROFORMA_INVOICE_BILLING_STATUS_ANY_UNSPECIFIED;

  /**
   * Sales Order related filters
   * The associated consignee client ID of the linked sales order
   *
   * @generated from field: uint64 consignee_client_id = 50;
   */
  consigneeClientId = protoInt64.zero;

  /**
   * The associated buyer client ID of the linked sales order
   *
   * @generated from field: uint64 buyer_client_id = 51;
   */
  buyerClientId = protoInt64.zero;

  constructor(data?: PartialMessage<ProformaInvoicesServiceSearchAllReq>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.ProformaInvoicesServiceSearchAllReq";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "is_active", kind: "enum", T: proto3.getEnumType(BOOL_FILTER) },
    { no: 2, name: "count", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "offset", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 4, name: "sort_order", kind: "enum", T: proto3.getEnumType(SORT_ORDER) },
    { no: 5, name: "sort_key", kind: "enum", T: proto3.getEnumType(PROFORMA_INVOICE_SORT_KEY) },
    { no: 6, name: "entity_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 10, name: "status", kind: "enum", T: proto3.getEnumType(STANDARD_LIFECYCLE_STATUS) },
    { no: 11, name: "search_key", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 22, name: "ref_from", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 23, name: "ref_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 40, name: "billing_status", kind: "enum", T: proto3.getEnumType(PROFORMA_INVOICE_BILLING_STATUS) },
    { no: 50, name: "consignee_client_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 51, name: "buyer_client_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ProformaInvoicesServiceSearchAllReq {
    return new ProformaInvoicesServiceSearchAllReq().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ProformaInvoicesServiceSearchAllReq {
    return new ProformaInvoicesServiceSearchAllReq().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ProformaInvoicesServiceSearchAllReq {
    return new ProformaInvoicesServiceSearchAllReq().fromJsonString(jsonString, options);
  }

  static equals(a: ProformaInvoicesServiceSearchAllReq | PlainMessage<ProformaInvoicesServiceSearchAllReq> | undefined, b: ProformaInvoicesServiceSearchAllReq | PlainMessage<ProformaInvoicesServiceSearchAllReq> | undefined): boolean {
    return proto3.util.equals(ProformaInvoicesServiceSearchAllReq, a, b);
  }
}

/**
 *
 * Describes the request payload to retrieve approved or unapproved items.
 *
 * @generated from message Scailo.ProformaInvoiceItemsSearchRequest
 */
export class ProformaInvoiceItemsSearchRequest extends Message<ProformaInvoiceItemsSearchRequest> {
  /**
   * If true, then returns only active records. If false, then returns only inactive records
   *
   * @generated from field: Scailo.BOOL_FILTER is_active = 1;
   */
  isActive = BOOL_FILTER.BOOL_FILTER_ANY_UNSPECIFIED;

  /**
   * The number of records that need to be sent in the response. Returns all records if it is set to -1
   *
   * @generated from field: int64 count = 2;
   */
  count = protoInt64.zero;

  /**
   * The number that need to be offset by before fetching the records
   *
   * @generated from field: uint64 offset = 3;
   */
  offset = protoInt64.zero;

  /**
   * The sort order that is to be used to fetch the pagination response
   *
   * @generated from field: Scailo.SORT_ORDER sort_order = 4;
   */
  sortOrder = SORT_ORDER.ASCENDING_UNSPECIFIED;

  /**
   * The sort key that is to be used to fetch the pagination response
   *
   * @generated from field: Scailo.PROFORMA_INVOICE_ITEM_SORT_KEY sort_key = 5;
   */
  sortKey = PROFORMA_INVOICE_ITEM_SORT_KEY.PROFORMA_INVOICE_ITEM_SORT_KEY_ID_UNSPECIFIED;

  /**
   * The entity UUID that is to be used to filter records
   *
   * @generated from field: string entity_uuid = 6;
   */
  entityUuid = "";

  /**
   * The status of the items
   *
   * @generated from field: Scailo.PROFORMA_INVOICE_ITEM_STATUS status = 7;
   */
  status = PROFORMA_INVOICE_ITEM_STATUS.PROFORMA_INVOICE_ITEM_STATUS_ANY_UNSPECIFIED;

  /**
   * The start range of approved timestamp
   *
   * @generated from field: uint64 approved_on_start = 10;
   */
  approvedOnStart = protoInt64.zero;

  /**
   * The end range of approved timestamp
   *
   * @generated from field: uint64 approved_on_end = 11;
   */
  approvedOnEnd = protoInt64.zero;

  /**
   * The ID of the approver
   *
   * @generated from field: uint64 approved_by_user_id = 12;
   */
  approvedByUserId = protoInt64.zero;

  /**
   * The role ID of the approver
   *
   * @generated from field: uint64 approver_role_id = 13;
   */
  approverRoleId = protoInt64.zero;

  /**
   * The ID of the proforma invoice
   *
   * @generated from field: uint64 proforma_invoice_id = 20;
   */
  proformaInvoiceId = protoInt64.zero;

  /**
   * The ID of the family
   *
   * @generated from field: uint64 family_id = 21;
   */
  familyId = protoInt64.zero;

  /**
   * The ID of the client's unit of material
   *
   * @generated from field: uint64 client_uom_id = 23;
   */
  clientUomId = protoInt64.zero;

  /**
   * Stores the family code as given by the client
   *
   * @generated from field: string client_family_code = 25;
   */
  clientFamilyCode = "";

  /**
   * The ID of the tax group
   *
   * @generated from field: uint64 tax_group_id = 27;
   */
  taxGroupId = protoInt64.zero;

  /**
   * Describes the key with which the search operation needs to be performed
   *
   * @generated from field: string search_key = 40;
   */
  searchKey = "";

  constructor(data?: PartialMessage<ProformaInvoiceItemsSearchRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.ProformaInvoiceItemsSearchRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "is_active", kind: "enum", T: proto3.getEnumType(BOOL_FILTER) },
    { no: 2, name: "count", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "offset", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 4, name: "sort_order", kind: "enum", T: proto3.getEnumType(SORT_ORDER) },
    { no: 5, name: "sort_key", kind: "enum", T: proto3.getEnumType(PROFORMA_INVOICE_ITEM_SORT_KEY) },
    { no: 6, name: "entity_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 7, name: "status", kind: "enum", T: proto3.getEnumType(PROFORMA_INVOICE_ITEM_STATUS) },
    { no: 10, name: "approved_on_start", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 11, name: "approved_on_end", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 12, name: "approved_by_user_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 13, name: "approver_role_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 20, name: "proforma_invoice_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 21, name: "family_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 23, name: "client_uom_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 25, name: "client_family_code", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 27, name: "tax_group_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 40, name: "search_key", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ProformaInvoiceItemsSearchRequest {
    return new ProformaInvoiceItemsSearchRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ProformaInvoiceItemsSearchRequest {
    return new ProformaInvoiceItemsSearchRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ProformaInvoiceItemsSearchRequest {
    return new ProformaInvoiceItemsSearchRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ProformaInvoiceItemsSearchRequest | PlainMessage<ProformaInvoiceItemsSearchRequest> | undefined, b: ProformaInvoiceItemsSearchRequest | PlainMessage<ProformaInvoiceItemsSearchRequest> | undefined): boolean {
    return proto3.util.equals(ProformaInvoiceItemsSearchRequest, a, b);
  }
}

/**
 *
 * Describes the response to a pagination items request
 *
 * @generated from message Scailo.ProformaInvoicesServicePaginatedItemsResponse
 */
export class ProformaInvoicesServicePaginatedItemsResponse extends Message<ProformaInvoicesServicePaginatedItemsResponse> {
  /**
   * The number of records in this payload
   *
   * @generated from field: uint64 count = 1;
   */
  count = protoInt64.zero;

  /**
   * The number that has been offset before fetching the records. This is the same value that has been sent as part of the pagination request
   *
   * @generated from field: uint64 offset = 2;
   */
  offset = protoInt64.zero;

  /**
   * The total number of records that are available
   *
   * @generated from field: uint64 total = 3;
   */
  total = protoInt64.zero;

  /**
   * The list of records
   *
   * @generated from field: repeated Scailo.ProformaInvoiceItem payload = 4;
   */
  payload: ProformaInvoiceItem[] = [];

  constructor(data?: PartialMessage<ProformaInvoicesServicePaginatedItemsResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.ProformaInvoicesServicePaginatedItemsResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "count", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 2, name: "offset", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 3, name: "total", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 4, name: "payload", kind: "message", T: ProformaInvoiceItem, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ProformaInvoicesServicePaginatedItemsResponse {
    return new ProformaInvoicesServicePaginatedItemsResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ProformaInvoicesServicePaginatedItemsResponse {
    return new ProformaInvoicesServicePaginatedItemsResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ProformaInvoicesServicePaginatedItemsResponse {
    return new ProformaInvoicesServicePaginatedItemsResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ProformaInvoicesServicePaginatedItemsResponse | PlainMessage<ProformaInvoicesServicePaginatedItemsResponse> | undefined, b: ProformaInvoicesServicePaginatedItemsResponse | PlainMessage<ProformaInvoicesServicePaginatedItemsResponse> | undefined): boolean {
    return proto3.util.equals(ProformaInvoicesServicePaginatedItemsResponse, a, b);
  }
}

