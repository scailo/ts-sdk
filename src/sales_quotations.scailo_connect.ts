// @generated by protoc-gen-connect-es v0.12.0 with parameter "target=ts"
// @generated from file sales_quotations.scailo.proto (package Scailo, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { SalesQuotation, SalesQuotationContact, SalesQuotationContactsList, SalesQuotationItem, SalesQuotationItemHistoryRequest, SalesQuotationItemProspectiveInfoRequest, SalesQuotationItemsList, SalesQuotationItemsSearchRequest, SalesQuotationReference, SalesQuotationReferencesList, SalesQuotationsList, SalesQuotationsServiceAutofillRequest, SalesQuotationsServiceContactCreateRequest, SalesQuotationsServiceCountReq, SalesQuotationsServiceCreateRequest, SalesQuotationsServiceFilterReq, SalesQuotationsServiceItemCreateRequest, SalesQuotationsServiceItemUpdateRequest, SalesQuotationsServicePaginatedItemsResponse, SalesQuotationsServicePaginationReq, SalesQuotationsServicePaginationResponse, SalesQuotationsServiceReferenceCreateRequest, SalesQuotationsServiceSearchAllReq, SalesQuotationsServiceUpdateRequest } from "./sales_quotations.scailo_pb.js";
import { ActiveStatus, AmendmentLogsList, CountInSLCStatusRequest, CountResponse, Identifier, IdentifierResponse, IdentifiersList, IdentifierUUID, IdentifierUUIDWithUserComment, IdentifierWithEmailAttributes, IdentifierWithFile, IdentifierWithSearchKey, IdentifierWithUserComment, PriceResponse, ReorderItemsRequest, RepeatWithDeliveryDate, StandardFile } from "./base.scailo_pb.js";
import { MethodKind } from "@bufbuild/protobuf";
import { FamiliesList } from "./families.scailo_pb.js";

/**
 *
 * Describes the common methods applicable on each sales quotation
 *
 * @generated from service Scailo.SalesQuotationsService
 */
export const SalesQuotationsService = {
  typeName: "Scailo.SalesQuotationsService",
  methods: {
    /**
     * Create and send for verification
     *
     * @generated from rpc Scailo.SalesQuotationsService.Create
     */
    create: {
      name: "Create",
      I: SalesQuotationsServiceCreateRequest,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Create and save as draft
     *
     * @generated from rpc Scailo.SalesQuotationsService.Draft
     */
    draft: {
      name: "Draft",
      I: SalesQuotationsServiceCreateRequest,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Update draft
     *
     * @generated from rpc Scailo.SalesQuotationsService.DraftUpdate
     */
    draftUpdate: {
      name: "DraftUpdate",
      I: SalesQuotationsServiceUpdateRequest,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Send for verification
     *
     * @generated from rpc Scailo.SalesQuotationsService.SendForVerification
     */
    sendForVerification: {
      name: "SendForVerification",
      I: IdentifierUUIDWithUserComment,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Verify
     *
     * @generated from rpc Scailo.SalesQuotationsService.Verify
     */
    verify: {
      name: "Verify",
      I: IdentifierUUIDWithUserComment,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Approve
     *
     * @generated from rpc Scailo.SalesQuotationsService.Approve
     */
    approve: {
      name: "Approve",
      I: IdentifierUUIDWithUserComment,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Send For Revision
     *
     * @generated from rpc Scailo.SalesQuotationsService.SendForRevision
     */
    sendForRevision: {
      name: "SendForRevision",
      I: IdentifierUUIDWithUserComment,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Update revision
     *
     * @generated from rpc Scailo.SalesQuotationsService.RevisionUpdate
     */
    revisionUpdate: {
      name: "RevisionUpdate",
      I: SalesQuotationsServiceUpdateRequest,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Halt
     *
     * @generated from rpc Scailo.SalesQuotationsService.Halt
     */
    halt: {
      name: "Halt",
      I: IdentifierUUIDWithUserComment,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Discard
     *
     * @generated from rpc Scailo.SalesQuotationsService.Discard
     */
    discard: {
      name: "Discard",
      I: IdentifierUUIDWithUserComment,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Restore
     *
     * @generated from rpc Scailo.SalesQuotationsService.Restore
     */
    restore: {
      name: "Restore",
      I: IdentifierUUIDWithUserComment,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Complete
     *
     * @generated from rpc Scailo.SalesQuotationsService.Complete
     */
    complete: {
      name: "Complete",
      I: IdentifierUUIDWithUserComment,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Repeat
     *
     * @generated from rpc Scailo.SalesQuotationsService.Repeat
     */
    repeat: {
      name: "Repeat",
      I: RepeatWithDeliveryDate,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Reopen
     *
     * @generated from rpc Scailo.SalesQuotationsService.Reopen
     */
    reopen: {
      name: "Reopen",
      I: IdentifierUUIDWithUserComment,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Add comment
     *
     * @generated from rpc Scailo.SalesQuotationsService.CommentAdd
     */
    commentAdd: {
      name: "CommentAdd",
      I: IdentifierUUIDWithUserComment,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Send Email
     *
     * @generated from rpc Scailo.SalesQuotationsService.SendEmail
     */
    sendEmail: {
      name: "SendEmail",
      I: IdentifierWithEmailAttributes,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Autofill the sales quotation
     *
     * @generated from rpc Scailo.SalesQuotationsService.Autofill
     */
    autofill: {
      name: "Autofill",
      I: SalesQuotationsServiceAutofillRequest,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Amend the sales quotation and send for revision
     *
     * @generated from rpc Scailo.SalesQuotationsService.Amend
     */
    amend: {
      name: "Amend",
      I: IdentifierUUIDWithUserComment,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Add an item to a sales quotation
     *
     * @generated from rpc Scailo.SalesQuotationsService.AddSalesQuotationItem
     */
    addSalesQuotationItem: {
      name: "AddSalesQuotationItem",
      I: SalesQuotationsServiceItemCreateRequest,
      O: IdentifiersList,
      kind: MethodKind.Unary,
    },
    /**
     * Modify an item in a sales quotation
     *
     * @generated from rpc Scailo.SalesQuotationsService.ModifySalesQuotationItem
     */
    modifySalesQuotationItem: {
      name: "ModifySalesQuotationItem",
      I: SalesQuotationsServiceItemUpdateRequest,
      O: IdentifiersList,
      kind: MethodKind.Unary,
    },
    /**
     * Approve an item in a sales quotation
     *
     * @generated from rpc Scailo.SalesQuotationsService.ApproveSalesQuotationItem
     */
    approveSalesQuotationItem: {
      name: "ApproveSalesQuotationItem",
      I: IdentifierWithUserComment,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Delete an item in a sales quotation
     *
     * @generated from rpc Scailo.SalesQuotationsService.DeleteSalesQuotationItem
     */
    deleteSalesQuotationItem: {
      name: "DeleteSalesQuotationItem",
      I: IdentifierWithUserComment,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Reorder items in a sales quotation
     *
     * @generated from rpc Scailo.SalesQuotationsService.ReorderSalesQuotationItems
     */
    reorderSalesQuotationItems: {
      name: "ReorderSalesQuotationItems",
      I: ReorderItemsRequest,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * View Sales Quotation Item by ID
     *
     * @generated from rpc Scailo.SalesQuotationsService.ViewSalesQuotationItemByID
     */
    viewSalesQuotationItemByID: {
      name: "ViewSalesQuotationItemByID",
      I: Identifier,
      O: SalesQuotationItem,
      kind: MethodKind.Unary,
    },
    /**
     * View Sales Quotation Item's price after factoring in the discount
     *
     * @generated from rpc Scailo.SalesQuotationsService.ViewSalesQuotationItemPrice
     */
    viewSalesQuotationItemPrice: {
      name: "ViewSalesQuotationItemPrice",
      I: SalesQuotationItemProspectiveInfoRequest,
      O: PriceResponse,
      kind: MethodKind.Unary,
    },
    /**
     * View approved sales quotation items for given sales quotation ID
     *
     * @generated from rpc Scailo.SalesQuotationsService.ViewApprovedSalesQuotationItems
     */
    viewApprovedSalesQuotationItems: {
      name: "ViewApprovedSalesQuotationItems",
      I: IdentifierWithSearchKey,
      O: SalesQuotationItemsList,
      kind: MethodKind.Unary,
    },
    /**
     * View unapproved sales quotation items for given sales quotation ID
     *
     * @generated from rpc Scailo.SalesQuotationsService.ViewUnapprovedSalesQuotationItems
     */
    viewUnapprovedSalesQuotationItems: {
      name: "ViewUnapprovedSalesQuotationItems",
      I: IdentifierWithSearchKey,
      O: SalesQuotationItemsList,
      kind: MethodKind.Unary,
    },
    /**
     * View the history of the sales quotation item
     *
     * @generated from rpc Scailo.SalesQuotationsService.ViewSalesQuotationItemHistory
     */
    viewSalesQuotationItemHistory: {
      name: "ViewSalesQuotationItemHistory",
      I: SalesQuotationItemHistoryRequest,
      O: SalesQuotationItemsList,
      kind: MethodKind.Unary,
    },
    /**
     * View approved sales quotation items for given sales quotation ID with pagination
     *
     * @generated from rpc Scailo.SalesQuotationsService.ViewPaginatedApprovedSalesQuotationItems
     */
    viewPaginatedApprovedSalesQuotationItems: {
      name: "ViewPaginatedApprovedSalesQuotationItems",
      I: SalesQuotationItemsSearchRequest,
      O: SalesQuotationsServicePaginatedItemsResponse,
      kind: MethodKind.Unary,
    },
    /**
     * View unapproved sales quotation items for given sales quotation ID with pagination
     *
     * @generated from rpc Scailo.SalesQuotationsService.ViewPaginatedUnapprovedSalesQuotationItems
     */
    viewPaginatedUnapprovedSalesQuotationItems: {
      name: "ViewPaginatedUnapprovedSalesQuotationItems",
      I: SalesQuotationItemsSearchRequest,
      O: SalesQuotationsServicePaginatedItemsResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Search through sales quotation items with pagination
     *
     * @generated from rpc Scailo.SalesQuotationsService.SearchItemsWithPagination
     */
    searchItemsWithPagination: {
      name: "SearchItemsWithPagination",
      I: SalesQuotationItemsSearchRequest,
      O: SalesQuotationsServicePaginatedItemsResponse,
      kind: MethodKind.Unary,
    },
    /**
     * CSV operations
     * Download the CSV file that could be used to upload items from the filled CSV file. The same file can also be used as a template when there are no existing records
     *
     * @generated from rpc Scailo.SalesQuotationsService.DownloadAsCSV
     */
    downloadAsCSV: {
      name: "DownloadAsCSV",
      I: IdentifierUUID,
      O: StandardFile,
      kind: MethodKind.Unary,
    },
    /**
     * Upload items using a CSV file. This is an idempotent operation. All the existing items are deleted before adding the items from the file.
     *
     * @generated from rpc Scailo.SalesQuotationsService.UploadSalesQuotationItems
     */
    uploadSalesQuotationItems: {
      name: "UploadSalesQuotationItems",
      I: IdentifierWithFile,
      O: IdentifiersList,
      kind: MethodKind.Unary,
    },
    /**
     * Add a contact
     *
     * @generated from rpc Scailo.SalesQuotationsService.AddSalesQuotationContact
     */
    addSalesQuotationContact: {
      name: "AddSalesQuotationContact",
      I: SalesQuotationsServiceContactCreateRequest,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Approve a contact
     *
     * @generated from rpc Scailo.SalesQuotationsService.ApproveSalesQuotationContact
     */
    approveSalesQuotationContact: {
      name: "ApproveSalesQuotationContact",
      I: IdentifierWithUserComment,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Delete a contact
     *
     * @generated from rpc Scailo.SalesQuotationsService.DeleteSalesQuotationContact
     */
    deleteSalesQuotationContact: {
      name: "DeleteSalesQuotationContact",
      I: IdentifierWithUserComment,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * View a contact for the given ID
     *
     * @generated from rpc Scailo.SalesQuotationsService.ViewSalesQuotationContactByID
     */
    viewSalesQuotationContactByID: {
      name: "ViewSalesQuotationContactByID",
      I: Identifier,
      O: SalesQuotationContact,
      kind: MethodKind.Unary,
    },
    /**
     * View all contacts for given sales quotation UUID
     *
     * @generated from rpc Scailo.SalesQuotationsService.ViewSalesQuotationContacts
     */
    viewSalesQuotationContacts: {
      name: "ViewSalesQuotationContacts",
      I: IdentifierUUID,
      O: SalesQuotationContactsList,
      kind: MethodKind.Unary,
    },
    /**
     * Add a reference
     *
     * @generated from rpc Scailo.SalesQuotationsService.AddSalesQuotationReference
     */
    addSalesQuotationReference: {
      name: "AddSalesQuotationReference",
      I: SalesQuotationsServiceReferenceCreateRequest,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Approve a reference
     *
     * @generated from rpc Scailo.SalesQuotationsService.ApproveSalesQuotationReference
     */
    approveSalesQuotationReference: {
      name: "ApproveSalesQuotationReference",
      I: IdentifierWithUserComment,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Delete a reference
     *
     * @generated from rpc Scailo.SalesQuotationsService.DeleteSalesQuotationReference
     */
    deleteSalesQuotationReference: {
      name: "DeleteSalesQuotationReference",
      I: IdentifierWithUserComment,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * View a reference for the given ID
     *
     * @generated from rpc Scailo.SalesQuotationsService.ViewSalesQuotationReferenceByID
     */
    viewSalesQuotationReferenceByID: {
      name: "ViewSalesQuotationReferenceByID",
      I: Identifier,
      O: SalesQuotationReference,
      kind: MethodKind.Unary,
    },
    /**
     * View all references for given sales quotation ID
     *
     * @generated from rpc Scailo.SalesQuotationsService.ViewSalesQuotationReferences
     */
    viewSalesQuotationReferences: {
      name: "ViewSalesQuotationReferences",
      I: Identifier,
      O: SalesQuotationReferencesList,
      kind: MethodKind.Unary,
    },
    /**
     * View by ID
     *
     * @generated from rpc Scailo.SalesQuotationsService.ViewByID
     */
    viewByID: {
      name: "ViewByID",
      I: Identifier,
      O: SalesQuotation,
      kind: MethodKind.Unary,
    },
    /**
     * View by UUID
     *
     * @generated from rpc Scailo.SalesQuotationsService.ViewByUUID
     */
    viewByUUID: {
      name: "ViewByUUID",
      I: IdentifierUUID,
      O: SalesQuotation,
      kind: MethodKind.Unary,
    },
    /**
     * View only essential components of the record
     *
     * @generated from rpc Scailo.SalesQuotationsService.ViewEssentialByID
     */
    viewEssentialByID: {
      name: "ViewEssentialByID",
      I: Identifier,
      O: SalesQuotation,
      kind: MethodKind.Unary,
    },
    /**
     * View all
     *
     * @generated from rpc Scailo.SalesQuotationsService.ViewAll
     */
    viewAll: {
      name: "ViewAll",
      I: ActiveStatus,
      O: SalesQuotationsList,
      kind: MethodKind.Unary,
    },
    /**
     * View all with the given entity UUID
     *
     * @generated from rpc Scailo.SalesQuotationsService.ViewAllForEntityUUID
     */
    viewAllForEntityUUID: {
      name: "ViewAllForEntityUUID",
      I: IdentifierUUID,
      O: SalesQuotationsList,
      kind: MethodKind.Unary,
    },
    /**
     * View with pagination
     *
     * @generated from rpc Scailo.SalesQuotationsService.ViewWithPagination
     */
    viewWithPagination: {
      name: "ViewWithPagination",
      I: SalesQuotationsServicePaginationReq,
      O: SalesQuotationsServicePaginationResponse,
      kind: MethodKind.Unary,
    },
    /**
     * View all the amendments made
     *
     * @generated from rpc Scailo.SalesQuotationsService.ViewAmendments
     */
    viewAmendments: {
      name: "ViewAmendments",
      I: Identifier,
      O: AmendmentLogsList,
      kind: MethodKind.Unary,
    },
    /**
     * View prospective families for the given sales quotation
     *
     * @generated from rpc Scailo.SalesQuotationsService.ViewProspectiveFamilies
     */
    viewProspectiveFamilies: {
      name: "ViewProspectiveFamilies",
      I: IdentifierWithSearchKey,
      O: FamiliesList,
      kind: MethodKind.Unary,
    },
    /**
     * View prospective sales quotation item info for the given family ID and sales quotation ID
     *
     * @generated from rpc Scailo.SalesQuotationsService.ViewProspectiveSalesQuotationItem
     */
    viewProspectiveSalesQuotationItem: {
      name: "ViewProspectiveSalesQuotationItem",
      I: SalesQuotationItemProspectiveInfoRequest,
      O: SalesQuotationsServiceItemCreateRequest,
      kind: MethodKind.Unary,
    },
    /**
     * Other view operations
     * View all sales orders IDs that are associated with the given sales quotation ID
     *
     * @generated from rpc Scailo.SalesQuotationsService.ViewAssociatedSalesOrdersIDs
     */
    viewAssociatedSalesOrdersIDs: {
      name: "ViewAssociatedSalesOrdersIDs",
      I: Identifier,
      O: IdentifiersList,
      kind: MethodKind.Unary,
    },
    /**
     * Download sales quotation with the given IdentifierUUID (can be used to allow public downloads)
     *
     * @generated from rpc Scailo.SalesQuotationsService.DownloadByUUID
     */
    downloadByUUID: {
      name: "DownloadByUUID",
      I: IdentifierUUID,
      O: StandardFile,
      kind: MethodKind.Unary,
    },
    /**
     * View all that match the given search key
     *
     * @generated from rpc Scailo.SalesQuotationsService.SearchAll
     */
    searchAll: {
      name: "SearchAll",
      I: SalesQuotationsServiceSearchAllReq,
      O: SalesQuotationsList,
      kind: MethodKind.Unary,
    },
    /**
     * View all that match the given filter criteria
     *
     * @generated from rpc Scailo.SalesQuotationsService.Filter
     */
    filter: {
      name: "Filter",
      I: SalesQuotationsServiceFilterReq,
      O: SalesQuotationsList,
      kind: MethodKind.Unary,
    },
    /**
     * Count in status
     *
     * @generated from rpc Scailo.SalesQuotationsService.CountInStatus
     */
    countInStatus: {
      name: "CountInStatus",
      I: CountInSLCStatusRequest,
      O: CountResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Count all that match the given criteria
     *
     * @generated from rpc Scailo.SalesQuotationsService.Count
     */
    count: {
      name: "Count",
      I: SalesQuotationsServiceCountReq,
      O: CountResponse,
      kind: MethodKind.Unary,
    },
  }
} as const;

