// @generated by protoc-gen-connect-es v0.12.0 with parameter "target=ts"
// @generated from file inward_jobs.scailo.proto (package Scailo, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { InwardJob, InwardJobContact, InwardJobContactsList, InwardJobInwardItem, InwardJobInwardItemHistoryRequest, InwardJobInwardItemProspectiveInfoRequest, InwardJobInwardItemsSearchRequest, InwardJobOutwardItem, InwardJobOutwardItemHistoryRequest, InwardJobOutwardItemProspectiveInfoRequest, InwardJobOutwardItemsSearchRequest, InwardJobsInwardItemsList, InwardJobsList, InwardJobsOutwardItemsList, InwardJobsServiceAutofillRequest, InwardJobsServiceContactCreateRequest, InwardJobsServiceCountReq, InwardJobsServiceCreateRequest, InwardJobsServiceFilterReq, InwardJobsServiceInwardItemCreateRequest, InwardJobsServiceInwardItemUpdateRequest, InwardJobsServiceMultipleInwardItemsCreateRequest, InwardJobsServiceMultipleOutwardItemsCreateRequest, InwardJobsServiceOutwardItemCreateRequest, InwardJobsServiceOutwardItemUpdateRequest, InwardJobsServicePaginatedInwardItemsResponse, InwardJobsServicePaginatedOutwardItemsResponse, InwardJobsServicePaginationReq, InwardJobsServicePaginationResponse, InwardJobsServiceSearchAllReq, InwardJobsServiceUpdateRequest } from "./inward_jobs.scailo_pb.js";
import { ActiveStatus, BooleanResponse, CountInSLCStatusRequest, CountResponse, Identifier, IdentifiersList, IdentifierUUID, IdentifierWithEmailAttributes, IdentifierWithFile, IdentifierWithSearchKey, IdentifierWithUserComment, ReorderItemsRequest, RepeatWithDeliveryDate, StandardFile } from "./base.scailo_pb.js";
import { MethodKind } from "@bufbuild/protobuf";
import { FamiliesList } from "./families.scailo_pb.js";

/**
 *
 * Describes the common methods applicable on each inward job
 *
 * @generated from service Scailo.InwardJobsService
 */
export const InwardJobsService = {
  typeName: "Scailo.InwardJobsService",
  methods: {
    /**
     * Create and send for verification
     *
     * @generated from rpc Scailo.InwardJobsService.Create
     */
    create: {
      name: "Create",
      I: InwardJobsServiceCreateRequest,
      O: Identifier,
      kind: MethodKind.Unary,
    },
    /**
     * Create and save as draft
     *
     * @generated from rpc Scailo.InwardJobsService.Draft
     */
    draft: {
      name: "Draft",
      I: InwardJobsServiceCreateRequest,
      O: Identifier,
      kind: MethodKind.Unary,
    },
    /**
     * Update draft
     *
     * @generated from rpc Scailo.InwardJobsService.DraftUpdate
     */
    draftUpdate: {
      name: "DraftUpdate",
      I: InwardJobsServiceUpdateRequest,
      O: Identifier,
      kind: MethodKind.Unary,
    },
    /**
     * Send for verification
     *
     * @generated from rpc Scailo.InwardJobsService.SendForVerification
     */
    sendForVerification: {
      name: "SendForVerification",
      I: IdentifierWithUserComment,
      O: Identifier,
      kind: MethodKind.Unary,
    },
    /**
     * Verify
     *
     * @generated from rpc Scailo.InwardJobsService.Verify
     */
    verify: {
      name: "Verify",
      I: IdentifierWithUserComment,
      O: Identifier,
      kind: MethodKind.Unary,
    },
    /**
     * Approve
     *
     * @generated from rpc Scailo.InwardJobsService.Approve
     */
    approve: {
      name: "Approve",
      I: IdentifierWithUserComment,
      O: Identifier,
      kind: MethodKind.Unary,
    },
    /**
     * Send For Revision
     *
     * @generated from rpc Scailo.InwardJobsService.SendForRevision
     */
    sendForRevision: {
      name: "SendForRevision",
      I: IdentifierWithUserComment,
      O: Identifier,
      kind: MethodKind.Unary,
    },
    /**
     * Update revision
     *
     * @generated from rpc Scailo.InwardJobsService.RevisionUpdate
     */
    revisionUpdate: {
      name: "RevisionUpdate",
      I: InwardJobsServiceUpdateRequest,
      O: Identifier,
      kind: MethodKind.Unary,
    },
    /**
     * Halt
     *
     * @generated from rpc Scailo.InwardJobsService.Halt
     */
    halt: {
      name: "Halt",
      I: IdentifierWithUserComment,
      O: Identifier,
      kind: MethodKind.Unary,
    },
    /**
     * Discard
     *
     * @generated from rpc Scailo.InwardJobsService.Discard
     */
    discard: {
      name: "Discard",
      I: IdentifierWithUserComment,
      O: Identifier,
      kind: MethodKind.Unary,
    },
    /**
     * Restore
     *
     * @generated from rpc Scailo.InwardJobsService.Restore
     */
    restore: {
      name: "Restore",
      I: IdentifierWithUserComment,
      O: Identifier,
      kind: MethodKind.Unary,
    },
    /**
     * Complete
     *
     * @generated from rpc Scailo.InwardJobsService.Complete
     */
    complete: {
      name: "Complete",
      I: IdentifierWithUserComment,
      O: Identifier,
      kind: MethodKind.Unary,
    },
    /**
     * Repeat
     *
     * @generated from rpc Scailo.InwardJobsService.Repeat
     */
    repeat: {
      name: "Repeat",
      I: RepeatWithDeliveryDate,
      O: Identifier,
      kind: MethodKind.Unary,
    },
    /**
     * Reopen
     *
     * @generated from rpc Scailo.InwardJobsService.Reopen
     */
    reopen: {
      name: "Reopen",
      I: IdentifierWithUserComment,
      O: Identifier,
      kind: MethodKind.Unary,
    },
    /**
     * Add comment
     *
     * @generated from rpc Scailo.InwardJobsService.CommentAdd
     */
    commentAdd: {
      name: "CommentAdd",
      I: IdentifierWithUserComment,
      O: Identifier,
      kind: MethodKind.Unary,
    },
    /**
     * Send Email
     *
     * @generated from rpc Scailo.InwardJobsService.SendEmail
     */
    sendEmail: {
      name: "SendEmail",
      I: IdentifierWithEmailAttributes,
      O: Identifier,
      kind: MethodKind.Unary,
    },
    /**
     * Autofill the inward job
     *
     * @generated from rpc Scailo.InwardJobsService.Autofill
     */
    autofill: {
      name: "Autofill",
      I: InwardJobsServiceAutofillRequest,
      O: Identifier,
      kind: MethodKind.Unary,
    },
    /**
     * Checks if the Inward Job can be marked as completed (is true when all the inward items have been ordered and all the outward items have been received)
     *
     * @generated from rpc Scailo.InwardJobsService.IsCompletable
     */
    isCompletable: {
      name: "IsCompletable",
      I: Identifier,
      O: BooleanResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Checks if the Inward items within an Inward Job have been ordered (through a Sales Order)
     *
     * @generated from rpc Scailo.InwardJobsService.IsOrdered
     */
    isOrdered: {
      name: "IsOrdered",
      I: Identifier,
      O: BooleanResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Checks if the Outward items within an Inward Job have been received (through Free Issue Material)
     *
     * @generated from rpc Scailo.InwardJobsService.IsReceived
     */
    isReceived: {
      name: "IsReceived",
      I: Identifier,
      O: BooleanResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Add multiple items to a inward job
     *
     * @generated from rpc Scailo.InwardJobsService.AddMultipleInwardJobInwardItems
     */
    addMultipleInwardJobInwardItems: {
      name: "AddMultipleInwardJobInwardItems",
      I: InwardJobsServiceMultipleInwardItemsCreateRequest,
      O: Identifier,
      kind: MethodKind.Unary,
    },
    /**
     * Add an inward item to a inward job
     *
     * @generated from rpc Scailo.InwardJobsService.AddInwardJobInwardItem
     */
    addInwardJobInwardItem: {
      name: "AddInwardJobInwardItem",
      I: InwardJobsServiceInwardItemCreateRequest,
      O: Identifier,
      kind: MethodKind.Unary,
    },
    /**
     * Modify an inward item in a inward job
     *
     * @generated from rpc Scailo.InwardJobsService.ModifyInwardJobInwardItem
     */
    modifyInwardJobInwardItem: {
      name: "ModifyInwardJobInwardItem",
      I: InwardJobsServiceInwardItemUpdateRequest,
      O: Identifier,
      kind: MethodKind.Unary,
    },
    /**
     * Approve an inward item in a inward job
     *
     * @generated from rpc Scailo.InwardJobsService.ApproveInwardJobInwardItem
     */
    approveInwardJobInwardItem: {
      name: "ApproveInwardJobInwardItem",
      I: IdentifierWithUserComment,
      O: Identifier,
      kind: MethodKind.Unary,
    },
    /**
     * Delete an inward item in a inward job
     *
     * @generated from rpc Scailo.InwardJobsService.DeleteInwardJobInwardItem
     */
    deleteInwardJobInwardItem: {
      name: "DeleteInwardJobInwardItem",
      I: IdentifierWithUserComment,
      O: Identifier,
      kind: MethodKind.Unary,
    },
    /**
     * Reorder items in a inward job
     *
     * @generated from rpc Scailo.InwardJobsService.ReorderInwardJobInwardItems
     */
    reorderInwardJobInwardItems: {
      name: "ReorderInwardJobInwardItems",
      I: ReorderItemsRequest,
      O: Identifier,
      kind: MethodKind.Unary,
    },
    /**
     * View Inward Job Inward Item by ID
     *
     * @generated from rpc Scailo.InwardJobsService.ViewInwardJobInwardItemByID
     */
    viewInwardJobInwardItemByID: {
      name: "ViewInwardJobInwardItemByID",
      I: Identifier,
      O: InwardJobInwardItem,
      kind: MethodKind.Unary,
    },
    /**
     * View approved inward job inward items for given inward job ID
     *
     * @generated from rpc Scailo.InwardJobsService.ViewApprovedInwardJobInwardItems
     */
    viewApprovedInwardJobInwardItems: {
      name: "ViewApprovedInwardJobInwardItems",
      I: IdentifierWithSearchKey,
      O: InwardJobsInwardItemsList,
      kind: MethodKind.Unary,
    },
    /**
     * View unapproved inward job inward items for given inward job ID
     *
     * @generated from rpc Scailo.InwardJobsService.ViewUnapprovedInwardJobInwardItems
     */
    viewUnapprovedInwardJobInwardItems: {
      name: "ViewUnapprovedInwardJobInwardItems",
      I: IdentifierWithSearchKey,
      O: InwardJobsInwardItemsList,
      kind: MethodKind.Unary,
    },
    /**
     * View the history of the inward job inward item
     *
     * @generated from rpc Scailo.InwardJobsService.ViewInwardJobInwardItemHistory
     */
    viewInwardJobInwardItemHistory: {
      name: "ViewInwardJobInwardItemHistory",
      I: InwardJobInwardItemHistoryRequest,
      O: InwardJobsInwardItemsList,
      kind: MethodKind.Unary,
    },
    /**
     * View approved inward job inward items for given inward job ID with pagination
     *
     * @generated from rpc Scailo.InwardJobsService.ViewPaginatedApprovedInwardJobInwardItems
     */
    viewPaginatedApprovedInwardJobInwardItems: {
      name: "ViewPaginatedApprovedInwardJobInwardItems",
      I: InwardJobInwardItemsSearchRequest,
      O: InwardJobsServicePaginatedInwardItemsResponse,
      kind: MethodKind.Unary,
    },
    /**
     * View unapproved inward job inward items for given inward job ID with pagination
     *
     * @generated from rpc Scailo.InwardJobsService.ViewPaginatedUnapprovedInwardJobInwardItems
     */
    viewPaginatedUnapprovedInwardJobInwardItems: {
      name: "ViewPaginatedUnapprovedInwardJobInwardItems",
      I: InwardJobInwardItemsSearchRequest,
      O: InwardJobsServicePaginatedInwardItemsResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Search through inward job inward items with pagination
     *
     * @generated from rpc Scailo.InwardJobsService.SearchInwardItemsWithPagination
     */
    searchInwardItemsWithPagination: {
      name: "SearchInwardItemsWithPagination",
      I: InwardJobInwardItemsSearchRequest,
      O: InwardJobsServicePaginatedInwardItemsResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Download the CSV template that could be used to upload inward items from the filled CSV file
     *
     * @generated from rpc Scailo.InwardJobsService.DownloadInwardItemsCSVTemplate
     */
    downloadInwardItemsCSVTemplate: {
      name: "DownloadInwardItemsCSVTemplate",
      I: Identifier,
      O: StandardFile,
      kind: MethodKind.Unary,
    },
    /**
     * Upload inward items using a CSV file. This is an idempotent operation. All the existing items are deleted before adding the items from the file.
     *
     * @generated from rpc Scailo.InwardJobsService.UploadInwardJobInwardItems
     */
    uploadInwardJobInwardItems: {
      name: "UploadInwardJobInwardItems",
      I: IdentifierWithFile,
      O: IdentifiersList,
      kind: MethodKind.Unary,
    },
    /**
     * Add multiple items to a inward job
     *
     * @generated from rpc Scailo.InwardJobsService.AddMultipleInwardJobOutwardItems
     */
    addMultipleInwardJobOutwardItems: {
      name: "AddMultipleInwardJobOutwardItems",
      I: InwardJobsServiceMultipleOutwardItemsCreateRequest,
      O: Identifier,
      kind: MethodKind.Unary,
    },
    /**
     * Add an outward item to a inward job
     *
     * @generated from rpc Scailo.InwardJobsService.AddInwardJobOutwardItem
     */
    addInwardJobOutwardItem: {
      name: "AddInwardJobOutwardItem",
      I: InwardJobsServiceOutwardItemCreateRequest,
      O: Identifier,
      kind: MethodKind.Unary,
    },
    /**
     * Modify an outward item in a inward job
     *
     * @generated from rpc Scailo.InwardJobsService.ModifyInwardJobOutwardItem
     */
    modifyInwardJobOutwardItem: {
      name: "ModifyInwardJobOutwardItem",
      I: InwardJobsServiceOutwardItemUpdateRequest,
      O: Identifier,
      kind: MethodKind.Unary,
    },
    /**
     * Approve an outward item in a inward job
     *
     * @generated from rpc Scailo.InwardJobsService.ApproveInwardJobOutwardItem
     */
    approveInwardJobOutwardItem: {
      name: "ApproveInwardJobOutwardItem",
      I: IdentifierWithUserComment,
      O: Identifier,
      kind: MethodKind.Unary,
    },
    /**
     * Delete an outward item in a inward job
     *
     * @generated from rpc Scailo.InwardJobsService.DeleteInwardJobOutwardItem
     */
    deleteInwardJobOutwardItem: {
      name: "DeleteInwardJobOutwardItem",
      I: IdentifierWithUserComment,
      O: Identifier,
      kind: MethodKind.Unary,
    },
    /**
     * Reorder items in a inward job
     *
     * @generated from rpc Scailo.InwardJobsService.ReorderInwardJobOutwardItems
     */
    reorderInwardJobOutwardItems: {
      name: "ReorderInwardJobOutwardItems",
      I: ReorderItemsRequest,
      O: Identifier,
      kind: MethodKind.Unary,
    },
    /**
     * View Inward Job Outward Item by ID
     *
     * @generated from rpc Scailo.InwardJobsService.ViewInwardJobOutwardItemByID
     */
    viewInwardJobOutwardItemByID: {
      name: "ViewInwardJobOutwardItemByID",
      I: Identifier,
      O: InwardJobOutwardItem,
      kind: MethodKind.Unary,
    },
    /**
     * View approved inward job outward items for given inward job ID
     *
     * @generated from rpc Scailo.InwardJobsService.ViewApprovedInwardJobOutwardItems
     */
    viewApprovedInwardJobOutwardItems: {
      name: "ViewApprovedInwardJobOutwardItems",
      I: IdentifierWithSearchKey,
      O: InwardJobsOutwardItemsList,
      kind: MethodKind.Unary,
    },
    /**
     * View unapproved inward job outward items for given inward job ID
     *
     * @generated from rpc Scailo.InwardJobsService.ViewUnapprovedInwardJobOutwardItems
     */
    viewUnapprovedInwardJobOutwardItems: {
      name: "ViewUnapprovedInwardJobOutwardItems",
      I: IdentifierWithSearchKey,
      O: InwardJobsOutwardItemsList,
      kind: MethodKind.Unary,
    },
    /**
     * View the history of the inward job outward item
     *
     * @generated from rpc Scailo.InwardJobsService.ViewInwardJobOutwardItemHistory
     */
    viewInwardJobOutwardItemHistory: {
      name: "ViewInwardJobOutwardItemHistory",
      I: InwardJobOutwardItemHistoryRequest,
      O: InwardJobsOutwardItemsList,
      kind: MethodKind.Unary,
    },
    /**
     * View approved inward job outward items for given inward job ID with pagination
     *
     * @generated from rpc Scailo.InwardJobsService.ViewPaginatedApprovedInwardJobOutwardItems
     */
    viewPaginatedApprovedInwardJobOutwardItems: {
      name: "ViewPaginatedApprovedInwardJobOutwardItems",
      I: InwardJobOutwardItemsSearchRequest,
      O: InwardJobsServicePaginatedOutwardItemsResponse,
      kind: MethodKind.Unary,
    },
    /**
     * View unapproved inward job outward items for given inward job ID with pagination
     *
     * @generated from rpc Scailo.InwardJobsService.ViewPaginatedUnapprovedInwardJobOutwardItems
     */
    viewPaginatedUnapprovedInwardJobOutwardItems: {
      name: "ViewPaginatedUnapprovedInwardJobOutwardItems",
      I: InwardJobOutwardItemsSearchRequest,
      O: InwardJobsServicePaginatedOutwardItemsResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Search through inward job outward items with pagination
     *
     * @generated from rpc Scailo.InwardJobsService.SearchOutwardItemsWithPagination
     */
    searchOutwardItemsWithPagination: {
      name: "SearchOutwardItemsWithPagination",
      I: InwardJobOutwardItemsSearchRequest,
      O: InwardJobsServicePaginatedOutwardItemsResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Download the CSV template that could be used to upload outward items from the filled CSV file
     *
     * @generated from rpc Scailo.InwardJobsService.DownloadOutwardItemsCSVTemplate
     */
    downloadOutwardItemsCSVTemplate: {
      name: "DownloadOutwardItemsCSVTemplate",
      I: Identifier,
      O: StandardFile,
      kind: MethodKind.Unary,
    },
    /**
     * Upload outward items using a CSV file. This is an idempotent operation. All the existing items are deleted before adding the items from the file.
     *
     * @generated from rpc Scailo.InwardJobsService.UploadInwardJobOutwardItems
     */
    uploadInwardJobOutwardItems: {
      name: "UploadInwardJobOutwardItems",
      I: IdentifierWithFile,
      O: IdentifiersList,
      kind: MethodKind.Unary,
    },
    /**
     * Add a contact
     *
     * @generated from rpc Scailo.InwardJobsService.AddInwardJobContact
     */
    addInwardJobContact: {
      name: "AddInwardJobContact",
      I: InwardJobsServiceContactCreateRequest,
      O: Identifier,
      kind: MethodKind.Unary,
    },
    /**
     * Approve a contact
     *
     * @generated from rpc Scailo.InwardJobsService.ApproveInwardJobContact
     */
    approveInwardJobContact: {
      name: "ApproveInwardJobContact",
      I: IdentifierWithUserComment,
      O: Identifier,
      kind: MethodKind.Unary,
    },
    /**
     * Delete a contact
     *
     * @generated from rpc Scailo.InwardJobsService.DeleteInwardJobContact
     */
    deleteInwardJobContact: {
      name: "DeleteInwardJobContact",
      I: IdentifierWithUserComment,
      O: Identifier,
      kind: MethodKind.Unary,
    },
    /**
     * View a contact for the given ID
     *
     * @generated from rpc Scailo.InwardJobsService.ViewInwardJobContactByID
     */
    viewInwardJobContactByID: {
      name: "ViewInwardJobContactByID",
      I: Identifier,
      O: InwardJobContact,
      kind: MethodKind.Unary,
    },
    /**
     * View all contacts for given inward job ID
     *
     * @generated from rpc Scailo.InwardJobsService.ViewInwardJobContacts
     */
    viewInwardJobContacts: {
      name: "ViewInwardJobContacts",
      I: Identifier,
      O: InwardJobContactsList,
      kind: MethodKind.Unary,
    },
    /**
     * View by ID
     *
     * @generated from rpc Scailo.InwardJobsService.ViewByID
     */
    viewByID: {
      name: "ViewByID",
      I: Identifier,
      O: InwardJob,
      kind: MethodKind.Unary,
    },
    /**
     * View by UUID
     *
     * @generated from rpc Scailo.InwardJobsService.ViewByUUID
     */
    viewByUUID: {
      name: "ViewByUUID",
      I: IdentifierUUID,
      O: InwardJob,
      kind: MethodKind.Unary,
    },
    /**
     * View all
     *
     * @generated from rpc Scailo.InwardJobsService.ViewAll
     */
    viewAll: {
      name: "ViewAll",
      I: ActiveStatus,
      O: InwardJobsList,
      kind: MethodKind.Unary,
    },
    /**
     * View all with the given entity UUID
     *
     * @generated from rpc Scailo.InwardJobsService.ViewAllForEntityUUID
     */
    viewAllForEntityUUID: {
      name: "ViewAllForEntityUUID",
      I: IdentifierUUID,
      O: InwardJobsList,
      kind: MethodKind.Unary,
    },
    /**
     * View with pagination
     *
     * @generated from rpc Scailo.InwardJobsService.ViewWithPagination
     */
    viewWithPagination: {
      name: "ViewWithPagination",
      I: InwardJobsServicePaginationReq,
      O: InwardJobsServicePaginationResponse,
      kind: MethodKind.Unary,
    },
    /**
     * View all sales order IDs that are associated with the given inward job ID
     *
     * @generated from rpc Scailo.InwardJobsService.ViewAssociatedSalesOrderIDs
     */
    viewAssociatedSalesOrderIDs: {
      name: "ViewAssociatedSalesOrderIDs",
      I: Identifier,
      O: IdentifiersList,
      kind: MethodKind.Unary,
    },
    /**
     * View prospective inward items for the given inward job (all families that could be purchased)
     *
     * @generated from rpc Scailo.InwardJobsService.ViewProspectiveInwardFamilies
     */
    viewProspectiveInwardFamilies: {
      name: "ViewProspectiveInwardFamilies",
      I: IdentifierWithSearchKey,
      O: FamiliesList,
      kind: MethodKind.Unary,
    },
    /**
     * View prospective inward job inward item info for the given family ID and inward job ID
     *
     * @generated from rpc Scailo.InwardJobsService.ViewProspectiveInwardJobInwardItem
     */
    viewProspectiveInwardJobInwardItem: {
      name: "ViewProspectiveInwardJobInwardItem",
      I: InwardJobInwardItemProspectiveInfoRequest,
      O: InwardJobsServiceInwardItemCreateRequest,
      kind: MethodKind.Unary,
    },
    /**
     * View prospective outward items for the given inward job (all families that could be sold)
     *
     * @generated from rpc Scailo.InwardJobsService.ViewProspectiveOutwardFamilies
     */
    viewProspectiveOutwardFamilies: {
      name: "ViewProspectiveOutwardFamilies",
      I: IdentifierWithSearchKey,
      O: FamiliesList,
      kind: MethodKind.Unary,
    },
    /**
     * View prospective inward job outward item info for the given family ID and inward job ID
     *
     * @generated from rpc Scailo.InwardJobsService.ViewProspectiveInwardJobOutwardItem
     */
    viewProspectiveInwardJobOutwardItem: {
      name: "ViewProspectiveInwardJobOutwardItem",
      I: InwardJobOutwardItemProspectiveInfoRequest,
      O: InwardJobsServiceOutwardItemCreateRequest,
      kind: MethodKind.Unary,
    },
    /**
     * Download inward job with the given IdentifierUUID (can be used to allow public downloads)
     *
     * @generated from rpc Scailo.InwardJobsService.DownloadByUUID
     */
    downloadByUUID: {
      name: "DownloadByUUID",
      I: IdentifierUUID,
      O: StandardFile,
      kind: MethodKind.Unary,
    },
    /**
     * View all that match the given search key
     *
     * @generated from rpc Scailo.InwardJobsService.SearchAll
     */
    searchAll: {
      name: "SearchAll",
      I: InwardJobsServiceSearchAllReq,
      O: InwardJobsList,
      kind: MethodKind.Unary,
    },
    /**
     * View all that match the given filter criteria
     *
     * @generated from rpc Scailo.InwardJobsService.Filter
     */
    filter: {
      name: "Filter",
      I: InwardJobsServiceFilterReq,
      O: InwardJobsList,
      kind: MethodKind.Unary,
    },
    /**
     * Count in status
     *
     * @generated from rpc Scailo.InwardJobsService.CountInStatus
     */
    countInStatus: {
      name: "CountInStatus",
      I: CountInSLCStatusRequest,
      O: CountResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Count all that match the given criteria
     *
     * @generated from rpc Scailo.InwardJobsService.Count
     */
    count: {
      name: "Count",
      I: InwardJobsServiceCountReq,
      O: CountResponse,
      kind: MethodKind.Unary,
    },
  }
} as const;

