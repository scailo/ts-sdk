// @generated by protoc-gen-es v1.5.1 with parameter "target=ts"
// @generated from file vault_folders.scailo.proto (package Scailo, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3, protoInt64 } from "@bufbuild/protobuf";
import { EmployeeMetadata } from "./base.scailo_pb.js";
import { VaultPermission } from "./vault_commons.scailo_pb.js";

/**
 *
 * Describes the parameters necessary to add a vault folder
 *
 * @generated from message Scailo.VaultFolderAddRequest
 */
export class VaultFolderAddRequest extends Message<VaultFolderAddRequest> {
  /**
   * Stores a globally unique entity UUID. This will be set at the organization level
   *
   * @generated from field: string entity_uuid = 1;
   */
  entityUuid = "";

  /**
   * Stores any comment that the user might add during this operation
   *
   * @generated from field: string user_comment = 2;
   */
  userComment = "";

  /**
   * The name of the folder
   *
   * @generated from field: string name = 10;
   */
  name = "";

  /**
   * The UUID of the parent folder
   *
   * @generated from field: string parent_folder_uuid = 11;
   */
  parentFolderUuid = "";

  constructor(data?: PartialMessage<VaultFolderAddRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.VaultFolderAddRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "entity_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "user_comment", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 10, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 11, name: "parent_folder_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): VaultFolderAddRequest {
    return new VaultFolderAddRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): VaultFolderAddRequest {
    return new VaultFolderAddRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): VaultFolderAddRequest {
    return new VaultFolderAddRequest().fromJsonString(jsonString, options);
  }

  static equals(a: VaultFolderAddRequest | PlainMessage<VaultFolderAddRequest> | undefined, b: VaultFolderAddRequest | PlainMessage<VaultFolderAddRequest> | undefined): boolean {
    return proto3.util.equals(VaultFolderAddRequest, a, b);
  }
}

/**
 *
 * Describes the parameters necessary to move a vault folder
 *
 * @generated from message Scailo.VaultFolderMoveFolderRequest
 */
export class VaultFolderMoveFolderRequest extends Message<VaultFolderMoveFolderRequest> {
  /**
   * The UUID of the folder
   *
   * @generated from field: string source_folder_uuid = 1;
   */
  sourceFolderUuid = "";

  /**
   * The UUID of the destination folder that the folder needs to be moved into
   *
   * @generated from field: string destination_folder_uuid = 13;
   */
  destinationFolderUuid = "";

  constructor(data?: PartialMessage<VaultFolderMoveFolderRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.VaultFolderMoveFolderRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "source_folder_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 13, name: "destination_folder_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): VaultFolderMoveFolderRequest {
    return new VaultFolderMoveFolderRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): VaultFolderMoveFolderRequest {
    return new VaultFolderMoveFolderRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): VaultFolderMoveFolderRequest {
    return new VaultFolderMoveFolderRequest().fromJsonString(jsonString, options);
  }

  static equals(a: VaultFolderMoveFolderRequest | PlainMessage<VaultFolderMoveFolderRequest> | undefined, b: VaultFolderMoveFolderRequest | PlainMessage<VaultFolderMoveFolderRequest> | undefined): boolean {
    return proto3.util.equals(VaultFolderMoveFolderRequest, a, b);
  }
}

/**
 *
 * Describes the parameters necessary to rename a vault folder
 *
 * @generated from message Scailo.VaultFolderRenameFolderRequest
 */
export class VaultFolderRenameFolderRequest extends Message<VaultFolderRenameFolderRequest> {
  /**
   * The UUID of the folder
   *
   * @generated from field: string uuid = 1;
   */
  uuid = "";

  /**
   * The new name of the folder
   *
   * @generated from field: string name = 10;
   */
  name = "";

  constructor(data?: PartialMessage<VaultFolderRenameFolderRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.VaultFolderRenameFolderRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 10, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): VaultFolderRenameFolderRequest {
    return new VaultFolderRenameFolderRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): VaultFolderRenameFolderRequest {
    return new VaultFolderRenameFolderRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): VaultFolderRenameFolderRequest {
    return new VaultFolderRenameFolderRequest().fromJsonString(jsonString, options);
  }

  static equals(a: VaultFolderRenameFolderRequest | PlainMessage<VaultFolderRenameFolderRequest> | undefined, b: VaultFolderRenameFolderRequest | PlainMessage<VaultFolderRenameFolderRequest> | undefined): boolean {
    return proto3.util.equals(VaultFolderRenameFolderRequest, a, b);
  }
}

/**
 *
 * Describes the parameters of a vault parent folder
 *
 * @generated from message Scailo.VaultParentFolder
 */
export class VaultParentFolder extends Message<VaultParentFolder> {
  /**
   * Stores a globally unique entity UUID. This will be set at the organization level
   *
   * @generated from field: string entity_uuid = 1;
   */
  entityUuid = "";

  /**
   * Stores the metadata of this user
   *
   * @generated from field: Scailo.EmployeeMetadata metadata = 2;
   */
  metadata?: EmployeeMetadata;

  /**
   * The name of the folder
   *
   * @generated from field: string name = 10;
   */
  name = "";

  /**
   * The ID of the parent folder
   *
   * @generated from field: uint64 parent_folder_id = 11;
   */
  parentFolderId = protoInt64.zero;

  /**
   * The path of the folder
   *
   * @generated from field: string path_tree = 12;
   */
  pathTree = "";

  /**
   * The list of permissions
   *
   * @generated from field: repeated Scailo.VaultPermission permissions = 20;
   */
  permissions: VaultPermission[] = [];

  /**
   * The UUID of the parent folder
   *
   * @generated from field: string parent_folder_uuid = 50;
   */
  parentFolderUuid = "";

  constructor(data?: PartialMessage<VaultParentFolder>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.VaultParentFolder";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "entity_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "metadata", kind: "message", T: EmployeeMetadata },
    { no: 10, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 11, name: "parent_folder_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 12, name: "path_tree", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 20, name: "permissions", kind: "message", T: VaultPermission, repeated: true },
    { no: 50, name: "parent_folder_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): VaultParentFolder {
    return new VaultParentFolder().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): VaultParentFolder {
    return new VaultParentFolder().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): VaultParentFolder {
    return new VaultParentFolder().fromJsonString(jsonString, options);
  }

  static equals(a: VaultParentFolder | PlainMessage<VaultParentFolder> | undefined, b: VaultParentFolder | PlainMessage<VaultParentFolder> | undefined): boolean {
    return proto3.util.equals(VaultParentFolder, a, b);
  }
}

/**
 *
 * Describes the parameters of a vault folder
 *
 * @generated from message Scailo.VaultFolder
 */
export class VaultFolder extends Message<VaultFolder> {
  /**
   * Stores a globally unique entity UUID. This will be set at the organization level
   *
   * @generated from field: string entity_uuid = 1;
   */
  entityUuid = "";

  /**
   * Stores the metadata of this user
   *
   * @generated from field: Scailo.EmployeeMetadata metadata = 2;
   */
  metadata?: EmployeeMetadata;

  /**
   * The name of the folder
   *
   * @generated from field: string name = 10;
   */
  name = "";

  /**
   * The ID of the parent folder
   *
   * @generated from field: uint64 parent_folder_id = 11;
   */
  parentFolderId = protoInt64.zero;

  /**
   * The path of the folder
   *
   * @generated from field: string path_tree = 12;
   */
  pathTree = "";

  /**
   * The list of permissions
   *
   * @generated from field: repeated Scailo.VaultPermission permissions = 20;
   */
  permissions: VaultPermission[] = [];

  /**
   * The list of all the parent folders
   *
   * @generated from field: repeated Scailo.VaultParentFolder parent_folders = 30;
   */
  parentFolders: VaultParentFolder[] = [];

  /**
   * The UUID of the parent folder
   *
   * @generated from field: string parent_folder_uuid = 50;
   */
  parentFolderUuid = "";

  constructor(data?: PartialMessage<VaultFolder>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.VaultFolder";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "entity_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "metadata", kind: "message", T: EmployeeMetadata },
    { no: 10, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 11, name: "parent_folder_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 12, name: "path_tree", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 20, name: "permissions", kind: "message", T: VaultPermission, repeated: true },
    { no: 30, name: "parent_folders", kind: "message", T: VaultParentFolder, repeated: true },
    { no: 50, name: "parent_folder_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): VaultFolder {
    return new VaultFolder().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): VaultFolder {
    return new VaultFolder().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): VaultFolder {
    return new VaultFolder().fromJsonString(jsonString, options);
  }

  static equals(a: VaultFolder | PlainMessage<VaultFolder> | undefined, b: VaultFolder | PlainMessage<VaultFolder> | undefined): boolean {
    return proto3.util.equals(VaultFolder, a, b);
  }
}

/**
 *
 * Describes the message consisting of the list of vault folders
 *
 * @generated from message Scailo.VaultFoldersList
 */
export class VaultFoldersList extends Message<VaultFoldersList> {
  /**
   * List of folders
   *
   * @generated from field: repeated Scailo.VaultFolder list = 1;
   */
  list: VaultFolder[] = [];

  constructor(data?: PartialMessage<VaultFoldersList>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.VaultFoldersList";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "list", kind: "message", T: VaultFolder, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): VaultFoldersList {
    return new VaultFoldersList().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): VaultFoldersList {
    return new VaultFoldersList().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): VaultFoldersList {
    return new VaultFoldersList().fromJsonString(jsonString, options);
  }

  static equals(a: VaultFoldersList | PlainMessage<VaultFoldersList> | undefined, b: VaultFoldersList | PlainMessage<VaultFoldersList> | undefined): boolean {
    return proto3.util.equals(VaultFoldersList, a, b);
  }
}

/**
 *
 * Describes the parameters of a vault folder download
 *
 * @generated from message Scailo.VaultFolderDownload
 */
export class VaultFolderDownload extends Message<VaultFolderDownload> {
  /**
   * Stores a globally unique entity UUID. This will be set at the organization level
   *
   * @generated from field: string entity_uuid = 1;
   */
  entityUuid = "";

  /**
   * Stores the metadata of this user
   *
   * @generated from field: Scailo.EmployeeMetadata metadata = 2;
   */
  metadata?: EmployeeMetadata;

  /**
   * The ID of the folder that is being downloaded
   *
   * @generated from field: uint64 folder_id = 10;
   */
  folderId = protoInt64.zero;

  /**
   * The path to the generated zip file
   *
   * @generated from field: string zip_file_path = 11;
   */
  zipFilePath = "";

  /**
   * Stores if the folder has been zipped
   *
   * @generated from field: bool is_zipped = 12;
   */
  isZipped = false;

  /**
   * Stores the username of the user who requested this download
   *
   * @generated from field: string requested_by = 13;
   */
  requestedBy = "";

  /**
   * Stores the timestamp of when the download of the folder began
   *
   * @generated from field: uint64 download_started_at = 14;
   */
  downloadStartedAt = protoInt64.zero;

  /**
   * Stores the timestamp of when the download of the folder finished
   *
   * @generated from field: uint64 download_ended_at = 15;
   */
  downloadEndedAt = protoInt64.zero;

  /**
   * Stores the username of the user who downloaded this folder
   *
   * @generated from field: string downloaded_by = 16;
   */
  downloadedBy = "";

  /**
   * Stores an error encountered, if any
   *
   * @generated from field: string error = 17;
   */
  error = "";

  constructor(data?: PartialMessage<VaultFolderDownload>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.VaultFolderDownload";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "entity_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "metadata", kind: "message", T: EmployeeMetadata },
    { no: 10, name: "folder_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 11, name: "zip_file_path", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 12, name: "is_zipped", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 13, name: "requested_by", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 14, name: "download_started_at", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 15, name: "download_ended_at", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 16, name: "downloaded_by", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 17, name: "error", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): VaultFolderDownload {
    return new VaultFolderDownload().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): VaultFolderDownload {
    return new VaultFolderDownload().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): VaultFolderDownload {
    return new VaultFolderDownload().fromJsonString(jsonString, options);
  }

  static equals(a: VaultFolderDownload | PlainMessage<VaultFolderDownload> | undefined, b: VaultFolderDownload | PlainMessage<VaultFolderDownload> | undefined): boolean {
    return proto3.util.equals(VaultFolderDownload, a, b);
  }
}

