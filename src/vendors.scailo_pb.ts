// @generated by protoc-gen-es v1.5.1 with parameter "target=ts"
// @generated from file vendors.scailo.proto (package Scailo, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3, protoInt64 } from "@bufbuild/protobuf";
import { FormFieldDatum, FormFieldDatumCreateRequest } from "./forms_fields_data.scailo_pb.js";
import { ApprovalMetadata, BOOL_FILTER, EmployeeMetadata, LogbookLogConciseSLC, SORT_ORDER, STANDARD_LIFECYCLE_STATUS } from "./base.scailo_pb.js";

/**
 *
 * Describes the available sort keys
 *
 * @generated from enum Scailo.VENDOR_SORT_KEY
 */
export enum VENDOR_SORT_KEY {
  /**
   * Fetch ordered results by id
   *
   * @generated from enum value: VENDOR_SORT_KEY_ID_UNSPECIFIED = 0;
   */
  VENDOR_SORT_KEY_ID_UNSPECIFIED = 0,

  /**
   * Fetch ordered results by the creation timestamp
   *
   * @generated from enum value: VENDOR_SORT_KEY_CREATED_AT = 1;
   */
  VENDOR_SORT_KEY_CREATED_AT = 1,

  /**
   * Fetch ordered results by the modified timestamp
   *
   * @generated from enum value: VENDOR_SORT_KEY_MODIFIED_AT = 2;
   */
  VENDOR_SORT_KEY_MODIFIED_AT = 2,

  /**
   * Fetch ordered results by the approved on timestamp
   *
   * @generated from enum value: VENDOR_SORT_KEY_APPROVED_ON = 3;
   */
  VENDOR_SORT_KEY_APPROVED_ON = 3,

  /**
   * Fetch ordered results by the approved by field
   *
   * @generated from enum value: VENDOR_SORT_KEY_APPROVED_BY = 4;
   */
  VENDOR_SORT_KEY_APPROVED_BY = 4,

  /**
   * Fetch ordered results by the approver's role ID
   *
   * @generated from enum value: VENDOR_SORT_KEY_APPROVER_ROLE_ID = 5;
   */
  VENDOR_SORT_KEY_APPROVER_ROLE_ID = 5,

  /**
   * Fetch ordered results by the name
   *
   * @generated from enum value: VENDOR_SORT_KEY_NAME = 10;
   */
  VENDOR_SORT_KEY_NAME = 10,

  /**
   * Fetch ordered results by the code
   *
   * @generated from enum value: VENDOR_SORT_KEY_CODE = 11;
   */
  VENDOR_SORT_KEY_CODE = 11,

  /**
   * Fetch ordered results by the email address
   *
   * @generated from enum value: VENDOR_SORT_KEY_EMAIL = 12;
   */
  VENDOR_SORT_KEY_EMAIL = 12,

  /**
   * Fetch ordered results by the phone number
   *
   * @generated from enum value: VENDOR_SORT_KEY_PHONE = 13;
   */
  VENDOR_SORT_KEY_PHONE = 13,
}
// Retrieve enum metadata with: proto3.getEnumType(VENDOR_SORT_KEY)
proto3.util.setEnumType(VENDOR_SORT_KEY, "Scailo.VENDOR_SORT_KEY", [
  { no: 0, name: "VENDOR_SORT_KEY_ID_UNSPECIFIED" },
  { no: 1, name: "VENDOR_SORT_KEY_CREATED_AT" },
  { no: 2, name: "VENDOR_SORT_KEY_MODIFIED_AT" },
  { no: 3, name: "VENDOR_SORT_KEY_APPROVED_ON" },
  { no: 4, name: "VENDOR_SORT_KEY_APPROVED_BY" },
  { no: 5, name: "VENDOR_SORT_KEY_APPROVER_ROLE_ID" },
  { no: 10, name: "VENDOR_SORT_KEY_NAME" },
  { no: 11, name: "VENDOR_SORT_KEY_CODE" },
  { no: 12, name: "VENDOR_SORT_KEY_EMAIL" },
  { no: 13, name: "VENDOR_SORT_KEY_PHONE" },
]);

/**
 *
 * Describes the available sort keys
 *
 * @generated from enum Scailo.VENDOR_ITEM_SORT_KEY
 */
export enum VENDOR_ITEM_SORT_KEY {
  /**
   * Fetch ordered results by id
   *
   * @generated from enum value: VENDOR_ITEM_SORT_KEY_ID_UNSPECIFIED = 0;
   */
  VENDOR_ITEM_SORT_KEY_ID_UNSPECIFIED = 0,

  /**
   * Fetch ordered results by the creation timestamp
   *
   * @generated from enum value: VENDOR_ITEM_SORT_KEY_CREATED_AT = 1;
   */
  VENDOR_ITEM_SORT_KEY_CREATED_AT = 1,

  /**
   * Fetch ordered results by the modified timestamp
   *
   * @generated from enum value: VENDOR_ITEM_SORT_KEY_MODIFIED_AT = 2;
   */
  VENDOR_ITEM_SORT_KEY_MODIFIED_AT = 2,

  /**
   * Fetch ordered results by the approved on timestamp
   *
   * @generated from enum value: VENDOR_ITEM_SORT_KEY_APPROVED_ON = 3;
   */
  VENDOR_ITEM_SORT_KEY_APPROVED_ON = 3,

  /**
   * Fetch ordered results by the approved by field
   *
   * @generated from enum value: VENDOR_ITEM_SORT_KEY_APPROVED_BY = 4;
   */
  VENDOR_ITEM_SORT_KEY_APPROVED_BY = 4,

  /**
   * Fetch ordered results by the approver's role ID
   *
   * @generated from enum value: VENDOR_ITEM_SORT_KEY_APPROVER_ROLE_ID = 5;
   */
  VENDOR_ITEM_SORT_KEY_APPROVER_ROLE_ID = 5,

  /**
   * Fetch ordered results by the family ID
   *
   * @generated from enum value: VENDOR_ITEM_SORT_KEY_FAMILY_ID = 10;
   */
  VENDOR_ITEM_SORT_KEY_FAMILY_ID = 10,

  /**
   * Fetch ordered results by the vendor family code
   *
   * @generated from enum value: VENDOR_ITEM_SORT_KEY_VENDOR_FAMILY_CODE = 11;
   */
  VENDOR_ITEM_SORT_KEY_VENDOR_FAMILY_CODE = 11,

  /**
   * Fetch ordered results by the unit of material ID
   *
   * @generated from enum value: VENDOR_ITEM_SORT_KEY_UOM_ID = 12;
   */
  VENDOR_ITEM_SORT_KEY_UOM_ID = 12,

  /**
   * Fetch ordered results by the tax group ID
   *
   * @generated from enum value: VENDOR_ITEM_SORT_KEY_TAX_GROUP_ID = 13;
   */
  VENDOR_ITEM_SORT_KEY_TAX_GROUP_ID = 13,

  /**
   * Fetch ordered results by the price
   *
   * @generated from enum value: VENDOR_ITEM_SORT_KEY_PRICE = 14;
   */
  VENDOR_ITEM_SORT_KEY_PRICE = 14,

  /**
   * Fetch ordered results by the minimum order quantity
   *
   * @generated from enum value: VENDOR_ITEM_SORT_KEY_MIN_ORDER_QTY = 15;
   */
  VENDOR_ITEM_SORT_KEY_MIN_ORDER_QTY = 15,

  /**
   * Fetch ordered results by the maximum order quantity
   *
   * @generated from enum value: VENDOR_ITEM_SORT_KEY_MAX_ORDER_QTY = 16;
   */
  VENDOR_ITEM_SORT_KEY_MAX_ORDER_QTY = 16,

  /**
   * Fetch ordered results by the step interval
   *
   * @generated from enum value: VENDOR_ITEM_SORT_KEY_STEP_INTERVAL = 17;
   */
  VENDOR_ITEM_SORT_KEY_STEP_INTERVAL = 17,
}
// Retrieve enum metadata with: proto3.getEnumType(VENDOR_ITEM_SORT_KEY)
proto3.util.setEnumType(VENDOR_ITEM_SORT_KEY, "Scailo.VENDOR_ITEM_SORT_KEY", [
  { no: 0, name: "VENDOR_ITEM_SORT_KEY_ID_UNSPECIFIED" },
  { no: 1, name: "VENDOR_ITEM_SORT_KEY_CREATED_AT" },
  { no: 2, name: "VENDOR_ITEM_SORT_KEY_MODIFIED_AT" },
  { no: 3, name: "VENDOR_ITEM_SORT_KEY_APPROVED_ON" },
  { no: 4, name: "VENDOR_ITEM_SORT_KEY_APPROVED_BY" },
  { no: 5, name: "VENDOR_ITEM_SORT_KEY_APPROVER_ROLE_ID" },
  { no: 10, name: "VENDOR_ITEM_SORT_KEY_FAMILY_ID" },
  { no: 11, name: "VENDOR_ITEM_SORT_KEY_VENDOR_FAMILY_CODE" },
  { no: 12, name: "VENDOR_ITEM_SORT_KEY_UOM_ID" },
  { no: 13, name: "VENDOR_ITEM_SORT_KEY_TAX_GROUP_ID" },
  { no: 14, name: "VENDOR_ITEM_SORT_KEY_PRICE" },
  { no: 15, name: "VENDOR_ITEM_SORT_KEY_MIN_ORDER_QTY" },
  { no: 16, name: "VENDOR_ITEM_SORT_KEY_MAX_ORDER_QTY" },
  { no: 17, name: "VENDOR_ITEM_SORT_KEY_STEP_INTERVAL" },
]);

/**
 *
 * Describes the applicable statuses of vendor items
 *
 * @generated from enum Scailo.VENDOR_ITEM_STATUS
 */
export enum VENDOR_ITEM_STATUS {
  /**
   * Denotes that status be disregarded. This is used only within search APIs
   *
   * @generated from enum value: VENDOR_ITEM_STATUS_ANY_UNSPECIFIED = 0;
   */
  VENDOR_ITEM_STATUS_ANY_UNSPECIFIED = 0,

  /**
   * Denotes that the vendor items must have been approved
   *
   * @generated from enum value: VENDOR_ITEM_STATUS_APPROVED = 1;
   */
  VENDOR_ITEM_STATUS_APPROVED = 1,

  /**
   * Denotes that the vendor items must be waiting for approval
   *
   * @generated from enum value: VENDOR_ITEM_STATUS_UNAPPROVED = 2;
   */
  VENDOR_ITEM_STATUS_UNAPPROVED = 2,
}
// Retrieve enum metadata with: proto3.getEnumType(VENDOR_ITEM_STATUS)
proto3.util.setEnumType(VENDOR_ITEM_STATUS, "Scailo.VENDOR_ITEM_STATUS", [
  { no: 0, name: "VENDOR_ITEM_STATUS_ANY_UNSPECIFIED" },
  { no: 1, name: "VENDOR_ITEM_STATUS_APPROVED" },
  { no: 2, name: "VENDOR_ITEM_STATUS_UNAPPROVED" },
]);

/**
 *
 * Describes the parameters necessary to create a record
 *
 * @generated from message Scailo.VendorsServiceCreateRequest
 */
export class VendorsServiceCreateRequest extends Message<VendorsServiceCreateRequest> {
  /**
   * Stores a globally unique entity UUID. This will be set at the organization level
   *
   * @generated from field: string entity_uuid = 1;
   */
  entityUuid = "";

  /**
   * Stores any comment that the user might add during this operation
   *
   * @generated from field: string user_comment = 2;
   */
  userComment = "";

  /**
   * The associated vault folder ID
   *
   * @generated from field: uint64 vault_folder_id = 9;
   */
  vaultFolderId = protoInt64.zero;

  /**
   * The name of the vendor
   *
   * @generated from field: string name = 10;
   */
  name = "";

  /**
   * The unique code by which the vendor is classified
   *
   * @generated from field: string code = 11;
   */
  code = "";

  /**
   * The primary email of the vendor
   *
   * @generated from field: string email = 12;
   */
  email = "";

  /**
   * The primary contact number of the vendor
   *
   * @generated from field: string phone = 13;
   */
  phone = "";

  /**
   * The list of dynamic forms
   *
   * @generated from field: repeated Scailo.FormFieldDatumCreateRequest form_data = 30;
   */
  formData: FormFieldDatumCreateRequest[] = [];

  constructor(data?: PartialMessage<VendorsServiceCreateRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.VendorsServiceCreateRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "entity_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "user_comment", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 9, name: "vault_folder_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 10, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 11, name: "code", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 12, name: "email", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 13, name: "phone", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 30, name: "form_data", kind: "message", T: FormFieldDatumCreateRequest, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): VendorsServiceCreateRequest {
    return new VendorsServiceCreateRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): VendorsServiceCreateRequest {
    return new VendorsServiceCreateRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): VendorsServiceCreateRequest {
    return new VendorsServiceCreateRequest().fromJsonString(jsonString, options);
  }

  static equals(a: VendorsServiceCreateRequest | PlainMessage<VendorsServiceCreateRequest> | undefined, b: VendorsServiceCreateRequest | PlainMessage<VendorsServiceCreateRequest> | undefined): boolean {
    return proto3.util.equals(VendorsServiceCreateRequest, a, b);
  }
}

/**
 *
 * Describes the parameters necessary to update a record
 *
 * @generated from message Scailo.VendorsServiceUpdateRequest
 */
export class VendorsServiceUpdateRequest extends Message<VendorsServiceUpdateRequest> {
  /**
   * Stores any comment that the user might add during this operation
   *
   * @generated from field: string user_comment = 1;
   */
  userComment = "";

  /**
   * The ID of the record that needs to be updated
   *
   * @generated from field: uint64 id = 2;
   */
  id = protoInt64.zero;

  /**
   * Optional boolean value that stores if a notification needs to be sent to users about the update to the record. This is useful when a subsequent operation needs to be performed immediately (such as send to verification after updating the revision)
   *
   * @generated from field: bool notify_users = 3;
   */
  notifyUsers = false;

  /**
   * The associated vault folder ID
   *
   * @generated from field: uint64 vault_folder_id = 9;
   */
  vaultFolderId = protoInt64.zero;

  /**
   * The name of the vendor
   *
   * @generated from field: string name = 10;
   */
  name = "";

  /**
   * The unique code by which the vendor is classified
   *
   * @generated from field: string code = 11;
   */
  code = "";

  /**
   * The primary email of the vendor
   *
   * @generated from field: string email = 12;
   */
  email = "";

  /**
   * The primary contact number of the vendor
   *
   * @generated from field: string phone = 13;
   */
  phone = "";

  /**
   * The list of dynamic forms
   *
   * @generated from field: repeated Scailo.FormFieldDatumCreateRequest form_data = 30;
   */
  formData: FormFieldDatumCreateRequest[] = [];

  constructor(data?: PartialMessage<VendorsServiceUpdateRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.VendorsServiceUpdateRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "user_comment", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 3, name: "notify_users", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 9, name: "vault_folder_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 10, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 11, name: "code", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 12, name: "email", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 13, name: "phone", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 30, name: "form_data", kind: "message", T: FormFieldDatumCreateRequest, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): VendorsServiceUpdateRequest {
    return new VendorsServiceUpdateRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): VendorsServiceUpdateRequest {
    return new VendorsServiceUpdateRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): VendorsServiceUpdateRequest {
    return new VendorsServiceUpdateRequest().fromJsonString(jsonString, options);
  }

  static equals(a: VendorsServiceUpdateRequest | PlainMessage<VendorsServiceUpdateRequest> | undefined, b: VendorsServiceUpdateRequest | PlainMessage<VendorsServiceUpdateRequest> | undefined): boolean {
    return proto3.util.equals(VendorsServiceUpdateRequest, a, b);
  }
}

/**
 *
 * Describes the parameters that are part of a standard response
 *
 * @generated from message Scailo.Vendor
 */
export class Vendor extends Message<Vendor> {
  /**
   * Stores a globally unique entity UUID. This will be set at the organization level
   *
   * @generated from field: string entity_uuid = 1;
   */
  entityUuid = "";

  /**
   * Stores the metadata of this vendor
   *
   * @generated from field: Scailo.EmployeeMetadata metadata = 2;
   */
  metadata?: EmployeeMetadata;

  /**
   * Stores the approval metadata
   *
   * @generated from field: Scailo.ApprovalMetadata approval_metadata = 3;
   */
  approvalMetadata?: ApprovalMetadata;

  /**
   * The status of this vendor
   *
   * @generated from field: Scailo.STANDARD_LIFECYCLE_STATUS status = 4;
   */
  status = STANDARD_LIFECYCLE_STATUS.ANY_UNSPECIFIED;

  /**
   * Stores the logs of every operation performed on this vendor
   *
   * @generated from field: repeated Scailo.LogbookLogConciseSLC logs = 5;
   */
  logs: LogbookLogConciseSLC[] = [];

  /**
   * The associated vault folder ID
   *
   * @generated from field: uint64 vault_folder_id = 9;
   */
  vaultFolderId = protoInt64.zero;

  /**
   * The name of the vendor
   *
   * @generated from field: string name = 10;
   */
  name = "";

  /**
   * The unique code by which the vendor is classified
   *
   * @generated from field: string code = 11;
   */
  code = "";

  /**
   * The primary email of the vendor
   *
   * @generated from field: string email = 12;
   */
  email = "";

  /**
   * The primary contact number of the vendor
   *
   * @generated from field: string phone = 13;
   */
  phone = "";

  /**
   * The list of dynamic forms
   *
   * @generated from field: repeated Scailo.FormFieldDatum form_data = 30;
   */
  formData: FormFieldDatum[] = [];

  constructor(data?: PartialMessage<Vendor>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.Vendor";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "entity_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "metadata", kind: "message", T: EmployeeMetadata },
    { no: 3, name: "approval_metadata", kind: "message", T: ApprovalMetadata },
    { no: 4, name: "status", kind: "enum", T: proto3.getEnumType(STANDARD_LIFECYCLE_STATUS) },
    { no: 5, name: "logs", kind: "message", T: LogbookLogConciseSLC, repeated: true },
    { no: 9, name: "vault_folder_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 10, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 11, name: "code", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 12, name: "email", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 13, name: "phone", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 30, name: "form_data", kind: "message", T: FormFieldDatum, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Vendor {
    return new Vendor().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Vendor {
    return new Vendor().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Vendor {
    return new Vendor().fromJsonString(jsonString, options);
  }

  static equals(a: Vendor | PlainMessage<Vendor> | undefined, b: Vendor | PlainMessage<Vendor> | undefined): boolean {
    return proto3.util.equals(Vendor, a, b);
  }
}

/**
 *
 * Describes the parameters required to add an item to a vendor
 *
 * @generated from message Scailo.VendorsServiceItemCreateRequest
 */
export class VendorsServiceItemCreateRequest extends Message<VendorsServiceItemCreateRequest> {
  /**
   * Stores any comment that the user might add during this operation
   *
   * @generated from field: string user_comment = 1;
   */
  userComment = "";

  /**
   * Stores the vendor ID
   *
   * @generated from field: uint64 vendor_id = 10;
   */
  vendorId = protoInt64.zero;

  /**
   * Stores the family ID
   *
   * @generated from field: uint64 family_id = 11;
   */
  familyId = protoInt64.zero;

  /**
   * Stores the optional family code as represented by the vendor
   *
   * @generated from field: string vendor_family_code = 12;
   */
  vendorFamilyCode = "";

  /**
   * Stores the ID of the vendor's unit of material
   *
   * @generated from field: uint64 uom_id = 13;
   */
  uomId = protoInt64.zero;

  /**
   * The ID of the associated tax group
   *
   * @generated from field: uint64 tax_group_id = 14;
   */
  taxGroupId = protoInt64.zero;

  /**
   * The unit price of the item (as supplied by the vendor)
   *
   * @generated from field: uint64 price = 15;
   */
  price = protoInt64.zero;

  /**
   * The minimum order quantity that needs to be placed (in cents) (0.01 is the minimum)
   *
   * @generated from field: uint64 min_order_qty = 20;
   */
  minOrderQty = protoInt64.zero;

  /**
   * The maximum order quantity that can be placed (in cents) (0 represents unlimited max quantity)
   *
   * @generated from field: uint64 max_order_qty = 21;
   */
  maxOrderQty = protoInt64.zero;

  /**
   * The incremental count by which the order quantity can be increased (in cents)
   *
   * @generated from field: uint64 step_interval = 22;
   */
  stepInterval = protoInt64.zero;

  constructor(data?: PartialMessage<VendorsServiceItemCreateRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.VendorsServiceItemCreateRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "user_comment", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 10, name: "vendor_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 11, name: "family_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 12, name: "vendor_family_code", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 13, name: "uom_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 14, name: "tax_group_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 15, name: "price", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 20, name: "min_order_qty", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 21, name: "max_order_qty", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 22, name: "step_interval", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): VendorsServiceItemCreateRequest {
    return new VendorsServiceItemCreateRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): VendorsServiceItemCreateRequest {
    return new VendorsServiceItemCreateRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): VendorsServiceItemCreateRequest {
    return new VendorsServiceItemCreateRequest().fromJsonString(jsonString, options);
  }

  static equals(a: VendorsServiceItemCreateRequest | PlainMessage<VendorsServiceItemCreateRequest> | undefined, b: VendorsServiceItemCreateRequest | PlainMessage<VendorsServiceItemCreateRequest> | undefined): boolean {
    return proto3.util.equals(VendorsServiceItemCreateRequest, a, b);
  }
}

/**
 *
 * Describes the parameters required to update an item in a vendor
 *
 * @generated from message Scailo.VendorsServiceItemUpdateRequest
 */
export class VendorsServiceItemUpdateRequest extends Message<VendorsServiceItemUpdateRequest> {
  /**
   * Stores any comment that the user might add during this operation
   *
   * @generated from field: string user_comment = 1;
   */
  userComment = "";

  /**
   * The ID of the record
   *
   * @generated from field: uint64 id = 2;
   */
  id = protoInt64.zero;

  /**
   * Stores the optional family code as represented by the vendor
   *
   * @generated from field: string vendor_family_code = 12;
   */
  vendorFamilyCode = "";

  /**
   * Stores the ID of the vendor's unit of material
   *
   * @generated from field: uint64 uom_id = 13;
   */
  uomId = protoInt64.zero;

  /**
   * The ID of the associated tax group
   *
   * @generated from field: uint64 tax_group_id = 14;
   */
  taxGroupId = protoInt64.zero;

  /**
   * The unit price of the item (as supplied by the vendor)
   *
   * @generated from field: uint64 price = 15;
   */
  price = protoInt64.zero;

  /**
   * The minimum order quantity that needs to be placed (in cents) (0.01 is the minimum)
   *
   * @generated from field: uint64 min_order_qty = 20;
   */
  minOrderQty = protoInt64.zero;

  /**
   * The maximum order quantity that can be placed (in cents) (0 represents unlimited max quantity)
   *
   * @generated from field: uint64 max_order_qty = 21;
   */
  maxOrderQty = protoInt64.zero;

  /**
   * The incremental count by which the order quantity can be increased (in cents)
   *
   * @generated from field: uint64 step_interval = 22;
   */
  stepInterval = protoInt64.zero;

  constructor(data?: PartialMessage<VendorsServiceItemUpdateRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.VendorsServiceItemUpdateRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "user_comment", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 12, name: "vendor_family_code", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 13, name: "uom_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 14, name: "tax_group_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 15, name: "price", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 20, name: "min_order_qty", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 21, name: "max_order_qty", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 22, name: "step_interval", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): VendorsServiceItemUpdateRequest {
    return new VendorsServiceItemUpdateRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): VendorsServiceItemUpdateRequest {
    return new VendorsServiceItemUpdateRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): VendorsServiceItemUpdateRequest {
    return new VendorsServiceItemUpdateRequest().fromJsonString(jsonString, options);
  }

  static equals(a: VendorsServiceItemUpdateRequest | PlainMessage<VendorsServiceItemUpdateRequest> | undefined, b: VendorsServiceItemUpdateRequest | PlainMessage<VendorsServiceItemUpdateRequest> | undefined): boolean {
    return proto3.util.equals(VendorsServiceItemUpdateRequest, a, b);
  }
}

/**
 *
 * Describes the parameters that constitute an item associated to a vendor
 *
 * @generated from message Scailo.VendorItem
 */
export class VendorItem extends Message<VendorItem> {
  /**
   * Stores a globally unique entity UUID. This will be set at the organization level
   *
   * @generated from field: string entity_uuid = 1;
   */
  entityUuid = "";

  /**
   * Stores the metadata of this vendor
   *
   * @generated from field: Scailo.EmployeeMetadata metadata = 2;
   */
  metadata?: EmployeeMetadata;

  /**
   * Stores the approval metadata
   *
   * @generated from field: Scailo.ApprovalMetadata approval_metadata = 3;
   */
  approvalMetadata?: ApprovalMetadata;

  /**
   * Denotes if this record requires approval (or has been approved)
   *
   * @generated from field: bool need_approval = 4;
   */
  needApproval = false;

  /**
   * Stores any comment that the user might have added during an operation
   *
   * @generated from field: string user_comment = 5;
   */
  userComment = "";

  /**
   * Stores the vendor ID
   *
   * @generated from field: uint64 vendor_id = 10;
   */
  vendorId = protoInt64.zero;

  /**
   * Stores the family ID
   *
   * @generated from field: uint64 family_id = 11;
   */
  familyId = protoInt64.zero;

  /**
   * Stores the optional family code as represented by the vendor
   *
   * @generated from field: string vendor_family_code = 12;
   */
  vendorFamilyCode = "";

  /**
   * Stores the ID of the vendor's unit of material
   *
   * @generated from field: uint64 uom_id = 13;
   */
  uomId = protoInt64.zero;

  /**
   * The ID of the associated tax group
   *
   * @generated from field: uint64 tax_group_id = 14;
   */
  taxGroupId = protoInt64.zero;

  /**
   * The unit price of the item (as supplied by the vendor)
   *
   * @generated from field: uint64 price = 15;
   */
  price = protoInt64.zero;

  /**
   * The minimum order quantity that needs to be placed (in cents) (0.01 is the minimum)
   *
   * @generated from field: uint64 min_order_qty = 20;
   */
  minOrderQty = protoInt64.zero;

  /**
   * The maximum order quantity that can be placed (in cents) (0 represents unlimited max quantity)
   *
   * @generated from field: uint64 max_order_qty = 21;
   */
  maxOrderQty = protoInt64.zero;

  /**
   * The incremental count by which the order quantity can be increased (in cents)
   *
   * @generated from field: uint64 step_interval = 22;
   */
  stepInterval = protoInt64.zero;

  constructor(data?: PartialMessage<VendorItem>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.VendorItem";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "entity_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "metadata", kind: "message", T: EmployeeMetadata },
    { no: 3, name: "approval_metadata", kind: "message", T: ApprovalMetadata },
    { no: 4, name: "need_approval", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 5, name: "user_comment", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 10, name: "vendor_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 11, name: "family_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 12, name: "vendor_family_code", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 13, name: "uom_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 14, name: "tax_group_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 15, name: "price", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 20, name: "min_order_qty", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 21, name: "max_order_qty", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 22, name: "step_interval", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): VendorItem {
    return new VendorItem().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): VendorItem {
    return new VendorItem().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): VendorItem {
    return new VendorItem().fromJsonString(jsonString, options);
  }

  static equals(a: VendorItem | PlainMessage<VendorItem> | undefined, b: VendorItem | PlainMessage<VendorItem> | undefined): boolean {
    return proto3.util.equals(VendorItem, a, b);
  }
}

/**
 *
 * Describes the message consisting of the list of vendors
 *
 * @generated from message Scailo.VendorsList
 */
export class VendorsList extends Message<VendorsList> {
  /**
   * List of records
   *
   * @generated from field: repeated Scailo.Vendor list = 1;
   */
  list: Vendor[] = [];

  constructor(data?: PartialMessage<VendorsList>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.VendorsList";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "list", kind: "message", T: Vendor, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): VendorsList {
    return new VendorsList().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): VendorsList {
    return new VendorsList().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): VendorsList {
    return new VendorsList().fromJsonString(jsonString, options);
  }

  static equals(a: VendorsList | PlainMessage<VendorsList> | undefined, b: VendorsList | PlainMessage<VendorsList> | undefined): boolean {
    return proto3.util.equals(VendorsList, a, b);
  }
}

/**
 *
 * Describes the message consisting of the list of vendor items
 *
 * @generated from message Scailo.VendorItemsList
 */
export class VendorItemsList extends Message<VendorItemsList> {
  /**
   * List of records
   *
   * @generated from field: repeated Scailo.VendorItem list = 1;
   */
  list: VendorItem[] = [];

  constructor(data?: PartialMessage<VendorItemsList>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.VendorItemsList";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "list", kind: "message", T: VendorItem, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): VendorItemsList {
    return new VendorItemsList().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): VendorItemsList {
    return new VendorItemsList().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): VendorItemsList {
    return new VendorItemsList().fromJsonString(jsonString, options);
  }

  static equals(a: VendorItemsList | PlainMessage<VendorItemsList> | undefined, b: VendorItemsList | PlainMessage<VendorItemsList> | undefined): boolean {
    return proto3.util.equals(VendorItemsList, a, b);
  }
}

/**
 *
 * Describes the parameters that are required to retrieve the history of the record
 *
 * @generated from message Scailo.VendorItemHistoryRequest
 */
export class VendorItemHistoryRequest extends Message<VendorItemHistoryRequest> {
  /**
   * Stores the vendor ID
   *
   * @generated from field: uint64 vendor_id = 10;
   */
  vendorId = protoInt64.zero;

  /**
   * Stores the family ID
   *
   * @generated from field: uint64 family_id = 11;
   */
  familyId = protoInt64.zero;

  /**
   * Stores the ID of the vendor's unit of material
   *
   * @generated from field: uint64 uom_id = 13;
   */
  uomId = protoInt64.zero;

  constructor(data?: PartialMessage<VendorItemHistoryRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.VendorItemHistoryRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 10, name: "vendor_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 11, name: "family_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 13, name: "uom_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): VendorItemHistoryRequest {
    return new VendorItemHistoryRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): VendorItemHistoryRequest {
    return new VendorItemHistoryRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): VendorItemHistoryRequest {
    return new VendorItemHistoryRequest().fromJsonString(jsonString, options);
  }

  static equals(a: VendorItemHistoryRequest | PlainMessage<VendorItemHistoryRequest> | undefined, b: VendorItemHistoryRequest | PlainMessage<VendorItemHistoryRequest> | undefined): boolean {
    return proto3.util.equals(VendorItemHistoryRequest, a, b);
  }
}

/**
 *
 * Describes a pagination request to retrieve records
 *
 * @generated from message Scailo.VendorsServicePaginationReq
 */
export class VendorsServicePaginationReq extends Message<VendorsServicePaginationReq> {
  /**
   * If true, then returns only active records. If false, then returns only inactive records
   *
   * @generated from field: Scailo.BOOL_FILTER is_active = 1;
   */
  isActive = BOOL_FILTER.BOOL_FILTER_ANY_UNSPECIFIED;

  /**
   * The number of records that need to be sent in the response
   *
   * @generated from field: int64 count = 2;
   */
  count = protoInt64.zero;

  /**
   * The number that need to be offset by before fetching the records
   *
   * @generated from field: uint64 offset = 3;
   */
  offset = protoInt64.zero;

  /**
   * The sort order that is to be used to fetch the pagination response
   *
   * @generated from field: Scailo.SORT_ORDER sort_order = 4;
   */
  sortOrder = SORT_ORDER.ASCENDING_UNSPECIFIED;

  /**
   * The sort key that is to be used to fetch the pagination response
   *
   * @generated from field: Scailo.VENDOR_SORT_KEY sort_key = 5;
   */
  sortKey = VENDOR_SORT_KEY.VENDOR_SORT_KEY_ID_UNSPECIFIED;

  /**
   * The status of this vendor
   *
   * @generated from field: Scailo.STANDARD_LIFECYCLE_STATUS status = 6;
   */
  status = STANDARD_LIFECYCLE_STATUS.ANY_UNSPECIFIED;

  constructor(data?: PartialMessage<VendorsServicePaginationReq>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.VendorsServicePaginationReq";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "is_active", kind: "enum", T: proto3.getEnumType(BOOL_FILTER) },
    { no: 2, name: "count", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "offset", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 4, name: "sort_order", kind: "enum", T: proto3.getEnumType(SORT_ORDER) },
    { no: 5, name: "sort_key", kind: "enum", T: proto3.getEnumType(VENDOR_SORT_KEY) },
    { no: 6, name: "status", kind: "enum", T: proto3.getEnumType(STANDARD_LIFECYCLE_STATUS) },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): VendorsServicePaginationReq {
    return new VendorsServicePaginationReq().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): VendorsServicePaginationReq {
    return new VendorsServicePaginationReq().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): VendorsServicePaginationReq {
    return new VendorsServicePaginationReq().fromJsonString(jsonString, options);
  }

  static equals(a: VendorsServicePaginationReq | PlainMessage<VendorsServicePaginationReq> | undefined, b: VendorsServicePaginationReq | PlainMessage<VendorsServicePaginationReq> | undefined): boolean {
    return proto3.util.equals(VendorsServicePaginationReq, a, b);
  }
}

/**
 *
 * Describes the response to a pagination request
 *
 * @generated from message Scailo.VendorsServicePaginationResponse
 */
export class VendorsServicePaginationResponse extends Message<VendorsServicePaginationResponse> {
  /**
   * The number of records in this payload
   *
   * @generated from field: uint64 count = 1;
   */
  count = protoInt64.zero;

  /**
   * The number that has been offset before fetching the records. This is the same value that has been sent as part of the pagination request
   *
   * @generated from field: uint64 offset = 2;
   */
  offset = protoInt64.zero;

  /**
   * The total number of records that are available
   *
   * @generated from field: uint64 total = 3;
   */
  total = protoInt64.zero;

  /**
   * The list of records
   *
   * @generated from field: repeated Scailo.Vendor payload = 4;
   */
  payload: Vendor[] = [];

  constructor(data?: PartialMessage<VendorsServicePaginationResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.VendorsServicePaginationResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "count", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 2, name: "offset", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 3, name: "total", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 4, name: "payload", kind: "message", T: Vendor, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): VendorsServicePaginationResponse {
    return new VendorsServicePaginationResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): VendorsServicePaginationResponse {
    return new VendorsServicePaginationResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): VendorsServicePaginationResponse {
    return new VendorsServicePaginationResponse().fromJsonString(jsonString, options);
  }

  static equals(a: VendorsServicePaginationResponse | PlainMessage<VendorsServicePaginationResponse> | undefined, b: VendorsServicePaginationResponse | PlainMessage<VendorsServicePaginationResponse> | undefined): boolean {
    return proto3.util.equals(VendorsServicePaginationResponse, a, b);
  }
}

/**
 *
 * Describes the base request payload of a filter search
 *
 * @generated from message Scailo.VendorsServiceFilterReq
 */
export class VendorsServiceFilterReq extends Message<VendorsServiceFilterReq> {
  /**
   * If true, then returns only active records. If false, then returns only inactive records
   *
   * @generated from field: Scailo.BOOL_FILTER is_active = 1;
   */
  isActive = BOOL_FILTER.BOOL_FILTER_ANY_UNSPECIFIED;

  /**
   * The number of records that need to be sent in the response. Returns all records if it is set to -1
   *
   * @generated from field: int64 count = 2;
   */
  count = protoInt64.zero;

  /**
   * The number that need to be offset by before fetching the records
   *
   * @generated from field: uint64 offset = 3;
   */
  offset = protoInt64.zero;

  /**
   * The sort order that is to be used to fetch the pagination response
   *
   * @generated from field: Scailo.SORT_ORDER sort_order = 4;
   */
  sortOrder = SORT_ORDER.ASCENDING_UNSPECIFIED;

  /**
   * The sort key that is to be used to fetch the pagination response
   *
   * @generated from field: Scailo.VENDOR_SORT_KEY sort_key = 5;
   */
  sortKey = VENDOR_SORT_KEY.VENDOR_SORT_KEY_ID_UNSPECIFIED;

  /**
   * The minimum timestamp that needs to be considered to filter by creation
   *
   * @generated from field: uint64 creation_timestamp_start = 101;
   */
  creationTimestampStart = protoInt64.zero;

  /**
   * The maximum timestamp that needs to be considered to filter by creation
   *
   * @generated from field: uint64 creation_timestamp_end = 102;
   */
  creationTimestampEnd = protoInt64.zero;

  /**
   * The minimum timestamp that needs to be considered to filter by modification
   *
   * @generated from field: uint64 modification_timestamp_start = 103;
   */
  modificationTimestampStart = protoInt64.zero;

  /**
   * The maximum timestamp that needs to be considered to filter by modification
   *
   * @generated from field: uint64 modification_timestamp_end = 104;
   */
  modificationTimestampEnd = protoInt64.zero;

  /**
   * The entity UUID that is to be used to filter records
   *
   * @generated from field: string entity_uuid = 8;
   */
  entityUuid = "";

  /**
   * The status of this vendor
   *
   * @generated from field: Scailo.STANDARD_LIFECYCLE_STATUS status = 10;
   */
  status = STANDARD_LIFECYCLE_STATUS.ANY_UNSPECIFIED;

  /**
   * The start range of approved timestamp
   *
   * @generated from field: uint64 approved_on_start = 11;
   */
  approvedOnStart = protoInt64.zero;

  /**
   * The end range of approved timestamp
   *
   * @generated from field: uint64 approved_on_end = 12;
   */
  approvedOnEnd = protoInt64.zero;

  /**
   * The ID of the approver
   *
   * @generated from field: uint64 approved_by_user_id = 13;
   */
  approvedByUserId = protoInt64.zero;

  /**
   * The role ID of the approver
   *
   * @generated from field: uint64 approver_role_id = 14;
   */
  approverRoleId = protoInt64.zero;

  /**
   * The name of the vendor
   *
   * @generated from field: string name = 20;
   */
  name = "";

  /**
   * The unique code by which the vendor is classified
   *
   * @generated from field: string code = 21;
   */
  code = "";

  /**
   * The primary email of the vendor
   *
   * @generated from field: string email = 22;
   */
  email = "";

  /**
   * The primary contact number of the vendor
   *
   * @generated from field: string phone = 23;
   */
  phone = "";

  /**
   * The ID of the family
   *
   * @generated from field: uint64 family_id = 40;
   */
  familyId = protoInt64.zero;

  constructor(data?: PartialMessage<VendorsServiceFilterReq>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.VendorsServiceFilterReq";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "is_active", kind: "enum", T: proto3.getEnumType(BOOL_FILTER) },
    { no: 2, name: "count", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "offset", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 4, name: "sort_order", kind: "enum", T: proto3.getEnumType(SORT_ORDER) },
    { no: 5, name: "sort_key", kind: "enum", T: proto3.getEnumType(VENDOR_SORT_KEY) },
    { no: 101, name: "creation_timestamp_start", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 102, name: "creation_timestamp_end", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 103, name: "modification_timestamp_start", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 104, name: "modification_timestamp_end", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 8, name: "entity_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 10, name: "status", kind: "enum", T: proto3.getEnumType(STANDARD_LIFECYCLE_STATUS) },
    { no: 11, name: "approved_on_start", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 12, name: "approved_on_end", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 13, name: "approved_by_user_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 14, name: "approver_role_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 20, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 21, name: "code", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 22, name: "email", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 23, name: "phone", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 40, name: "family_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): VendorsServiceFilterReq {
    return new VendorsServiceFilterReq().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): VendorsServiceFilterReq {
    return new VendorsServiceFilterReq().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): VendorsServiceFilterReq {
    return new VendorsServiceFilterReq().fromJsonString(jsonString, options);
  }

  static equals(a: VendorsServiceFilterReq | PlainMessage<VendorsServiceFilterReq> | undefined, b: VendorsServiceFilterReq | PlainMessage<VendorsServiceFilterReq> | undefined): boolean {
    return proto3.util.equals(VendorsServiceFilterReq, a, b);
  }
}

/**
 *
 * Describes the base request payload of a count search
 *
 * @generated from message Scailo.VendorsServiceCountReq
 */
export class VendorsServiceCountReq extends Message<VendorsServiceCountReq> {
  /**
   * If true, then returns only active records. If false, then returns only inactive records
   *
   * @generated from field: Scailo.BOOL_FILTER is_active = 1;
   */
  isActive = BOOL_FILTER.BOOL_FILTER_ANY_UNSPECIFIED;

  /**
   * The minimum timestamp that needs to be considered to filter by creation
   *
   * @generated from field: uint64 creation_timestamp_start = 101;
   */
  creationTimestampStart = protoInt64.zero;

  /**
   * The maximum timestamp that needs to be considered to filter by creation
   *
   * @generated from field: uint64 creation_timestamp_end = 102;
   */
  creationTimestampEnd = protoInt64.zero;

  /**
   * The minimum timestamp that needs to be considered to filter by modification
   *
   * @generated from field: uint64 modification_timestamp_start = 103;
   */
  modificationTimestampStart = protoInt64.zero;

  /**
   * The maximum timestamp that needs to be considered to filter by modification
   *
   * @generated from field: uint64 modification_timestamp_end = 104;
   */
  modificationTimestampEnd = protoInt64.zero;

  /**
   * The entity UUID that is to be used to filter records
   *
   * @generated from field: string entity_uuid = 8;
   */
  entityUuid = "";

  /**
   * The status of this vendor
   *
   * @generated from field: Scailo.STANDARD_LIFECYCLE_STATUS status = 10;
   */
  status = STANDARD_LIFECYCLE_STATUS.ANY_UNSPECIFIED;

  /**
   * The start range of approved timestamp
   *
   * @generated from field: uint64 approved_on_start = 11;
   */
  approvedOnStart = protoInt64.zero;

  /**
   * The end range of approved timestamp
   *
   * @generated from field: uint64 approved_on_end = 12;
   */
  approvedOnEnd = protoInt64.zero;

  /**
   * The ID of the approver
   *
   * @generated from field: uint64 approved_by_user_id = 13;
   */
  approvedByUserId = protoInt64.zero;

  /**
   * The role ID of the approver
   *
   * @generated from field: uint64 approver_role_id = 14;
   */
  approverRoleId = protoInt64.zero;

  /**
   * The name of the vendor
   *
   * @generated from field: string name = 20;
   */
  name = "";

  /**
   * The unique code by which the vendor is classified
   *
   * @generated from field: string code = 21;
   */
  code = "";

  /**
   * The primary email of the vendor
   *
   * @generated from field: string email = 22;
   */
  email = "";

  /**
   * The primary contact number of the vendor
   *
   * @generated from field: string phone = 23;
   */
  phone = "";

  /**
   * The ID of the family
   *
   * @generated from field: uint64 family_id = 40;
   */
  familyId = protoInt64.zero;

  constructor(data?: PartialMessage<VendorsServiceCountReq>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.VendorsServiceCountReq";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "is_active", kind: "enum", T: proto3.getEnumType(BOOL_FILTER) },
    { no: 101, name: "creation_timestamp_start", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 102, name: "creation_timestamp_end", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 103, name: "modification_timestamp_start", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 104, name: "modification_timestamp_end", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 8, name: "entity_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 10, name: "status", kind: "enum", T: proto3.getEnumType(STANDARD_LIFECYCLE_STATUS) },
    { no: 11, name: "approved_on_start", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 12, name: "approved_on_end", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 13, name: "approved_by_user_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 14, name: "approver_role_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 20, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 21, name: "code", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 22, name: "email", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 23, name: "phone", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 40, name: "family_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): VendorsServiceCountReq {
    return new VendorsServiceCountReq().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): VendorsServiceCountReq {
    return new VendorsServiceCountReq().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): VendorsServiceCountReq {
    return new VendorsServiceCountReq().fromJsonString(jsonString, options);
  }

  static equals(a: VendorsServiceCountReq | PlainMessage<VendorsServiceCountReq> | undefined, b: VendorsServiceCountReq | PlainMessage<VendorsServiceCountReq> | undefined): boolean {
    return proto3.util.equals(VendorsServiceCountReq, a, b);
  }
}

/**
 *
 * Describes the request payload for performing a generic search operation on records
 *
 * @generated from message Scailo.VendorsServiceSearchAllReq
 */
export class VendorsServiceSearchAllReq extends Message<VendorsServiceSearchAllReq> {
  /**
   * If true, then returns only active records. If false, then returns only inactive records
   *
   * @generated from field: Scailo.BOOL_FILTER is_active = 1;
   */
  isActive = BOOL_FILTER.BOOL_FILTER_ANY_UNSPECIFIED;

  /**
   * The number of records that need to be sent in the response. Returns all records if it is set to -1
   *
   * @generated from field: int64 count = 2;
   */
  count = protoInt64.zero;

  /**
   * The number that need to be offset by before fetching the records
   *
   * @generated from field: uint64 offset = 3;
   */
  offset = protoInt64.zero;

  /**
   * The sort order that is to be used to fetch the pagination response
   *
   * @generated from field: Scailo.SORT_ORDER sort_order = 4;
   */
  sortOrder = SORT_ORDER.ASCENDING_UNSPECIFIED;

  /**
   * The sort key that is to be used to fetch the pagination response
   *
   * @generated from field: Scailo.VENDOR_SORT_KEY sort_key = 5;
   */
  sortKey = VENDOR_SORT_KEY.VENDOR_SORT_KEY_ID_UNSPECIFIED;

  /**
   * The entity UUID that is to be used to filter records
   *
   * @generated from field: string entity_uuid = 6;
   */
  entityUuid = "";

  /**
   * Limit the search space to the given status
   *
   * @generated from field: Scailo.STANDARD_LIFECYCLE_STATUS status = 10;
   */
  status = STANDARD_LIFECYCLE_STATUS.ANY_UNSPECIFIED;

  /**
   * Describes the key with which the search operation needs to be performed
   *
   * @generated from field: string search_key = 11;
   */
  searchKey = "";

  constructor(data?: PartialMessage<VendorsServiceSearchAllReq>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.VendorsServiceSearchAllReq";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "is_active", kind: "enum", T: proto3.getEnumType(BOOL_FILTER) },
    { no: 2, name: "count", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "offset", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 4, name: "sort_order", kind: "enum", T: proto3.getEnumType(SORT_ORDER) },
    { no: 5, name: "sort_key", kind: "enum", T: proto3.getEnumType(VENDOR_SORT_KEY) },
    { no: 6, name: "entity_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 10, name: "status", kind: "enum", T: proto3.getEnumType(STANDARD_LIFECYCLE_STATUS) },
    { no: 11, name: "search_key", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): VendorsServiceSearchAllReq {
    return new VendorsServiceSearchAllReq().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): VendorsServiceSearchAllReq {
    return new VendorsServiceSearchAllReq().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): VendorsServiceSearchAllReq {
    return new VendorsServiceSearchAllReq().fromJsonString(jsonString, options);
  }

  static equals(a: VendorsServiceSearchAllReq | PlainMessage<VendorsServiceSearchAllReq> | undefined, b: VendorsServiceSearchAllReq | PlainMessage<VendorsServiceSearchAllReq> | undefined): boolean {
    return proto3.util.equals(VendorsServiceSearchAllReq, a, b);
  }
}

/**
 *
 * Describes the request payload to retrieve approved or unapproved items.
 *
 * @generated from message Scailo.VendorItemsSearchRequest
 */
export class VendorItemsSearchRequest extends Message<VendorItemsSearchRequest> {
  /**
   * If true, then returns only active records. If false, then returns only inactive records
   *
   * @generated from field: Scailo.BOOL_FILTER is_active = 1;
   */
  isActive = BOOL_FILTER.BOOL_FILTER_ANY_UNSPECIFIED;

  /**
   * The number of records that need to be sent in the response. Returns all records if it is set to -1
   *
   * @generated from field: int64 count = 2;
   */
  count = protoInt64.zero;

  /**
   * The number that need to be offset by before fetching the records
   *
   * @generated from field: uint64 offset = 3;
   */
  offset = protoInt64.zero;

  /**
   * The sort order that is to be used to fetch the pagination response
   *
   * @generated from field: Scailo.SORT_ORDER sort_order = 4;
   */
  sortOrder = SORT_ORDER.ASCENDING_UNSPECIFIED;

  /**
   * The sort key that is to be used to fetch the pagination response
   *
   * @generated from field: Scailo.VENDOR_ITEM_SORT_KEY sort_key = 5;
   */
  sortKey = VENDOR_ITEM_SORT_KEY.VENDOR_ITEM_SORT_KEY_ID_UNSPECIFIED;

  /**
   * The entity UUID that is to be used to filter records
   *
   * @generated from field: string entity_uuid = 6;
   */
  entityUuid = "";

  /**
   * The status of the items
   *
   * @generated from field: Scailo.VENDOR_ITEM_STATUS status = 7;
   */
  status = VENDOR_ITEM_STATUS.VENDOR_ITEM_STATUS_ANY_UNSPECIFIED;

  /**
   * The ID of the vendor
   *
   * @generated from field: uint64 vendor_id = 10;
   */
  vendorId = protoInt64.zero;

  /**
   * The ID of the family
   *
   * @generated from field: uint64 family_id = 11;
   */
  familyId = protoInt64.zero;

  /**
   * The vendor's family code
   *
   * @generated from field: string vendor_family_code = 12;
   */
  vendorFamilyCode = "";

  /**
   * The ID of the unit of material
   *
   * @generated from field: uint64 uom_id = 13;
   */
  uomId = protoInt64.zero;

  /**
   * The ID of the tax group
   *
   * @generated from field: uint64 tax_group_id = 14;
   */
  taxGroupId = protoInt64.zero;

  /**
   * Describes the key with which the search operation needs to be performed
   *
   * @generated from field: string search_key = 20;
   */
  searchKey = "";

  constructor(data?: PartialMessage<VendorItemsSearchRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.VendorItemsSearchRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "is_active", kind: "enum", T: proto3.getEnumType(BOOL_FILTER) },
    { no: 2, name: "count", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "offset", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 4, name: "sort_order", kind: "enum", T: proto3.getEnumType(SORT_ORDER) },
    { no: 5, name: "sort_key", kind: "enum", T: proto3.getEnumType(VENDOR_ITEM_SORT_KEY) },
    { no: 6, name: "entity_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 7, name: "status", kind: "enum", T: proto3.getEnumType(VENDOR_ITEM_STATUS) },
    { no: 10, name: "vendor_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 11, name: "family_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 12, name: "vendor_family_code", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 13, name: "uom_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 14, name: "tax_group_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 20, name: "search_key", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): VendorItemsSearchRequest {
    return new VendorItemsSearchRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): VendorItemsSearchRequest {
    return new VendorItemsSearchRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): VendorItemsSearchRequest {
    return new VendorItemsSearchRequest().fromJsonString(jsonString, options);
  }

  static equals(a: VendorItemsSearchRequest | PlainMessage<VendorItemsSearchRequest> | undefined, b: VendorItemsSearchRequest | PlainMessage<VendorItemsSearchRequest> | undefined): boolean {
    return proto3.util.equals(VendorItemsSearchRequest, a, b);
  }
}

/**
 *
 * Describes the response to a pagination items request
 *
 * @generated from message Scailo.VendorsServicePaginatedItemsResponse
 */
export class VendorsServicePaginatedItemsResponse extends Message<VendorsServicePaginatedItemsResponse> {
  /**
   * The number of records in this payload
   *
   * @generated from field: uint64 count = 1;
   */
  count = protoInt64.zero;

  /**
   * The number that has been offset before fetching the records. This is the same value that has been sent as part of the pagination request
   *
   * @generated from field: uint64 offset = 2;
   */
  offset = protoInt64.zero;

  /**
   * The total number of records that are available
   *
   * @generated from field: uint64 total = 3;
   */
  total = protoInt64.zero;

  /**
   * The list of records
   *
   * @generated from field: repeated Scailo.VendorItem payload = 4;
   */
  payload: VendorItem[] = [];

  constructor(data?: PartialMessage<VendorsServicePaginatedItemsResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.VendorsServicePaginatedItemsResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "count", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 2, name: "offset", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 3, name: "total", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 4, name: "payload", kind: "message", T: VendorItem, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): VendorsServicePaginatedItemsResponse {
    return new VendorsServicePaginatedItemsResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): VendorsServicePaginatedItemsResponse {
    return new VendorsServicePaginatedItemsResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): VendorsServicePaginatedItemsResponse {
    return new VendorsServicePaginatedItemsResponse().fromJsonString(jsonString, options);
  }

  static equals(a: VendorsServicePaginatedItemsResponse | PlainMessage<VendorsServicePaginatedItemsResponse> | undefined, b: VendorsServicePaginatedItemsResponse | PlainMessage<VendorsServicePaginatedItemsResponse> | undefined): boolean {
    return proto3.util.equals(VendorsServicePaginatedItemsResponse, a, b);
  }
}

/**
 *
 * Describes the parameters necessary to create a vendor user
 *
 * @generated from message Scailo.VendorsServiceUserCreateRequest
 */
export class VendorsServiceUserCreateRequest extends Message<VendorsServiceUserCreateRequest> {
  /**
   * Stores any comment that the user might add during this operation
   *
   * @generated from field: string user_comment = 1;
   */
  userComment = "";

  /**
   * Stores the vendor ID
   *
   * @generated from field: uint64 vendor_id = 10;
   */
  vendorId = protoInt64.zero;

  /**
   * Stores the user ID
   *
   * @generated from field: uint64 user_id = 11;
   */
  userId = protoInt64.zero;

  /**
   * Stores an optional associate ID
   *
   * @generated from field: uint64 associate_id = 12;
   */
  associateId = protoInt64.zero;

  constructor(data?: PartialMessage<VendorsServiceUserCreateRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.VendorsServiceUserCreateRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "user_comment", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 10, name: "vendor_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 11, name: "user_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 12, name: "associate_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): VendorsServiceUserCreateRequest {
    return new VendorsServiceUserCreateRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): VendorsServiceUserCreateRequest {
    return new VendorsServiceUserCreateRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): VendorsServiceUserCreateRequest {
    return new VendorsServiceUserCreateRequest().fromJsonString(jsonString, options);
  }

  static equals(a: VendorsServiceUserCreateRequest | PlainMessage<VendorsServiceUserCreateRequest> | undefined, b: VendorsServiceUserCreateRequest | PlainMessage<VendorsServiceUserCreateRequest> | undefined): boolean {
    return proto3.util.equals(VendorsServiceUserCreateRequest, a, b);
  }
}

/**
 *
 * Describes the parameters that constitute a vendor user
 *
 * @generated from message Scailo.VendorUser
 */
export class VendorUser extends Message<VendorUser> {
  /**
   * Stores a globally unique entity UUID. This will be set at the organization level
   *
   * @generated from field: string entity_uuid = 1;
   */
  entityUuid = "";

  /**
   * Stores the metadata of this vendor
   *
   * @generated from field: Scailo.EmployeeMetadata metadata = 2;
   */
  metadata?: EmployeeMetadata;

  /**
   * Stores the approval metadata
   *
   * @generated from field: Scailo.ApprovalMetadata approval_metadata = 3;
   */
  approvalMetadata?: ApprovalMetadata;

  /**
   * Denotes if this record requires approval (or has been approved)
   *
   * @generated from field: bool need_approval = 4;
   */
  needApproval = false;

  /**
   * Stores any comment that the user might have added during an operation
   *
   * @generated from field: string user_comment = 5;
   */
  userComment = "";

  /**
   * Stores the vendor ID
   *
   * @generated from field: uint64 vendor_id = 10;
   */
  vendorId = protoInt64.zero;

  /**
   * Stores the user ID
   *
   * @generated from field: uint64 user_id = 11;
   */
  userId = protoInt64.zero;

  /**
   * Stores an optional associate ID
   *
   * @generated from field: uint64 associate_id = 12;
   */
  associateId = protoInt64.zero;

  constructor(data?: PartialMessage<VendorUser>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.VendorUser";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "entity_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "metadata", kind: "message", T: EmployeeMetadata },
    { no: 3, name: "approval_metadata", kind: "message", T: ApprovalMetadata },
    { no: 4, name: "need_approval", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 5, name: "user_comment", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 10, name: "vendor_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 11, name: "user_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 12, name: "associate_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): VendorUser {
    return new VendorUser().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): VendorUser {
    return new VendorUser().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): VendorUser {
    return new VendorUser().fromJsonString(jsonString, options);
  }

  static equals(a: VendorUser | PlainMessage<VendorUser> | undefined, b: VendorUser | PlainMessage<VendorUser> | undefined): boolean {
    return proto3.util.equals(VendorUser, a, b);
  }
}

/**
 *
 * Describes the message consisting of the list of vendor users
 *
 * @generated from message Scailo.VendorUsersList
 */
export class VendorUsersList extends Message<VendorUsersList> {
  /**
   * List of records
   *
   * @generated from field: repeated Scailo.VendorUser list = 1;
   */
  list: VendorUser[] = [];

  constructor(data?: PartialMessage<VendorUsersList>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.VendorUsersList";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "list", kind: "message", T: VendorUser, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): VendorUsersList {
    return new VendorUsersList().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): VendorUsersList {
    return new VendorUsersList().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): VendorUsersList {
    return new VendorUsersList().fromJsonString(jsonString, options);
  }

  static equals(a: VendorUsersList | PlainMessage<VendorUsersList> | undefined, b: VendorUsersList | PlainMessage<VendorUsersList> | undefined): boolean {
    return proto3.util.equals(VendorUsersList, a, b);
  }
}

