// @generated by protoc-gen-es v1.5.1 with parameter "target=ts"
// @generated from file purchases_orders.scailo.proto (package Scailo, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3, protoInt64 } from "@bufbuild/protobuf";
import { FormFieldDatum, FormFieldDatumCreateRequest } from "./forms_fields_data.scailo_pb.js";
import { ApprovalMetadata, BOOL_FILTER, EmployeeMetadata, LogbookLogConciseSLC, SORT_ORDER, STANDARD_LIFECYCLE_STATUS } from "./base.scailo_pb.js";

/**
 *
 * Describes the available sort keys
 *
 * @generated from enum Scailo.PURCHASE_ORDER_SORT_KEY
 */
export enum PURCHASE_ORDER_SORT_KEY {
  /**
   * Fetch ordered results by id
   *
   * @generated from enum value: PURCHASE_ORDER_SORT_KEY_ID_UNSPECIFIED = 0;
   */
  PURCHASE_ORDER_SORT_KEY_ID_UNSPECIFIED = 0,

  /**
   * Fetch ordered results by the creation timestamp
   *
   * @generated from enum value: PURCHASE_ORDER_SORT_KEY_CREATED_AT = 1;
   */
  PURCHASE_ORDER_SORT_KEY_CREATED_AT = 1,

  /**
   * Fetch ordered results by the modified timestamp
   *
   * @generated from enum value: PURCHASE_ORDER_SORT_KEY_MODIFIED_AT = 2;
   */
  PURCHASE_ORDER_SORT_KEY_MODIFIED_AT = 2,

  /**
   * Fetch ordered results by the approved on timestamp
   *
   * @generated from enum value: PURCHASE_ORDER_SORT_KEY_APPROVED_ON = 3;
   */
  PURCHASE_ORDER_SORT_KEY_APPROVED_ON = 3,

  /**
   * Fetch ordered results by the approved by field
   *
   * @generated from enum value: PURCHASE_ORDER_SORT_KEY_APPROVED_BY = 4;
   */
  PURCHASE_ORDER_SORT_KEY_APPROVED_BY = 4,

  /**
   * Fetch ordered results by the approver's role ID
   *
   * @generated from enum value: PURCHASE_ORDER_SORT_KEY_APPROVER_ROLE_ID = 5;
   */
  PURCHASE_ORDER_SORT_KEY_APPROVER_ROLE_ID = 5,

  /**
   * Fetch ordered results by the approver's completed on timestamp
   *
   * @generated from enum value: PURCHASE_ORDER_SORT_KEY_COMPLETED_ON = 6;
   */
  PURCHASE_ORDER_SORT_KEY_COMPLETED_ON = 6,

  /**
   * Fetch ordered results by the reference ID
   *
   * @generated from enum value: PURCHASE_ORDER_SORT_KEY_REFERENCE_ID = 10;
   */
  PURCHASE_ORDER_SORT_KEY_REFERENCE_ID = 10,

  /**
   * Fetch ordered results by the final ref number
   *
   * @generated from enum value: PURCHASE_ORDER_SORT_KEY_FINAL_REF_NUMBER = 11;
   */
  PURCHASE_ORDER_SORT_KEY_FINAL_REF_NUMBER = 11,

  /**
   * Fetch ordered results by the consignee location ID
   *
   * @generated from enum value: PURCHASE_ORDER_SORT_KEY_CONSIGNEE_LOCATION_ID = 12;
   */
  PURCHASE_ORDER_SORT_KEY_CONSIGNEE_LOCATION_ID = 12,

  /**
   * Fetch ordered results by the buyer location ID
   *
   * @generated from enum value: PURCHASE_ORDER_SORT_KEY_BUYER_LOCATION_ID = 13;
   */
  PURCHASE_ORDER_SORT_KEY_BUYER_LOCATION_ID = 13,

  /**
   * Fetch ordered results by the vendor ID
   *
   * @generated from enum value: PURCHASE_ORDER_SORT_KEY_VENDOR_ID = 14;
   */
  PURCHASE_ORDER_SORT_KEY_VENDOR_ID = 14,

  /**
   * Fetch ordered results by the currency ID
   *
   * @generated from enum value: PURCHASE_ORDER_SORT_KEY_CURRENCY_ID = 15;
   */
  PURCHASE_ORDER_SORT_KEY_CURRENCY_ID = 15,

  /**
   * Fetch ordered results by the project ID
   *
   * @generated from enum value: PURCHASE_ORDER_SORT_KEY_PROJECT_ID = 16;
   */
  PURCHASE_ORDER_SORT_KEY_PROJECT_ID = 16,

  /**
   * Fetch ordered results by the advance payment
   *
   * @generated from enum value: PURCHASE_ORDER_SORT_KEY_PAYMENT_ADVANCE = 17;
   */
  PURCHASE_ORDER_SORT_KEY_PAYMENT_ADVANCE = 17,

  /**
   * Fetch ordered results by the amendment count
   *
   * @generated from enum value: PURCHASE_ORDER_SORT_KEY_AMENDMENT_COUNT = 18;
   */
  PURCHASE_ORDER_SORT_KEY_AMENDMENT_COUNT = 18,

  /**
   * Fetch ordered results by the total value
   *
   * @generated from enum value: PURCHASE_ORDER_SORT_KEY_TOTAL_VALUE = 30;
   */
  PURCHASE_ORDER_SORT_KEY_TOTAL_VALUE = 30,
}
// Retrieve enum metadata with: proto3.getEnumType(PURCHASE_ORDER_SORT_KEY)
proto3.util.setEnumType(PURCHASE_ORDER_SORT_KEY, "Scailo.PURCHASE_ORDER_SORT_KEY", [
  { no: 0, name: "PURCHASE_ORDER_SORT_KEY_ID_UNSPECIFIED" },
  { no: 1, name: "PURCHASE_ORDER_SORT_KEY_CREATED_AT" },
  { no: 2, name: "PURCHASE_ORDER_SORT_KEY_MODIFIED_AT" },
  { no: 3, name: "PURCHASE_ORDER_SORT_KEY_APPROVED_ON" },
  { no: 4, name: "PURCHASE_ORDER_SORT_KEY_APPROVED_BY" },
  { no: 5, name: "PURCHASE_ORDER_SORT_KEY_APPROVER_ROLE_ID" },
  { no: 6, name: "PURCHASE_ORDER_SORT_KEY_COMPLETED_ON" },
  { no: 10, name: "PURCHASE_ORDER_SORT_KEY_REFERENCE_ID" },
  { no: 11, name: "PURCHASE_ORDER_SORT_KEY_FINAL_REF_NUMBER" },
  { no: 12, name: "PURCHASE_ORDER_SORT_KEY_CONSIGNEE_LOCATION_ID" },
  { no: 13, name: "PURCHASE_ORDER_SORT_KEY_BUYER_LOCATION_ID" },
  { no: 14, name: "PURCHASE_ORDER_SORT_KEY_VENDOR_ID" },
  { no: 15, name: "PURCHASE_ORDER_SORT_KEY_CURRENCY_ID" },
  { no: 16, name: "PURCHASE_ORDER_SORT_KEY_PROJECT_ID" },
  { no: 17, name: "PURCHASE_ORDER_SORT_KEY_PAYMENT_ADVANCE" },
  { no: 18, name: "PURCHASE_ORDER_SORT_KEY_AMENDMENT_COUNT" },
  { no: 30, name: "PURCHASE_ORDER_SORT_KEY_TOTAL_VALUE" },
]);

/**
 *
 * Describes the purchase order reference context
 *
 * @generated from enum Scailo.PURCHASE_ORDER_REFERENCE_CONTEXT
 */
export enum PURCHASE_ORDER_REFERENCE_CONTEXT {
  /**
   * Denotes that context be disregarded. This is used only within search APIs
   *
   * @generated from enum value: PURCHASE_ORDER_REFERENCE_CONTEXT_ANY_UNSPECIFIED = 0;
   */
  PURCHASE_ORDER_REFERENCE_CONTEXT_ANY_UNSPECIFIED = 0,

  /**
   * Denotes buying context
   *
   * @generated from enum value: PURCHASE_ORDER_REFERENCE_CONTEXT_BUYING = 1;
   */
  PURCHASE_ORDER_REFERENCE_CONTEXT_BUYING = 1,

  /**
   * Denotes billing context
   *
   * @generated from enum value: PURCHASE_ORDER_REFERENCE_CONTEXT_BILLING = 2;
   */
  PURCHASE_ORDER_REFERENCE_CONTEXT_BILLING = 2,
}
// Retrieve enum metadata with: proto3.getEnumType(PURCHASE_ORDER_REFERENCE_CONTEXT)
proto3.util.setEnumType(PURCHASE_ORDER_REFERENCE_CONTEXT, "Scailo.PURCHASE_ORDER_REFERENCE_CONTEXT", [
  { no: 0, name: "PURCHASE_ORDER_REFERENCE_CONTEXT_ANY_UNSPECIFIED" },
  { no: 1, name: "PURCHASE_ORDER_REFERENCE_CONTEXT_BUYING" },
  { no: 2, name: "PURCHASE_ORDER_REFERENCE_CONTEXT_BILLING" },
]);

/**
 *
 * Describes the possible options for ref_from field for a purchase order reference
 *
 * @generated from enum Scailo.PURCHASE_ORDER_REFERENCE_REF_FROM
 */
export enum PURCHASE_ORDER_REFERENCE_REF_FROM {
  /**
   * Denotes that the ref from be disregarded. This is used only within search APIs
   *
   * @generated from enum value: PURCHASE_ORDER_REFERENCE_REF_FROM_ANY_UNSPECIFIED = 0;
   */
  PURCHASE_ORDER_REFERENCE_REF_FROM_ANY_UNSPECIFIED = 0,

  /**
   * Denotes purchase indent
   *
   * @generated from enum value: PURCHASE_ORDER_REFERENCE_REF_FROM_PURCHASE_INDENT = 1;
   */
  PURCHASE_ORDER_REFERENCE_REF_FROM_PURCHASE_INDENT = 1,

  /**
   * Denotes outward job
   *
   * @generated from enum value: PURCHASE_ORDER_REFERENCE_REF_FROM_OUTWARD_JOB = 2;
   */
  PURCHASE_ORDER_REFERENCE_REF_FROM_OUTWARD_JOB = 2,

  /**
   * Denotes quotation response
   *
   * @generated from enum value: PURCHASE_ORDER_REFERENCE_REF_FROM_QUOTATION_RESPONSE = 3;
   */
  PURCHASE_ORDER_REFERENCE_REF_FROM_QUOTATION_RESPONSE = 3,

  /**
   * Denotes sales order
   *
   * @generated from enum value: PURCHASE_ORDER_REFERENCE_REF_FROM_SALES_ORDER = 4;
   */
  PURCHASE_ORDER_REFERENCE_REF_FROM_SALES_ORDER = 4,

  /**
   * Denotes work order
   *
   * @generated from enum value: PURCHASE_ORDER_REFERENCE_REF_FROM_WORK_ORDER = 5;
   */
  PURCHASE_ORDER_REFERENCE_REF_FROM_WORK_ORDER = 5,

  /**
   * Denotes purchase order
   *
   * @generated from enum value: PURCHASE_ORDER_REFERENCE_REF_FROM_PURCHASE_ORDER = 6;
   */
  PURCHASE_ORDER_REFERENCE_REF_FROM_PURCHASE_ORDER = 6,

  /**
   * Denotes sales invoice
   *
   * @generated from enum value: PURCHASE_ORDER_REFERENCE_REF_FROM_SALES_INVOICE = 7;
   */
  PURCHASE_ORDER_REFERENCE_REF_FROM_SALES_INVOICE = 7,
}
// Retrieve enum metadata with: proto3.getEnumType(PURCHASE_ORDER_REFERENCE_REF_FROM)
proto3.util.setEnumType(PURCHASE_ORDER_REFERENCE_REF_FROM, "Scailo.PURCHASE_ORDER_REFERENCE_REF_FROM", [
  { no: 0, name: "PURCHASE_ORDER_REFERENCE_REF_FROM_ANY_UNSPECIFIED" },
  { no: 1, name: "PURCHASE_ORDER_REFERENCE_REF_FROM_PURCHASE_INDENT" },
  { no: 2, name: "PURCHASE_ORDER_REFERENCE_REF_FROM_OUTWARD_JOB" },
  { no: 3, name: "PURCHASE_ORDER_REFERENCE_REF_FROM_QUOTATION_RESPONSE" },
  { no: 4, name: "PURCHASE_ORDER_REFERENCE_REF_FROM_SALES_ORDER" },
  { no: 5, name: "PURCHASE_ORDER_REFERENCE_REF_FROM_WORK_ORDER" },
  { no: 6, name: "PURCHASE_ORDER_REFERENCE_REF_FROM_PURCHASE_ORDER" },
  { no: 7, name: "PURCHASE_ORDER_REFERENCE_REF_FROM_SALES_INVOICE" },
]);

/**
 *
 * Describes the available sort keys
 *
 * @generated from enum Scailo.PURCHASE_ORDER_ITEM_SORT_KEY
 */
export enum PURCHASE_ORDER_ITEM_SORT_KEY {
  /**
   * Fetch ordered results by id
   *
   * @generated from enum value: PURCHASE_ORDER_ITEM_SORT_KEY_ID_UNSPECIFIED = 0;
   */
  PURCHASE_ORDER_ITEM_SORT_KEY_ID_UNSPECIFIED = 0,

  /**
   * Fetch ordered results by the creation timestamp
   *
   * @generated from enum value: PURCHASE_ORDER_ITEM_SORT_KEY_CREATED_AT = 1;
   */
  PURCHASE_ORDER_ITEM_SORT_KEY_CREATED_AT = 1,

  /**
   * Fetch ordered results by the modified timestamp
   *
   * @generated from enum value: PURCHASE_ORDER_ITEM_SORT_KEY_MODIFIED_AT = 2;
   */
  PURCHASE_ORDER_ITEM_SORT_KEY_MODIFIED_AT = 2,

  /**
   * Fetch ordered results by the approved on timestamp
   *
   * @generated from enum value: PURCHASE_ORDER_ITEM_SORT_KEY_APPROVED_ON = 3;
   */
  PURCHASE_ORDER_ITEM_SORT_KEY_APPROVED_ON = 3,

  /**
   * Fetch ordered results by the approved by field
   *
   * @generated from enum value: PURCHASE_ORDER_ITEM_SORT_KEY_APPROVED_BY = 4;
   */
  PURCHASE_ORDER_ITEM_SORT_KEY_APPROVED_BY = 4,

  /**
   * Fetch ordered results by the approver's role ID
   *
   * @generated from enum value: PURCHASE_ORDER_ITEM_SORT_KEY_APPROVER_ROLE_ID = 5;
   */
  PURCHASE_ORDER_ITEM_SORT_KEY_APPROVER_ROLE_ID = 5,

  /**
   * Fetch ordered results by the family ID
   *
   * @generated from enum value: PURCHASE_ORDER_ITEM_SORT_KEY_FAMILY_ID = 10;
   */
  PURCHASE_ORDER_ITEM_SORT_KEY_FAMILY_ID = 10,

  /**
   * Fetch ordered results by the internal quantity
   *
   * @generated from enum value: PURCHASE_ORDER_ITEM_SORT_KEY_INTERNAL_QUANTITY = 11;
   */
  PURCHASE_ORDER_ITEM_SORT_KEY_INTERNAL_QUANTITY = 11,

  /**
   * Fetch ordered results by the vendor unit of material ID
   *
   * @generated from enum value: PURCHASE_ORDER_ITEM_SORT_KEY_VENDOR_UOM_ID = 12;
   */
  PURCHASE_ORDER_ITEM_SORT_KEY_VENDOR_UOM_ID = 12,

  /**
   * Fetch ordered results by the vendor quantity
   *
   * @generated from enum value: PURCHASE_ORDER_ITEM_SORT_KEY_VENDOR_QUANTITY = 13;
   */
  PURCHASE_ORDER_ITEM_SORT_KEY_VENDOR_QUANTITY = 13,

  /**
   * Fetch ordered results by the vendor unit price
   *
   * @generated from enum value: PURCHASE_ORDER_ITEM_SORT_KEY_VENDOR_UNIT_PRICE = 14;
   */
  PURCHASE_ORDER_ITEM_SORT_KEY_VENDOR_UNIT_PRICE = 14,

  /**
   * Fetch ordered results by the tax group ID
   *
   * @generated from enum value: PURCHASE_ORDER_ITEM_SORT_KEY_TAX_GROUP_ID = 15;
   */
  PURCHASE_ORDER_ITEM_SORT_KEY_TAX_GROUP_ID = 15,

  /**
   * Fetch ordered results by the discount
   *
   * @generated from enum value: PURCHASE_ORDER_ITEM_SORT_KEY_DISCOUNT = 16;
   */
  PURCHASE_ORDER_ITEM_SORT_KEY_DISCOUNT = 16,

  /**
   * Fetch ordered results by the delivery date
   *
   * @generated from enum value: PURCHASE_ORDER_ITEM_SORT_KEY_DELIVERY_DATE = 17;
   */
  PURCHASE_ORDER_ITEM_SORT_KEY_DELIVERY_DATE = 17,
}
// Retrieve enum metadata with: proto3.getEnumType(PURCHASE_ORDER_ITEM_SORT_KEY)
proto3.util.setEnumType(PURCHASE_ORDER_ITEM_SORT_KEY, "Scailo.PURCHASE_ORDER_ITEM_SORT_KEY", [
  { no: 0, name: "PURCHASE_ORDER_ITEM_SORT_KEY_ID_UNSPECIFIED" },
  { no: 1, name: "PURCHASE_ORDER_ITEM_SORT_KEY_CREATED_AT" },
  { no: 2, name: "PURCHASE_ORDER_ITEM_SORT_KEY_MODIFIED_AT" },
  { no: 3, name: "PURCHASE_ORDER_ITEM_SORT_KEY_APPROVED_ON" },
  { no: 4, name: "PURCHASE_ORDER_ITEM_SORT_KEY_APPROVED_BY" },
  { no: 5, name: "PURCHASE_ORDER_ITEM_SORT_KEY_APPROVER_ROLE_ID" },
  { no: 10, name: "PURCHASE_ORDER_ITEM_SORT_KEY_FAMILY_ID" },
  { no: 11, name: "PURCHASE_ORDER_ITEM_SORT_KEY_INTERNAL_QUANTITY" },
  { no: 12, name: "PURCHASE_ORDER_ITEM_SORT_KEY_VENDOR_UOM_ID" },
  { no: 13, name: "PURCHASE_ORDER_ITEM_SORT_KEY_VENDOR_QUANTITY" },
  { no: 14, name: "PURCHASE_ORDER_ITEM_SORT_KEY_VENDOR_UNIT_PRICE" },
  { no: 15, name: "PURCHASE_ORDER_ITEM_SORT_KEY_TAX_GROUP_ID" },
  { no: 16, name: "PURCHASE_ORDER_ITEM_SORT_KEY_DISCOUNT" },
  { no: 17, name: "PURCHASE_ORDER_ITEM_SORT_KEY_DELIVERY_DATE" },
]);

/**
 *
 * Describes the applicable statuses of purchase order items
 *
 * @generated from enum Scailo.PURCHASE_ORDER_ITEM_STATUS
 */
export enum PURCHASE_ORDER_ITEM_STATUS {
  /**
   * Denotes that status be disregarded. This is used only within search APIs
   *
   * @generated from enum value: PURCHASE_ORDER_ITEM_STATUS_ANY_UNSPECIFIED = 0;
   */
  PURCHASE_ORDER_ITEM_STATUS_ANY_UNSPECIFIED = 0,

  /**
   * Denotes that the purchase order items must have been approved
   *
   * @generated from enum value: PURCHASE_ORDER_ITEM_STATUS_APPROVED = 1;
   */
  PURCHASE_ORDER_ITEM_STATUS_APPROVED = 1,

  /**
   * Denotes that the purchase order items must be waiting for approval
   *
   * @generated from enum value: PURCHASE_ORDER_ITEM_STATUS_UNAPPROVED = 2;
   */
  PURCHASE_ORDER_ITEM_STATUS_UNAPPROVED = 2,
}
// Retrieve enum metadata with: proto3.getEnumType(PURCHASE_ORDER_ITEM_STATUS)
proto3.util.setEnumType(PURCHASE_ORDER_ITEM_STATUS, "Scailo.PURCHASE_ORDER_ITEM_STATUS", [
  { no: 0, name: "PURCHASE_ORDER_ITEM_STATUS_ANY_UNSPECIFIED" },
  { no: 1, name: "PURCHASE_ORDER_ITEM_STATUS_APPROVED" },
  { no: 2, name: "PURCHASE_ORDER_ITEM_STATUS_UNAPPROVED" },
]);

/**
 *
 * Describes the parameters necessary to create a record
 *
 * @generated from message Scailo.PurchasesOrdersServiceCreateRequest
 */
export class PurchasesOrdersServiceCreateRequest extends Message<PurchasesOrdersServiceCreateRequest> {
  /**
   * Stores a globally unique entity UUID. This will be set at the organization level
   *
   * @generated from field: string entity_uuid = 1;
   */
  entityUuid = "";

  /**
   * Stores any comment that the user might add during this operation
   *
   * @generated from field: string user_comment = 2;
   */
  userComment = "";

  /**
   * The associated vault folder ID
   *
   * @generated from field: uint64 vault_folder_id = 9;
   */
  vaultFolderId = protoInt64.zero;

  /**
   * The reference ID of the purchase order
   *
   * @generated from field: string reference_id = 10;
   */
  referenceId = "";

  /**
   * The location ID of the consignee
   *
   * @generated from field: uint64 consignee_location_id = 12;
   */
  consigneeLocationId = protoInt64.zero;

  /**
   * The location ID of the buyer
   *
   * @generated from field: uint64 buyer_location_id = 13;
   */
  buyerLocationId = protoInt64.zero;

  /**
   * The ID of the vendor
   *
   * @generated from field: uint64 vendor_id = 14;
   */
  vendorId = protoInt64.zero;

  /**
   * The associated ID of the currency
   *
   * @generated from field: uint64 currency_id = 15;
   */
  currencyId = protoInt64.zero;

  /**
   * The optional associated ID of the project
   *
   * @generated from field: uint64 project_id = 16;
   */
  projectId = protoInt64.zero;

  /**
   * Any miscellaneous cost
   *
   * @generated from field: uint64 miscellaneous_cost = 17;
   */
  miscellaneousCost = protoInt64.zero;

  /**
   * The optional discount amount
   *
   * @generated from field: uint64 overall_discount = 18;
   */
  overallDiscount = protoInt64.zero;

  /**
   * The applicable round off amount (optional, and can be positive or negative)
   *
   * @generated from field: int64 round_off = 19;
   */
  roundOff = protoInt64.zero;

  /**
   * The amount paid in advance
   *
   * @generated from field: uint64 payment_advance = 20;
   */
  paymentAdvance = protoInt64.zero;

  /**
   * The payment cycle in days
   *
   * @generated from field: uint64 payment_cycle_in_days = 21;
   */
  paymentCycleInDays = protoInt64.zero;

  /**
   * The list of dynamic forms
   *
   * @generated from field: repeated Scailo.FormFieldDatumCreateRequest form_data = 30;
   */
  formData: FormFieldDatumCreateRequest[] = [];

  constructor(data?: PartialMessage<PurchasesOrdersServiceCreateRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.PurchasesOrdersServiceCreateRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "entity_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "user_comment", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 9, name: "vault_folder_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 10, name: "reference_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 12, name: "consignee_location_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 13, name: "buyer_location_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 14, name: "vendor_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 15, name: "currency_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 16, name: "project_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 17, name: "miscellaneous_cost", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 18, name: "overall_discount", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 19, name: "round_off", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 20, name: "payment_advance", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 21, name: "payment_cycle_in_days", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 30, name: "form_data", kind: "message", T: FormFieldDatumCreateRequest, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PurchasesOrdersServiceCreateRequest {
    return new PurchasesOrdersServiceCreateRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PurchasesOrdersServiceCreateRequest {
    return new PurchasesOrdersServiceCreateRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PurchasesOrdersServiceCreateRequest {
    return new PurchasesOrdersServiceCreateRequest().fromJsonString(jsonString, options);
  }

  static equals(a: PurchasesOrdersServiceCreateRequest | PlainMessage<PurchasesOrdersServiceCreateRequest> | undefined, b: PurchasesOrdersServiceCreateRequest | PlainMessage<PurchasesOrdersServiceCreateRequest> | undefined): boolean {
    return proto3.util.equals(PurchasesOrdersServiceCreateRequest, a, b);
  }
}

/**
 *
 * Describes the parameters necessary to update a record
 *
 * @generated from message Scailo.PurchasesOrdersServiceUpdateRequest
 */
export class PurchasesOrdersServiceUpdateRequest extends Message<PurchasesOrdersServiceUpdateRequest> {
  /**
   * Stores any comment that the user might add during this operation
   *
   * @generated from field: string user_comment = 1;
   */
  userComment = "";

  /**
   * The ID of the record that needs to be updated
   *
   * @generated from field: uint64 id = 2;
   */
  id = protoInt64.zero;

  /**
   * Optional boolean value that stores if a notification needs to be sent to users about the update to the record. This is useful when a subsequent operation needs to be performed immediately (such as send to verification after updating the revision)
   *
   * @generated from field: bool notify_users = 3;
   */
  notifyUsers = false;

  /**
   * The associated vault folder ID
   *
   * @generated from field: uint64 vault_folder_id = 9;
   */
  vaultFolderId = protoInt64.zero;

  /**
   * The reference ID of the purchase order
   *
   * @generated from field: string reference_id = 10;
   */
  referenceId = "";

  /**
   * The location ID of the consignee
   *
   * @generated from field: uint64 consignee_location_id = 12;
   */
  consigneeLocationId = protoInt64.zero;

  /**
   * The location ID of the buyer
   *
   * @generated from field: uint64 buyer_location_id = 13;
   */
  buyerLocationId = protoInt64.zero;

  /**
   * The associated ID of the currency
   *
   * @generated from field: uint64 currency_id = 15;
   */
  currencyId = protoInt64.zero;

  /**
   * The optional associated ID of the project
   *
   * @generated from field: uint64 project_id = 16;
   */
  projectId = protoInt64.zero;

  /**
   * Any miscellaneous cost
   *
   * @generated from field: uint64 miscellaneous_cost = 17;
   */
  miscellaneousCost = protoInt64.zero;

  /**
   * The optional discount amount
   *
   * @generated from field: uint64 overall_discount = 18;
   */
  overallDiscount = protoInt64.zero;

  /**
   * The applicable round off amount (optional, and can be positive or negative)
   *
   * @generated from field: int64 round_off = 19;
   */
  roundOff = protoInt64.zero;

  /**
   * The amount paid in advance
   *
   * @generated from field: uint64 payment_advance = 20;
   */
  paymentAdvance = protoInt64.zero;

  /**
   * The payment cycle in days
   *
   * @generated from field: uint64 payment_cycle_in_days = 21;
   */
  paymentCycleInDays = protoInt64.zero;

  /**
   * The list of dynamic forms
   *
   * @generated from field: repeated Scailo.FormFieldDatumCreateRequest form_data = 30;
   */
  formData: FormFieldDatumCreateRequest[] = [];

  constructor(data?: PartialMessage<PurchasesOrdersServiceUpdateRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.PurchasesOrdersServiceUpdateRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "user_comment", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 3, name: "notify_users", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 9, name: "vault_folder_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 10, name: "reference_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 12, name: "consignee_location_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 13, name: "buyer_location_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 15, name: "currency_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 16, name: "project_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 17, name: "miscellaneous_cost", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 18, name: "overall_discount", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 19, name: "round_off", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 20, name: "payment_advance", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 21, name: "payment_cycle_in_days", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 30, name: "form_data", kind: "message", T: FormFieldDatumCreateRequest, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PurchasesOrdersServiceUpdateRequest {
    return new PurchasesOrdersServiceUpdateRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PurchasesOrdersServiceUpdateRequest {
    return new PurchasesOrdersServiceUpdateRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PurchasesOrdersServiceUpdateRequest {
    return new PurchasesOrdersServiceUpdateRequest().fromJsonString(jsonString, options);
  }

  static equals(a: PurchasesOrdersServiceUpdateRequest | PlainMessage<PurchasesOrdersServiceUpdateRequest> | undefined, b: PurchasesOrdersServiceUpdateRequest | PlainMessage<PurchasesOrdersServiceUpdateRequest> | undefined): boolean {
    return proto3.util.equals(PurchasesOrdersServiceUpdateRequest, a, b);
  }
}

/**
 *
 * Describes the parameters necessary to perform an autofill request
 *
 * @generated from message Scailo.PurchasesOrdersServiceAutofillRequest
 */
export class PurchasesOrdersServiceAutofillRequest extends Message<PurchasesOrdersServiceAutofillRequest> {
  /**
   * Stores any comment that the user might add during this operation
   *
   * @generated from field: string user_comment = 1;
   */
  userComment = "";

  /**
   * The ID of the record that needs to be updated
   *
   * @generated from field: uint64 id = 2;
   */
  id = protoInt64.zero;

  /**
   * Stores if referenced items should be consolidated
   *
   * @generated from field: bool consolidate_referenced_items = 10;
   */
  consolidateReferencedItems = false;

  constructor(data?: PartialMessage<PurchasesOrdersServiceAutofillRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.PurchasesOrdersServiceAutofillRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "user_comment", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 10, name: "consolidate_referenced_items", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PurchasesOrdersServiceAutofillRequest {
    return new PurchasesOrdersServiceAutofillRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PurchasesOrdersServiceAutofillRequest {
    return new PurchasesOrdersServiceAutofillRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PurchasesOrdersServiceAutofillRequest {
    return new PurchasesOrdersServiceAutofillRequest().fromJsonString(jsonString, options);
  }

  static equals(a: PurchasesOrdersServiceAutofillRequest | PlainMessage<PurchasesOrdersServiceAutofillRequest> | undefined, b: PurchasesOrdersServiceAutofillRequest | PlainMessage<PurchasesOrdersServiceAutofillRequest> | undefined): boolean {
    return proto3.util.equals(PurchasesOrdersServiceAutofillRequest, a, b);
  }
}

/**
 *
 * Describes the parameters that are part of a standard response
 *
 * @generated from message Scailo.PurchaseOrder
 */
export class PurchaseOrder extends Message<PurchaseOrder> {
  /**
   * Stores a globally unique entity UUID. This will be set at the organization level
   *
   * @generated from field: string entity_uuid = 1;
   */
  entityUuid = "";

  /**
   * Stores the metadata of this purchase order
   *
   * @generated from field: Scailo.EmployeeMetadata metadata = 2;
   */
  metadata?: EmployeeMetadata;

  /**
   * Stores the approval metadata
   *
   * @generated from field: Scailo.ApprovalMetadata approval_metadata = 3;
   */
  approvalMetadata?: ApprovalMetadata;

  /**
   * The status of this purchase order
   *
   * @generated from field: Scailo.STANDARD_LIFECYCLE_STATUS status = 4;
   */
  status = STANDARD_LIFECYCLE_STATUS.ANY_UNSPECIFIED;

  /**
   * Stores the logs of every operation performed on this purchase order
   *
   * @generated from field: repeated Scailo.LogbookLogConciseSLC logs = 5;
   */
  logs: LogbookLogConciseSLC[] = [];

  /**
   * The timestamp of when this purchase order was marked as completed
   *
   * @generated from field: uint64 completed_on = 6;
   */
  completedOn = protoInt64.zero;

  /**
   * The associated vault folder ID
   *
   * @generated from field: uint64 vault_folder_id = 9;
   */
  vaultFolderId = protoInt64.zero;

  /**
   * The reference ID of the purchase order
   *
   * @generated from field: string reference_id = 10;
   */
  referenceId = "";

  /**
   * The unique reference number that has been automatically generated
   *
   * @generated from field: string final_ref_number = 11;
   */
  finalRefNumber = "";

  /**
   * The location ID of the consignee
   *
   * @generated from field: uint64 consignee_location_id = 12;
   */
  consigneeLocationId = protoInt64.zero;

  /**
   * The location ID of the buyer
   *
   * @generated from field: uint64 buyer_location_id = 13;
   */
  buyerLocationId = protoInt64.zero;

  /**
   * The ID of the vendor
   *
   * @generated from field: uint64 vendor_id = 14;
   */
  vendorId = protoInt64.zero;

  /**
   * The associated ID of the currency
   *
   * @generated from field: uint64 currency_id = 15;
   */
  currencyId = protoInt64.zero;

  /**
   * The optional associated ID of the project
   *
   * @generated from field: uint64 project_id = 16;
   */
  projectId = protoInt64.zero;

  /**
   * Any miscellaneous cost
   *
   * @generated from field: uint64 miscellaneous_cost = 17;
   */
  miscellaneousCost = protoInt64.zero;

  /**
   * The optional discount amount
   *
   * @generated from field: uint64 overall_discount = 18;
   */
  overallDiscount = protoInt64.zero;

  /**
   * The applicable round off amount (optional, and can be positive or negative)
   *
   * @generated from field: int64 round_off = 19;
   */
  roundOff = protoInt64.zero;

  /**
   * The amount paid in advance
   *
   * @generated from field: uint64 payment_advance = 20;
   */
  paymentAdvance = protoInt64.zero;

  /**
   * The payment cycle in days
   *
   * @generated from field: uint64 payment_cycle_in_days = 21;
   */
  paymentCycleInDays = protoInt64.zero;

  /**
   * The number of times that the purchase order has been amended
   *
   * @generated from field: uint64 amendment_count = 22;
   */
  amendmentCount = protoInt64.zero;

  /**
   * Stores the total value of the purchase order (as a double, which requires no adjustments)
   *
   * @generated from field: double total_value = 30;
   */
  totalValue = 0;

  /**
   * The list of associated purchase order items
   *
   * @generated from field: repeated Scailo.PurchaseOrderItem list = 40;
   */
  list: PurchaseOrderItem[] = [];

  /**
   * The list of dynamic forms
   *
   * @generated from field: repeated Scailo.FormFieldDatum form_data = 50;
   */
  formData: FormFieldDatum[] = [];

  constructor(data?: PartialMessage<PurchaseOrder>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.PurchaseOrder";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "entity_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "metadata", kind: "message", T: EmployeeMetadata },
    { no: 3, name: "approval_metadata", kind: "message", T: ApprovalMetadata },
    { no: 4, name: "status", kind: "enum", T: proto3.getEnumType(STANDARD_LIFECYCLE_STATUS) },
    { no: 5, name: "logs", kind: "message", T: LogbookLogConciseSLC, repeated: true },
    { no: 6, name: "completed_on", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 9, name: "vault_folder_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 10, name: "reference_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 11, name: "final_ref_number", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 12, name: "consignee_location_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 13, name: "buyer_location_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 14, name: "vendor_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 15, name: "currency_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 16, name: "project_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 17, name: "miscellaneous_cost", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 18, name: "overall_discount", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 19, name: "round_off", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 20, name: "payment_advance", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 21, name: "payment_cycle_in_days", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 22, name: "amendment_count", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 30, name: "total_value", kind: "scalar", T: 1 /* ScalarType.DOUBLE */ },
    { no: 40, name: "list", kind: "message", T: PurchaseOrderItem, repeated: true },
    { no: 50, name: "form_data", kind: "message", T: FormFieldDatum, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PurchaseOrder {
    return new PurchaseOrder().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PurchaseOrder {
    return new PurchaseOrder().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PurchaseOrder {
    return new PurchaseOrder().fromJsonString(jsonString, options);
  }

  static equals(a: PurchaseOrder | PlainMessage<PurchaseOrder> | undefined, b: PurchaseOrder | PlainMessage<PurchaseOrder> | undefined): boolean {
    return proto3.util.equals(PurchaseOrder, a, b);
  }
}

/**
 *
 * Describes the parameters required to add an item to a purchase order
 *
 * @generated from message Scailo.PurchasesOrdersServiceItemCreateRequest
 */
export class PurchasesOrdersServiceItemCreateRequest extends Message<PurchasesOrdersServiceItemCreateRequest> {
  /**
   * Stores any comment that the user might add during this operation
   *
   * @generated from field: string user_comment = 1;
   */
  userComment = "";

  /**
   * Stores the purchase order ID
   *
   * @generated from field: uint64 purchase_order_id = 10;
   */
  purchaseOrderId = protoInt64.zero;

  /**
   * Stores the family ID
   *
   * @generated from field: uint64 family_id = 11;
   */
  familyId = protoInt64.zero;

  /**
   * The quantity (in cents) being ordered in internal unit of material
   *
   * @generated from field: uint64 internal_quantity = 12;
   */
  internalQuantity = protoInt64.zero;

  /**
   * Stores the ID of the vendor's unit of material
   *
   * @generated from field: uint64 vendor_uom_id = 13;
   */
  vendorUomId = protoInt64.zero;

  /**
   * Stores the quantity (in cents) being ordered in vendor's unit of material
   *
   * @generated from field: uint64 vendor_quantity = 14;
   */
  vendorQuantity = protoInt64.zero;

  /**
   * The unit price of the item (as supplied by the vendor)
   *
   * @generated from field: uint64 vendor_unit_price = 15;
   */
  vendorUnitPrice = protoInt64.zero;

  /**
   * The ID of the associated tax group
   *
   * @generated from field: uint64 tax_group_id = 16;
   */
  taxGroupId = protoInt64.zero;

  /**
   * The applicable discount percentage (in cents)
   *
   * @generated from field: uint64 discount = 17;
   */
  discount = protoInt64.zero;

  /**
   * The delivery date of the item
   *
   * @generated from field: string delivery_date = 18;
   */
  deliveryDate = "";

  /**
   * Optional specifications
   *
   * @generated from field: string specifications = 19;
   */
  specifications = "";

  constructor(data?: PartialMessage<PurchasesOrdersServiceItemCreateRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.PurchasesOrdersServiceItemCreateRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "user_comment", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 10, name: "purchase_order_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 11, name: "family_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 12, name: "internal_quantity", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 13, name: "vendor_uom_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 14, name: "vendor_quantity", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 15, name: "vendor_unit_price", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 16, name: "tax_group_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 17, name: "discount", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 18, name: "delivery_date", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 19, name: "specifications", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PurchasesOrdersServiceItemCreateRequest {
    return new PurchasesOrdersServiceItemCreateRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PurchasesOrdersServiceItemCreateRequest {
    return new PurchasesOrdersServiceItemCreateRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PurchasesOrdersServiceItemCreateRequest {
    return new PurchasesOrdersServiceItemCreateRequest().fromJsonString(jsonString, options);
  }

  static equals(a: PurchasesOrdersServiceItemCreateRequest | PlainMessage<PurchasesOrdersServiceItemCreateRequest> | undefined, b: PurchasesOrdersServiceItemCreateRequest | PlainMessage<PurchasesOrdersServiceItemCreateRequest> | undefined): boolean {
    return proto3.util.equals(PurchasesOrdersServiceItemCreateRequest, a, b);
  }
}

/**
 *
 * Describes the parameters required to update an item in a purchase order
 *
 * @generated from message Scailo.PurchasesOrdersServiceItemUpdateRequest
 */
export class PurchasesOrdersServiceItemUpdateRequest extends Message<PurchasesOrdersServiceItemUpdateRequest> {
  /**
   * Stores any comment that the user might add during this operation
   *
   * @generated from field: string user_comment = 1;
   */
  userComment = "";

  /**
   * The ID of the record
   *
   * @generated from field: uint64 id = 2;
   */
  id = protoInt64.zero;

  /**
   * The quantity (in cents) being ordered in internal unit of material
   *
   * @generated from field: uint64 internal_quantity = 12;
   */
  internalQuantity = protoInt64.zero;

  /**
   * Stores the ID of the vendor's unit of material
   *
   * @generated from field: uint64 vendor_uom_id = 13;
   */
  vendorUomId = protoInt64.zero;

  /**
   * Stores the quantity (in cents) being ordered in vendor's unit of material
   *
   * @generated from field: uint64 vendor_quantity = 14;
   */
  vendorQuantity = protoInt64.zero;

  /**
   * The unit price of the item (as supplied by the vendor)
   *
   * @generated from field: uint64 vendor_unit_price = 15;
   */
  vendorUnitPrice = protoInt64.zero;

  /**
   * The ID of the associated tax group
   *
   * @generated from field: uint64 tax_group_id = 16;
   */
  taxGroupId = protoInt64.zero;

  /**
   * The applicable discount percentage (in cents)
   *
   * @generated from field: uint64 discount = 17;
   */
  discount = protoInt64.zero;

  /**
   * The delivery date of the item
   *
   * @generated from field: string delivery_date = 18;
   */
  deliveryDate = "";

  /**
   * Optional specifications
   *
   * @generated from field: string specifications = 19;
   */
  specifications = "";

  constructor(data?: PartialMessage<PurchasesOrdersServiceItemUpdateRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.PurchasesOrdersServiceItemUpdateRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "user_comment", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 12, name: "internal_quantity", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 13, name: "vendor_uom_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 14, name: "vendor_quantity", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 15, name: "vendor_unit_price", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 16, name: "tax_group_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 17, name: "discount", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 18, name: "delivery_date", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 19, name: "specifications", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PurchasesOrdersServiceItemUpdateRequest {
    return new PurchasesOrdersServiceItemUpdateRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PurchasesOrdersServiceItemUpdateRequest {
    return new PurchasesOrdersServiceItemUpdateRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PurchasesOrdersServiceItemUpdateRequest {
    return new PurchasesOrdersServiceItemUpdateRequest().fromJsonString(jsonString, options);
  }

  static equals(a: PurchasesOrdersServiceItemUpdateRequest | PlainMessage<PurchasesOrdersServiceItemUpdateRequest> | undefined, b: PurchasesOrdersServiceItemUpdateRequest | PlainMessage<PurchasesOrdersServiceItemUpdateRequest> | undefined): boolean {
    return proto3.util.equals(PurchasesOrdersServiceItemUpdateRequest, a, b);
  }
}

/**
 *
 * Describes the parameters that constitute an item associated to a purchase order
 *
 * @generated from message Scailo.PurchaseOrderItem
 */
export class PurchaseOrderItem extends Message<PurchaseOrderItem> {
  /**
   * Stores a globally unique entity UUID. This will be set at the organization level
   *
   * @generated from field: string entity_uuid = 1;
   */
  entityUuid = "";

  /**
   * Stores the metadata of this purchase order
   *
   * @generated from field: Scailo.EmployeeMetadata metadata = 2;
   */
  metadata?: EmployeeMetadata;

  /**
   * Stores the approval metadata
   *
   * @generated from field: Scailo.ApprovalMetadata approval_metadata = 3;
   */
  approvalMetadata?: ApprovalMetadata;

  /**
   * Denotes if this record requires approval (or has been approved)
   *
   * @generated from field: bool need_approval = 4;
   */
  needApproval = false;

  /**
   * Stores any comment that the user might have added during an operation
   *
   * @generated from field: string user_comment = 5;
   */
  userComment = "";

  /**
   * Stores the purchase order ID
   *
   * @generated from field: uint64 purchase_order_id = 10;
   */
  purchaseOrderId = protoInt64.zero;

  /**
   * Stores the family ID
   *
   * @generated from field: uint64 family_id = 11;
   */
  familyId = protoInt64.zero;

  /**
   * The quantity (in cents) being ordered in internal unit of material
   *
   * @generated from field: uint64 internal_quantity = 12;
   */
  internalQuantity = protoInt64.zero;

  /**
   * Stores the ID of the vendor's unit of material
   *
   * @generated from field: uint64 vendor_uom_id = 13;
   */
  vendorUomId = protoInt64.zero;

  /**
   * Stores the quantity (in cents) being ordered in vendor's unit of material
   *
   * @generated from field: uint64 vendor_quantity = 14;
   */
  vendorQuantity = protoInt64.zero;

  /**
   * The unit price of the item (as supplied by the vendor)
   *
   * @generated from field: uint64 vendor_unit_price = 15;
   */
  vendorUnitPrice = protoInt64.zero;

  /**
   * The ID of the associated tax group
   *
   * @generated from field: uint64 tax_group_id = 16;
   */
  taxGroupId = protoInt64.zero;

  /**
   * The applicable discount percentage (in cents)
   *
   * @generated from field: uint64 discount = 17;
   */
  discount = protoInt64.zero;

  /**
   * The delivery date of the item
   *
   * @generated from field: string delivery_date = 18;
   */
  deliveryDate = "";

  /**
   * Optional specifications
   *
   * @generated from field: string specifications = 19;
   */
  specifications = "";

  /**
   * Stores the vendor unit price after factoring in the discount
   *
   * @generated from field: uint64 discounted_vendor_unit_price = 30;
   */
  discountedVendorUnitPrice = protoInt64.zero;

  constructor(data?: PartialMessage<PurchaseOrderItem>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.PurchaseOrderItem";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "entity_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "metadata", kind: "message", T: EmployeeMetadata },
    { no: 3, name: "approval_metadata", kind: "message", T: ApprovalMetadata },
    { no: 4, name: "need_approval", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 5, name: "user_comment", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 10, name: "purchase_order_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 11, name: "family_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 12, name: "internal_quantity", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 13, name: "vendor_uom_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 14, name: "vendor_quantity", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 15, name: "vendor_unit_price", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 16, name: "tax_group_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 17, name: "discount", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 18, name: "delivery_date", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 19, name: "specifications", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 30, name: "discounted_vendor_unit_price", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PurchaseOrderItem {
    return new PurchaseOrderItem().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PurchaseOrderItem {
    return new PurchaseOrderItem().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PurchaseOrderItem {
    return new PurchaseOrderItem().fromJsonString(jsonString, options);
  }

  static equals(a: PurchaseOrderItem | PlainMessage<PurchaseOrderItem> | undefined, b: PurchaseOrderItem | PlainMessage<PurchaseOrderItem> | undefined): boolean {
    return proto3.util.equals(PurchaseOrderItem, a, b);
  }
}

/**
 *
 * Describes the message consisting of the list of purchase orders
 *
 * @generated from message Scailo.PurchasesOrdersList
 */
export class PurchasesOrdersList extends Message<PurchasesOrdersList> {
  /**
   * List of records
   *
   * @generated from field: repeated Scailo.PurchaseOrder list = 1;
   */
  list: PurchaseOrder[] = [];

  constructor(data?: PartialMessage<PurchasesOrdersList>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.PurchasesOrdersList";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "list", kind: "message", T: PurchaseOrder, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PurchasesOrdersList {
    return new PurchasesOrdersList().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PurchasesOrdersList {
    return new PurchasesOrdersList().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PurchasesOrdersList {
    return new PurchasesOrdersList().fromJsonString(jsonString, options);
  }

  static equals(a: PurchasesOrdersList | PlainMessage<PurchasesOrdersList> | undefined, b: PurchasesOrdersList | PlainMessage<PurchasesOrdersList> | undefined): boolean {
    return proto3.util.equals(PurchasesOrdersList, a, b);
  }
}

/**
 *
 * Describes the message consisting of the list of purchase order items
 *
 * @generated from message Scailo.PurchaseOrderItemsList
 */
export class PurchaseOrderItemsList extends Message<PurchaseOrderItemsList> {
  /**
   * List of records
   *
   * @generated from field: repeated Scailo.PurchaseOrderItem list = 1;
   */
  list: PurchaseOrderItem[] = [];

  constructor(data?: PartialMessage<PurchaseOrderItemsList>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.PurchaseOrderItemsList";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "list", kind: "message", T: PurchaseOrderItem, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PurchaseOrderItemsList {
    return new PurchaseOrderItemsList().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PurchaseOrderItemsList {
    return new PurchaseOrderItemsList().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PurchaseOrderItemsList {
    return new PurchaseOrderItemsList().fromJsonString(jsonString, options);
  }

  static equals(a: PurchaseOrderItemsList | PlainMessage<PurchaseOrderItemsList> | undefined, b: PurchaseOrderItemsList | PlainMessage<PurchaseOrderItemsList> | undefined): boolean {
    return proto3.util.equals(PurchaseOrderItemsList, a, b);
  }
}

/**
 *
 * Describes the parameters that are required to retrieve the history of the record
 *
 * @generated from message Scailo.PurchaseOrderItemHistoryRequest
 */
export class PurchaseOrderItemHistoryRequest extends Message<PurchaseOrderItemHistoryRequest> {
  /**
   * Stores the purchase order ID
   *
   * @generated from field: uint64 purchase_order_id = 10;
   */
  purchaseOrderId = protoInt64.zero;

  /**
   * Stores the family ID
   *
   * @generated from field: uint64 family_id = 11;
   */
  familyId = protoInt64.zero;

  constructor(data?: PartialMessage<PurchaseOrderItemHistoryRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.PurchaseOrderItemHistoryRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 10, name: "purchase_order_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 11, name: "family_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PurchaseOrderItemHistoryRequest {
    return new PurchaseOrderItemHistoryRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PurchaseOrderItemHistoryRequest {
    return new PurchaseOrderItemHistoryRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PurchaseOrderItemHistoryRequest {
    return new PurchaseOrderItemHistoryRequest().fromJsonString(jsonString, options);
  }

  static equals(a: PurchaseOrderItemHistoryRequest | PlainMessage<PurchaseOrderItemHistoryRequest> | undefined, b: PurchaseOrderItemHistoryRequest | PlainMessage<PurchaseOrderItemHistoryRequest> | undefined): boolean {
    return proto3.util.equals(PurchaseOrderItemHistoryRequest, a, b);
  }
}

/**
 *
 * Describes the parameters that are required to retrieve the info of a prospective purchase order item
 *
 * @generated from message Scailo.PurchaseOrderItemProspectiveInfoRequest
 */
export class PurchaseOrderItemProspectiveInfoRequest extends Message<PurchaseOrderItemProspectiveInfoRequest> {
  /**
   * Stores the purchase order ID
   *
   * @generated from field: uint64 purchase_order_id = 10;
   */
  purchaseOrderId = protoInt64.zero;

  /**
   * Stores the family ID
   *
   * @generated from field: uint64 family_id = 11;
   */
  familyId = protoInt64.zero;

  /**
   * Stores the ID of the vendor's unit of material (if 0, the value is ignored while retrieving records)
   *
   * @generated from field: uint64 vendor_uom_id = 13;
   */
  vendorUomId = protoInt64.zero;

  constructor(data?: PartialMessage<PurchaseOrderItemProspectiveInfoRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.PurchaseOrderItemProspectiveInfoRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 10, name: "purchase_order_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 11, name: "family_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 13, name: "vendor_uom_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PurchaseOrderItemProspectiveInfoRequest {
    return new PurchaseOrderItemProspectiveInfoRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PurchaseOrderItemProspectiveInfoRequest {
    return new PurchaseOrderItemProspectiveInfoRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PurchaseOrderItemProspectiveInfoRequest {
    return new PurchaseOrderItemProspectiveInfoRequest().fromJsonString(jsonString, options);
  }

  static equals(a: PurchaseOrderItemProspectiveInfoRequest | PlainMessage<PurchaseOrderItemProspectiveInfoRequest> | undefined, b: PurchaseOrderItemProspectiveInfoRequest | PlainMessage<PurchaseOrderItemProspectiveInfoRequest> | undefined): boolean {
    return proto3.util.equals(PurchaseOrderItemProspectiveInfoRequest, a, b);
  }
}

/**
 *
 * Describes a pagination request to retrieve records
 *
 * @generated from message Scailo.PurchasesOrdersServicePaginationReq
 */
export class PurchasesOrdersServicePaginationReq extends Message<PurchasesOrdersServicePaginationReq> {
  /**
   * If true, then returns only active records. If false, then returns only inactive records
   *
   * @generated from field: Scailo.BOOL_FILTER is_active = 1;
   */
  isActive = BOOL_FILTER.BOOL_FILTER_ANY_UNSPECIFIED;

  /**
   * The number of records that need to be sent in the response
   *
   * @generated from field: int64 count = 2;
   */
  count = protoInt64.zero;

  /**
   * The number that need to be offset by before fetching the records
   *
   * @generated from field: uint64 offset = 3;
   */
  offset = protoInt64.zero;

  /**
   * The sort order that is to be used to fetch the pagination response
   *
   * @generated from field: Scailo.SORT_ORDER sort_order = 4;
   */
  sortOrder = SORT_ORDER.ASCENDING_UNSPECIFIED;

  /**
   * The sort key that is to be used to fetch the pagination response
   *
   * @generated from field: Scailo.PURCHASE_ORDER_SORT_KEY sort_key = 5;
   */
  sortKey = PURCHASE_ORDER_SORT_KEY.PURCHASE_ORDER_SORT_KEY_ID_UNSPECIFIED;

  /**
   * The status of this purchase order
   *
   * @generated from field: Scailo.STANDARD_LIFECYCLE_STATUS status = 6;
   */
  status = STANDARD_LIFECYCLE_STATUS.ANY_UNSPECIFIED;

  constructor(data?: PartialMessage<PurchasesOrdersServicePaginationReq>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.PurchasesOrdersServicePaginationReq";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "is_active", kind: "enum", T: proto3.getEnumType(BOOL_FILTER) },
    { no: 2, name: "count", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "offset", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 4, name: "sort_order", kind: "enum", T: proto3.getEnumType(SORT_ORDER) },
    { no: 5, name: "sort_key", kind: "enum", T: proto3.getEnumType(PURCHASE_ORDER_SORT_KEY) },
    { no: 6, name: "status", kind: "enum", T: proto3.getEnumType(STANDARD_LIFECYCLE_STATUS) },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PurchasesOrdersServicePaginationReq {
    return new PurchasesOrdersServicePaginationReq().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PurchasesOrdersServicePaginationReq {
    return new PurchasesOrdersServicePaginationReq().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PurchasesOrdersServicePaginationReq {
    return new PurchasesOrdersServicePaginationReq().fromJsonString(jsonString, options);
  }

  static equals(a: PurchasesOrdersServicePaginationReq | PlainMessage<PurchasesOrdersServicePaginationReq> | undefined, b: PurchasesOrdersServicePaginationReq | PlainMessage<PurchasesOrdersServicePaginationReq> | undefined): boolean {
    return proto3.util.equals(PurchasesOrdersServicePaginationReq, a, b);
  }
}

/**
 *
 * Describes the response to a pagination request
 *
 * @generated from message Scailo.PurchasesOrdersServicePaginationResponse
 */
export class PurchasesOrdersServicePaginationResponse extends Message<PurchasesOrdersServicePaginationResponse> {
  /**
   * The number of records in this payload
   *
   * @generated from field: uint64 count = 1;
   */
  count = protoInt64.zero;

  /**
   * The number that has been offset before fetching the records. This is the same value that has been sent as part of the pagination request
   *
   * @generated from field: uint64 offset = 2;
   */
  offset = protoInt64.zero;

  /**
   * The total number of records that are available
   *
   * @generated from field: uint64 total = 3;
   */
  total = protoInt64.zero;

  /**
   * The list of records
   *
   * @generated from field: repeated Scailo.PurchaseOrder payload = 4;
   */
  payload: PurchaseOrder[] = [];

  constructor(data?: PartialMessage<PurchasesOrdersServicePaginationResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.PurchasesOrdersServicePaginationResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "count", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 2, name: "offset", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 3, name: "total", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 4, name: "payload", kind: "message", T: PurchaseOrder, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PurchasesOrdersServicePaginationResponse {
    return new PurchasesOrdersServicePaginationResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PurchasesOrdersServicePaginationResponse {
    return new PurchasesOrdersServicePaginationResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PurchasesOrdersServicePaginationResponse {
    return new PurchasesOrdersServicePaginationResponse().fromJsonString(jsonString, options);
  }

  static equals(a: PurchasesOrdersServicePaginationResponse | PlainMessage<PurchasesOrdersServicePaginationResponse> | undefined, b: PurchasesOrdersServicePaginationResponse | PlainMessage<PurchasesOrdersServicePaginationResponse> | undefined): boolean {
    return proto3.util.equals(PurchasesOrdersServicePaginationResponse, a, b);
  }
}

/**
 *
 * Describes the base request payload of a filter search
 *
 * @generated from message Scailo.PurchasesOrdersServiceFilterReq
 */
export class PurchasesOrdersServiceFilterReq extends Message<PurchasesOrdersServiceFilterReq> {
  /**
   * If true, then returns only active records. If false, then returns only inactive records
   *
   * @generated from field: Scailo.BOOL_FILTER is_active = 1;
   */
  isActive = BOOL_FILTER.BOOL_FILTER_ANY_UNSPECIFIED;

  /**
   * The number of records that need to be sent in the response. Returns all records if it is set to -1
   *
   * @generated from field: int64 count = 2;
   */
  count = protoInt64.zero;

  /**
   * The number that need to be offset by before fetching the records
   *
   * @generated from field: uint64 offset = 3;
   */
  offset = protoInt64.zero;

  /**
   * The sort order that is to be used to fetch the pagination response
   *
   * @generated from field: Scailo.SORT_ORDER sort_order = 4;
   */
  sortOrder = SORT_ORDER.ASCENDING_UNSPECIFIED;

  /**
   * The sort key that is to be used to fetch the pagination response
   *
   * @generated from field: Scailo.PURCHASE_ORDER_SORT_KEY sort_key = 5;
   */
  sortKey = PURCHASE_ORDER_SORT_KEY.PURCHASE_ORDER_SORT_KEY_ID_UNSPECIFIED;

  /**
   * The minimum timestamp that needs to be considered to filter by creation
   *
   * @generated from field: uint64 creation_timestamp_start = 101;
   */
  creationTimestampStart = protoInt64.zero;

  /**
   * The maximum timestamp that needs to be considered to filter by creation
   *
   * @generated from field: uint64 creation_timestamp_end = 102;
   */
  creationTimestampEnd = protoInt64.zero;

  /**
   * The minimum timestamp that needs to be considered to filter by modification
   *
   * @generated from field: uint64 modification_timestamp_start = 103;
   */
  modificationTimestampStart = protoInt64.zero;

  /**
   * The maximum timestamp that needs to be considered to filter by modification
   *
   * @generated from field: uint64 modification_timestamp_end = 104;
   */
  modificationTimestampEnd = protoInt64.zero;

  /**
   * The entity UUID that is to be used to filter records
   *
   * @generated from field: string entity_uuid = 8;
   */
  entityUuid = "";

  /**
   * The status of this purchase order
   *
   * @generated from field: Scailo.STANDARD_LIFECYCLE_STATUS status = 10;
   */
  status = STANDARD_LIFECYCLE_STATUS.ANY_UNSPECIFIED;

  /**
   * The start range of approved timestamp
   *
   * @generated from field: uint64 approved_on_start = 11;
   */
  approvedOnStart = protoInt64.zero;

  /**
   * The end range of approved timestamp
   *
   * @generated from field: uint64 approved_on_end = 12;
   */
  approvedOnEnd = protoInt64.zero;

  /**
   * The ID of the approver
   *
   * @generated from field: uint64 approved_by_user_id = 13;
   */
  approvedByUserId = protoInt64.zero;

  /**
   * The role ID of the approver
   *
   * @generated from field: uint64 approver_role_id = 14;
   */
  approverRoleId = protoInt64.zero;

  /**
   * The start range of completed timestamp
   *
   * @generated from field: uint64 completed_on_start = 15;
   */
  completedOnStart = protoInt64.zero;

  /**
   * The end range of completed timestamp
   *
   * @generated from field: uint64 completed_on_end = 16;
   */
  completedOnEnd = protoInt64.zero;

  /**
   * The reference ID of the purchase order
   *
   * @generated from field: string reference_id = 20;
   */
  referenceId = "";

  /**
   * The unique reference number that has been automatically generated
   *
   * @generated from field: string final_ref_number = 21;
   */
  finalRefNumber = "";

  /**
   * The associated consignee location ID
   *
   * @generated from field: uint64 consignee_location_id = 22;
   */
  consigneeLocationId = protoInt64.zero;

  /**
   * The associated buyer location ID
   *
   * @generated from field: uint64 buyer_location_id = 23;
   */
  buyerLocationId = protoInt64.zero;

  /**
   * The ID of the associated vendor
   *
   * @generated from field: uint64 vendor_id = 24;
   */
  vendorId = protoInt64.zero;

  /**
   * The ID of the associated currency
   *
   * @generated from field: uint64 currency_id = 25;
   */
  currencyId = protoInt64.zero;

  /**
   * The ID of the associated project
   *
   * @generated from field: uint64 project_id = 26;
   */
  projectId = protoInt64.zero;

  /**
   * The ID of the family
   *
   * @generated from field: uint64 family_id = 40;
   */
  familyId = protoInt64.zero;

  /**
   * The exact delivery date of the item in the purchase order
   *
   * @generated from field: string delivery_date_exact = 41;
   */
  deliveryDateExact = "";

  /**
   * The start delivery date of the item in the purchase order
   *
   * @generated from field: string delivery_date_start = 42;
   */
  deliveryDateStart = "";

  /**
   * The end delivery date of the item in the purchase order
   *
   * @generated from field: string delivery_date_end = 43;
   */
  deliveryDateEnd = "";

  /**
   * Stores the minimum value of the purchase order (ignored if 0)
   *
   * @generated from field: uint64 total_value_min = 50;
   */
  totalValueMin = protoInt64.zero;

  /**
   * Stores the maximum value of the purchase order (ignored if 0)
   *
   * @generated from field: uint64 total_value_max = 51;
   */
  totalValueMax = protoInt64.zero;

  constructor(data?: PartialMessage<PurchasesOrdersServiceFilterReq>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.PurchasesOrdersServiceFilterReq";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "is_active", kind: "enum", T: proto3.getEnumType(BOOL_FILTER) },
    { no: 2, name: "count", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "offset", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 4, name: "sort_order", kind: "enum", T: proto3.getEnumType(SORT_ORDER) },
    { no: 5, name: "sort_key", kind: "enum", T: proto3.getEnumType(PURCHASE_ORDER_SORT_KEY) },
    { no: 101, name: "creation_timestamp_start", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 102, name: "creation_timestamp_end", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 103, name: "modification_timestamp_start", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 104, name: "modification_timestamp_end", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 8, name: "entity_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 10, name: "status", kind: "enum", T: proto3.getEnumType(STANDARD_LIFECYCLE_STATUS) },
    { no: 11, name: "approved_on_start", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 12, name: "approved_on_end", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 13, name: "approved_by_user_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 14, name: "approver_role_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 15, name: "completed_on_start", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 16, name: "completed_on_end", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 20, name: "reference_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 21, name: "final_ref_number", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 22, name: "consignee_location_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 23, name: "buyer_location_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 24, name: "vendor_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 25, name: "currency_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 26, name: "project_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 40, name: "family_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 41, name: "delivery_date_exact", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 42, name: "delivery_date_start", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 43, name: "delivery_date_end", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 50, name: "total_value_min", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 51, name: "total_value_max", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PurchasesOrdersServiceFilterReq {
    return new PurchasesOrdersServiceFilterReq().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PurchasesOrdersServiceFilterReq {
    return new PurchasesOrdersServiceFilterReq().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PurchasesOrdersServiceFilterReq {
    return new PurchasesOrdersServiceFilterReq().fromJsonString(jsonString, options);
  }

  static equals(a: PurchasesOrdersServiceFilterReq | PlainMessage<PurchasesOrdersServiceFilterReq> | undefined, b: PurchasesOrdersServiceFilterReq | PlainMessage<PurchasesOrdersServiceFilterReq> | undefined): boolean {
    return proto3.util.equals(PurchasesOrdersServiceFilterReq, a, b);
  }
}

/**
 *
 * Describes the base request payload of a count search
 *
 * @generated from message Scailo.PurchasesOrdersServiceCountReq
 */
export class PurchasesOrdersServiceCountReq extends Message<PurchasesOrdersServiceCountReq> {
  /**
   * If true, then returns only active records. If false, then returns only inactive records
   *
   * @generated from field: Scailo.BOOL_FILTER is_active = 1;
   */
  isActive = BOOL_FILTER.BOOL_FILTER_ANY_UNSPECIFIED;

  /**
   * The minimum timestamp that needs to be considered to filter by creation
   *
   * @generated from field: uint64 creation_timestamp_start = 101;
   */
  creationTimestampStart = protoInt64.zero;

  /**
   * The maximum timestamp that needs to be considered to filter by creation
   *
   * @generated from field: uint64 creation_timestamp_end = 102;
   */
  creationTimestampEnd = protoInt64.zero;

  /**
   * The minimum timestamp that needs to be considered to filter by modification
   *
   * @generated from field: uint64 modification_timestamp_start = 103;
   */
  modificationTimestampStart = protoInt64.zero;

  /**
   * The maximum timestamp that needs to be considered to filter by modification
   *
   * @generated from field: uint64 modification_timestamp_end = 104;
   */
  modificationTimestampEnd = protoInt64.zero;

  /**
   * The entity UUID that is to be used to filter records
   *
   * @generated from field: string entity_uuid = 8;
   */
  entityUuid = "";

  /**
   * The status of this purchase order
   *
   * @generated from field: Scailo.STANDARD_LIFECYCLE_STATUS status = 10;
   */
  status = STANDARD_LIFECYCLE_STATUS.ANY_UNSPECIFIED;

  /**
   * The start range of approved timestamp
   *
   * @generated from field: uint64 approved_on_start = 11;
   */
  approvedOnStart = protoInt64.zero;

  /**
   * The end range of approved timestamp
   *
   * @generated from field: uint64 approved_on_end = 12;
   */
  approvedOnEnd = protoInt64.zero;

  /**
   * The ID of the approver
   *
   * @generated from field: uint64 approved_by_user_id = 13;
   */
  approvedByUserId = protoInt64.zero;

  /**
   * The role ID of the approver
   *
   * @generated from field: uint64 approver_role_id = 14;
   */
  approverRoleId = protoInt64.zero;

  /**
   * The start range of completed timestamp
   *
   * @generated from field: uint64 completed_on_start = 15;
   */
  completedOnStart = protoInt64.zero;

  /**
   * The end range of completed timestamp
   *
   * @generated from field: uint64 completed_on_end = 16;
   */
  completedOnEnd = protoInt64.zero;

  /**
   * The reference ID of the purchase order
   *
   * @generated from field: string reference_id = 20;
   */
  referenceId = "";

  /**
   * The unique reference number that has been automatically generated
   *
   * @generated from field: string final_ref_number = 21;
   */
  finalRefNumber = "";

  /**
   * The associated consignee location ID
   *
   * @generated from field: uint64 consignee_location_id = 22;
   */
  consigneeLocationId = protoInt64.zero;

  /**
   * The associated buyer location ID
   *
   * @generated from field: uint64 buyer_location_id = 23;
   */
  buyerLocationId = protoInt64.zero;

  /**
   * The ID of the associated vendor
   *
   * @generated from field: uint64 vendor_id = 24;
   */
  vendorId = protoInt64.zero;

  /**
   * The ID of the associated currency
   *
   * @generated from field: uint64 currency_id = 25;
   */
  currencyId = protoInt64.zero;

  /**
   * The ID of the associated project
   *
   * @generated from field: uint64 project_id = 26;
   */
  projectId = protoInt64.zero;

  /**
   * The ID of the family
   *
   * @generated from field: uint64 family_id = 40;
   */
  familyId = protoInt64.zero;

  /**
   * The exact delivery date of the item in the purchase order
   *
   * @generated from field: string delivery_date_exact = 41;
   */
  deliveryDateExact = "";

  /**
   * The start delivery date of the item in the purchase order
   *
   * @generated from field: string delivery_date_start = 42;
   */
  deliveryDateStart = "";

  /**
   * The end delivery date of the item in the purchase order
   *
   * @generated from field: string delivery_date_end = 43;
   */
  deliveryDateEnd = "";

  /**
   * Stores the minimum value of the purchase order (ignored if 0)
   *
   * @generated from field: uint64 total_value_min = 50;
   */
  totalValueMin = protoInt64.zero;

  /**
   * Stores the maximum value of the purchase order (ignored if 0)
   *
   * @generated from field: uint64 total_value_max = 51;
   */
  totalValueMax = protoInt64.zero;

  constructor(data?: PartialMessage<PurchasesOrdersServiceCountReq>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.PurchasesOrdersServiceCountReq";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "is_active", kind: "enum", T: proto3.getEnumType(BOOL_FILTER) },
    { no: 101, name: "creation_timestamp_start", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 102, name: "creation_timestamp_end", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 103, name: "modification_timestamp_start", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 104, name: "modification_timestamp_end", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 8, name: "entity_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 10, name: "status", kind: "enum", T: proto3.getEnumType(STANDARD_LIFECYCLE_STATUS) },
    { no: 11, name: "approved_on_start", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 12, name: "approved_on_end", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 13, name: "approved_by_user_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 14, name: "approver_role_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 15, name: "completed_on_start", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 16, name: "completed_on_end", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 20, name: "reference_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 21, name: "final_ref_number", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 22, name: "consignee_location_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 23, name: "buyer_location_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 24, name: "vendor_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 25, name: "currency_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 26, name: "project_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 40, name: "family_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 41, name: "delivery_date_exact", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 42, name: "delivery_date_start", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 43, name: "delivery_date_end", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 50, name: "total_value_min", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 51, name: "total_value_max", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PurchasesOrdersServiceCountReq {
    return new PurchasesOrdersServiceCountReq().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PurchasesOrdersServiceCountReq {
    return new PurchasesOrdersServiceCountReq().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PurchasesOrdersServiceCountReq {
    return new PurchasesOrdersServiceCountReq().fromJsonString(jsonString, options);
  }

  static equals(a: PurchasesOrdersServiceCountReq | PlainMessage<PurchasesOrdersServiceCountReq> | undefined, b: PurchasesOrdersServiceCountReq | PlainMessage<PurchasesOrdersServiceCountReq> | undefined): boolean {
    return proto3.util.equals(PurchasesOrdersServiceCountReq, a, b);
  }
}

/**
 *
 * Describes the request payload for performing a generic search operation on records
 *
 * @generated from message Scailo.PurchasesOrdersServiceSearchAllReq
 */
export class PurchasesOrdersServiceSearchAllReq extends Message<PurchasesOrdersServiceSearchAllReq> {
  /**
   * If true, then returns only active records. If false, then returns only inactive records
   *
   * @generated from field: Scailo.BOOL_FILTER is_active = 1;
   */
  isActive = BOOL_FILTER.BOOL_FILTER_ANY_UNSPECIFIED;

  /**
   * The number of records that need to be sent in the response. Returns all records if it is set to -1
   *
   * @generated from field: int64 count = 2;
   */
  count = protoInt64.zero;

  /**
   * The number that need to be offset by before fetching the records
   *
   * @generated from field: uint64 offset = 3;
   */
  offset = protoInt64.zero;

  /**
   * The sort order that is to be used to fetch the pagination response
   *
   * @generated from field: Scailo.SORT_ORDER sort_order = 4;
   */
  sortOrder = SORT_ORDER.ASCENDING_UNSPECIFIED;

  /**
   * The sort key that is to be used to fetch the pagination response
   *
   * @generated from field: Scailo.PURCHASE_ORDER_SORT_KEY sort_key = 5;
   */
  sortKey = PURCHASE_ORDER_SORT_KEY.PURCHASE_ORDER_SORT_KEY_ID_UNSPECIFIED;

  /**
   * The entity UUID that is to be used to filter records
   *
   * @generated from field: string entity_uuid = 6;
   */
  entityUuid = "";

  /**
   * Limit the search space to the given status
   *
   * @generated from field: Scailo.STANDARD_LIFECYCLE_STATUS status = 10;
   */
  status = STANDARD_LIFECYCLE_STATUS.ANY_UNSPECIFIED;

  /**
   * Describes the key with which the search operation needs to be performed
   *
   * @generated from field: string search_key = 11;
   */
  searchKey = "";

  /**
   * The associated consignee location ID
   *
   * @generated from field: uint64 consignee_location_id = 22;
   */
  consigneeLocationId = protoInt64.zero;

  /**
   * The associated buyer location ID
   *
   * @generated from field: uint64 buyer_location_id = 23;
   */
  buyerLocationId = protoInt64.zero;

  /**
   * The ID of the associated vendor
   *
   * @generated from field: uint64 vendor_id = 24;
   */
  vendorId = protoInt64.zero;

  /**
   * The ID of the associated currency
   *
   * @generated from field: uint64 currency_id = 25;
   */
  currencyId = protoInt64.zero;

  /**
   * The ID of the associated project
   *
   * @generated from field: uint64 project_id = 26;
   */
  projectId = protoInt64.zero;

  constructor(data?: PartialMessage<PurchasesOrdersServiceSearchAllReq>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.PurchasesOrdersServiceSearchAllReq";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "is_active", kind: "enum", T: proto3.getEnumType(BOOL_FILTER) },
    { no: 2, name: "count", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "offset", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 4, name: "sort_order", kind: "enum", T: proto3.getEnumType(SORT_ORDER) },
    { no: 5, name: "sort_key", kind: "enum", T: proto3.getEnumType(PURCHASE_ORDER_SORT_KEY) },
    { no: 6, name: "entity_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 10, name: "status", kind: "enum", T: proto3.getEnumType(STANDARD_LIFECYCLE_STATUS) },
    { no: 11, name: "search_key", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 22, name: "consignee_location_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 23, name: "buyer_location_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 24, name: "vendor_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 25, name: "currency_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 26, name: "project_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PurchasesOrdersServiceSearchAllReq {
    return new PurchasesOrdersServiceSearchAllReq().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PurchasesOrdersServiceSearchAllReq {
    return new PurchasesOrdersServiceSearchAllReq().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PurchasesOrdersServiceSearchAllReq {
    return new PurchasesOrdersServiceSearchAllReq().fromJsonString(jsonString, options);
  }

  static equals(a: PurchasesOrdersServiceSearchAllReq | PlainMessage<PurchasesOrdersServiceSearchAllReq> | undefined, b: PurchasesOrdersServiceSearchAllReq | PlainMessage<PurchasesOrdersServiceSearchAllReq> | undefined): boolean {
    return proto3.util.equals(PurchasesOrdersServiceSearchAllReq, a, b);
  }
}

/**
 *
 * Describes the parameters necessary to create a purchase order reference
 *
 * @generated from message Scailo.PurchasesOrdersServiceReferenceCreateRequest
 */
export class PurchasesOrdersServiceReferenceCreateRequest extends Message<PurchasesOrdersServiceReferenceCreateRequest> {
  /**
   * Stores any comment that the user might add during this operation
   *
   * @generated from field: string user_comment = 1;
   */
  userComment = "";

  /**
   * Stores the purchase order ID
   *
   * @generated from field: uint64 purchase_order_id = 10;
   */
  purchaseOrderId = protoInt64.zero;

  /**
   * The reference context, could be billing or buying
   *
   * @generated from field: Scailo.PURCHASE_ORDER_REFERENCE_CONTEXT context = 11;
   */
  context = PURCHASE_ORDER_REFERENCE_CONTEXT.PURCHASE_ORDER_REFERENCE_CONTEXT_ANY_UNSPECIFIED;

  /**
   * The associated ref from
   *
   * @generated from field: Scailo.PURCHASE_ORDER_REFERENCE_REF_FROM ref_from = 12;
   */
  refFrom = PURCHASE_ORDER_REFERENCE_REF_FROM.PURCHASE_ORDER_REFERENCE_REF_FROM_ANY_UNSPECIFIED;

  /**
   * The ID of the associated reference
   *
   * @generated from field: uint64 ref_id = 13;
   */
  refId = protoInt64.zero;

  constructor(data?: PartialMessage<PurchasesOrdersServiceReferenceCreateRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.PurchasesOrdersServiceReferenceCreateRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "user_comment", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 10, name: "purchase_order_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 11, name: "context", kind: "enum", T: proto3.getEnumType(PURCHASE_ORDER_REFERENCE_CONTEXT) },
    { no: 12, name: "ref_from", kind: "enum", T: proto3.getEnumType(PURCHASE_ORDER_REFERENCE_REF_FROM) },
    { no: 13, name: "ref_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PurchasesOrdersServiceReferenceCreateRequest {
    return new PurchasesOrdersServiceReferenceCreateRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PurchasesOrdersServiceReferenceCreateRequest {
    return new PurchasesOrdersServiceReferenceCreateRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PurchasesOrdersServiceReferenceCreateRequest {
    return new PurchasesOrdersServiceReferenceCreateRequest().fromJsonString(jsonString, options);
  }

  static equals(a: PurchasesOrdersServiceReferenceCreateRequest | PlainMessage<PurchasesOrdersServiceReferenceCreateRequest> | undefined, b: PurchasesOrdersServiceReferenceCreateRequest | PlainMessage<PurchasesOrdersServiceReferenceCreateRequest> | undefined): boolean {
    return proto3.util.equals(PurchasesOrdersServiceReferenceCreateRequest, a, b);
  }
}

/**
 *
 * Describes the parameters that constitute a purchase order reference
 *
 * @generated from message Scailo.PurchaseOrderReference
 */
export class PurchaseOrderReference extends Message<PurchaseOrderReference> {
  /**
   * Stores a globally unique entity UUID. This will be set at the organization level
   *
   * @generated from field: string entity_uuid = 1;
   */
  entityUuid = "";

  /**
   * Stores the metadata of this purchase order
   *
   * @generated from field: Scailo.EmployeeMetadata metadata = 2;
   */
  metadata?: EmployeeMetadata;

  /**
   * Stores the approval metadata
   *
   * @generated from field: Scailo.ApprovalMetadata approval_metadata = 3;
   */
  approvalMetadata?: ApprovalMetadata;

  /**
   * Denotes if this record requires approval (or has been approved)
   *
   * @generated from field: bool need_approval = 4;
   */
  needApproval = false;

  /**
   * Stores any comment that the user might have added during an operation
   *
   * @generated from field: string user_comment = 5;
   */
  userComment = "";

  /**
   * Stores the purchase order ID
   *
   * @generated from field: uint64 purchase_order_id = 10;
   */
  purchaseOrderId = protoInt64.zero;

  /**
   * The reference context, could be billing or buying
   *
   * @generated from field: Scailo.PURCHASE_ORDER_REFERENCE_CONTEXT context = 11;
   */
  context = PURCHASE_ORDER_REFERENCE_CONTEXT.PURCHASE_ORDER_REFERENCE_CONTEXT_ANY_UNSPECIFIED;

  /**
   * The associated ref from
   *
   * @generated from field: Scailo.PURCHASE_ORDER_REFERENCE_REF_FROM ref_from = 12;
   */
  refFrom = PURCHASE_ORDER_REFERENCE_REF_FROM.PURCHASE_ORDER_REFERENCE_REF_FROM_ANY_UNSPECIFIED;

  /**
   * The ID of the associated reference
   *
   * @generated from field: uint64 ref_id = 13;
   */
  refId = protoInt64.zero;

  constructor(data?: PartialMessage<PurchaseOrderReference>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.PurchaseOrderReference";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "entity_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "metadata", kind: "message", T: EmployeeMetadata },
    { no: 3, name: "approval_metadata", kind: "message", T: ApprovalMetadata },
    { no: 4, name: "need_approval", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 5, name: "user_comment", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 10, name: "purchase_order_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 11, name: "context", kind: "enum", T: proto3.getEnumType(PURCHASE_ORDER_REFERENCE_CONTEXT) },
    { no: 12, name: "ref_from", kind: "enum", T: proto3.getEnumType(PURCHASE_ORDER_REFERENCE_REF_FROM) },
    { no: 13, name: "ref_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PurchaseOrderReference {
    return new PurchaseOrderReference().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PurchaseOrderReference {
    return new PurchaseOrderReference().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PurchaseOrderReference {
    return new PurchaseOrderReference().fromJsonString(jsonString, options);
  }

  static equals(a: PurchaseOrderReference | PlainMessage<PurchaseOrderReference> | undefined, b: PurchaseOrderReference | PlainMessage<PurchaseOrderReference> | undefined): boolean {
    return proto3.util.equals(PurchaseOrderReference, a, b);
  }
}

/**
 *
 * Describes the message consisting of the list of purchase order references
 *
 * @generated from message Scailo.PurchaseOrderReferencesList
 */
export class PurchaseOrderReferencesList extends Message<PurchaseOrderReferencesList> {
  /**
   * List of records
   *
   * @generated from field: repeated Scailo.PurchaseOrderReference list = 1;
   */
  list: PurchaseOrderReference[] = [];

  constructor(data?: PartialMessage<PurchaseOrderReferencesList>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.PurchaseOrderReferencesList";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "list", kind: "message", T: PurchaseOrderReference, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PurchaseOrderReferencesList {
    return new PurchaseOrderReferencesList().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PurchaseOrderReferencesList {
    return new PurchaseOrderReferencesList().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PurchaseOrderReferencesList {
    return new PurchaseOrderReferencesList().fromJsonString(jsonString, options);
  }

  static equals(a: PurchaseOrderReferencesList | PlainMessage<PurchaseOrderReferencesList> | undefined, b: PurchaseOrderReferencesList | PlainMessage<PurchaseOrderReferencesList> | undefined): boolean {
    return proto3.util.equals(PurchaseOrderReferencesList, a, b);
  }
}

/**
 *
 * Describes the request payload to retrieve approved or unapproved items.
 *
 * @generated from message Scailo.PurchaseOrderItemsSearchRequest
 */
export class PurchaseOrderItemsSearchRequest extends Message<PurchaseOrderItemsSearchRequest> {
  /**
   * If true, then returns only active records. If false, then returns only inactive records
   *
   * @generated from field: Scailo.BOOL_FILTER is_active = 1;
   */
  isActive = BOOL_FILTER.BOOL_FILTER_ANY_UNSPECIFIED;

  /**
   * The number of records that need to be sent in the response. Returns all records if it is set to -1
   *
   * @generated from field: int64 count = 2;
   */
  count = protoInt64.zero;

  /**
   * The number that need to be offset by before fetching the records
   *
   * @generated from field: uint64 offset = 3;
   */
  offset = protoInt64.zero;

  /**
   * The sort order that is to be used to fetch the pagination response
   *
   * @generated from field: Scailo.SORT_ORDER sort_order = 4;
   */
  sortOrder = SORT_ORDER.ASCENDING_UNSPECIFIED;

  /**
   * The sort key that is to be used to fetch the pagination response
   *
   * @generated from field: Scailo.PURCHASE_ORDER_ITEM_SORT_KEY sort_key = 5;
   */
  sortKey = PURCHASE_ORDER_ITEM_SORT_KEY.PURCHASE_ORDER_ITEM_SORT_KEY_ID_UNSPECIFIED;

  /**
   * The entity UUID that is to be used to filter records
   *
   * @generated from field: string entity_uuid = 6;
   */
  entityUuid = "";

  /**
   * The status of the items
   *
   * @generated from field: Scailo.PURCHASE_ORDER_ITEM_STATUS status = 7;
   */
  status = PURCHASE_ORDER_ITEM_STATUS.PURCHASE_ORDER_ITEM_STATUS_ANY_UNSPECIFIED;

  /**
   * The start range of approved timestamp
   *
   * @generated from field: uint64 approved_on_start = 10;
   */
  approvedOnStart = protoInt64.zero;

  /**
   * The end range of approved timestamp
   *
   * @generated from field: uint64 approved_on_end = 11;
   */
  approvedOnEnd = protoInt64.zero;

  /**
   * The ID of the approver
   *
   * @generated from field: uint64 approved_by_user_id = 12;
   */
  approvedByUserId = protoInt64.zero;

  /**
   * The role ID of the approver
   *
   * @generated from field: uint64 approver_role_id = 13;
   */
  approverRoleId = protoInt64.zero;

  /**
   * The ID of the purchase order
   *
   * @generated from field: uint64 purchase_order_id = 20;
   */
  purchaseOrderId = protoInt64.zero;

  /**
   * The ID of the family
   *
   * @generated from field: uint64 family_id = 21;
   */
  familyId = protoInt64.zero;

  /**
   * The ID of the vendor's unit of material
   *
   * @generated from field: uint64 vendor_uom_id = 22;
   */
  vendorUomId = protoInt64.zero;

  /**
   * The ID of the tax group
   *
   * @generated from field: uint64 tax_group_id = 23;
   */
  taxGroupId = protoInt64.zero;

  /**
   * The exact delivery date of the item in the purchase order
   *
   * @generated from field: string delivery_date_exact = 28;
   */
  deliveryDateExact = "";

  /**
   * The start delivery date of the item in the purchase order
   *
   * @generated from field: string delivery_date_start = 29;
   */
  deliveryDateStart = "";

  /**
   * The end delivery date of the item in the purchase order
   *
   * @generated from field: string delivery_date_end = 30;
   */
  deliveryDateEnd = "";

  /**
   * Describes the key with which the search operation needs to be performed
   *
   * @generated from field: string search_key = 40;
   */
  searchKey = "";

  constructor(data?: PartialMessage<PurchaseOrderItemsSearchRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.PurchaseOrderItemsSearchRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "is_active", kind: "enum", T: proto3.getEnumType(BOOL_FILTER) },
    { no: 2, name: "count", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "offset", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 4, name: "sort_order", kind: "enum", T: proto3.getEnumType(SORT_ORDER) },
    { no: 5, name: "sort_key", kind: "enum", T: proto3.getEnumType(PURCHASE_ORDER_ITEM_SORT_KEY) },
    { no: 6, name: "entity_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 7, name: "status", kind: "enum", T: proto3.getEnumType(PURCHASE_ORDER_ITEM_STATUS) },
    { no: 10, name: "approved_on_start", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 11, name: "approved_on_end", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 12, name: "approved_by_user_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 13, name: "approver_role_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 20, name: "purchase_order_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 21, name: "family_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 22, name: "vendor_uom_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 23, name: "tax_group_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 28, name: "delivery_date_exact", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 29, name: "delivery_date_start", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 30, name: "delivery_date_end", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 40, name: "search_key", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PurchaseOrderItemsSearchRequest {
    return new PurchaseOrderItemsSearchRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PurchaseOrderItemsSearchRequest {
    return new PurchaseOrderItemsSearchRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PurchaseOrderItemsSearchRequest {
    return new PurchaseOrderItemsSearchRequest().fromJsonString(jsonString, options);
  }

  static equals(a: PurchaseOrderItemsSearchRequest | PlainMessage<PurchaseOrderItemsSearchRequest> | undefined, b: PurchaseOrderItemsSearchRequest | PlainMessage<PurchaseOrderItemsSearchRequest> | undefined): boolean {
    return proto3.util.equals(PurchaseOrderItemsSearchRequest, a, b);
  }
}

/**
 *
 * Describes the response to a pagination items request
 *
 * @generated from message Scailo.PurchasesOrdersServicePaginatedItemsResponse
 */
export class PurchasesOrdersServicePaginatedItemsResponse extends Message<PurchasesOrdersServicePaginatedItemsResponse> {
  /**
   * The number of records in this payload
   *
   * @generated from field: uint64 count = 1;
   */
  count = protoInt64.zero;

  /**
   * The number that has been offset before fetching the records. This is the same value that has been sent as part of the pagination request
   *
   * @generated from field: uint64 offset = 2;
   */
  offset = protoInt64.zero;

  /**
   * The total number of records that are available
   *
   * @generated from field: uint64 total = 3;
   */
  total = protoInt64.zero;

  /**
   * The list of records
   *
   * @generated from field: repeated Scailo.PurchaseOrderItem payload = 4;
   */
  payload: PurchaseOrderItem[] = [];

  constructor(data?: PartialMessage<PurchasesOrdersServicePaginatedItemsResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.PurchasesOrdersServicePaginatedItemsResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "count", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 2, name: "offset", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 3, name: "total", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 4, name: "payload", kind: "message", T: PurchaseOrderItem, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PurchasesOrdersServicePaginatedItemsResponse {
    return new PurchasesOrdersServicePaginatedItemsResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PurchasesOrdersServicePaginatedItemsResponse {
    return new PurchasesOrdersServicePaginatedItemsResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PurchasesOrdersServicePaginatedItemsResponse {
    return new PurchasesOrdersServicePaginatedItemsResponse().fromJsonString(jsonString, options);
  }

  static equals(a: PurchasesOrdersServicePaginatedItemsResponse | PlainMessage<PurchasesOrdersServicePaginatedItemsResponse> | undefined, b: PurchasesOrdersServicePaginatedItemsResponse | PlainMessage<PurchasesOrdersServicePaginatedItemsResponse> | undefined): boolean {
    return proto3.util.equals(PurchasesOrdersServicePaginatedItemsResponse, a, b);
  }
}

/**
 *
 * Describes the parameters necessary to create a purchase order contact
 *
 * @generated from message Scailo.PurchasesOrdersServiceContactCreateRequest
 */
export class PurchasesOrdersServiceContactCreateRequest extends Message<PurchasesOrdersServiceContactCreateRequest> {
  /**
   * Stores any comment that the user might add during this operation
   *
   * @generated from field: string user_comment = 1;
   */
  userComment = "";

  /**
   * Stores the purchase order ID
   *
   * @generated from field: uint64 purchase_order_id = 10;
   */
  purchaseOrderId = protoInt64.zero;

  /**
   * Stores the associate ID
   *
   * @generated from field: uint64 associate_id = 11;
   */
  associateId = protoInt64.zero;

  constructor(data?: PartialMessage<PurchasesOrdersServiceContactCreateRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.PurchasesOrdersServiceContactCreateRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "user_comment", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 10, name: "purchase_order_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 11, name: "associate_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PurchasesOrdersServiceContactCreateRequest {
    return new PurchasesOrdersServiceContactCreateRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PurchasesOrdersServiceContactCreateRequest {
    return new PurchasesOrdersServiceContactCreateRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PurchasesOrdersServiceContactCreateRequest {
    return new PurchasesOrdersServiceContactCreateRequest().fromJsonString(jsonString, options);
  }

  static equals(a: PurchasesOrdersServiceContactCreateRequest | PlainMessage<PurchasesOrdersServiceContactCreateRequest> | undefined, b: PurchasesOrdersServiceContactCreateRequest | PlainMessage<PurchasesOrdersServiceContactCreateRequest> | undefined): boolean {
    return proto3.util.equals(PurchasesOrdersServiceContactCreateRequest, a, b);
  }
}

/**
 *
 * Describes the parameters that constitute a purchase order contact
 *
 * @generated from message Scailo.PurchaseOrderContact
 */
export class PurchaseOrderContact extends Message<PurchaseOrderContact> {
  /**
   * Stores a globally unique entity UUID. This will be set at the organization level
   *
   * @generated from field: string entity_uuid = 1;
   */
  entityUuid = "";

  /**
   * Stores the metadata of this purchase order
   *
   * @generated from field: Scailo.EmployeeMetadata metadata = 2;
   */
  metadata?: EmployeeMetadata;

  /**
   * Stores the approval metadata
   *
   * @generated from field: Scailo.ApprovalMetadata approval_metadata = 3;
   */
  approvalMetadata?: ApprovalMetadata;

  /**
   * Denotes if this record requires approval (or has been approved)
   *
   * @generated from field: bool need_approval = 4;
   */
  needApproval = false;

  /**
   * Stores any comment that the user might have added during an operation
   *
   * @generated from field: string user_comment = 5;
   */
  userComment = "";

  /**
   * Stores the purchase order ID
   *
   * @generated from field: uint64 purchase_order_id = 10;
   */
  purchaseOrderId = protoInt64.zero;

  /**
   * Stores the associate ID
   *
   * @generated from field: uint64 associate_id = 11;
   */
  associateId = protoInt64.zero;

  constructor(data?: PartialMessage<PurchaseOrderContact>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.PurchaseOrderContact";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "entity_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "metadata", kind: "message", T: EmployeeMetadata },
    { no: 3, name: "approval_metadata", kind: "message", T: ApprovalMetadata },
    { no: 4, name: "need_approval", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 5, name: "user_comment", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 10, name: "purchase_order_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 11, name: "associate_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PurchaseOrderContact {
    return new PurchaseOrderContact().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PurchaseOrderContact {
    return new PurchaseOrderContact().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PurchaseOrderContact {
    return new PurchaseOrderContact().fromJsonString(jsonString, options);
  }

  static equals(a: PurchaseOrderContact | PlainMessage<PurchaseOrderContact> | undefined, b: PurchaseOrderContact | PlainMessage<PurchaseOrderContact> | undefined): boolean {
    return proto3.util.equals(PurchaseOrderContact, a, b);
  }
}

/**
 *
 * Describes the message consisting of the list of purchase order contacts
 *
 * @generated from message Scailo.PurchaseOrderContactsList
 */
export class PurchaseOrderContactsList extends Message<PurchaseOrderContactsList> {
  /**
   * List of records
   *
   * @generated from field: repeated Scailo.PurchaseOrderContact list = 1;
   */
  list: PurchaseOrderContact[] = [];

  constructor(data?: PartialMessage<PurchaseOrderContactsList>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.PurchaseOrderContactsList";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "list", kind: "message", T: PurchaseOrderContact, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PurchaseOrderContactsList {
    return new PurchaseOrderContactsList().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PurchaseOrderContactsList {
    return new PurchaseOrderContactsList().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PurchaseOrderContactsList {
    return new PurchaseOrderContactsList().fromJsonString(jsonString, options);
  }

  static equals(a: PurchaseOrderContactsList | PlainMessage<PurchaseOrderContactsList> | undefined, b: PurchaseOrderContactsList | PlainMessage<PurchaseOrderContactsList> | undefined): boolean {
    return proto3.util.equals(PurchaseOrderContactsList, a, b);
  }
}

