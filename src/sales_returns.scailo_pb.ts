// @generated by protoc-gen-es v1.5.1 with parameter "target=ts"
// @generated from file sales_returns.scailo.proto (package Scailo, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3, protoInt64 } from "@bufbuild/protobuf";
import { FormFieldDatum, FormFieldDatumCreateRequest, FormFieldDatumFilterRequest } from "./forms_fields_data.scailo_pb.js";
import { ApprovalMetadata, BOOL_FILTER, EmployeeMetadata, LogbookLogConciseSLC, SORT_ORDER, STANDARD_LIFECYCLE_STATUS } from "./base.scailo_pb.js";

/**
 *
 * Stores all the possible references from which a sales return can be added
 *
 * @generated from enum Scailo.SALES_RETURN_REF_FROM
 */
export enum SALES_RETURN_REF_FROM {
  /**
   * Used only in filters
   *
   * @generated from enum value: SALES_RETURN_REF_FROM_ANY_UNSPECIFIED = 0;
   */
  SALES_RETURN_REF_FROM_ANY_UNSPECIFIED = 0,

  /**
   * Denotes that the sales return originated from a sales order
   *
   * @generated from enum value: SALES_RETURN_REF_FROM_SALES_ORDER = 1;
   */
  SALES_RETURN_REF_FROM_SALES_ORDER = 1,
}
// Retrieve enum metadata with: proto3.getEnumType(SALES_RETURN_REF_FROM)
proto3.util.setEnumType(SALES_RETURN_REF_FROM, "Scailo.SALES_RETURN_REF_FROM", [
  { no: 0, name: "SALES_RETURN_REF_FROM_ANY_UNSPECIFIED" },
  { no: 1, name: "SALES_RETURN_REF_FROM_SALES_ORDER" },
]);

/**
 *
 * Describes the available sort keys
 *
 * @generated from enum Scailo.SALES_RETURN_ITEM_SORT_KEY
 */
export enum SALES_RETURN_ITEM_SORT_KEY {
  /**
   * Fetch ordered results by id
   *
   * @generated from enum value: SALES_RETURN_ITEM_SORT_KEY_ID_UNSPECIFIED = 0;
   */
  SALES_RETURN_ITEM_SORT_KEY_ID_UNSPECIFIED = 0,

  /**
   * Fetch ordered results by the creation timestamp
   *
   * @generated from enum value: SALES_RETURN_ITEM_SORT_KEY_CREATED_AT = 1;
   */
  SALES_RETURN_ITEM_SORT_KEY_CREATED_AT = 1,

  /**
   * Fetch ordered results by the modified timestamp
   *
   * @generated from enum value: SALES_RETURN_ITEM_SORT_KEY_MODIFIED_AT = 2;
   */
  SALES_RETURN_ITEM_SORT_KEY_MODIFIED_AT = 2,

  /**
   * Fetch ordered results by the approved on timestamp
   *
   * @generated from enum value: SALES_RETURN_ITEM_SORT_KEY_APPROVED_ON = 3;
   */
  SALES_RETURN_ITEM_SORT_KEY_APPROVED_ON = 3,

  /**
   * Fetch ordered results by the approved by field
   *
   * @generated from enum value: SALES_RETURN_ITEM_SORT_KEY_APPROVED_BY = 4;
   */
  SALES_RETURN_ITEM_SORT_KEY_APPROVED_BY = 4,

  /**
   * Fetch ordered results by the approver's role ID
   *
   * @generated from enum value: SALES_RETURN_ITEM_SORT_KEY_APPROVER_ROLE_ID = 5;
   */
  SALES_RETURN_ITEM_SORT_KEY_APPROVER_ROLE_ID = 5,

  /**
   * Fetch ordered results by the family ID
   *
   * @generated from enum value: SALES_RETURN_ITEM_SORT_KEY_FAMILY_ID = 10;
   */
  SALES_RETURN_ITEM_SORT_KEY_FAMILY_ID = 10,

  /**
   * Fetch ordered results by the internal quantity
   *
   * @generated from enum value: SALES_RETURN_ITEM_SORT_KEY_INTERNAL_QUANTITY = 11;
   */
  SALES_RETURN_ITEM_SORT_KEY_INTERNAL_QUANTITY = 11,

  /**
   * Fetch ordered results by the client unit of material ID
   *
   * @generated from enum value: SALES_RETURN_ITEM_SORT_KEY_CLIENT_UOM_ID = 12;
   */
  SALES_RETURN_ITEM_SORT_KEY_CLIENT_UOM_ID = 12,

  /**
   * Fetch ordered results by the client quantity
   *
   * @generated from enum value: SALES_RETURN_ITEM_SORT_KEY_CLIENT_QUANTITY = 13;
   */
  SALES_RETURN_ITEM_SORT_KEY_CLIENT_QUANTITY = 13,
}
// Retrieve enum metadata with: proto3.getEnumType(SALES_RETURN_ITEM_SORT_KEY)
proto3.util.setEnumType(SALES_RETURN_ITEM_SORT_KEY, "Scailo.SALES_RETURN_ITEM_SORT_KEY", [
  { no: 0, name: "SALES_RETURN_ITEM_SORT_KEY_ID_UNSPECIFIED" },
  { no: 1, name: "SALES_RETURN_ITEM_SORT_KEY_CREATED_AT" },
  { no: 2, name: "SALES_RETURN_ITEM_SORT_KEY_MODIFIED_AT" },
  { no: 3, name: "SALES_RETURN_ITEM_SORT_KEY_APPROVED_ON" },
  { no: 4, name: "SALES_RETURN_ITEM_SORT_KEY_APPROVED_BY" },
  { no: 5, name: "SALES_RETURN_ITEM_SORT_KEY_APPROVER_ROLE_ID" },
  { no: 10, name: "SALES_RETURN_ITEM_SORT_KEY_FAMILY_ID" },
  { no: 11, name: "SALES_RETURN_ITEM_SORT_KEY_INTERNAL_QUANTITY" },
  { no: 12, name: "SALES_RETURN_ITEM_SORT_KEY_CLIENT_UOM_ID" },
  { no: 13, name: "SALES_RETURN_ITEM_SORT_KEY_CLIENT_QUANTITY" },
]);

/**
 *
 * Describes the applicable statuses of sales return items
 *
 * @generated from enum Scailo.SALES_RETURN_ITEM_STATUS
 */
export enum SALES_RETURN_ITEM_STATUS {
  /**
   * Denotes that status be disregarded. This is used only within search APIs
   *
   * @generated from enum value: SALES_RETURN_ITEM_STATUS_ANY_UNSPECIFIED = 0;
   */
  SALES_RETURN_ITEM_STATUS_ANY_UNSPECIFIED = 0,

  /**
   * Denotes that the sales return items must have been approved
   *
   * @generated from enum value: SALES_RETURN_ITEM_STATUS_APPROVED = 1;
   */
  SALES_RETURN_ITEM_STATUS_APPROVED = 1,

  /**
   * Denotes that the sales return items must be waiting for approval
   *
   * @generated from enum value: SALES_RETURN_ITEM_STATUS_UNAPPROVED = 2;
   */
  SALES_RETURN_ITEM_STATUS_UNAPPROVED = 2,
}
// Retrieve enum metadata with: proto3.getEnumType(SALES_RETURN_ITEM_STATUS)
proto3.util.setEnumType(SALES_RETURN_ITEM_STATUS, "Scailo.SALES_RETURN_ITEM_STATUS", [
  { no: 0, name: "SALES_RETURN_ITEM_STATUS_ANY_UNSPECIFIED" },
  { no: 1, name: "SALES_RETURN_ITEM_STATUS_APPROVED" },
  { no: 2, name: "SALES_RETURN_ITEM_STATUS_UNAPPROVED" },
]);

/**
 *
 * Describes the available sort keys
 *
 * @generated from enum Scailo.SALES_RETURN_SORT_KEY
 */
export enum SALES_RETURN_SORT_KEY {
  /**
   * Fetch ordered results by id
   *
   * @generated from enum value: SALES_RETURN_SORT_KEY_ID_UNSPECIFIED = 0;
   */
  SALES_RETURN_SORT_KEY_ID_UNSPECIFIED = 0,

  /**
   * Fetch ordered results by the creation timestamp
   *
   * @generated from enum value: SALES_RETURN_SORT_KEY_CREATED_AT = 1;
   */
  SALES_RETURN_SORT_KEY_CREATED_AT = 1,

  /**
   * Fetch ordered results by the modified timestamp
   *
   * @generated from enum value: SALES_RETURN_SORT_KEY_MODIFIED_AT = 2;
   */
  SALES_RETURN_SORT_KEY_MODIFIED_AT = 2,

  /**
   * Fetch ordered results by the approved on timestamp
   *
   * @generated from enum value: SALES_RETURN_SORT_KEY_APPROVED_ON = 3;
   */
  SALES_RETURN_SORT_KEY_APPROVED_ON = 3,

  /**
   * Fetch ordered results by the approved by field
   *
   * @generated from enum value: SALES_RETURN_SORT_KEY_APPROVED_BY = 4;
   */
  SALES_RETURN_SORT_KEY_APPROVED_BY = 4,

  /**
   * Fetch ordered results by the approver's role ID
   *
   * @generated from enum value: SALES_RETURN_SORT_KEY_APPROVER_ROLE_ID = 5;
   */
  SALES_RETURN_SORT_KEY_APPROVER_ROLE_ID = 5,

  /**
   * Fetch ordered results by the approver's completed on timestamp
   *
   * @generated from enum value: SALES_RETURN_SORT_KEY_COMPLETED_ON = 6;
   */
  SALES_RETURN_SORT_KEY_COMPLETED_ON = 6,

  /**
   * Fetch ordered results by the reference ID
   *
   * @generated from enum value: SALES_RETURN_SORT_KEY_REFERENCE_ID = 10;
   */
  SALES_RETURN_SORT_KEY_REFERENCE_ID = 10,

  /**
   * Fetch ordered results by the final ref number
   *
   * @generated from enum value: SALES_RETURN_SORT_KEY_FINAL_REF_NUMBER = 11;
   */
  SALES_RETURN_SORT_KEY_FINAL_REF_NUMBER = 11,
}
// Retrieve enum metadata with: proto3.getEnumType(SALES_RETURN_SORT_KEY)
proto3.util.setEnumType(SALES_RETURN_SORT_KEY, "Scailo.SALES_RETURN_SORT_KEY", [
  { no: 0, name: "SALES_RETURN_SORT_KEY_ID_UNSPECIFIED" },
  { no: 1, name: "SALES_RETURN_SORT_KEY_CREATED_AT" },
  { no: 2, name: "SALES_RETURN_SORT_KEY_MODIFIED_AT" },
  { no: 3, name: "SALES_RETURN_SORT_KEY_APPROVED_ON" },
  { no: 4, name: "SALES_RETURN_SORT_KEY_APPROVED_BY" },
  { no: 5, name: "SALES_RETURN_SORT_KEY_APPROVER_ROLE_ID" },
  { no: 6, name: "SALES_RETURN_SORT_KEY_COMPLETED_ON" },
  { no: 10, name: "SALES_RETURN_SORT_KEY_REFERENCE_ID" },
  { no: 11, name: "SALES_RETURN_SORT_KEY_FINAL_REF_NUMBER" },
]);

/**
 *
 * Describes the available billing statuses
 *
 * @generated from enum Scailo.SALES_RETURN_BILLING_STATUS
 */
export enum SALES_RETURN_BILLING_STATUS {
  /**
   * Any billing status
   *
   * @generated from enum value: SALES_RETURN_BILLING_STATUS_ANY_UNSPECIFIED = 0;
   */
  SALES_RETURN_BILLING_STATUS_ANY_UNSPECIFIED = 0,

  /**
   * Sales return is billed
   *
   * @generated from enum value: SALES_RETURN_BILLING_STATUS_BILLED = 1;
   */
  SALES_RETURN_BILLING_STATUS_BILLED = 1,

  /**
   * Sales return is unbilled
   *
   * @generated from enum value: SALES_RETURN_BILLING_STATUS_UNBILLED = 2;
   */
  SALES_RETURN_BILLING_STATUS_UNBILLED = 2,
}
// Retrieve enum metadata with: proto3.getEnumType(SALES_RETURN_BILLING_STATUS)
proto3.util.setEnumType(SALES_RETURN_BILLING_STATUS, "Scailo.SALES_RETURN_BILLING_STATUS", [
  { no: 0, name: "SALES_RETURN_BILLING_STATUS_ANY_UNSPECIFIED" },
  { no: 1, name: "SALES_RETURN_BILLING_STATUS_BILLED" },
  { no: 2, name: "SALES_RETURN_BILLING_STATUS_UNBILLED" },
]);

/**
 *
 * Describes the parameters necessary to create a record
 *
 * @generated from message Scailo.SalesReturnsServiceCreateRequest
 */
export class SalesReturnsServiceCreateRequest extends Message<SalesReturnsServiceCreateRequest> {
  /**
   * Stores a globally unique entity UUID. This will be set at the organization level
   *
   * @generated from field: string entity_uuid = 1;
   */
  entityUuid = "";

  /**
   * Stores any comment that the user might add during this operation
   *
   * @generated from field: string user_comment = 2;
   */
  userComment = "";

  /**
   * The associated vault folder ID
   *
   * @generated from field: uint64 vault_folder_id = 9;
   */
  vaultFolderId = protoInt64.zero;

  /**
   * The reference ID of the sales return
   *
   * @generated from field: string reference_id = 10;
   */
  referenceId = "";

  /**
   * The associated reference
   *
   * @generated from field: Scailo.SALES_RETURN_REF_FROM ref_from = 12;
   */
  refFrom = SALES_RETURN_REF_FROM.SALES_RETURN_REF_FROM_ANY_UNSPECIFIED;

  /**
   * The associated ID of the reference
   *
   * @generated from field: uint64 ref_id = 13;
   */
  refId = protoInt64.zero;

  /**
   * The location ID of where the record is created
   *
   * @generated from field: uint64 location_id = 15;
   */
  locationId = protoInt64.zero;

  /**
   * The list of dynamic forms
   *
   * @generated from field: repeated Scailo.FormFieldDatumCreateRequest form_data = 30;
   */
  formData: FormFieldDatumCreateRequest[] = [];

  constructor(data?: PartialMessage<SalesReturnsServiceCreateRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.SalesReturnsServiceCreateRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "entity_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "user_comment", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 9, name: "vault_folder_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 10, name: "reference_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 12, name: "ref_from", kind: "enum", T: proto3.getEnumType(SALES_RETURN_REF_FROM) },
    { no: 13, name: "ref_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 15, name: "location_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 30, name: "form_data", kind: "message", T: FormFieldDatumCreateRequest, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SalesReturnsServiceCreateRequest {
    return new SalesReturnsServiceCreateRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SalesReturnsServiceCreateRequest {
    return new SalesReturnsServiceCreateRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SalesReturnsServiceCreateRequest {
    return new SalesReturnsServiceCreateRequest().fromJsonString(jsonString, options);
  }

  static equals(a: SalesReturnsServiceCreateRequest | PlainMessage<SalesReturnsServiceCreateRequest> | undefined, b: SalesReturnsServiceCreateRequest | PlainMessage<SalesReturnsServiceCreateRequest> | undefined): boolean {
    return proto3.util.equals(SalesReturnsServiceCreateRequest, a, b);
  }
}

/**
 *
 * Describes the parameters necessary to update a record
 *
 * @generated from message Scailo.SalesReturnsServiceUpdateRequest
 */
export class SalesReturnsServiceUpdateRequest extends Message<SalesReturnsServiceUpdateRequest> {
  /**
   * Stores any comment that the user might add during this operation
   *
   * @generated from field: string user_comment = 1;
   */
  userComment = "";

  /**
   * The ID of the record that needs to be updated
   *
   * @generated from field: uint64 id = 2;
   */
  id = protoInt64.zero;

  /**
   * Optional boolean value that stores if a notification needs to be sent to users about the update to the record. This is useful when a subsequent operation needs to be performed immediately (such as send to verification after updating the revision)
   *
   * @generated from field: bool notify_users = 3;
   */
  notifyUsers = false;

  /**
   * The associated vault folder ID
   *
   * @generated from field: uint64 vault_folder_id = 9;
   */
  vaultFolderId = protoInt64.zero;

  /**
   * The reference ID of the sales return
   *
   * @generated from field: string reference_id = 10;
   */
  referenceId = "";

  /**
   * The list of dynamic forms
   *
   * @generated from field: repeated Scailo.FormFieldDatumCreateRequest form_data = 30;
   */
  formData: FormFieldDatumCreateRequest[] = [];

  constructor(data?: PartialMessage<SalesReturnsServiceUpdateRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.SalesReturnsServiceUpdateRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "user_comment", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 3, name: "notify_users", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 9, name: "vault_folder_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 10, name: "reference_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 30, name: "form_data", kind: "message", T: FormFieldDatumCreateRequest, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SalesReturnsServiceUpdateRequest {
    return new SalesReturnsServiceUpdateRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SalesReturnsServiceUpdateRequest {
    return new SalesReturnsServiceUpdateRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SalesReturnsServiceUpdateRequest {
    return new SalesReturnsServiceUpdateRequest().fromJsonString(jsonString, options);
  }

  static equals(a: SalesReturnsServiceUpdateRequest | PlainMessage<SalesReturnsServiceUpdateRequest> | undefined, b: SalesReturnsServiceUpdateRequest | PlainMessage<SalesReturnsServiceUpdateRequest> | undefined): boolean {
    return proto3.util.equals(SalesReturnsServiceUpdateRequest, a, b);
  }
}

/**
 *
 * Stores the UUID references of the record
 *
 * @generated from message Scailo.SalesReturnAncillaryParameters
 */
export class SalesReturnAncillaryParameters extends Message<SalesReturnAncillaryParameters> {
  /**
   * The UUID of the ref_id (the UUID of the associated ref_id)
   *
   * @generated from field: string ref_uuid = 213;
   */
  refUuid = "";

  /**
   * The UUID of the location (the UUID of the associated location_id)
   *
   * @generated from field: string location_uuid = 215;
   */
  locationUuid = "";

  constructor(data?: PartialMessage<SalesReturnAncillaryParameters>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.SalesReturnAncillaryParameters";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 213, name: "ref_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 215, name: "location_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SalesReturnAncillaryParameters {
    return new SalesReturnAncillaryParameters().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SalesReturnAncillaryParameters {
    return new SalesReturnAncillaryParameters().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SalesReturnAncillaryParameters {
    return new SalesReturnAncillaryParameters().fromJsonString(jsonString, options);
  }

  static equals(a: SalesReturnAncillaryParameters | PlainMessage<SalesReturnAncillaryParameters> | undefined, b: SalesReturnAncillaryParameters | PlainMessage<SalesReturnAncillaryParameters> | undefined): boolean {
    return proto3.util.equals(SalesReturnAncillaryParameters, a, b);
  }
}

/**
 *
 * Describes the parameters that are part of a standard response
 *
 * @generated from message Scailo.SalesReturn
 */
export class SalesReturn extends Message<SalesReturn> {
  /**
   * Stores a globally unique entity UUID. This will be set at the organization level
   *
   * @generated from field: string entity_uuid = 1;
   */
  entityUuid = "";

  /**
   * Stores the metadata of this sales return
   *
   * @generated from field: Scailo.EmployeeMetadata metadata = 2;
   */
  metadata?: EmployeeMetadata;

  /**
   * Stores the approval metadata
   *
   * @generated from field: Scailo.ApprovalMetadata approval_metadata = 3;
   */
  approvalMetadata?: ApprovalMetadata;

  /**
   * The status of this sales return
   *
   * @generated from field: Scailo.STANDARD_LIFECYCLE_STATUS status = 4;
   */
  status = STANDARD_LIFECYCLE_STATUS.ANY_UNSPECIFIED;

  /**
   * Stores the logs of every operation performed on this sales return
   *
   * @generated from field: repeated Scailo.LogbookLogConciseSLC logs = 5;
   */
  logs: LogbookLogConciseSLC[] = [];

  /**
   * The timestamp of when this sales return was marked as completed
   *
   * @generated from field: uint64 completed_on = 6;
   */
  completedOn = protoInt64.zero;

  /**
   * The associated vault folder ID
   *
   * @generated from field: uint64 vault_folder_id = 9;
   */
  vaultFolderId = protoInt64.zero;

  /**
   * The reference ID of the sales return
   *
   * @generated from field: string reference_id = 10;
   */
  referenceId = "";

  /**
   * The unique reference number that has been automatically generated
   *
   * @generated from field: string final_ref_number = 11;
   */
  finalRefNumber = "";

  /**
   * The associated reference
   *
   * @generated from field: Scailo.SALES_RETURN_REF_FROM ref_from = 12;
   */
  refFrom = SALES_RETURN_REF_FROM.SALES_RETURN_REF_FROM_ANY_UNSPECIFIED;

  /**
   * The associated ID of the reference
   *
   * @generated from field: uint64 ref_id = 13;
   */
  refId = protoInt64.zero;

  /**
   * The location ID of where the record is created
   *
   * @generated from field: uint64 location_id = 15;
   */
  locationId = protoInt64.zero;

  /**
   * The list of associated sales return items
   *
   * @generated from field: repeated Scailo.SalesReturnItem list = 20;
   */
  list: SalesReturnItem[] = [];

  /**
   * The list of dynamic forms
   *
   * @generated from field: repeated Scailo.FormFieldDatum form_data = 30;
   */
  formData: FormFieldDatum[] = [];

  constructor(data?: PartialMessage<SalesReturn>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.SalesReturn";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "entity_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "metadata", kind: "message", T: EmployeeMetadata },
    { no: 3, name: "approval_metadata", kind: "message", T: ApprovalMetadata },
    { no: 4, name: "status", kind: "enum", T: proto3.getEnumType(STANDARD_LIFECYCLE_STATUS) },
    { no: 5, name: "logs", kind: "message", T: LogbookLogConciseSLC, repeated: true },
    { no: 6, name: "completed_on", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 9, name: "vault_folder_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 10, name: "reference_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 11, name: "final_ref_number", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 12, name: "ref_from", kind: "enum", T: proto3.getEnumType(SALES_RETURN_REF_FROM) },
    { no: 13, name: "ref_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 15, name: "location_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 20, name: "list", kind: "message", T: SalesReturnItem, repeated: true },
    { no: 30, name: "form_data", kind: "message", T: FormFieldDatum, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SalesReturn {
    return new SalesReturn().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SalesReturn {
    return new SalesReturn().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SalesReturn {
    return new SalesReturn().fromJsonString(jsonString, options);
  }

  static equals(a: SalesReturn | PlainMessage<SalesReturn> | undefined, b: SalesReturn | PlainMessage<SalesReturn> | undefined): boolean {
    return proto3.util.equals(SalesReturn, a, b);
  }
}

/**
 *
 * Describes the parameters required to add an item to a sales return
 *
 * @generated from message Scailo.SalesReturnsServiceItemCreateRequest
 */
export class SalesReturnsServiceItemCreateRequest extends Message<SalesReturnsServiceItemCreateRequest> {
  /**
   * Stores any comment that the user might add during this operation
   *
   * @generated from field: string user_comment = 1;
   */
  userComment = "";

  /**
   * Stores the sales return ID
   *
   * @generated from field: uint64 sales_return_id = 10;
   */
  salesReturnId = protoInt64.zero;

  /**
   * Stores the family ID
   *
   * @generated from field: uint64 family_id = 11;
   */
  familyId = protoInt64.zero;

  /**
   * Stores the item hash to be dispatched
   *
   * @generated from field: string item_hash = 12;
   */
  itemHash = "";

  /**
   * The quantity (in cents) being dispatched in internal unit of material
   *
   * @generated from field: uint64 internal_quantity = 13;
   */
  internalQuantity = protoInt64.zero;

  /**
   * Stores the ID of the client's unit of material
   *
   * @generated from field: uint64 client_uom_id = 14;
   */
  clientUomId = protoInt64.zero;

  /**
   * Stores the quantity (in cents) being dispatched in client's unit of material
   *
   * @generated from field: uint64 client_quantity = 15;
   */
  clientQuantity = protoInt64.zero;

  constructor(data?: PartialMessage<SalesReturnsServiceItemCreateRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.SalesReturnsServiceItemCreateRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "user_comment", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 10, name: "sales_return_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 11, name: "family_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 12, name: "item_hash", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 13, name: "internal_quantity", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 14, name: "client_uom_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 15, name: "client_quantity", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SalesReturnsServiceItemCreateRequest {
    return new SalesReturnsServiceItemCreateRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SalesReturnsServiceItemCreateRequest {
    return new SalesReturnsServiceItemCreateRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SalesReturnsServiceItemCreateRequest {
    return new SalesReturnsServiceItemCreateRequest().fromJsonString(jsonString, options);
  }

  static equals(a: SalesReturnsServiceItemCreateRequest | PlainMessage<SalesReturnsServiceItemCreateRequest> | undefined, b: SalesReturnsServiceItemCreateRequest | PlainMessage<SalesReturnsServiceItemCreateRequest> | undefined): boolean {
    return proto3.util.equals(SalesReturnsServiceItemCreateRequest, a, b);
  }
}

/**
 *
 * Describes the parameters required to update an item in a sales return
 *
 * @generated from message Scailo.SalesReturnsServiceItemUpdateRequest
 */
export class SalesReturnsServiceItemUpdateRequest extends Message<SalesReturnsServiceItemUpdateRequest> {
  /**
   * Stores any comment that the user might add during this operation
   *
   * @generated from field: string user_comment = 1;
   */
  userComment = "";

  /**
   * The ID of the record
   *
   * @generated from field: uint64 id = 2;
   */
  id = protoInt64.zero;

  /**
   * Stores the item hash to be dispatched
   *
   * @generated from field: string item_hash = 12;
   */
  itemHash = "";

  /**
   * The quantity (in cents) being dispatched in internal unit of material
   *
   * @generated from field: uint64 internal_quantity = 13;
   */
  internalQuantity = protoInt64.zero;

  /**
   * Stores the ID of the client's unit of material
   *
   * @generated from field: uint64 client_uom_id = 14;
   */
  clientUomId = protoInt64.zero;

  /**
   * Stores the quantity (in cents) being dispatched in client's unit of material
   *
   * @generated from field: uint64 client_quantity = 15;
   */
  clientQuantity = protoInt64.zero;

  constructor(data?: PartialMessage<SalesReturnsServiceItemUpdateRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.SalesReturnsServiceItemUpdateRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "user_comment", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 12, name: "item_hash", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 13, name: "internal_quantity", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 14, name: "client_uom_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 15, name: "client_quantity", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SalesReturnsServiceItemUpdateRequest {
    return new SalesReturnsServiceItemUpdateRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SalesReturnsServiceItemUpdateRequest {
    return new SalesReturnsServiceItemUpdateRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SalesReturnsServiceItemUpdateRequest {
    return new SalesReturnsServiceItemUpdateRequest().fromJsonString(jsonString, options);
  }

  static equals(a: SalesReturnsServiceItemUpdateRequest | PlainMessage<SalesReturnsServiceItemUpdateRequest> | undefined, b: SalesReturnsServiceItemUpdateRequest | PlainMessage<SalesReturnsServiceItemUpdateRequest> | undefined): boolean {
    return proto3.util.equals(SalesReturnsServiceItemUpdateRequest, a, b);
  }
}

/**
 *
 * Describes the parameters that constitute an item associated to a sales return
 *
 * @generated from message Scailo.SalesReturnItem
 */
export class SalesReturnItem extends Message<SalesReturnItem> {
  /**
   * Stores a globally unique entity UUID. This will be set at the organization level
   *
   * @generated from field: string entity_uuid = 1;
   */
  entityUuid = "";

  /**
   * Stores the metadata of this sales return
   *
   * @generated from field: Scailo.EmployeeMetadata metadata = 2;
   */
  metadata?: EmployeeMetadata;

  /**
   * Stores the approval metadata
   *
   * @generated from field: Scailo.ApprovalMetadata approval_metadata = 3;
   */
  approvalMetadata?: ApprovalMetadata;

  /**
   * Denotes if this record requires approval (or has been approved)
   *
   * @generated from field: bool need_approval = 4;
   */
  needApproval = false;

  /**
   * Stores any comment that the user might have added during an operation
   *
   * @generated from field: string user_comment = 5;
   */
  userComment = "";

  /**
   * Stores the sales return ID
   *
   * @generated from field: uint64 sales_return_id = 10;
   */
  salesReturnId = protoInt64.zero;

  /**
   * Stores the family ID
   *
   * @generated from field: uint64 family_id = 11;
   */
  familyId = protoInt64.zero;

  /**
   * Stores the item hash to be dispatched
   *
   * @generated from field: string item_hash = 12;
   */
  itemHash = "";

  /**
   * The quantity (in cents) being dispatched in internal unit of material
   *
   * @generated from field: uint64 internal_quantity = 13;
   */
  internalQuantity = protoInt64.zero;

  /**
   * Stores the ID of the client's unit of material
   *
   * @generated from field: uint64 client_uom_id = 14;
   */
  clientUomId = protoInt64.zero;

  /**
   * Stores the quantity (in cents) being dispatched in client's unit of material
   *
   * @generated from field: uint64 client_quantity = 15;
   */
  clientQuantity = protoInt64.zero;

  constructor(data?: PartialMessage<SalesReturnItem>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.SalesReturnItem";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "entity_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "metadata", kind: "message", T: EmployeeMetadata },
    { no: 3, name: "approval_metadata", kind: "message", T: ApprovalMetadata },
    { no: 4, name: "need_approval", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 5, name: "user_comment", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 10, name: "sales_return_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 11, name: "family_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 12, name: "item_hash", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 13, name: "internal_quantity", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 14, name: "client_uom_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 15, name: "client_quantity", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SalesReturnItem {
    return new SalesReturnItem().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SalesReturnItem {
    return new SalesReturnItem().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SalesReturnItem {
    return new SalesReturnItem().fromJsonString(jsonString, options);
  }

  static equals(a: SalesReturnItem | PlainMessage<SalesReturnItem> | undefined, b: SalesReturnItem | PlainMessage<SalesReturnItem> | undefined): boolean {
    return proto3.util.equals(SalesReturnItem, a, b);
  }
}

/**
 *
 * Describes the message consisting of the list of sales returns
 *
 * @generated from message Scailo.SalesReturnsList
 */
export class SalesReturnsList extends Message<SalesReturnsList> {
  /**
   * List of records
   *
   * @generated from field: repeated Scailo.SalesReturn list = 1;
   */
  list: SalesReturn[] = [];

  constructor(data?: PartialMessage<SalesReturnsList>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.SalesReturnsList";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "list", kind: "message", T: SalesReturn, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SalesReturnsList {
    return new SalesReturnsList().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SalesReturnsList {
    return new SalesReturnsList().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SalesReturnsList {
    return new SalesReturnsList().fromJsonString(jsonString, options);
  }

  static equals(a: SalesReturnsList | PlainMessage<SalesReturnsList> | undefined, b: SalesReturnsList | PlainMessage<SalesReturnsList> | undefined): boolean {
    return proto3.util.equals(SalesReturnsList, a, b);
  }
}

/**
 *
 * Describes the message consisting of the list of sales return items
 *
 * @generated from message Scailo.SalesReturnsItemsList
 */
export class SalesReturnsItemsList extends Message<SalesReturnsItemsList> {
  /**
   * List of records
   *
   * @generated from field: repeated Scailo.SalesReturnItem list = 1;
   */
  list: SalesReturnItem[] = [];

  constructor(data?: PartialMessage<SalesReturnsItemsList>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.SalesReturnsItemsList";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "list", kind: "message", T: SalesReturnItem, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SalesReturnsItemsList {
    return new SalesReturnsItemsList().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SalesReturnsItemsList {
    return new SalesReturnsItemsList().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SalesReturnsItemsList {
    return new SalesReturnsItemsList().fromJsonString(jsonString, options);
  }

  static equals(a: SalesReturnsItemsList | PlainMessage<SalesReturnsItemsList> | undefined, b: SalesReturnsItemsList | PlainMessage<SalesReturnsItemsList> | undefined): boolean {
    return proto3.util.equals(SalesReturnsItemsList, a, b);
  }
}

/**
 *
 * Describes the parameters that are required to retrieve the history of the record
 *
 * @generated from message Scailo.SalesReturnItemHistoryRequest
 */
export class SalesReturnItemHistoryRequest extends Message<SalesReturnItemHistoryRequest> {
  /**
   * Stores the sales return ID
   *
   * @generated from field: uint64 sales_return_id = 10;
   */
  salesReturnId = protoInt64.zero;

  /**
   * Stores the family ID
   *
   * @generated from field: uint64 family_id = 11;
   */
  familyId = protoInt64.zero;

  constructor(data?: PartialMessage<SalesReturnItemHistoryRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.SalesReturnItemHistoryRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 10, name: "sales_return_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 11, name: "family_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SalesReturnItemHistoryRequest {
    return new SalesReturnItemHistoryRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SalesReturnItemHistoryRequest {
    return new SalesReturnItemHistoryRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SalesReturnItemHistoryRequest {
    return new SalesReturnItemHistoryRequest().fromJsonString(jsonString, options);
  }

  static equals(a: SalesReturnItemHistoryRequest | PlainMessage<SalesReturnItemHistoryRequest> | undefined, b: SalesReturnItemHistoryRequest | PlainMessage<SalesReturnItemHistoryRequest> | undefined): boolean {
    return proto3.util.equals(SalesReturnItemHistoryRequest, a, b);
  }
}

/**
 *
 * Describes the parameters that are required to retrieve the info of a prospective sales return item
 *
 * @generated from message Scailo.SalesReturnItemProspectiveInfoRequest
 */
export class SalesReturnItemProspectiveInfoRequest extends Message<SalesReturnItemProspectiveInfoRequest> {
  /**
   * Stores the sales return ID
   *
   * @generated from field: uint64 sales_return_id = 10;
   */
  salesReturnId = protoInt64.zero;

  /**
   * Stores the family ID
   *
   * @generated from field: uint64 family_id = 11;
   */
  familyId = protoInt64.zero;

  constructor(data?: PartialMessage<SalesReturnItemProspectiveInfoRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.SalesReturnItemProspectiveInfoRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 10, name: "sales_return_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 11, name: "family_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SalesReturnItemProspectiveInfoRequest {
    return new SalesReturnItemProspectiveInfoRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SalesReturnItemProspectiveInfoRequest {
    return new SalesReturnItemProspectiveInfoRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SalesReturnItemProspectiveInfoRequest {
    return new SalesReturnItemProspectiveInfoRequest().fromJsonString(jsonString, options);
  }

  static equals(a: SalesReturnItemProspectiveInfoRequest | PlainMessage<SalesReturnItemProspectiveInfoRequest> | undefined, b: SalesReturnItemProspectiveInfoRequest | PlainMessage<SalesReturnItemProspectiveInfoRequest> | undefined): boolean {
    return proto3.util.equals(SalesReturnItemProspectiveInfoRequest, a, b);
  }
}

/**
 *
 * Describes the request payload to retrieve approved or unapproved items.
 *
 * @generated from message Scailo.SalesReturnItemsSearchRequest
 */
export class SalesReturnItemsSearchRequest extends Message<SalesReturnItemsSearchRequest> {
  /**
   * If true, then returns only active records. If false, then returns only inactive records
   *
   * @generated from field: Scailo.BOOL_FILTER is_active = 1;
   */
  isActive = BOOL_FILTER.BOOL_FILTER_ANY_UNSPECIFIED;

  /**
   * The number of records that need to be sent in the response. Returns all records if it is set to -1
   *
   * @generated from field: int64 count = 2;
   */
  count = protoInt64.zero;

  /**
   * The number that need to be offset by before fetching the records
   *
   * @generated from field: uint64 offset = 3;
   */
  offset = protoInt64.zero;

  /**
   * The sort order that is to be used to fetch the pagination response
   *
   * @generated from field: Scailo.SORT_ORDER sort_order = 4;
   */
  sortOrder = SORT_ORDER.ASCENDING_UNSPECIFIED;

  /**
   * The sort key that is to be used to fetch the pagination response
   *
   * @generated from field: Scailo.SALES_RETURN_ITEM_SORT_KEY sort_key = 5;
   */
  sortKey = SALES_RETURN_ITEM_SORT_KEY.SALES_RETURN_ITEM_SORT_KEY_ID_UNSPECIFIED;

  /**
   * The entity UUID that is to be used to filter records
   *
   * @generated from field: string entity_uuid = 6;
   */
  entityUuid = "";

  /**
   * The status of the items
   *
   * @generated from field: Scailo.SALES_RETURN_ITEM_STATUS status = 7;
   */
  status = SALES_RETURN_ITEM_STATUS.SALES_RETURN_ITEM_STATUS_ANY_UNSPECIFIED;

  /**
   * The start range of approved timestamp
   *
   * @generated from field: uint64 approved_on_start = 10;
   */
  approvedOnStart = protoInt64.zero;

  /**
   * The end range of approved timestamp
   *
   * @generated from field: uint64 approved_on_end = 11;
   */
  approvedOnEnd = protoInt64.zero;

  /**
   * The ID of the approver
   *
   * @generated from field: uint64 approved_by_user_id = 12;
   */
  approvedByUserId = protoInt64.zero;

  /**
   * The role ID of the approver
   *
   * @generated from field: uint64 approver_role_id = 13;
   */
  approverRoleId = protoInt64.zero;

  /**
   * The ID of the sales return
   *
   * @generated from field: uint64 sales_return_id = 20;
   */
  salesReturnId = protoInt64.zero;

  /**
   * The ID of the family
   *
   * @generated from field: uint64 family_id = 22;
   */
  familyId = protoInt64.zero;

  /**
   * Stores the item hash to be dispatched
   *
   * @generated from field: string item_hash = 23;
   */
  itemHash = "";

  /**
   * The ID of the client's unit of material
   *
   * @generated from field: uint64 client_uom_id = 24;
   */
  clientUomId = protoInt64.zero;

  /**
   * Describes the key with which the search operation needs to be performed
   *
   * @generated from field: string search_key = 40;
   */
  searchKey = "";

  constructor(data?: PartialMessage<SalesReturnItemsSearchRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.SalesReturnItemsSearchRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "is_active", kind: "enum", T: proto3.getEnumType(BOOL_FILTER) },
    { no: 2, name: "count", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "offset", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 4, name: "sort_order", kind: "enum", T: proto3.getEnumType(SORT_ORDER) },
    { no: 5, name: "sort_key", kind: "enum", T: proto3.getEnumType(SALES_RETURN_ITEM_SORT_KEY) },
    { no: 6, name: "entity_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 7, name: "status", kind: "enum", T: proto3.getEnumType(SALES_RETURN_ITEM_STATUS) },
    { no: 10, name: "approved_on_start", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 11, name: "approved_on_end", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 12, name: "approved_by_user_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 13, name: "approver_role_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 20, name: "sales_return_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 22, name: "family_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 23, name: "item_hash", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 24, name: "client_uom_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 40, name: "search_key", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SalesReturnItemsSearchRequest {
    return new SalesReturnItemsSearchRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SalesReturnItemsSearchRequest {
    return new SalesReturnItemsSearchRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SalesReturnItemsSearchRequest {
    return new SalesReturnItemsSearchRequest().fromJsonString(jsonString, options);
  }

  static equals(a: SalesReturnItemsSearchRequest | PlainMessage<SalesReturnItemsSearchRequest> | undefined, b: SalesReturnItemsSearchRequest | PlainMessage<SalesReturnItemsSearchRequest> | undefined): boolean {
    return proto3.util.equals(SalesReturnItemsSearchRequest, a, b);
  }
}

/**
 *
 * Describes the response to a pagination items request
 *
 * @generated from message Scailo.SalesReturnsServicePaginatedItemsResponse
 */
export class SalesReturnsServicePaginatedItemsResponse extends Message<SalesReturnsServicePaginatedItemsResponse> {
  /**
   * The number of records in this payload
   *
   * @generated from field: uint64 count = 1;
   */
  count = protoInt64.zero;

  /**
   * The number that has been offset before fetching the records. This is the same value that has been sent as part of the pagination request
   *
   * @generated from field: uint64 offset = 2;
   */
  offset = protoInt64.zero;

  /**
   * The total number of records that are available
   *
   * @generated from field: uint64 total = 3;
   */
  total = protoInt64.zero;

  /**
   * The list of records
   *
   * @generated from field: repeated Scailo.SalesReturnItem payload = 4;
   */
  payload: SalesReturnItem[] = [];

  constructor(data?: PartialMessage<SalesReturnsServicePaginatedItemsResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.SalesReturnsServicePaginatedItemsResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "count", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 2, name: "offset", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 3, name: "total", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 4, name: "payload", kind: "message", T: SalesReturnItem, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SalesReturnsServicePaginatedItemsResponse {
    return new SalesReturnsServicePaginatedItemsResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SalesReturnsServicePaginatedItemsResponse {
    return new SalesReturnsServicePaginatedItemsResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SalesReturnsServicePaginatedItemsResponse {
    return new SalesReturnsServicePaginatedItemsResponse().fromJsonString(jsonString, options);
  }

  static equals(a: SalesReturnsServicePaginatedItemsResponse | PlainMessage<SalesReturnsServicePaginatedItemsResponse> | undefined, b: SalesReturnsServicePaginatedItemsResponse | PlainMessage<SalesReturnsServicePaginatedItemsResponse> | undefined): boolean {
    return proto3.util.equals(SalesReturnsServicePaginatedItemsResponse, a, b);
  }
}

/**
 *
 * Describes the request payload to retrieve the quantity that has already been added for the specific ref_from, ref_id and family_id
 *
 * @generated from message Scailo.SalesReturnsServiceAlreadyAddedQuantityForSourceRequest
 */
export class SalesReturnsServiceAlreadyAddedQuantityForSourceRequest extends Message<SalesReturnsServiceAlreadyAddedQuantityForSourceRequest> {
  /**
   * The associated reference
   *
   * @generated from field: Scailo.SALES_RETURN_REF_FROM ref_from = 1;
   */
  refFrom = SALES_RETURN_REF_FROM.SALES_RETURN_REF_FROM_ANY_UNSPECIFIED;

  /**
   * The associated ID of the reference
   *
   * @generated from field: uint64 ref_id = 2;
   */
  refId = protoInt64.zero;

  /**
   * The associated family ID
   *
   * @generated from field: uint64 family_id = 3;
   */
  familyId = protoInt64.zero;

  constructor(data?: PartialMessage<SalesReturnsServiceAlreadyAddedQuantityForSourceRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.SalesReturnsServiceAlreadyAddedQuantityForSourceRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "ref_from", kind: "enum", T: proto3.getEnumType(SALES_RETURN_REF_FROM) },
    { no: 2, name: "ref_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 3, name: "family_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SalesReturnsServiceAlreadyAddedQuantityForSourceRequest {
    return new SalesReturnsServiceAlreadyAddedQuantityForSourceRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SalesReturnsServiceAlreadyAddedQuantityForSourceRequest {
    return new SalesReturnsServiceAlreadyAddedQuantityForSourceRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SalesReturnsServiceAlreadyAddedQuantityForSourceRequest {
    return new SalesReturnsServiceAlreadyAddedQuantityForSourceRequest().fromJsonString(jsonString, options);
  }

  static equals(a: SalesReturnsServiceAlreadyAddedQuantityForSourceRequest | PlainMessage<SalesReturnsServiceAlreadyAddedQuantityForSourceRequest> | undefined, b: SalesReturnsServiceAlreadyAddedQuantityForSourceRequest | PlainMessage<SalesReturnsServiceAlreadyAddedQuantityForSourceRequest> | undefined): boolean {
    return proto3.util.equals(SalesReturnsServiceAlreadyAddedQuantityForSourceRequest, a, b);
  }
}

/**
 *
 * Describes a pagination request to retrieve records
 *
 * @generated from message Scailo.SalesReturnsServicePaginationReq
 */
export class SalesReturnsServicePaginationReq extends Message<SalesReturnsServicePaginationReq> {
  /**
   * If true, then returns only active records. If false, then returns only inactive records
   *
   * @generated from field: Scailo.BOOL_FILTER is_active = 1;
   */
  isActive = BOOL_FILTER.BOOL_FILTER_ANY_UNSPECIFIED;

  /**
   * The number of records that need to be sent in the response
   *
   * @generated from field: int64 count = 2;
   */
  count = protoInt64.zero;

  /**
   * The number that need to be offset by before fetching the records
   *
   * @generated from field: uint64 offset = 3;
   */
  offset = protoInt64.zero;

  /**
   * The sort order that is to be used to fetch the pagination response
   *
   * @generated from field: Scailo.SORT_ORDER sort_order = 4;
   */
  sortOrder = SORT_ORDER.ASCENDING_UNSPECIFIED;

  /**
   * The sort key that is to be used to fetch the pagination response
   *
   * @generated from field: Scailo.SALES_RETURN_SORT_KEY sort_key = 5;
   */
  sortKey = SALES_RETURN_SORT_KEY.SALES_RETURN_SORT_KEY_ID_UNSPECIFIED;

  /**
   * The status of this sales return
   *
   * @generated from field: Scailo.STANDARD_LIFECYCLE_STATUS status = 6;
   */
  status = STANDARD_LIFECYCLE_STATUS.ANY_UNSPECIFIED;

  constructor(data?: PartialMessage<SalesReturnsServicePaginationReq>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.SalesReturnsServicePaginationReq";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "is_active", kind: "enum", T: proto3.getEnumType(BOOL_FILTER) },
    { no: 2, name: "count", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "offset", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 4, name: "sort_order", kind: "enum", T: proto3.getEnumType(SORT_ORDER) },
    { no: 5, name: "sort_key", kind: "enum", T: proto3.getEnumType(SALES_RETURN_SORT_KEY) },
    { no: 6, name: "status", kind: "enum", T: proto3.getEnumType(STANDARD_LIFECYCLE_STATUS) },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SalesReturnsServicePaginationReq {
    return new SalesReturnsServicePaginationReq().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SalesReturnsServicePaginationReq {
    return new SalesReturnsServicePaginationReq().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SalesReturnsServicePaginationReq {
    return new SalesReturnsServicePaginationReq().fromJsonString(jsonString, options);
  }

  static equals(a: SalesReturnsServicePaginationReq | PlainMessage<SalesReturnsServicePaginationReq> | undefined, b: SalesReturnsServicePaginationReq | PlainMessage<SalesReturnsServicePaginationReq> | undefined): boolean {
    return proto3.util.equals(SalesReturnsServicePaginationReq, a, b);
  }
}

/**
 *
 * Describes the response to a pagination request
 *
 * @generated from message Scailo.SalesReturnsServicePaginationResponse
 */
export class SalesReturnsServicePaginationResponse extends Message<SalesReturnsServicePaginationResponse> {
  /**
   * The number of records in this payload
   *
   * @generated from field: uint64 count = 1;
   */
  count = protoInt64.zero;

  /**
   * The number that has been offset before fetching the records. This is the same value that has been sent as part of the pagination request
   *
   * @generated from field: uint64 offset = 2;
   */
  offset = protoInt64.zero;

  /**
   * The total number of records that are available
   *
   * @generated from field: uint64 total = 3;
   */
  total = protoInt64.zero;

  /**
   * The list of records
   *
   * @generated from field: repeated Scailo.SalesReturn payload = 4;
   */
  payload: SalesReturn[] = [];

  constructor(data?: PartialMessage<SalesReturnsServicePaginationResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.SalesReturnsServicePaginationResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "count", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 2, name: "offset", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 3, name: "total", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 4, name: "payload", kind: "message", T: SalesReturn, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SalesReturnsServicePaginationResponse {
    return new SalesReturnsServicePaginationResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SalesReturnsServicePaginationResponse {
    return new SalesReturnsServicePaginationResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SalesReturnsServicePaginationResponse {
    return new SalesReturnsServicePaginationResponse().fromJsonString(jsonString, options);
  }

  static equals(a: SalesReturnsServicePaginationResponse | PlainMessage<SalesReturnsServicePaginationResponse> | undefined, b: SalesReturnsServicePaginationResponse | PlainMessage<SalesReturnsServicePaginationResponse> | undefined): boolean {
    return proto3.util.equals(SalesReturnsServicePaginationResponse, a, b);
  }
}

/**
 *
 * Describes the base request payload of a filter search
 *
 * @generated from message Scailo.SalesReturnsServiceFilterReq
 */
export class SalesReturnsServiceFilterReq extends Message<SalesReturnsServiceFilterReq> {
  /**
   * If true, then returns only active records. If false, then returns only inactive records
   *
   * @generated from field: Scailo.BOOL_FILTER is_active = 1;
   */
  isActive = BOOL_FILTER.BOOL_FILTER_ANY_UNSPECIFIED;

  /**
   * The number of records that need to be sent in the response. Returns all records if it is set to -1
   *
   * @generated from field: int64 count = 2;
   */
  count = protoInt64.zero;

  /**
   * The number that need to be offset by before fetching the records
   *
   * @generated from field: uint64 offset = 3;
   */
  offset = protoInt64.zero;

  /**
   * The sort order that is to be used to fetch the pagination response
   *
   * @generated from field: Scailo.SORT_ORDER sort_order = 4;
   */
  sortOrder = SORT_ORDER.ASCENDING_UNSPECIFIED;

  /**
   * The sort key that is to be used to fetch the pagination response
   *
   * @generated from field: Scailo.SALES_RETURN_SORT_KEY sort_key = 5;
   */
  sortKey = SALES_RETURN_SORT_KEY.SALES_RETURN_SORT_KEY_ID_UNSPECIFIED;

  /**
   * The minimum timestamp that needs to be considered to filter by creation
   *
   * @generated from field: uint64 creation_timestamp_start = 101;
   */
  creationTimestampStart = protoInt64.zero;

  /**
   * The maximum timestamp that needs to be considered to filter by creation
   *
   * @generated from field: uint64 creation_timestamp_end = 102;
   */
  creationTimestampEnd = protoInt64.zero;

  /**
   * The minimum timestamp that needs to be considered to filter by modification
   *
   * @generated from field: uint64 modification_timestamp_start = 103;
   */
  modificationTimestampStart = protoInt64.zero;

  /**
   * The maximum timestamp that needs to be considered to filter by modification
   *
   * @generated from field: uint64 modification_timestamp_end = 104;
   */
  modificationTimestampEnd = protoInt64.zero;

  /**
   * The entity UUID that is to be used to filter records
   *
   * @generated from field: string entity_uuid = 8;
   */
  entityUuid = "";

  /**
   * The status of this sales return
   *
   * @generated from field: Scailo.STANDARD_LIFECYCLE_STATUS status = 10;
   */
  status = STANDARD_LIFECYCLE_STATUS.ANY_UNSPECIFIED;

  /**
   * The start range of approved timestamp
   *
   * @generated from field: uint64 approved_on_start = 11;
   */
  approvedOnStart = protoInt64.zero;

  /**
   * The end range of approved timestamp
   *
   * @generated from field: uint64 approved_on_end = 12;
   */
  approvedOnEnd = protoInt64.zero;

  /**
   * The ID of the approver
   *
   * @generated from field: uint64 approved_by_user_id = 13;
   */
  approvedByUserId = protoInt64.zero;

  /**
   * The role ID of the approver
   *
   * @generated from field: uint64 approver_role_id = 14;
   */
  approverRoleId = protoInt64.zero;

  /**
   * The start range of completed timestamp
   *
   * @generated from field: uint64 completed_on_start = 15;
   */
  completedOnStart = protoInt64.zero;

  /**
   * The end range of completed timestamp
   *
   * @generated from field: uint64 completed_on_end = 16;
   */
  completedOnEnd = protoInt64.zero;

  /**
   * The reference ID of the sales return
   *
   * @generated from field: string reference_id = 20;
   */
  referenceId = "";

  /**
   * The unique reference number that has been automatically generated
   *
   * @generated from field: string final_ref_number = 21;
   */
  finalRefNumber = "";

  /**
   * The associated reference
   *
   * @generated from field: Scailo.SALES_RETURN_REF_FROM ref_from = 22;
   */
  refFrom = SALES_RETURN_REF_FROM.SALES_RETURN_REF_FROM_ANY_UNSPECIFIED;

  /**
   * The associated ID of the reference
   *
   * @generated from field: uint64 ref_id = 23;
   */
  refId = protoInt64.zero;

  /**
   * The location ID of where the record is created
   *
   * @generated from field: uint64 location_id = 25;
   */
  locationId = protoInt64.zero;

  /**
   * The status of the sales return bill
   *
   * @generated from field: Scailo.SALES_RETURN_BILLING_STATUS billing_status = 40;
   */
  billingStatus = SALES_RETURN_BILLING_STATUS.SALES_RETURN_BILLING_STATUS_ANY_UNSPECIFIED;

  /**
   * The ID of the family
   *
   * @generated from field: uint64 family_id = 50;
   */
  familyId = protoInt64.zero;

  /**
   * Sales Order related filters
   * The associated consignee client ID of the linked sales order
   *
   * @generated from field: uint64 consignee_client_id = 60;
   */
  consigneeClientId = protoInt64.zero;

  /**
   * The associated buyer client ID of the linked sales order
   *
   * @generated from field: uint64 buyer_client_id = 61;
   */
  buyerClientId = protoInt64.zero;

  /**
   * The ID of the associated project of the linked sales order
   *
   * @generated from field: uint64 project_id = 62;
   */
  projectId = protoInt64.zero;

  /**
   * The list of form data filters
   *
   * @generated from field: repeated Scailo.FormFieldDatumFilterRequest form_data = 500;
   */
  formData: FormFieldDatumFilterRequest[] = [];

  constructor(data?: PartialMessage<SalesReturnsServiceFilterReq>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.SalesReturnsServiceFilterReq";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "is_active", kind: "enum", T: proto3.getEnumType(BOOL_FILTER) },
    { no: 2, name: "count", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "offset", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 4, name: "sort_order", kind: "enum", T: proto3.getEnumType(SORT_ORDER) },
    { no: 5, name: "sort_key", kind: "enum", T: proto3.getEnumType(SALES_RETURN_SORT_KEY) },
    { no: 101, name: "creation_timestamp_start", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 102, name: "creation_timestamp_end", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 103, name: "modification_timestamp_start", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 104, name: "modification_timestamp_end", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 8, name: "entity_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 10, name: "status", kind: "enum", T: proto3.getEnumType(STANDARD_LIFECYCLE_STATUS) },
    { no: 11, name: "approved_on_start", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 12, name: "approved_on_end", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 13, name: "approved_by_user_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 14, name: "approver_role_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 15, name: "completed_on_start", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 16, name: "completed_on_end", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 20, name: "reference_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 21, name: "final_ref_number", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 22, name: "ref_from", kind: "enum", T: proto3.getEnumType(SALES_RETURN_REF_FROM) },
    { no: 23, name: "ref_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 25, name: "location_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 40, name: "billing_status", kind: "enum", T: proto3.getEnumType(SALES_RETURN_BILLING_STATUS) },
    { no: 50, name: "family_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 60, name: "consignee_client_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 61, name: "buyer_client_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 62, name: "project_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 500, name: "form_data", kind: "message", T: FormFieldDatumFilterRequest, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SalesReturnsServiceFilterReq {
    return new SalesReturnsServiceFilterReq().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SalesReturnsServiceFilterReq {
    return new SalesReturnsServiceFilterReq().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SalesReturnsServiceFilterReq {
    return new SalesReturnsServiceFilterReq().fromJsonString(jsonString, options);
  }

  static equals(a: SalesReturnsServiceFilterReq | PlainMessage<SalesReturnsServiceFilterReq> | undefined, b: SalesReturnsServiceFilterReq | PlainMessage<SalesReturnsServiceFilterReq> | undefined): boolean {
    return proto3.util.equals(SalesReturnsServiceFilterReq, a, b);
  }
}

/**
 *
 * Describes the base request payload of a count search
 *
 * @generated from message Scailo.SalesReturnsServiceCountReq
 */
export class SalesReturnsServiceCountReq extends Message<SalesReturnsServiceCountReq> {
  /**
   * If true, then returns only active records. If false, then returns only inactive records
   *
   * @generated from field: Scailo.BOOL_FILTER is_active = 1;
   */
  isActive = BOOL_FILTER.BOOL_FILTER_ANY_UNSPECIFIED;

  /**
   * The minimum timestamp that needs to be considered to filter by creation
   *
   * @generated from field: uint64 creation_timestamp_start = 101;
   */
  creationTimestampStart = protoInt64.zero;

  /**
   * The maximum timestamp that needs to be considered to filter by creation
   *
   * @generated from field: uint64 creation_timestamp_end = 102;
   */
  creationTimestampEnd = protoInt64.zero;

  /**
   * The minimum timestamp that needs to be considered to filter by modification
   *
   * @generated from field: uint64 modification_timestamp_start = 103;
   */
  modificationTimestampStart = protoInt64.zero;

  /**
   * The maximum timestamp that needs to be considered to filter by modification
   *
   * @generated from field: uint64 modification_timestamp_end = 104;
   */
  modificationTimestampEnd = protoInt64.zero;

  /**
   * The entity UUID that is to be used to filter records
   *
   * @generated from field: string entity_uuid = 8;
   */
  entityUuid = "";

  /**
   * The status of this sales return
   *
   * @generated from field: Scailo.STANDARD_LIFECYCLE_STATUS status = 10;
   */
  status = STANDARD_LIFECYCLE_STATUS.ANY_UNSPECIFIED;

  /**
   * The start range of approved timestamp
   *
   * @generated from field: uint64 approved_on_start = 11;
   */
  approvedOnStart = protoInt64.zero;

  /**
   * The end range of approved timestamp
   *
   * @generated from field: uint64 approved_on_end = 12;
   */
  approvedOnEnd = protoInt64.zero;

  /**
   * The ID of the approver
   *
   * @generated from field: uint64 approved_by_user_id = 13;
   */
  approvedByUserId = protoInt64.zero;

  /**
   * The role ID of the approver
   *
   * @generated from field: uint64 approver_role_id = 14;
   */
  approverRoleId = protoInt64.zero;

  /**
   * The start range of completed timestamp
   *
   * @generated from field: uint64 completed_on_start = 15;
   */
  completedOnStart = protoInt64.zero;

  /**
   * The end range of completed timestamp
   *
   * @generated from field: uint64 completed_on_end = 16;
   */
  completedOnEnd = protoInt64.zero;

  /**
   * The reference ID of the sales return
   *
   * @generated from field: string reference_id = 20;
   */
  referenceId = "";

  /**
   * The unique reference number that has been automatically generated
   *
   * @generated from field: string final_ref_number = 21;
   */
  finalRefNumber = "";

  /**
   * The associated reference
   *
   * @generated from field: Scailo.SALES_RETURN_REF_FROM ref_from = 22;
   */
  refFrom = SALES_RETURN_REF_FROM.SALES_RETURN_REF_FROM_ANY_UNSPECIFIED;

  /**
   * The associated ID of the reference
   *
   * @generated from field: uint64 ref_id = 23;
   */
  refId = protoInt64.zero;

  /**
   * The location ID of where the record is created
   *
   * @generated from field: uint64 location_id = 25;
   */
  locationId = protoInt64.zero;

  /**
   * The status of the sales return bill
   *
   * @generated from field: Scailo.SALES_RETURN_BILLING_STATUS billing_status = 40;
   */
  billingStatus = SALES_RETURN_BILLING_STATUS.SALES_RETURN_BILLING_STATUS_ANY_UNSPECIFIED;

  /**
   * The ID of the family
   *
   * @generated from field: uint64 family_id = 50;
   */
  familyId = protoInt64.zero;

  /**
   * Sales Order related filters
   * The associated consignee client ID of the linked sales order
   *
   * @generated from field: uint64 consignee_client_id = 60;
   */
  consigneeClientId = protoInt64.zero;

  /**
   * The associated buyer client ID of the linked sales order
   *
   * @generated from field: uint64 buyer_client_id = 61;
   */
  buyerClientId = protoInt64.zero;

  /**
   * The ID of the associated project of the linked sales order
   *
   * @generated from field: uint64 project_id = 62;
   */
  projectId = protoInt64.zero;

  /**
   * The list of form data filters
   *
   * @generated from field: repeated Scailo.FormFieldDatumFilterRequest form_data = 500;
   */
  formData: FormFieldDatumFilterRequest[] = [];

  constructor(data?: PartialMessage<SalesReturnsServiceCountReq>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.SalesReturnsServiceCountReq";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "is_active", kind: "enum", T: proto3.getEnumType(BOOL_FILTER) },
    { no: 101, name: "creation_timestamp_start", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 102, name: "creation_timestamp_end", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 103, name: "modification_timestamp_start", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 104, name: "modification_timestamp_end", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 8, name: "entity_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 10, name: "status", kind: "enum", T: proto3.getEnumType(STANDARD_LIFECYCLE_STATUS) },
    { no: 11, name: "approved_on_start", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 12, name: "approved_on_end", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 13, name: "approved_by_user_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 14, name: "approver_role_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 15, name: "completed_on_start", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 16, name: "completed_on_end", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 20, name: "reference_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 21, name: "final_ref_number", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 22, name: "ref_from", kind: "enum", T: proto3.getEnumType(SALES_RETURN_REF_FROM) },
    { no: 23, name: "ref_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 25, name: "location_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 40, name: "billing_status", kind: "enum", T: proto3.getEnumType(SALES_RETURN_BILLING_STATUS) },
    { no: 50, name: "family_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 60, name: "consignee_client_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 61, name: "buyer_client_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 62, name: "project_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 500, name: "form_data", kind: "message", T: FormFieldDatumFilterRequest, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SalesReturnsServiceCountReq {
    return new SalesReturnsServiceCountReq().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SalesReturnsServiceCountReq {
    return new SalesReturnsServiceCountReq().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SalesReturnsServiceCountReq {
    return new SalesReturnsServiceCountReq().fromJsonString(jsonString, options);
  }

  static equals(a: SalesReturnsServiceCountReq | PlainMessage<SalesReturnsServiceCountReq> | undefined, b: SalesReturnsServiceCountReq | PlainMessage<SalesReturnsServiceCountReq> | undefined): boolean {
    return proto3.util.equals(SalesReturnsServiceCountReq, a, b);
  }
}

/**
 *
 * Describes the request payload for performing a generic search operation on records
 *
 * @generated from message Scailo.SalesReturnsServiceSearchAllReq
 */
export class SalesReturnsServiceSearchAllReq extends Message<SalesReturnsServiceSearchAllReq> {
  /**
   * If true, then returns only active records. If false, then returns only inactive records
   *
   * @generated from field: Scailo.BOOL_FILTER is_active = 1;
   */
  isActive = BOOL_FILTER.BOOL_FILTER_ANY_UNSPECIFIED;

  /**
   * The number of records that need to be sent in the response. Returns all records if it is set to -1
   *
   * @generated from field: int64 count = 2;
   */
  count = protoInt64.zero;

  /**
   * The number that need to be offset by before fetching the records
   *
   * @generated from field: uint64 offset = 3;
   */
  offset = protoInt64.zero;

  /**
   * The sort order that is to be used to fetch the pagination response
   *
   * @generated from field: Scailo.SORT_ORDER sort_order = 4;
   */
  sortOrder = SORT_ORDER.ASCENDING_UNSPECIFIED;

  /**
   * The sort key that is to be used to fetch the pagination response
   *
   * @generated from field: Scailo.SALES_RETURN_SORT_KEY sort_key = 5;
   */
  sortKey = SALES_RETURN_SORT_KEY.SALES_RETURN_SORT_KEY_ID_UNSPECIFIED;

  /**
   * The entity UUID that is to be used to filter records
   *
   * @generated from field: string entity_uuid = 6;
   */
  entityUuid = "";

  /**
   * Limit the search space to the given status
   *
   * @generated from field: Scailo.STANDARD_LIFECYCLE_STATUS status = 10;
   */
  status = STANDARD_LIFECYCLE_STATUS.ANY_UNSPECIFIED;

  /**
   * Describes the key with which the search operation needs to be performed
   *
   * @generated from field: string search_key = 11;
   */
  searchKey = "";

  /**
   * The associated reference
   *
   * @generated from field: Scailo.SALES_RETURN_REF_FROM ref_from = 22;
   */
  refFrom = SALES_RETURN_REF_FROM.SALES_RETURN_REF_FROM_ANY_UNSPECIFIED;

  /**
   * The associated ID of the reference
   *
   * @generated from field: uint64 ref_id = 23;
   */
  refId = protoInt64.zero;

  /**
   * The status of the sales return bill
   *
   * @generated from field: Scailo.SALES_RETURN_BILLING_STATUS billing_status = 40;
   */
  billingStatus = SALES_RETURN_BILLING_STATUS.SALES_RETURN_BILLING_STATUS_ANY_UNSPECIFIED;

  /**
   * Sales Order related filters
   * The associated consignee client ID of the linked sales order
   *
   * @generated from field: uint64 consignee_client_id = 60;
   */
  consigneeClientId = protoInt64.zero;

  /**
   * The associated buyer client ID of the linked sales order
   *
   * @generated from field: uint64 buyer_client_id = 61;
   */
  buyerClientId = protoInt64.zero;

  constructor(data?: PartialMessage<SalesReturnsServiceSearchAllReq>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.SalesReturnsServiceSearchAllReq";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "is_active", kind: "enum", T: proto3.getEnumType(BOOL_FILTER) },
    { no: 2, name: "count", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "offset", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 4, name: "sort_order", kind: "enum", T: proto3.getEnumType(SORT_ORDER) },
    { no: 5, name: "sort_key", kind: "enum", T: proto3.getEnumType(SALES_RETURN_SORT_KEY) },
    { no: 6, name: "entity_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 10, name: "status", kind: "enum", T: proto3.getEnumType(STANDARD_LIFECYCLE_STATUS) },
    { no: 11, name: "search_key", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 22, name: "ref_from", kind: "enum", T: proto3.getEnumType(SALES_RETURN_REF_FROM) },
    { no: 23, name: "ref_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 40, name: "billing_status", kind: "enum", T: proto3.getEnumType(SALES_RETURN_BILLING_STATUS) },
    { no: 60, name: "consignee_client_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 61, name: "buyer_client_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SalesReturnsServiceSearchAllReq {
    return new SalesReturnsServiceSearchAllReq().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SalesReturnsServiceSearchAllReq {
    return new SalesReturnsServiceSearchAllReq().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SalesReturnsServiceSearchAllReq {
    return new SalesReturnsServiceSearchAllReq().fromJsonString(jsonString, options);
  }

  static equals(a: SalesReturnsServiceSearchAllReq | PlainMessage<SalesReturnsServiceSearchAllReq> | undefined, b: SalesReturnsServiceSearchAllReq | PlainMessage<SalesReturnsServiceSearchAllReq> | undefined): boolean {
    return proto3.util.equals(SalesReturnsServiceSearchAllReq, a, b);
  }
}

