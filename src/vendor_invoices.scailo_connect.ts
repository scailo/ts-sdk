// @generated by protoc-gen-connect-es v0.12.0 with parameter "target=ts"
// @generated from file vendor_invoices.scailo.proto (package Scailo, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { VendorInvoice, VendorInvoiceAncillaryParameters, VendorInvoiceItem, VendorInvoiceItemHistoryRequest, VendorInvoiceItemProspectiveInfoRequest, VendorInvoiceItemsList, VendorInvoiceItemsSearchRequest, VendorInvoiceReceiptStatisticsList, VendorInvoiceReference, VendorInvoiceReferencesList, VendorInvoicesList, VendorInvoicesServiceAlreadyAddedQuantityForSourceRequest, VendorInvoicesServiceAutofillRequest, VendorInvoicesServiceCountReq, VendorInvoicesServiceCreateRequest, VendorInvoicesServiceFilterReq, VendorInvoicesServiceItemCreateRequest, VendorInvoicesServiceItemUpdateRequest, VendorInvoicesServicePaginatedItemsResponse, VendorInvoicesServicePaginationReq, VendorInvoicesServicePaginationResponse, VendorInvoicesServiceReferenceCreateRequest, VendorInvoicesServiceSearchAllReq, VendorInvoicesServiceUpdateRequest } from "./vendor_invoices.scailo_pb.js";
import { ActiveStatus, BooleanResponse, CountInSLCStatusRequest, CountResponse, DualQuantitiesResponse, Identifier, IdentifierResponse, IdentifiersList, IdentifierUUID, IdentifierUUIDWithFile, IdentifierUUIDWithUserComment, IdentifierWithEmailAttributes, IdentifierWithSearchKey, IdentifierWithUserComment, ReorderItemsRequest, StandardFile, SumResponse } from "./base.scailo_pb.js";
import { MethodKind } from "@bufbuild/protobuf";
import { FamiliesList, FilterFamiliesReqForIdentifier } from "./families.scailo_pb.js";

/**
 *
 * Describes the common methods applicable on each vendor invoice
 *
 * @generated from service Scailo.VendorInvoicesService
 */
export const VendorInvoicesService = {
  typeName: "Scailo.VendorInvoicesService",
  methods: {
    /**
     * Create and send for verification
     *
     * @generated from rpc Scailo.VendorInvoicesService.Create
     */
    create: {
      name: "Create",
      I: VendorInvoicesServiceCreateRequest,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Create and save as draft
     *
     * @generated from rpc Scailo.VendorInvoicesService.Draft
     */
    draft: {
      name: "Draft",
      I: VendorInvoicesServiceCreateRequest,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Update draft
     *
     * @generated from rpc Scailo.VendorInvoicesService.DraftUpdate
     */
    draftUpdate: {
      name: "DraftUpdate",
      I: VendorInvoicesServiceUpdateRequest,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Send for verification
     *
     * @generated from rpc Scailo.VendorInvoicesService.SendForVerification
     */
    sendForVerification: {
      name: "SendForVerification",
      I: IdentifierUUIDWithUserComment,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Verify
     *
     * @generated from rpc Scailo.VendorInvoicesService.Verify
     */
    verify: {
      name: "Verify",
      I: IdentifierUUIDWithUserComment,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Approve
     *
     * @generated from rpc Scailo.VendorInvoicesService.Approve
     */
    approve: {
      name: "Approve",
      I: IdentifierUUIDWithUserComment,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Send For Revision
     *
     * @generated from rpc Scailo.VendorInvoicesService.SendForRevision
     */
    sendForRevision: {
      name: "SendForRevision",
      I: IdentifierUUIDWithUserComment,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Update revision
     *
     * @generated from rpc Scailo.VendorInvoicesService.RevisionUpdate
     */
    revisionUpdate: {
      name: "RevisionUpdate",
      I: VendorInvoicesServiceUpdateRequest,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Halt
     *
     * @generated from rpc Scailo.VendorInvoicesService.Halt
     */
    halt: {
      name: "Halt",
      I: IdentifierUUIDWithUserComment,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Discard
     *
     * @generated from rpc Scailo.VendorInvoicesService.Discard
     */
    discard: {
      name: "Discard",
      I: IdentifierUUIDWithUserComment,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Restore
     *
     * @generated from rpc Scailo.VendorInvoicesService.Restore
     */
    restore: {
      name: "Restore",
      I: IdentifierUUIDWithUserComment,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Complete
     *
     * @generated from rpc Scailo.VendorInvoicesService.Complete
     */
    complete: {
      name: "Complete",
      I: IdentifierUUIDWithUserComment,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Repeat
     *
     * @generated from rpc Scailo.VendorInvoicesService.Repeat
     */
    repeat: {
      name: "Repeat",
      I: IdentifierUUIDWithUserComment,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Reopen
     *
     * @generated from rpc Scailo.VendorInvoicesService.Reopen
     */
    reopen: {
      name: "Reopen",
      I: IdentifierUUIDWithUserComment,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Add comment
     *
     * @generated from rpc Scailo.VendorInvoicesService.CommentAdd
     */
    commentAdd: {
      name: "CommentAdd",
      I: IdentifierUUIDWithUserComment,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Send Email
     *
     * @generated from rpc Scailo.VendorInvoicesService.SendEmail
     */
    sendEmail: {
      name: "SendEmail",
      I: IdentifierWithEmailAttributes,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Autofill the vendor invoice
     *
     * @generated from rpc Scailo.VendorInvoicesService.Autofill
     */
    autofill: {
      name: "Autofill",
      I: VendorInvoicesServiceAutofillRequest,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Checks if all the material has been admitted to store
     *
     * @generated from rpc Scailo.VendorInvoicesService.IsAdmittedToStore
     */
    isAdmittedToStore: {
      name: "IsAdmittedToStore",
      I: IdentifierUUID,
      O: BooleanResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Add an item to a vendor invoice
     *
     * @generated from rpc Scailo.VendorInvoicesService.AddVendorInvoiceItem
     */
    addVendorInvoiceItem: {
      name: "AddVendorInvoiceItem",
      I: VendorInvoicesServiceItemCreateRequest,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Modify an item in a vendor invoice
     *
     * @generated from rpc Scailo.VendorInvoicesService.ModifyVendorInvoiceItem
     */
    modifyVendorInvoiceItem: {
      name: "ModifyVendorInvoiceItem",
      I: VendorInvoicesServiceItemUpdateRequest,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Approve an item in a vendor invoice
     *
     * @generated from rpc Scailo.VendorInvoicesService.ApproveVendorInvoiceItem
     */
    approveVendorInvoiceItem: {
      name: "ApproveVendorInvoiceItem",
      I: IdentifierWithUserComment,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Delete an item in a vendor invoice
     *
     * @generated from rpc Scailo.VendorInvoicesService.DeleteVendorInvoiceItem
     */
    deleteVendorInvoiceItem: {
      name: "DeleteVendorInvoiceItem",
      I: IdentifierWithUserComment,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Reorder items in a vendor invoice
     *
     * @generated from rpc Scailo.VendorInvoicesService.ReorderVendorInvoiceItems
     */
    reorderVendorInvoiceItems: {
      name: "ReorderVendorInvoiceItems",
      I: ReorderItemsRequest,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * View Vendor Invoice Item by ID
     *
     * @generated from rpc Scailo.VendorInvoicesService.ViewVendorInvoiceItemByID
     */
    viewVendorInvoiceItemByID: {
      name: "ViewVendorInvoiceItemByID",
      I: Identifier,
      O: VendorInvoiceItem,
      kind: MethodKind.Unary,
    },
    /**
     * View approved vendor invoice items for given vendor invoice ID
     *
     * @generated from rpc Scailo.VendorInvoicesService.ViewApprovedVendorInvoiceItems
     */
    viewApprovedVendorInvoiceItems: {
      name: "ViewApprovedVendorInvoiceItems",
      I: IdentifierWithSearchKey,
      O: VendorInvoiceItemsList,
      kind: MethodKind.Unary,
    },
    /**
     * View unapproved vendor invoice items for given vendor invoice ID
     *
     * @generated from rpc Scailo.VendorInvoicesService.ViewUnapprovedVendorInvoiceItems
     */
    viewUnapprovedVendorInvoiceItems: {
      name: "ViewUnapprovedVendorInvoiceItems",
      I: IdentifierWithSearchKey,
      O: VendorInvoiceItemsList,
      kind: MethodKind.Unary,
    },
    /**
     * View the history of the vendor invoice item
     *
     * @generated from rpc Scailo.VendorInvoicesService.ViewVendorInvoiceItemHistory
     */
    viewVendorInvoiceItemHistory: {
      name: "ViewVendorInvoiceItemHistory",
      I: VendorInvoiceItemHistoryRequest,
      O: VendorInvoiceItemsList,
      kind: MethodKind.Unary,
    },
    /**
     * View approved vendor invoice items for given vendor invoice ID with pagination
     *
     * @generated from rpc Scailo.VendorInvoicesService.ViewPaginatedApprovedVendorInvoiceItems
     */
    viewPaginatedApprovedVendorInvoiceItems: {
      name: "ViewPaginatedApprovedVendorInvoiceItems",
      I: VendorInvoiceItemsSearchRequest,
      O: VendorInvoicesServicePaginatedItemsResponse,
      kind: MethodKind.Unary,
    },
    /**
     * View unapproved vendor invoice items for given vendor invoice ID with pagination
     *
     * @generated from rpc Scailo.VendorInvoicesService.ViewPaginatedUnapprovedVendorInvoiceItems
     */
    viewPaginatedUnapprovedVendorInvoiceItems: {
      name: "ViewPaginatedUnapprovedVendorInvoiceItems",
      I: VendorInvoiceItemsSearchRequest,
      O: VendorInvoicesServicePaginatedItemsResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Search through vendor invoice items with pagination
     *
     * @generated from rpc Scailo.VendorInvoicesService.SearchItemsWithPagination
     */
    searchItemsWithPagination: {
      name: "SearchItemsWithPagination",
      I: VendorInvoiceItemsSearchRequest,
      O: VendorInvoicesServicePaginatedItemsResponse,
      kind: MethodKind.Unary,
    },
    /**
     * CSV operations
     * Download the CSV file that could be used to upload items from the filled CSV file. The same file can also be used as a template when there are no existing records
     *
     * @generated from rpc Scailo.VendorInvoicesService.DownloadItemsAsCSV
     */
    downloadItemsAsCSV: {
      name: "DownloadItemsAsCSV",
      I: IdentifierUUID,
      O: StandardFile,
      kind: MethodKind.Unary,
    },
    /**
     * Upload items using a CSV file. This is an idempotent operation. All the existing items are deleted before adding the items from the file.
     *
     * @generated from rpc Scailo.VendorInvoicesService.UploadVendorInvoiceItems
     */
    uploadVendorInvoiceItems: {
      name: "UploadVendorInvoiceItems",
      I: IdentifierUUIDWithFile,
      O: IdentifiersList,
      kind: MethodKind.Unary,
    },
    /**
     * Add a reference
     *
     * @generated from rpc Scailo.VendorInvoicesService.AddVendorInvoiceReference
     */
    addVendorInvoiceReference: {
      name: "AddVendorInvoiceReference",
      I: VendorInvoicesServiceReferenceCreateRequest,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Approve a reference
     *
     * @generated from rpc Scailo.VendorInvoicesService.ApproveVendorInvoiceReference
     */
    approveVendorInvoiceReference: {
      name: "ApproveVendorInvoiceReference",
      I: IdentifierWithUserComment,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Delete a reference
     *
     * @generated from rpc Scailo.VendorInvoicesService.DeleteVendorInvoiceReference
     */
    deleteVendorInvoiceReference: {
      name: "DeleteVendorInvoiceReference",
      I: IdentifierWithUserComment,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * View a reference for the given ID
     *
     * @generated from rpc Scailo.VendorInvoicesService.ViewVendorInvoiceReferenceByID
     */
    viewVendorInvoiceReferenceByID: {
      name: "ViewVendorInvoiceReferenceByID",
      I: Identifier,
      O: VendorInvoiceReference,
      kind: MethodKind.Unary,
    },
    /**
     * View all references for given vendor invoice ID
     *
     * @generated from rpc Scailo.VendorInvoicesService.ViewVendorInvoiceReferences
     */
    viewVendorInvoiceReferences: {
      name: "ViewVendorInvoiceReferences",
      I: Identifier,
      O: VendorInvoiceReferencesList,
      kind: MethodKind.Unary,
    },
    /**
     * View by ID
     *
     * @generated from rpc Scailo.VendorInvoicesService.ViewByID
     */
    viewByID: {
      name: "ViewByID",
      I: Identifier,
      O: VendorInvoice,
      kind: MethodKind.Unary,
    },
    /**
     * View by UUID
     *
     * @generated from rpc Scailo.VendorInvoicesService.ViewByUUID
     */
    viewByUUID: {
      name: "ViewByUUID",
      I: IdentifierUUID,
      O: VendorInvoice,
      kind: MethodKind.Unary,
    },
    /**
     * View only essential components by ID (without logs)
     *
     * @generated from rpc Scailo.VendorInvoicesService.ViewEssentialByID
     */
    viewEssentialByID: {
      name: "ViewEssentialByID",
      I: Identifier,
      O: VendorInvoice,
      kind: MethodKind.Unary,
    },
    /**
     * View only essential components (without logs) that matches the given UUID
     *
     * @generated from rpc Scailo.VendorInvoicesService.ViewEssentialByUUID
     */
    viewEssentialByUUID: {
      name: "ViewEssentialByUUID",
      I: IdentifierUUID,
      O: VendorInvoice,
      kind: MethodKind.Unary,
    },
    /**
     * View all records with the given IDs
     *
     * @generated from rpc Scailo.VendorInvoicesService.ViewFromIDs
     */
    viewFromIDs: {
      name: "ViewFromIDs",
      I: IdentifiersList,
      O: VendorInvoicesList,
      kind: MethodKind.Unary,
    },
    /**
     * View the ancillary parameters (UUIDs of the internal references) by UUID
     *
     * @generated from rpc Scailo.VendorInvoicesService.ViewAncillaryParametersByUUID
     */
    viewAncillaryParametersByUUID: {
      name: "ViewAncillaryParametersByUUID",
      I: IdentifierUUID,
      O: VendorInvoiceAncillaryParameters,
      kind: MethodKind.Unary,
    },
    /**
     * View all
     *
     * @generated from rpc Scailo.VendorInvoicesService.ViewAll
     */
    viewAll: {
      name: "ViewAll",
      I: ActiveStatus,
      O: VendorInvoicesList,
      kind: MethodKind.Unary,
    },
    /**
     * View all with the given entity UUID
     *
     * @generated from rpc Scailo.VendorInvoicesService.ViewAllForEntityUUID
     */
    viewAllForEntityUUID: {
      name: "ViewAllForEntityUUID",
      I: IdentifierUUID,
      O: VendorInvoicesList,
      kind: MethodKind.Unary,
    },
    /**
     * View with pagination
     *
     * @generated from rpc Scailo.VendorInvoicesService.ViewWithPagination
     */
    viewWithPagination: {
      name: "ViewWithPagination",
      I: VendorInvoicesServicePaginationReq,
      O: VendorInvoicesServicePaginationResponse,
      kind: MethodKind.Unary,
    },
    /**
     * View prospective families for the given vendor invoice
     *
     * @generated from rpc Scailo.VendorInvoicesService.ViewProspectiveFamilies
     */
    viewProspectiveFamilies: {
      name: "ViewProspectiveFamilies",
      I: IdentifierWithSearchKey,
      O: FamiliesList,
      kind: MethodKind.Unary,
    },
    /**
     * Filter prospective families for the record represented by the given UUID identifier
     *
     * @generated from rpc Scailo.VendorInvoicesService.FilterProspectiveFamilies
     */
    filterProspectiveFamilies: {
      name: "FilterProspectiveFamilies",
      I: FilterFamiliesReqForIdentifier,
      O: FamiliesList,
      kind: MethodKind.Unary,
    },
    /**
     * View prospective vendor invoice item info for the given family ID and vendor invoice ID
     *
     * @generated from rpc Scailo.VendorInvoicesService.ViewProspectiveVendorInvoiceItem
     */
    viewProspectiveVendorInvoiceItem: {
      name: "ViewProspectiveVendorInvoiceItem",
      I: VendorInvoiceItemProspectiveInfoRequest,
      O: VendorInvoicesServiceItemCreateRequest,
      kind: MethodKind.Unary,
    },
    /**
     * View receipt (goods receipt) statistics of the vendor invoice
     *
     * @generated from rpc Scailo.VendorInvoicesService.ViewReceiptStatistics
     */
    viewReceiptStatistics: {
      name: "ViewReceiptStatistics",
      I: IdentifierUUID,
      O: VendorInvoiceReceiptStatisticsList,
      kind: MethodKind.Unary,
    },
    /**
     * View already added quantities
     *
     * @generated from rpc Scailo.VendorInvoicesService.ViewAddedFamilyQuantityForSource
     */
    viewAddedFamilyQuantityForSource: {
      name: "ViewAddedFamilyQuantityForSource",
      I: VendorInvoicesServiceAlreadyAddedQuantityForSourceRequest,
      O: DualQuantitiesResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Download vendor invoice with the given IdentifierUUID (can be used to allow public downloads)
     *
     * @generated from rpc Scailo.VendorInvoicesService.DownloadByUUID
     */
    downloadByUUID: {
      name: "DownloadByUUID",
      I: IdentifierUUID,
      O: StandardFile,
      kind: MethodKind.Unary,
    },
    /**
     * View all that match the given search key
     *
     * @generated from rpc Scailo.VendorInvoicesService.SearchAll
     */
    searchAll: {
      name: "SearchAll",
      I: VendorInvoicesServiceSearchAllReq,
      O: VendorInvoicesList,
      kind: MethodKind.Unary,
    },
    /**
     * View all that match the given filter criteria
     *
     * @generated from rpc Scailo.VendorInvoicesService.Filter
     */
    filter: {
      name: "Filter",
      I: VendorInvoicesServiceFilterReq,
      O: VendorInvoicesList,
      kind: MethodKind.Unary,
    },
    /**
     * Count in status
     *
     * @generated from rpc Scailo.VendorInvoicesService.CountInStatus
     */
    countInStatus: {
      name: "CountInStatus",
      I: CountInSLCStatusRequest,
      O: CountResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Count all that match the given criteria
     *
     * @generated from rpc Scailo.VendorInvoicesService.Count
     */
    count: {
      name: "Count",
      I: VendorInvoicesServiceCountReq,
      O: CountResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Returns the sum of the total value of all the records that match the given criteria
     *
     * @generated from rpc Scailo.VendorInvoicesService.AccruedValue
     */
    accruedValue: {
      name: "AccruedValue",
      I: VendorInvoicesServiceCountReq,
      O: SumResponse,
      kind: MethodKind.Unary,
    },
    /**
     * CSV operations
     * Download the CSV file that consists of the list of records according to the given filter request. The same file could also be used as a template for uploading records
     *
     * @generated from rpc Scailo.VendorInvoicesService.DownloadAsCSV
     */
    downloadAsCSV: {
      name: "DownloadAsCSV",
      I: VendorInvoicesServiceFilterReq,
      O: StandardFile,
      kind: MethodKind.Unary,
    },
  }
} as const;

