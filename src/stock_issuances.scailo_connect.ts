// @generated by protoc-gen-connect-es v0.12.0 with parameter "target=ts"
// @generated from file stock_issuances.scailo.proto (package Scailo, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { StockIssuance, StockIssuanceItem, StockIssuanceItemHistoryRequest, StockIssuanceItemProspectiveInfoRequest, StockIssuanceItemsSearchRequest, StockIssuancesItemsList, StockIssuancesList, StockIssuancesServiceAlreadyAddedQuantityForSourceRequest, StockIssuancesServiceAutofillRequest, StockIssuancesServiceCountReq, StockIssuancesServiceCreateRequest, StockIssuancesServiceFilterReq, StockIssuancesServiceItemCreateRequest, StockIssuancesServiceItemUpdateRequest, StockIssuancesServicePaginatedItemsResponse, StockIssuancesServicePaginationReq, StockIssuancesServicePaginationResponse, StockIssuancesServiceSearchAllReq, StockIssuancesServiceUpdateRequest } from "./stock_issuances.scailo_pb.js";
import { ActiveStatus, BooleanResponse, CountInSLCStatusRequest, CountResponse, Empty, Identifier, IdentifierResponse, IdentifiersList, IdentifierUUID, IdentifierUUIDWithUserComment, IdentifierWithEmailAttributes, IdentifierWithSearchKey, IdentifierWithUserComment, QuantityResponse, ReorderItemsRequest, SimpleSearchReq, StandardFile } from "./base.scailo_pb.js";
import { MethodKind } from "@bufbuild/protobuf";
import { MagicLink, MagicLinksServiceCreateRequestForSpecificResource } from "./magic_links.scailo_pb.js";
import { FamiliesList, FilterFamiliesReqForIdentifier } from "./families.scailo_pb.js";

/**
 *
 * Describes the common methods applicable on each stock issuance
 *
 * @generated from service Scailo.StockIssuancesService
 */
export const StockIssuancesService = {
  typeName: "Scailo.StockIssuancesService",
  methods: {
    /**
     * Create and send for verification
     *
     * @generated from rpc Scailo.StockIssuancesService.Create
     */
    create: {
      name: "Create",
      I: StockIssuancesServiceCreateRequest,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Create and save as draft
     *
     * @generated from rpc Scailo.StockIssuancesService.Draft
     */
    draft: {
      name: "Draft",
      I: StockIssuancesServiceCreateRequest,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Update draft
     *
     * @generated from rpc Scailo.StockIssuancesService.DraftUpdate
     */
    draftUpdate: {
      name: "DraftUpdate",
      I: StockIssuancesServiceUpdateRequest,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Send for verification
     *
     * @generated from rpc Scailo.StockIssuancesService.SendForVerification
     */
    sendForVerification: {
      name: "SendForVerification",
      I: IdentifierUUIDWithUserComment,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Verify
     *
     * @generated from rpc Scailo.StockIssuancesService.Verify
     */
    verify: {
      name: "Verify",
      I: IdentifierUUIDWithUserComment,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Approve
     *
     * @generated from rpc Scailo.StockIssuancesService.Approve
     */
    approve: {
      name: "Approve",
      I: IdentifierUUIDWithUserComment,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Send For Revision
     *
     * @generated from rpc Scailo.StockIssuancesService.SendForRevision
     */
    sendForRevision: {
      name: "SendForRevision",
      I: IdentifierUUIDWithUserComment,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Update revision
     *
     * @generated from rpc Scailo.StockIssuancesService.RevisionUpdate
     */
    revisionUpdate: {
      name: "RevisionUpdate",
      I: StockIssuancesServiceUpdateRequest,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Halt
     *
     * @generated from rpc Scailo.StockIssuancesService.Halt
     */
    halt: {
      name: "Halt",
      I: IdentifierUUIDWithUserComment,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Discard
     *
     * @generated from rpc Scailo.StockIssuancesService.Discard
     */
    discard: {
      name: "Discard",
      I: IdentifierUUIDWithUserComment,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Restore
     *
     * @generated from rpc Scailo.StockIssuancesService.Restore
     */
    restore: {
      name: "Restore",
      I: IdentifierUUIDWithUserComment,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Complete
     *
     * @generated from rpc Scailo.StockIssuancesService.Complete
     */
    complete: {
      name: "Complete",
      I: IdentifierUUIDWithUserComment,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Repeat
     *
     * @generated from rpc Scailo.StockIssuancesService.Repeat
     */
    repeat: {
      name: "Repeat",
      I: IdentifierUUIDWithUserComment,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Reopen
     *
     * @generated from rpc Scailo.StockIssuancesService.Reopen
     */
    reopen: {
      name: "Reopen",
      I: IdentifierUUIDWithUserComment,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Add comment
     *
     * @generated from rpc Scailo.StockIssuancesService.CommentAdd
     */
    commentAdd: {
      name: "CommentAdd",
      I: IdentifierUUIDWithUserComment,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Send Email
     *
     * @generated from rpc Scailo.StockIssuancesService.SendEmail
     */
    sendEmail: {
      name: "SendEmail",
      I: IdentifierWithEmailAttributes,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Create a magic link
     *
     * @generated from rpc Scailo.StockIssuancesService.CreateMagicLink
     */
    createMagicLink: {
      name: "CreateMagicLink",
      I: MagicLinksServiceCreateRequestForSpecificResource,
      O: MagicLink,
      kind: MethodKind.Unary,
    },
    /**
     * Autofill the stock issuance
     *
     * @generated from rpc Scailo.StockIssuancesService.Autofill
     */
    autofill: {
      name: "Autofill",
      I: StockIssuancesServiceAutofillRequest,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Checks if the Stock Issuance can be marked as completed
     *
     * @generated from rpc Scailo.StockIssuancesService.IsCompletable
     */
    isCompletable: {
      name: "IsCompletable",
      I: IdentifierUUID,
      O: BooleanResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Add an item to a stock issuance
     *
     * @generated from rpc Scailo.StockIssuancesService.AddStockIssuanceItem
     */
    addStockIssuanceItem: {
      name: "AddStockIssuanceItem",
      I: StockIssuancesServiceItemCreateRequest,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Modify an item in a stock issuance
     *
     * @generated from rpc Scailo.StockIssuancesService.ModifyStockIssuanceItem
     */
    modifyStockIssuanceItem: {
      name: "ModifyStockIssuanceItem",
      I: StockIssuancesServiceItemUpdateRequest,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Approve an item in a stock issuance
     *
     * @generated from rpc Scailo.StockIssuancesService.ApproveStockIssuanceItem
     */
    approveStockIssuanceItem: {
      name: "ApproveStockIssuanceItem",
      I: IdentifierWithUserComment,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Delete an item in a stock issuance
     *
     * @generated from rpc Scailo.StockIssuancesService.DeleteStockIssuanceItem
     */
    deleteStockIssuanceItem: {
      name: "DeleteStockIssuanceItem",
      I: IdentifierWithUserComment,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Reorder items in a stock issuance
     *
     * @generated from rpc Scailo.StockIssuancesService.ReorderStockIssuanceItems
     */
    reorderStockIssuanceItems: {
      name: "ReorderStockIssuanceItems",
      I: ReorderItemsRequest,
      O: IdentifierResponse,
      kind: MethodKind.Unary,
    },
    /**
     * View Stock Issuance Item by ID
     *
     * @generated from rpc Scailo.StockIssuancesService.ViewStockIssuanceItemByID
     */
    viewStockIssuanceItemByID: {
      name: "ViewStockIssuanceItemByID",
      I: Identifier,
      O: StockIssuanceItem,
      kind: MethodKind.Unary,
    },
    /**
     * View Stock Issuance Item by Inventory Hash
     *
     * @generated from rpc Scailo.StockIssuancesService.ViewStockIssuanceItemByInventoryHash
     */
    viewStockIssuanceItemByInventoryHash: {
      name: "ViewStockIssuanceItemByInventoryHash",
      I: SimpleSearchReq,
      O: StockIssuanceItem,
      kind: MethodKind.Unary,
    },
    /**
     * View approved stock issuance items for given stock issuance ID
     *
     * @generated from rpc Scailo.StockIssuancesService.ViewApprovedStockIssuanceItems
     */
    viewApprovedStockIssuanceItems: {
      name: "ViewApprovedStockIssuanceItems",
      I: IdentifierWithSearchKey,
      O: StockIssuancesItemsList,
      kind: MethodKind.Unary,
    },
    /**
     * View unapproved stock issuance items for given stock issuance ID
     *
     * @generated from rpc Scailo.StockIssuancesService.ViewUnapprovedStockIssuanceItems
     */
    viewUnapprovedStockIssuanceItems: {
      name: "ViewUnapprovedStockIssuanceItems",
      I: IdentifierWithSearchKey,
      O: StockIssuancesItemsList,
      kind: MethodKind.Unary,
    },
    /**
     * View the history of the stock issuance item
     *
     * @generated from rpc Scailo.StockIssuancesService.ViewStockIssuanceItemHistory
     */
    viewStockIssuanceItemHistory: {
      name: "ViewStockIssuanceItemHistory",
      I: StockIssuanceItemHistoryRequest,
      O: StockIssuancesItemsList,
      kind: MethodKind.Unary,
    },
    /**
     * View approved stock issuance items for given stock issuance ID with pagination
     *
     * @generated from rpc Scailo.StockIssuancesService.ViewPaginatedApprovedStockIssuanceItems
     */
    viewPaginatedApprovedStockIssuanceItems: {
      name: "ViewPaginatedApprovedStockIssuanceItems",
      I: StockIssuanceItemsSearchRequest,
      O: StockIssuancesServicePaginatedItemsResponse,
      kind: MethodKind.Unary,
    },
    /**
     * View unapproved stock issuance items for given stock issuance ID with pagination
     *
     * @generated from rpc Scailo.StockIssuancesService.ViewPaginatedUnapprovedStockIssuanceItems
     */
    viewPaginatedUnapprovedStockIssuanceItems: {
      name: "ViewPaginatedUnapprovedStockIssuanceItems",
      I: StockIssuanceItemsSearchRequest,
      O: StockIssuancesServicePaginatedItemsResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Search through stock issuance items with pagination
     *
     * @generated from rpc Scailo.StockIssuancesService.SearchItemsWithPagination
     */
    searchItemsWithPagination: {
      name: "SearchItemsWithPagination",
      I: StockIssuanceItemsSearchRequest,
      O: StockIssuancesServicePaginatedItemsResponse,
      kind: MethodKind.Unary,
    },
    /**
     * CSV operations
     * Download the CSV file with the associated line items. The same file could then be used to upload line items.
     *
     * @generated from rpc Scailo.StockIssuancesService.DownloadItemsAsCSV
     */
    downloadItemsAsCSV: {
      name: "DownloadItemsAsCSV",
      I: IdentifierUUID,
      O: StandardFile,
      kind: MethodKind.Unary,
    },
    /**
     * Download the CSV template that could be used to upload items
     *
     * @generated from rpc Scailo.StockIssuancesService.DownloadItemsTemplateAsCSV
     */
    downloadItemsTemplateAsCSV: {
      name: "DownloadItemsTemplateAsCSV",
      I: Empty,
      O: StandardFile,
      kind: MethodKind.Unary,
    },
    /**
     * View by ID
     *
     * @generated from rpc Scailo.StockIssuancesService.ViewByID
     */
    viewByID: {
      name: "ViewByID",
      I: Identifier,
      O: StockIssuance,
      kind: MethodKind.Unary,
    },
    /**
     * View by UUID
     *
     * @generated from rpc Scailo.StockIssuancesService.ViewByUUID
     */
    viewByUUID: {
      name: "ViewByUUID",
      I: IdentifierUUID,
      O: StockIssuance,
      kind: MethodKind.Unary,
    },
    /**
     * View by Reference ID (returns the latest record in case of duplicates)
     *
     * @generated from rpc Scailo.StockIssuancesService.ViewByReferenceID
     */
    viewByReferenceID: {
      name: "ViewByReferenceID",
      I: SimpleSearchReq,
      O: StockIssuance,
      kind: MethodKind.Unary,
    },
    /**
     * View only essential components by ID (without logs)
     *
     * @generated from rpc Scailo.StockIssuancesService.ViewEssentialByID
     */
    viewEssentialByID: {
      name: "ViewEssentialByID",
      I: Identifier,
      O: StockIssuance,
      kind: MethodKind.Unary,
    },
    /**
     * View only essential components (without logs) that matches the given UUID
     *
     * @generated from rpc Scailo.StockIssuancesService.ViewEssentialByUUID
     */
    viewEssentialByUUID: {
      name: "ViewEssentialByUUID",
      I: IdentifierUUID,
      O: StockIssuance,
      kind: MethodKind.Unary,
    },
    /**
     * View all records with the given IDs
     *
     * @generated from rpc Scailo.StockIssuancesService.ViewFromIDs
     */
    viewFromIDs: {
      name: "ViewFromIDs",
      I: IdentifiersList,
      O: StockIssuancesList,
      kind: MethodKind.Unary,
    },
    /**
     * View all
     *
     * @generated from rpc Scailo.StockIssuancesService.ViewAll
     */
    viewAll: {
      name: "ViewAll",
      I: ActiveStatus,
      O: StockIssuancesList,
      kind: MethodKind.Unary,
    },
    /**
     * View all with the given entity UUID
     *
     * @generated from rpc Scailo.StockIssuancesService.ViewAllForEntityUUID
     */
    viewAllForEntityUUID: {
      name: "ViewAllForEntityUUID",
      I: IdentifierUUID,
      O: StockIssuancesList,
      kind: MethodKind.Unary,
    },
    /**
     * View with pagination
     *
     * @generated from rpc Scailo.StockIssuancesService.ViewWithPagination
     */
    viewWithPagination: {
      name: "ViewWithPagination",
      I: StockIssuancesServicePaginationReq,
      O: StockIssuancesServicePaginationResponse,
      kind: MethodKind.Unary,
    },
    /**
     * View prospective families for the given stock issuance
     *
     * @generated from rpc Scailo.StockIssuancesService.ViewProspectiveFamilies
     */
    viewProspectiveFamilies: {
      name: "ViewProspectiveFamilies",
      I: IdentifierWithSearchKey,
      O: FamiliesList,
      kind: MethodKind.Unary,
    },
    /**
     * Filter prospective families for the record represented by the given UUID identifier
     *
     * @generated from rpc Scailo.StockIssuancesService.FilterProspectiveFamilies
     */
    filterProspectiveFamilies: {
      name: "FilterProspectiveFamilies",
      I: FilterFamiliesReqForIdentifier,
      O: FamiliesList,
      kind: MethodKind.Unary,
    },
    /**
     * View prospective stock issuance item info for the given family ID and stock issuance ID
     *
     * @generated from rpc Scailo.StockIssuancesService.ViewProspectiveStockIssuanceItem
     */
    viewProspectiveStockIssuanceItem: {
      name: "ViewProspectiveStockIssuanceItem",
      I: StockIssuanceItemProspectiveInfoRequest,
      O: StockIssuancesServiceItemCreateRequest,
      kind: MethodKind.Unary,
    },
    /**
     * View already added quantities
     *
     * @generated from rpc Scailo.StockIssuancesService.ViewAddedFamilyQuantityForSource
     */
    viewAddedFamilyQuantityForSource: {
      name: "ViewAddedFamilyQuantityForSource",
      I: StockIssuancesServiceAlreadyAddedQuantityForSourceRequest,
      O: QuantityResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Download the label for the stock issuance with the given IdentifierUUID
     *
     * @generated from rpc Scailo.StockIssuancesService.DownloadLabelByUUID
     */
    downloadLabelByUUID: {
      name: "DownloadLabelByUUID",
      I: IdentifierUUID,
      O: StandardFile,
      kind: MethodKind.Unary,
    },
    /**
     * Download stock issuance with the given IdentifierUUID
     *
     * @generated from rpc Scailo.StockIssuancesService.DownloadByUUID
     */
    downloadByUUID: {
      name: "DownloadByUUID",
      I: IdentifierUUID,
      O: StandardFile,
      kind: MethodKind.Unary,
    },
    /**
     * View all that match the given search key
     *
     * @generated from rpc Scailo.StockIssuancesService.SearchAll
     */
    searchAll: {
      name: "SearchAll",
      I: StockIssuancesServiceSearchAllReq,
      O: StockIssuancesList,
      kind: MethodKind.Unary,
    },
    /**
     * View all that match the given filter criteria
     *
     * @generated from rpc Scailo.StockIssuancesService.Filter
     */
    filter: {
      name: "Filter",
      I: StockIssuancesServiceFilterReq,
      O: StockIssuancesList,
      kind: MethodKind.Unary,
    },
    /**
     * Count in status
     *
     * @generated from rpc Scailo.StockIssuancesService.CountInStatus
     */
    countInStatus: {
      name: "CountInStatus",
      I: CountInSLCStatusRequest,
      O: CountResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Count all that match the given criteria
     *
     * @generated from rpc Scailo.StockIssuancesService.Count
     */
    count: {
      name: "Count",
      I: StockIssuancesServiceCountReq,
      O: CountResponse,
      kind: MethodKind.Unary,
    },
    /**
     * CSV operations
     * Download the CSV file that consists of the list of records according to the given filter request. The same file could also be used as a template for uploading records
     *
     * @generated from rpc Scailo.StockIssuancesService.DownloadAsCSV
     */
    downloadAsCSV: {
      name: "DownloadAsCSV",
      I: StockIssuancesServiceFilterReq,
      O: StandardFile,
      kind: MethodKind.Unary,
    },
  }
} as const;

