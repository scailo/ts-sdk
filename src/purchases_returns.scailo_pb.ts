// @generated by protoc-gen-es v1.5.1 with parameter "target=ts"
// @generated from file purchases_returns.scailo.proto (package Scailo, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3, protoInt64 } from "@bufbuild/protobuf";
import { FormFieldDatum, FormFieldDatumCreateRequest, FormFieldDatumFilterRequest } from "./forms_fields_data.scailo_pb.js";
import { ApprovalMetadata, BOOL_FILTER, EmployeeMetadata, LogbookLogConciseSLC, SORT_ORDER, STANDARD_LIFECYCLE_STATUS } from "./base.scailo_pb.js";

/**
 *
 * Stores all the possible references from which a purchase return can be added
 *
 * @generated from enum Scailo.PURCHASE_RETURN_REF_FROM
 */
export enum PURCHASE_RETURN_REF_FROM {
  /**
   * Used only in filters
   *
   * @generated from enum value: PURCHASE_RETURN_REF_FROM_ANY_UNSPECIFIED = 0;
   */
  PURCHASE_RETURN_REF_FROM_ANY_UNSPECIFIED = 0,

  /**
   * Denotes that the purchase return originated from a purchase order
   *
   * @generated from enum value: PURCHASE_RETURN_REF_FROM_PURCHASE_ORDER = 1;
   */
  PURCHASE_RETURN_REF_FROM_PURCHASE_ORDER = 1,
}
// Retrieve enum metadata with: proto3.getEnumType(PURCHASE_RETURN_REF_FROM)
proto3.util.setEnumType(PURCHASE_RETURN_REF_FROM, "Scailo.PURCHASE_RETURN_REF_FROM", [
  { no: 0, name: "PURCHASE_RETURN_REF_FROM_ANY_UNSPECIFIED" },
  { no: 1, name: "PURCHASE_RETURN_REF_FROM_PURCHASE_ORDER" },
]);

/**
 *
 * Describes the available sort keys
 *
 * @generated from enum Scailo.PURCHASE_RETURN_ITEM_SORT_KEY
 */
export enum PURCHASE_RETURN_ITEM_SORT_KEY {
  /**
   * Fetch ordered results by id
   *
   * @generated from enum value: PURCHASE_RETURN_ITEM_SORT_KEY_ID_UNSPECIFIED = 0;
   */
  PURCHASE_RETURN_ITEM_SORT_KEY_ID_UNSPECIFIED = 0,

  /**
   * Fetch ordered results by the creation timestamp
   *
   * @generated from enum value: PURCHASE_RETURN_ITEM_SORT_KEY_CREATED_AT = 1;
   */
  PURCHASE_RETURN_ITEM_SORT_KEY_CREATED_AT = 1,

  /**
   * Fetch ordered results by the modified timestamp
   *
   * @generated from enum value: PURCHASE_RETURN_ITEM_SORT_KEY_MODIFIED_AT = 2;
   */
  PURCHASE_RETURN_ITEM_SORT_KEY_MODIFIED_AT = 2,

  /**
   * Fetch ordered results by the approved on timestamp
   *
   * @generated from enum value: PURCHASE_RETURN_ITEM_SORT_KEY_APPROVED_ON = 3;
   */
  PURCHASE_RETURN_ITEM_SORT_KEY_APPROVED_ON = 3,

  /**
   * Fetch ordered results by the approved by field
   *
   * @generated from enum value: PURCHASE_RETURN_ITEM_SORT_KEY_APPROVED_BY = 4;
   */
  PURCHASE_RETURN_ITEM_SORT_KEY_APPROVED_BY = 4,

  /**
   * Fetch ordered results by the approver's role ID
   *
   * @generated from enum value: PURCHASE_RETURN_ITEM_SORT_KEY_APPROVER_ROLE_ID = 5;
   */
  PURCHASE_RETURN_ITEM_SORT_KEY_APPROVER_ROLE_ID = 5,

  /**
   * Fetch ordered results by the family ID
   *
   * @generated from enum value: PURCHASE_RETURN_ITEM_SORT_KEY_FAMILY_ID = 10;
   */
  PURCHASE_RETURN_ITEM_SORT_KEY_FAMILY_ID = 10,

  /**
   * Fetch ordered results by the internal quantity
   *
   * @generated from enum value: PURCHASE_RETURN_ITEM_SORT_KEY_INTERNAL_QUANTITY = 11;
   */
  PURCHASE_RETURN_ITEM_SORT_KEY_INTERNAL_QUANTITY = 11,

  /**
   * Fetch ordered results by the vendor unit of material ID
   *
   * @generated from enum value: PURCHASE_RETURN_ITEM_SORT_KEY_VENDOR_UOM_ID = 12;
   */
  PURCHASE_RETURN_ITEM_SORT_KEY_VENDOR_UOM_ID = 12,

  /**
   * Fetch ordered results by the vendor quantity
   *
   * @generated from enum value: PURCHASE_RETURN_ITEM_SORT_KEY_VENDOR_QUANTITY = 13;
   */
  PURCHASE_RETURN_ITEM_SORT_KEY_VENDOR_QUANTITY = 13,
}
// Retrieve enum metadata with: proto3.getEnumType(PURCHASE_RETURN_ITEM_SORT_KEY)
proto3.util.setEnumType(PURCHASE_RETURN_ITEM_SORT_KEY, "Scailo.PURCHASE_RETURN_ITEM_SORT_KEY", [
  { no: 0, name: "PURCHASE_RETURN_ITEM_SORT_KEY_ID_UNSPECIFIED" },
  { no: 1, name: "PURCHASE_RETURN_ITEM_SORT_KEY_CREATED_AT" },
  { no: 2, name: "PURCHASE_RETURN_ITEM_SORT_KEY_MODIFIED_AT" },
  { no: 3, name: "PURCHASE_RETURN_ITEM_SORT_KEY_APPROVED_ON" },
  { no: 4, name: "PURCHASE_RETURN_ITEM_SORT_KEY_APPROVED_BY" },
  { no: 5, name: "PURCHASE_RETURN_ITEM_SORT_KEY_APPROVER_ROLE_ID" },
  { no: 10, name: "PURCHASE_RETURN_ITEM_SORT_KEY_FAMILY_ID" },
  { no: 11, name: "PURCHASE_RETURN_ITEM_SORT_KEY_INTERNAL_QUANTITY" },
  { no: 12, name: "PURCHASE_RETURN_ITEM_SORT_KEY_VENDOR_UOM_ID" },
  { no: 13, name: "PURCHASE_RETURN_ITEM_SORT_KEY_VENDOR_QUANTITY" },
]);

/**
 *
 * Describes the applicable statuses of purchase return items
 *
 * @generated from enum Scailo.PURCHASE_RETURN_ITEM_STATUS
 */
export enum PURCHASE_RETURN_ITEM_STATUS {
  /**
   * Denotes that status be disregarded. This is used only within search APIs
   *
   * @generated from enum value: PURCHASE_RETURN_ITEM_STATUS_ANY_UNSPECIFIED = 0;
   */
  PURCHASE_RETURN_ITEM_STATUS_ANY_UNSPECIFIED = 0,

  /**
   * Denotes that the purchase return items must have been approved
   *
   * @generated from enum value: PURCHASE_RETURN_ITEM_STATUS_APPROVED = 1;
   */
  PURCHASE_RETURN_ITEM_STATUS_APPROVED = 1,

  /**
   * Denotes that the purchase return items must be waiting for approval
   *
   * @generated from enum value: PURCHASE_RETURN_ITEM_STATUS_UNAPPROVED = 2;
   */
  PURCHASE_RETURN_ITEM_STATUS_UNAPPROVED = 2,
}
// Retrieve enum metadata with: proto3.getEnumType(PURCHASE_RETURN_ITEM_STATUS)
proto3.util.setEnumType(PURCHASE_RETURN_ITEM_STATUS, "Scailo.PURCHASE_RETURN_ITEM_STATUS", [
  { no: 0, name: "PURCHASE_RETURN_ITEM_STATUS_ANY_UNSPECIFIED" },
  { no: 1, name: "PURCHASE_RETURN_ITEM_STATUS_APPROVED" },
  { no: 2, name: "PURCHASE_RETURN_ITEM_STATUS_UNAPPROVED" },
]);

/**
 *
 * Describes the available sort keys
 *
 * @generated from enum Scailo.PURCHASE_RETURN_SORT_KEY
 */
export enum PURCHASE_RETURN_SORT_KEY {
  /**
   * Fetch ordered results by id
   *
   * @generated from enum value: PURCHASE_RETURN_SORT_KEY_ID_UNSPECIFIED = 0;
   */
  PURCHASE_RETURN_SORT_KEY_ID_UNSPECIFIED = 0,

  /**
   * Fetch ordered results by the creation timestamp
   *
   * @generated from enum value: PURCHASE_RETURN_SORT_KEY_CREATED_AT = 1;
   */
  PURCHASE_RETURN_SORT_KEY_CREATED_AT = 1,

  /**
   * Fetch ordered results by the modified timestamp
   *
   * @generated from enum value: PURCHASE_RETURN_SORT_KEY_MODIFIED_AT = 2;
   */
  PURCHASE_RETURN_SORT_KEY_MODIFIED_AT = 2,

  /**
   * Fetch ordered results by the approved on timestamp
   *
   * @generated from enum value: PURCHASE_RETURN_SORT_KEY_APPROVED_ON = 3;
   */
  PURCHASE_RETURN_SORT_KEY_APPROVED_ON = 3,

  /**
   * Fetch ordered results by the approved by field
   *
   * @generated from enum value: PURCHASE_RETURN_SORT_KEY_APPROVED_BY = 4;
   */
  PURCHASE_RETURN_SORT_KEY_APPROVED_BY = 4,

  /**
   * Fetch ordered results by the approver's role ID
   *
   * @generated from enum value: PURCHASE_RETURN_SORT_KEY_APPROVER_ROLE_ID = 5;
   */
  PURCHASE_RETURN_SORT_KEY_APPROVER_ROLE_ID = 5,

  /**
   * Fetch ordered results by the approver's completed on timestamp
   *
   * @generated from enum value: PURCHASE_RETURN_SORT_KEY_COMPLETED_ON = 6;
   */
  PURCHASE_RETURN_SORT_KEY_COMPLETED_ON = 6,

  /**
   * Fetch ordered results by the reference ID
   *
   * @generated from enum value: PURCHASE_RETURN_SORT_KEY_REFERENCE_ID = 10;
   */
  PURCHASE_RETURN_SORT_KEY_REFERENCE_ID = 10,

  /**
   * Fetch ordered results by the final ref number
   *
   * @generated from enum value: PURCHASE_RETURN_SORT_KEY_FINAL_REF_NUMBER = 11;
   */
  PURCHASE_RETURN_SORT_KEY_FINAL_REF_NUMBER = 11,
}
// Retrieve enum metadata with: proto3.getEnumType(PURCHASE_RETURN_SORT_KEY)
proto3.util.setEnumType(PURCHASE_RETURN_SORT_KEY, "Scailo.PURCHASE_RETURN_SORT_KEY", [
  { no: 0, name: "PURCHASE_RETURN_SORT_KEY_ID_UNSPECIFIED" },
  { no: 1, name: "PURCHASE_RETURN_SORT_KEY_CREATED_AT" },
  { no: 2, name: "PURCHASE_RETURN_SORT_KEY_MODIFIED_AT" },
  { no: 3, name: "PURCHASE_RETURN_SORT_KEY_APPROVED_ON" },
  { no: 4, name: "PURCHASE_RETURN_SORT_KEY_APPROVED_BY" },
  { no: 5, name: "PURCHASE_RETURN_SORT_KEY_APPROVER_ROLE_ID" },
  { no: 6, name: "PURCHASE_RETURN_SORT_KEY_COMPLETED_ON" },
  { no: 10, name: "PURCHASE_RETURN_SORT_KEY_REFERENCE_ID" },
  { no: 11, name: "PURCHASE_RETURN_SORT_KEY_FINAL_REF_NUMBER" },
]);

/**
 *
 * Describes the available billing statuses
 *
 * @generated from enum Scailo.PURCHASE_RETURN_BILLING_STATUS
 */
export enum PURCHASE_RETURN_BILLING_STATUS {
  /**
   * Any billing status
   *
   * @generated from enum value: PURCHASE_RETURN_BILLING_STATUS_ANY_UNSPECIFIED = 0;
   */
  PURCHASE_RETURN_BILLING_STATUS_ANY_UNSPECIFIED = 0,

  /**
   * Purchase return is billed
   *
   * @generated from enum value: PURCHASE_RETURN_BILLING_STATUS_BILLED = 1;
   */
  PURCHASE_RETURN_BILLING_STATUS_BILLED = 1,

  /**
   * Purchase return is unbilled
   *
   * @generated from enum value: PURCHASE_RETURN_BILLING_STATUS_UNBILLED = 2;
   */
  PURCHASE_RETURN_BILLING_STATUS_UNBILLED = 2,
}
// Retrieve enum metadata with: proto3.getEnumType(PURCHASE_RETURN_BILLING_STATUS)
proto3.util.setEnumType(PURCHASE_RETURN_BILLING_STATUS, "Scailo.PURCHASE_RETURN_BILLING_STATUS", [
  { no: 0, name: "PURCHASE_RETURN_BILLING_STATUS_ANY_UNSPECIFIED" },
  { no: 1, name: "PURCHASE_RETURN_BILLING_STATUS_BILLED" },
  { no: 2, name: "PURCHASE_RETURN_BILLING_STATUS_UNBILLED" },
]);

/**
 *
 * Describes the parameters necessary to create a record
 *
 * @generated from message Scailo.PurchasesReturnsServiceCreateRequest
 */
export class PurchasesReturnsServiceCreateRequest extends Message<PurchasesReturnsServiceCreateRequest> {
  /**
   * Stores a globally unique entity UUID. This will be set at the organization level
   *
   * @generated from field: string entity_uuid = 1;
   */
  entityUuid = "";

  /**
   * Stores any comment that the user might add during this operation
   *
   * @generated from field: string user_comment = 2;
   */
  userComment = "";

  /**
   * The associated vault folder ID
   *
   * @generated from field: uint64 vault_folder_id = 9;
   */
  vaultFolderId = protoInt64.zero;

  /**
   * The reference ID of the purchase return
   *
   * @generated from field: string reference_id = 10;
   */
  referenceId = "";

  /**
   * The associated reference
   *
   * @generated from field: Scailo.PURCHASE_RETURN_REF_FROM ref_from = 12;
   */
  refFrom = PURCHASE_RETURN_REF_FROM.PURCHASE_RETURN_REF_FROM_ANY_UNSPECIFIED;

  /**
   * The associated ID of the reference
   *
   * @generated from field: uint64 ref_id = 13;
   */
  refId = protoInt64.zero;

  /**
   * The location ID of where the record is created
   *
   * @generated from field: uint64 location_id = 15;
   */
  locationId = protoInt64.zero;

  /**
   * The list of dynamic forms
   *
   * @generated from field: repeated Scailo.FormFieldDatumCreateRequest form_data = 30;
   */
  formData: FormFieldDatumCreateRequest[] = [];

  constructor(data?: PartialMessage<PurchasesReturnsServiceCreateRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.PurchasesReturnsServiceCreateRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "entity_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "user_comment", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 9, name: "vault_folder_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 10, name: "reference_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 12, name: "ref_from", kind: "enum", T: proto3.getEnumType(PURCHASE_RETURN_REF_FROM) },
    { no: 13, name: "ref_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 15, name: "location_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 30, name: "form_data", kind: "message", T: FormFieldDatumCreateRequest, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PurchasesReturnsServiceCreateRequest {
    return new PurchasesReturnsServiceCreateRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PurchasesReturnsServiceCreateRequest {
    return new PurchasesReturnsServiceCreateRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PurchasesReturnsServiceCreateRequest {
    return new PurchasesReturnsServiceCreateRequest().fromJsonString(jsonString, options);
  }

  static equals(a: PurchasesReturnsServiceCreateRequest | PlainMessage<PurchasesReturnsServiceCreateRequest> | undefined, b: PurchasesReturnsServiceCreateRequest | PlainMessage<PurchasesReturnsServiceCreateRequest> | undefined): boolean {
    return proto3.util.equals(PurchasesReturnsServiceCreateRequest, a, b);
  }
}

/**
 *
 * Describes the parameters necessary to update a record
 *
 * @generated from message Scailo.PurchasesReturnsServiceUpdateRequest
 */
export class PurchasesReturnsServiceUpdateRequest extends Message<PurchasesReturnsServiceUpdateRequest> {
  /**
   * Stores any comment that the user might add during this operation
   *
   * @generated from field: string user_comment = 1;
   */
  userComment = "";

  /**
   * The ID of the record that needs to be updated
   *
   * @generated from field: uint64 id = 2;
   */
  id = protoInt64.zero;

  /**
   * Optional boolean value that stores if a notification needs to be sent to users about the update to the record. This is useful when a subsequent operation needs to be performed immediately (such as send to verification after updating the revision)
   *
   * @generated from field: bool notify_users = 3;
   */
  notifyUsers = false;

  /**
   * The associated vault folder ID
   *
   * @generated from field: uint64 vault_folder_id = 9;
   */
  vaultFolderId = protoInt64.zero;

  /**
   * The reference ID of the purchase return
   *
   * @generated from field: string reference_id = 10;
   */
  referenceId = "";

  /**
   * The list of dynamic forms
   *
   * @generated from field: repeated Scailo.FormFieldDatumCreateRequest form_data = 30;
   */
  formData: FormFieldDatumCreateRequest[] = [];

  constructor(data?: PartialMessage<PurchasesReturnsServiceUpdateRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.PurchasesReturnsServiceUpdateRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "user_comment", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 3, name: "notify_users", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 9, name: "vault_folder_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 10, name: "reference_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 30, name: "form_data", kind: "message", T: FormFieldDatumCreateRequest, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PurchasesReturnsServiceUpdateRequest {
    return new PurchasesReturnsServiceUpdateRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PurchasesReturnsServiceUpdateRequest {
    return new PurchasesReturnsServiceUpdateRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PurchasesReturnsServiceUpdateRequest {
    return new PurchasesReturnsServiceUpdateRequest().fromJsonString(jsonString, options);
  }

  static equals(a: PurchasesReturnsServiceUpdateRequest | PlainMessage<PurchasesReturnsServiceUpdateRequest> | undefined, b: PurchasesReturnsServiceUpdateRequest | PlainMessage<PurchasesReturnsServiceUpdateRequest> | undefined): boolean {
    return proto3.util.equals(PurchasesReturnsServiceUpdateRequest, a, b);
  }
}

/**
 *
 * Stores the UUID references of the record
 *
 * @generated from message Scailo.PurchaseReturnAncillaryParameters
 */
export class PurchaseReturnAncillaryParameters extends Message<PurchaseReturnAncillaryParameters> {
  /**
   * The UUID of the ref_id (the UUID of the associated ref_id)
   *
   * @generated from field: string ref_uuid = 213;
   */
  refUuid = "";

  /**
   * The UUID of the location (the UUID of the associated location_id)
   *
   * @generated from field: string location_uuid = 215;
   */
  locationUuid = "";

  constructor(data?: PartialMessage<PurchaseReturnAncillaryParameters>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.PurchaseReturnAncillaryParameters";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 213, name: "ref_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 215, name: "location_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PurchaseReturnAncillaryParameters {
    return new PurchaseReturnAncillaryParameters().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PurchaseReturnAncillaryParameters {
    return new PurchaseReturnAncillaryParameters().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PurchaseReturnAncillaryParameters {
    return new PurchaseReturnAncillaryParameters().fromJsonString(jsonString, options);
  }

  static equals(a: PurchaseReturnAncillaryParameters | PlainMessage<PurchaseReturnAncillaryParameters> | undefined, b: PurchaseReturnAncillaryParameters | PlainMessage<PurchaseReturnAncillaryParameters> | undefined): boolean {
    return proto3.util.equals(PurchaseReturnAncillaryParameters, a, b);
  }
}

/**
 *
 * Describes the parameters that are part of a standard response
 *
 * @generated from message Scailo.PurchaseReturn
 */
export class PurchaseReturn extends Message<PurchaseReturn> {
  /**
   * Stores a globally unique entity UUID. This will be set at the organization level
   *
   * @generated from field: string entity_uuid = 1;
   */
  entityUuid = "";

  /**
   * Stores the metadata of this purchase return
   *
   * @generated from field: Scailo.EmployeeMetadata metadata = 2;
   */
  metadata?: EmployeeMetadata;

  /**
   * Stores the approval metadata
   *
   * @generated from field: Scailo.ApprovalMetadata approval_metadata = 3;
   */
  approvalMetadata?: ApprovalMetadata;

  /**
   * The status of this purchase return
   *
   * @generated from field: Scailo.STANDARD_LIFECYCLE_STATUS status = 4;
   */
  status = STANDARD_LIFECYCLE_STATUS.ANY_UNSPECIFIED;

  /**
   * Stores the logs of every operation performed on this purchase return
   *
   * @generated from field: repeated Scailo.LogbookLogConciseSLC logs = 5;
   */
  logs: LogbookLogConciseSLC[] = [];

  /**
   * The timestamp of when this purchase return was marked as completed
   *
   * @generated from field: uint64 completed_on = 6;
   */
  completedOn = protoInt64.zero;

  /**
   * The associated vault folder ID
   *
   * @generated from field: uint64 vault_folder_id = 9;
   */
  vaultFolderId = protoInt64.zero;

  /**
   * The reference ID of the purchase return
   *
   * @generated from field: string reference_id = 10;
   */
  referenceId = "";

  /**
   * The unique reference number that has been automatically generated
   *
   * @generated from field: string final_ref_number = 11;
   */
  finalRefNumber = "";

  /**
   * The associated reference
   *
   * @generated from field: Scailo.PURCHASE_RETURN_REF_FROM ref_from = 12;
   */
  refFrom = PURCHASE_RETURN_REF_FROM.PURCHASE_RETURN_REF_FROM_ANY_UNSPECIFIED;

  /**
   * The associated ID of the reference
   *
   * @generated from field: uint64 ref_id = 13;
   */
  refId = protoInt64.zero;

  /**
   * The location ID of where the record is created
   *
   * @generated from field: uint64 location_id = 15;
   */
  locationId = protoInt64.zero;

  /**
   * The list of associated purchase return items
   *
   * @generated from field: repeated Scailo.PurchaseReturnItem list = 20;
   */
  list: PurchaseReturnItem[] = [];

  /**
   * The list of dynamic forms
   *
   * @generated from field: repeated Scailo.FormFieldDatum form_data = 30;
   */
  formData: FormFieldDatum[] = [];

  constructor(data?: PartialMessage<PurchaseReturn>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.PurchaseReturn";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "entity_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "metadata", kind: "message", T: EmployeeMetadata },
    { no: 3, name: "approval_metadata", kind: "message", T: ApprovalMetadata },
    { no: 4, name: "status", kind: "enum", T: proto3.getEnumType(STANDARD_LIFECYCLE_STATUS) },
    { no: 5, name: "logs", kind: "message", T: LogbookLogConciseSLC, repeated: true },
    { no: 6, name: "completed_on", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 9, name: "vault_folder_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 10, name: "reference_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 11, name: "final_ref_number", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 12, name: "ref_from", kind: "enum", T: proto3.getEnumType(PURCHASE_RETURN_REF_FROM) },
    { no: 13, name: "ref_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 15, name: "location_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 20, name: "list", kind: "message", T: PurchaseReturnItem, repeated: true },
    { no: 30, name: "form_data", kind: "message", T: FormFieldDatum, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PurchaseReturn {
    return new PurchaseReturn().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PurchaseReturn {
    return new PurchaseReturn().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PurchaseReturn {
    return new PurchaseReturn().fromJsonString(jsonString, options);
  }

  static equals(a: PurchaseReturn | PlainMessage<PurchaseReturn> | undefined, b: PurchaseReturn | PlainMessage<PurchaseReturn> | undefined): boolean {
    return proto3.util.equals(PurchaseReturn, a, b);
  }
}

/**
 *
 * Describes the parameters required to add an item to a purchase return
 *
 * @generated from message Scailo.PurchasesReturnsServiceItemCreateRequest
 */
export class PurchasesReturnsServiceItemCreateRequest extends Message<PurchasesReturnsServiceItemCreateRequest> {
  /**
   * Stores any comment that the user might add during this operation
   *
   * @generated from field: string user_comment = 1;
   */
  userComment = "";

  /**
   * Stores the purchase return ID
   *
   * @generated from field: uint64 purchase_return_id = 10;
   */
  purchaseReturnId = protoInt64.zero;

  /**
   * Stores the family ID
   *
   * @generated from field: uint64 family_id = 11;
   */
  familyId = protoInt64.zero;

  /**
   * Stores the item hash to be dispatched
   *
   * @generated from field: string item_hash = 12;
   */
  itemHash = "";

  /**
   * The quantity (in cents) being dispatched in internal unit of material
   *
   * @generated from field: uint64 internal_quantity = 13;
   */
  internalQuantity = protoInt64.zero;

  /**
   * Stores the ID of the vendor's unit of material
   *
   * @generated from field: uint64 vendor_uom_id = 14;
   */
  vendorUomId = protoInt64.zero;

  /**
   * Stores the quantity (in cents) being dispatched in vendor's unit of material
   *
   * @generated from field: uint64 vendor_quantity = 15;
   */
  vendorQuantity = protoInt64.zero;

  constructor(data?: PartialMessage<PurchasesReturnsServiceItemCreateRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.PurchasesReturnsServiceItemCreateRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "user_comment", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 10, name: "purchase_return_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 11, name: "family_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 12, name: "item_hash", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 13, name: "internal_quantity", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 14, name: "vendor_uom_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 15, name: "vendor_quantity", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PurchasesReturnsServiceItemCreateRequest {
    return new PurchasesReturnsServiceItemCreateRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PurchasesReturnsServiceItemCreateRequest {
    return new PurchasesReturnsServiceItemCreateRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PurchasesReturnsServiceItemCreateRequest {
    return new PurchasesReturnsServiceItemCreateRequest().fromJsonString(jsonString, options);
  }

  static equals(a: PurchasesReturnsServiceItemCreateRequest | PlainMessage<PurchasesReturnsServiceItemCreateRequest> | undefined, b: PurchasesReturnsServiceItemCreateRequest | PlainMessage<PurchasesReturnsServiceItemCreateRequest> | undefined): boolean {
    return proto3.util.equals(PurchasesReturnsServiceItemCreateRequest, a, b);
  }
}

/**
 *
 * Describes the parameters required to update an item in a purchase return
 *
 * @generated from message Scailo.PurchasesReturnsServiceItemUpdateRequest
 */
export class PurchasesReturnsServiceItemUpdateRequest extends Message<PurchasesReturnsServiceItemUpdateRequest> {
  /**
   * Stores any comment that the user might add during this operation
   *
   * @generated from field: string user_comment = 1;
   */
  userComment = "";

  /**
   * The ID of the record
   *
   * @generated from field: uint64 id = 2;
   */
  id = protoInt64.zero;

  /**
   * Stores the item hash to be dispatched
   *
   * @generated from field: string item_hash = 12;
   */
  itemHash = "";

  /**
   * The quantity (in cents) being dispatched in internal unit of material
   *
   * @generated from field: uint64 internal_quantity = 13;
   */
  internalQuantity = protoInt64.zero;

  /**
   * Stores the ID of the vendor's unit of material
   *
   * @generated from field: uint64 vendor_uom_id = 14;
   */
  vendorUomId = protoInt64.zero;

  /**
   * Stores the quantity (in cents) being dispatched in vendor's unit of material
   *
   * @generated from field: uint64 vendor_quantity = 15;
   */
  vendorQuantity = protoInt64.zero;

  constructor(data?: PartialMessage<PurchasesReturnsServiceItemUpdateRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.PurchasesReturnsServiceItemUpdateRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "user_comment", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 12, name: "item_hash", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 13, name: "internal_quantity", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 14, name: "vendor_uom_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 15, name: "vendor_quantity", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PurchasesReturnsServiceItemUpdateRequest {
    return new PurchasesReturnsServiceItemUpdateRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PurchasesReturnsServiceItemUpdateRequest {
    return new PurchasesReturnsServiceItemUpdateRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PurchasesReturnsServiceItemUpdateRequest {
    return new PurchasesReturnsServiceItemUpdateRequest().fromJsonString(jsonString, options);
  }

  static equals(a: PurchasesReturnsServiceItemUpdateRequest | PlainMessage<PurchasesReturnsServiceItemUpdateRequest> | undefined, b: PurchasesReturnsServiceItemUpdateRequest | PlainMessage<PurchasesReturnsServiceItemUpdateRequest> | undefined): boolean {
    return proto3.util.equals(PurchasesReturnsServiceItemUpdateRequest, a, b);
  }
}

/**
 *
 * Describes the parameters that constitute an item associated to a purchase return
 *
 * @generated from message Scailo.PurchaseReturnItem
 */
export class PurchaseReturnItem extends Message<PurchaseReturnItem> {
  /**
   * Stores a globally unique entity UUID. This will be set at the organization level
   *
   * @generated from field: string entity_uuid = 1;
   */
  entityUuid = "";

  /**
   * Stores the metadata of this purchase return
   *
   * @generated from field: Scailo.EmployeeMetadata metadata = 2;
   */
  metadata?: EmployeeMetadata;

  /**
   * Stores the approval metadata
   *
   * @generated from field: Scailo.ApprovalMetadata approval_metadata = 3;
   */
  approvalMetadata?: ApprovalMetadata;

  /**
   * Denotes if this record requires approval (or has been approved)
   *
   * @generated from field: bool need_approval = 4;
   */
  needApproval = false;

  /**
   * Stores any comment that the user might have added during an operation
   *
   * @generated from field: string user_comment = 5;
   */
  userComment = "";

  /**
   * Stores the purchase return ID
   *
   * @generated from field: uint64 purchase_return_id = 10;
   */
  purchaseReturnId = protoInt64.zero;

  /**
   * Stores the family ID
   *
   * @generated from field: uint64 family_id = 11;
   */
  familyId = protoInt64.zero;

  /**
   * Stores the item hash to be dispatched
   *
   * @generated from field: string item_hash = 12;
   */
  itemHash = "";

  /**
   * The quantity (in cents) being dispatched in internal unit of material
   *
   * @generated from field: uint64 internal_quantity = 13;
   */
  internalQuantity = protoInt64.zero;

  /**
   * Stores the ID of the vendor's unit of material
   *
   * @generated from field: uint64 vendor_uom_id = 14;
   */
  vendorUomId = protoInt64.zero;

  /**
   * Stores the quantity (in cents) being dispatched in vendor's unit of material
   *
   * @generated from field: uint64 vendor_quantity = 15;
   */
  vendorQuantity = protoInt64.zero;

  constructor(data?: PartialMessage<PurchaseReturnItem>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.PurchaseReturnItem";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "entity_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "metadata", kind: "message", T: EmployeeMetadata },
    { no: 3, name: "approval_metadata", kind: "message", T: ApprovalMetadata },
    { no: 4, name: "need_approval", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 5, name: "user_comment", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 10, name: "purchase_return_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 11, name: "family_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 12, name: "item_hash", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 13, name: "internal_quantity", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 14, name: "vendor_uom_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 15, name: "vendor_quantity", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PurchaseReturnItem {
    return new PurchaseReturnItem().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PurchaseReturnItem {
    return new PurchaseReturnItem().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PurchaseReturnItem {
    return new PurchaseReturnItem().fromJsonString(jsonString, options);
  }

  static equals(a: PurchaseReturnItem | PlainMessage<PurchaseReturnItem> | undefined, b: PurchaseReturnItem | PlainMessage<PurchaseReturnItem> | undefined): boolean {
    return proto3.util.equals(PurchaseReturnItem, a, b);
  }
}

/**
 *
 * Describes the message consisting of the list of purchases returns
 *
 * @generated from message Scailo.PurchasesReturnsList
 */
export class PurchasesReturnsList extends Message<PurchasesReturnsList> {
  /**
   * List of records
   *
   * @generated from field: repeated Scailo.PurchaseReturn list = 1;
   */
  list: PurchaseReturn[] = [];

  constructor(data?: PartialMessage<PurchasesReturnsList>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.PurchasesReturnsList";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "list", kind: "message", T: PurchaseReturn, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PurchasesReturnsList {
    return new PurchasesReturnsList().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PurchasesReturnsList {
    return new PurchasesReturnsList().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PurchasesReturnsList {
    return new PurchasesReturnsList().fromJsonString(jsonString, options);
  }

  static equals(a: PurchasesReturnsList | PlainMessage<PurchasesReturnsList> | undefined, b: PurchasesReturnsList | PlainMessage<PurchasesReturnsList> | undefined): boolean {
    return proto3.util.equals(PurchasesReturnsList, a, b);
  }
}

/**
 *
 * Describes the message consisting of the list of purchase return items
 *
 * @generated from message Scailo.PurchasesReturnsItemsList
 */
export class PurchasesReturnsItemsList extends Message<PurchasesReturnsItemsList> {
  /**
   * List of records
   *
   * @generated from field: repeated Scailo.PurchaseReturnItem list = 1;
   */
  list: PurchaseReturnItem[] = [];

  constructor(data?: PartialMessage<PurchasesReturnsItemsList>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.PurchasesReturnsItemsList";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "list", kind: "message", T: PurchaseReturnItem, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PurchasesReturnsItemsList {
    return new PurchasesReturnsItemsList().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PurchasesReturnsItemsList {
    return new PurchasesReturnsItemsList().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PurchasesReturnsItemsList {
    return new PurchasesReturnsItemsList().fromJsonString(jsonString, options);
  }

  static equals(a: PurchasesReturnsItemsList | PlainMessage<PurchasesReturnsItemsList> | undefined, b: PurchasesReturnsItemsList | PlainMessage<PurchasesReturnsItemsList> | undefined): boolean {
    return proto3.util.equals(PurchasesReturnsItemsList, a, b);
  }
}

/**
 *
 * Describes the parameters that are required to retrieve the history of the record
 *
 * @generated from message Scailo.PurchaseReturnItemHistoryRequest
 */
export class PurchaseReturnItemHistoryRequest extends Message<PurchaseReturnItemHistoryRequest> {
  /**
   * Stores the purchase return ID
   *
   * @generated from field: uint64 purchase_return_id = 10;
   */
  purchaseReturnId = protoInt64.zero;

  /**
   * Stores the family ID
   *
   * @generated from field: uint64 family_id = 11;
   */
  familyId = protoInt64.zero;

  constructor(data?: PartialMessage<PurchaseReturnItemHistoryRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.PurchaseReturnItemHistoryRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 10, name: "purchase_return_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 11, name: "family_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PurchaseReturnItemHistoryRequest {
    return new PurchaseReturnItemHistoryRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PurchaseReturnItemHistoryRequest {
    return new PurchaseReturnItemHistoryRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PurchaseReturnItemHistoryRequest {
    return new PurchaseReturnItemHistoryRequest().fromJsonString(jsonString, options);
  }

  static equals(a: PurchaseReturnItemHistoryRequest | PlainMessage<PurchaseReturnItemHistoryRequest> | undefined, b: PurchaseReturnItemHistoryRequest | PlainMessage<PurchaseReturnItemHistoryRequest> | undefined): boolean {
    return proto3.util.equals(PurchaseReturnItemHistoryRequest, a, b);
  }
}

/**
 *
 * Describes the parameters that are required to retrieve the info of a prospective purchase return item
 *
 * @generated from message Scailo.PurchaseReturnItemProspectiveInfoRequest
 */
export class PurchaseReturnItemProspectiveInfoRequest extends Message<PurchaseReturnItemProspectiveInfoRequest> {
  /**
   * Stores the purchase return ID
   *
   * @generated from field: uint64 purchase_return_id = 10;
   */
  purchaseReturnId = protoInt64.zero;

  /**
   * Stores the family ID
   *
   * @generated from field: uint64 family_id = 11;
   */
  familyId = protoInt64.zero;

  constructor(data?: PartialMessage<PurchaseReturnItemProspectiveInfoRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.PurchaseReturnItemProspectiveInfoRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 10, name: "purchase_return_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 11, name: "family_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PurchaseReturnItemProspectiveInfoRequest {
    return new PurchaseReturnItemProspectiveInfoRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PurchaseReturnItemProspectiveInfoRequest {
    return new PurchaseReturnItemProspectiveInfoRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PurchaseReturnItemProspectiveInfoRequest {
    return new PurchaseReturnItemProspectiveInfoRequest().fromJsonString(jsonString, options);
  }

  static equals(a: PurchaseReturnItemProspectiveInfoRequest | PlainMessage<PurchaseReturnItemProspectiveInfoRequest> | undefined, b: PurchaseReturnItemProspectiveInfoRequest | PlainMessage<PurchaseReturnItemProspectiveInfoRequest> | undefined): boolean {
    return proto3.util.equals(PurchaseReturnItemProspectiveInfoRequest, a, b);
  }
}

/**
 *
 * Describes the request payload to retrieve approved or unapproved items.
 *
 * @generated from message Scailo.PurchaseReturnItemsSearchRequest
 */
export class PurchaseReturnItemsSearchRequest extends Message<PurchaseReturnItemsSearchRequest> {
  /**
   * If true, then returns only active records. If false, then returns only inactive records
   *
   * @generated from field: Scailo.BOOL_FILTER is_active = 1;
   */
  isActive = BOOL_FILTER.BOOL_FILTER_ANY_UNSPECIFIED;

  /**
   * The number of records that need to be sent in the response. Returns all records if it is set to -1
   *
   * @generated from field: int64 count = 2;
   */
  count = protoInt64.zero;

  /**
   * The number that need to be offset by before fetching the records
   *
   * @generated from field: uint64 offset = 3;
   */
  offset = protoInt64.zero;

  /**
   * The sort order that is to be used to fetch the pagination response
   *
   * @generated from field: Scailo.SORT_ORDER sort_order = 4;
   */
  sortOrder = SORT_ORDER.ASCENDING_UNSPECIFIED;

  /**
   * The sort key that is to be used to fetch the pagination response
   *
   * @generated from field: Scailo.PURCHASE_RETURN_ITEM_SORT_KEY sort_key = 5;
   */
  sortKey = PURCHASE_RETURN_ITEM_SORT_KEY.PURCHASE_RETURN_ITEM_SORT_KEY_ID_UNSPECIFIED;

  /**
   * The entity UUID that is to be used to filter records
   *
   * @generated from field: string entity_uuid = 6;
   */
  entityUuid = "";

  /**
   * The status of the items
   *
   * @generated from field: Scailo.PURCHASE_RETURN_ITEM_STATUS status = 7;
   */
  status = PURCHASE_RETURN_ITEM_STATUS.PURCHASE_RETURN_ITEM_STATUS_ANY_UNSPECIFIED;

  /**
   * The start range of approved timestamp
   *
   * @generated from field: uint64 approved_on_start = 10;
   */
  approvedOnStart = protoInt64.zero;

  /**
   * The end range of approved timestamp
   *
   * @generated from field: uint64 approved_on_end = 11;
   */
  approvedOnEnd = protoInt64.zero;

  /**
   * The ID of the approver
   *
   * @generated from field: uint64 approved_by_user_id = 12;
   */
  approvedByUserId = protoInt64.zero;

  /**
   * The role ID of the approver
   *
   * @generated from field: uint64 approver_role_id = 13;
   */
  approverRoleId = protoInt64.zero;

  /**
   * The ID of the purchase return
   *
   * @generated from field: uint64 purchase_return_id = 20;
   */
  purchaseReturnId = protoInt64.zero;

  /**
   * The ID of the family
   *
   * @generated from field: uint64 family_id = 22;
   */
  familyId = protoInt64.zero;

  /**
   * Stores the item hash to be dispatched
   *
   * @generated from field: string item_hash = 23;
   */
  itemHash = "";

  /**
   * The ID of the vendor's unit of material
   *
   * @generated from field: uint64 vendor_uom_id = 24;
   */
  vendorUomId = protoInt64.zero;

  /**
   * Describes the key with which the search operation needs to be performed
   *
   * @generated from field: string search_key = 40;
   */
  searchKey = "";

  constructor(data?: PartialMessage<PurchaseReturnItemsSearchRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.PurchaseReturnItemsSearchRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "is_active", kind: "enum", T: proto3.getEnumType(BOOL_FILTER) },
    { no: 2, name: "count", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "offset", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 4, name: "sort_order", kind: "enum", T: proto3.getEnumType(SORT_ORDER) },
    { no: 5, name: "sort_key", kind: "enum", T: proto3.getEnumType(PURCHASE_RETURN_ITEM_SORT_KEY) },
    { no: 6, name: "entity_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 7, name: "status", kind: "enum", T: proto3.getEnumType(PURCHASE_RETURN_ITEM_STATUS) },
    { no: 10, name: "approved_on_start", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 11, name: "approved_on_end", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 12, name: "approved_by_user_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 13, name: "approver_role_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 20, name: "purchase_return_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 22, name: "family_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 23, name: "item_hash", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 24, name: "vendor_uom_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 40, name: "search_key", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PurchaseReturnItemsSearchRequest {
    return new PurchaseReturnItemsSearchRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PurchaseReturnItemsSearchRequest {
    return new PurchaseReturnItemsSearchRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PurchaseReturnItemsSearchRequest {
    return new PurchaseReturnItemsSearchRequest().fromJsonString(jsonString, options);
  }

  static equals(a: PurchaseReturnItemsSearchRequest | PlainMessage<PurchaseReturnItemsSearchRequest> | undefined, b: PurchaseReturnItemsSearchRequest | PlainMessage<PurchaseReturnItemsSearchRequest> | undefined): boolean {
    return proto3.util.equals(PurchaseReturnItemsSearchRequest, a, b);
  }
}

/**
 *
 * Describes the response to a pagination items request
 *
 * @generated from message Scailo.PurchasesReturnsServicePaginatedItemsResponse
 */
export class PurchasesReturnsServicePaginatedItemsResponse extends Message<PurchasesReturnsServicePaginatedItemsResponse> {
  /**
   * The number of records in this payload
   *
   * @generated from field: uint64 count = 1;
   */
  count = protoInt64.zero;

  /**
   * The number that has been offset before fetching the records. This is the same value that has been sent as part of the pagination request
   *
   * @generated from field: uint64 offset = 2;
   */
  offset = protoInt64.zero;

  /**
   * The total number of records that are available
   *
   * @generated from field: uint64 total = 3;
   */
  total = protoInt64.zero;

  /**
   * The list of records
   *
   * @generated from field: repeated Scailo.PurchaseReturnItem payload = 4;
   */
  payload: PurchaseReturnItem[] = [];

  constructor(data?: PartialMessage<PurchasesReturnsServicePaginatedItemsResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.PurchasesReturnsServicePaginatedItemsResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "count", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 2, name: "offset", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 3, name: "total", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 4, name: "payload", kind: "message", T: PurchaseReturnItem, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PurchasesReturnsServicePaginatedItemsResponse {
    return new PurchasesReturnsServicePaginatedItemsResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PurchasesReturnsServicePaginatedItemsResponse {
    return new PurchasesReturnsServicePaginatedItemsResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PurchasesReturnsServicePaginatedItemsResponse {
    return new PurchasesReturnsServicePaginatedItemsResponse().fromJsonString(jsonString, options);
  }

  static equals(a: PurchasesReturnsServicePaginatedItemsResponse | PlainMessage<PurchasesReturnsServicePaginatedItemsResponse> | undefined, b: PurchasesReturnsServicePaginatedItemsResponse | PlainMessage<PurchasesReturnsServicePaginatedItemsResponse> | undefined): boolean {
    return proto3.util.equals(PurchasesReturnsServicePaginatedItemsResponse, a, b);
  }
}

/**
 *
 * Describes the request payload to retrieve the quantity that has already been added for the specific ref_from, ref_id and family_id
 *
 * @generated from message Scailo.PurchasesReturnsServiceAlreadyAddedQuantityForSourceRequest
 */
export class PurchasesReturnsServiceAlreadyAddedQuantityForSourceRequest extends Message<PurchasesReturnsServiceAlreadyAddedQuantityForSourceRequest> {
  /**
   * The associated reference
   *
   * @generated from field: Scailo.PURCHASE_RETURN_REF_FROM ref_from = 1;
   */
  refFrom = PURCHASE_RETURN_REF_FROM.PURCHASE_RETURN_REF_FROM_ANY_UNSPECIFIED;

  /**
   * The associated ID of the reference
   *
   * @generated from field: uint64 ref_id = 2;
   */
  refId = protoInt64.zero;

  /**
   * The associated family ID
   *
   * @generated from field: uint64 family_id = 3;
   */
  familyId = protoInt64.zero;

  constructor(data?: PartialMessage<PurchasesReturnsServiceAlreadyAddedQuantityForSourceRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.PurchasesReturnsServiceAlreadyAddedQuantityForSourceRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "ref_from", kind: "enum", T: proto3.getEnumType(PURCHASE_RETURN_REF_FROM) },
    { no: 2, name: "ref_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 3, name: "family_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PurchasesReturnsServiceAlreadyAddedQuantityForSourceRequest {
    return new PurchasesReturnsServiceAlreadyAddedQuantityForSourceRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PurchasesReturnsServiceAlreadyAddedQuantityForSourceRequest {
    return new PurchasesReturnsServiceAlreadyAddedQuantityForSourceRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PurchasesReturnsServiceAlreadyAddedQuantityForSourceRequest {
    return new PurchasesReturnsServiceAlreadyAddedQuantityForSourceRequest().fromJsonString(jsonString, options);
  }

  static equals(a: PurchasesReturnsServiceAlreadyAddedQuantityForSourceRequest | PlainMessage<PurchasesReturnsServiceAlreadyAddedQuantityForSourceRequest> | undefined, b: PurchasesReturnsServiceAlreadyAddedQuantityForSourceRequest | PlainMessage<PurchasesReturnsServiceAlreadyAddedQuantityForSourceRequest> | undefined): boolean {
    return proto3.util.equals(PurchasesReturnsServiceAlreadyAddedQuantityForSourceRequest, a, b);
  }
}

/**
 *
 * Describes a pagination request to retrieve records
 *
 * @generated from message Scailo.PurchasesReturnsServicePaginationReq
 */
export class PurchasesReturnsServicePaginationReq extends Message<PurchasesReturnsServicePaginationReq> {
  /**
   * If true, then returns only active records. If false, then returns only inactive records
   *
   * @generated from field: Scailo.BOOL_FILTER is_active = 1;
   */
  isActive = BOOL_FILTER.BOOL_FILTER_ANY_UNSPECIFIED;

  /**
   * The number of records that need to be sent in the response
   *
   * @generated from field: int64 count = 2;
   */
  count = protoInt64.zero;

  /**
   * The number that need to be offset by before fetching the records
   *
   * @generated from field: uint64 offset = 3;
   */
  offset = protoInt64.zero;

  /**
   * The sort order that is to be used to fetch the pagination response
   *
   * @generated from field: Scailo.SORT_ORDER sort_order = 4;
   */
  sortOrder = SORT_ORDER.ASCENDING_UNSPECIFIED;

  /**
   * The sort key that is to be used to fetch the pagination response
   *
   * @generated from field: Scailo.PURCHASE_RETURN_SORT_KEY sort_key = 5;
   */
  sortKey = PURCHASE_RETURN_SORT_KEY.PURCHASE_RETURN_SORT_KEY_ID_UNSPECIFIED;

  /**
   * The status of this purchase return
   *
   * @generated from field: Scailo.STANDARD_LIFECYCLE_STATUS status = 6;
   */
  status = STANDARD_LIFECYCLE_STATUS.ANY_UNSPECIFIED;

  constructor(data?: PartialMessage<PurchasesReturnsServicePaginationReq>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.PurchasesReturnsServicePaginationReq";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "is_active", kind: "enum", T: proto3.getEnumType(BOOL_FILTER) },
    { no: 2, name: "count", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "offset", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 4, name: "sort_order", kind: "enum", T: proto3.getEnumType(SORT_ORDER) },
    { no: 5, name: "sort_key", kind: "enum", T: proto3.getEnumType(PURCHASE_RETURN_SORT_KEY) },
    { no: 6, name: "status", kind: "enum", T: proto3.getEnumType(STANDARD_LIFECYCLE_STATUS) },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PurchasesReturnsServicePaginationReq {
    return new PurchasesReturnsServicePaginationReq().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PurchasesReturnsServicePaginationReq {
    return new PurchasesReturnsServicePaginationReq().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PurchasesReturnsServicePaginationReq {
    return new PurchasesReturnsServicePaginationReq().fromJsonString(jsonString, options);
  }

  static equals(a: PurchasesReturnsServicePaginationReq | PlainMessage<PurchasesReturnsServicePaginationReq> | undefined, b: PurchasesReturnsServicePaginationReq | PlainMessage<PurchasesReturnsServicePaginationReq> | undefined): boolean {
    return proto3.util.equals(PurchasesReturnsServicePaginationReq, a, b);
  }
}

/**
 *
 * Describes the response to a pagination request
 *
 * @generated from message Scailo.PurchasesReturnsServicePaginationResponse
 */
export class PurchasesReturnsServicePaginationResponse extends Message<PurchasesReturnsServicePaginationResponse> {
  /**
   * The number of records in this payload
   *
   * @generated from field: uint64 count = 1;
   */
  count = protoInt64.zero;

  /**
   * The number that has been offset before fetching the records. This is the same value that has been sent as part of the pagination request
   *
   * @generated from field: uint64 offset = 2;
   */
  offset = protoInt64.zero;

  /**
   * The total number of records that are available
   *
   * @generated from field: uint64 total = 3;
   */
  total = protoInt64.zero;

  /**
   * The list of records
   *
   * @generated from field: repeated Scailo.PurchaseReturn payload = 4;
   */
  payload: PurchaseReturn[] = [];

  constructor(data?: PartialMessage<PurchasesReturnsServicePaginationResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.PurchasesReturnsServicePaginationResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "count", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 2, name: "offset", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 3, name: "total", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 4, name: "payload", kind: "message", T: PurchaseReturn, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PurchasesReturnsServicePaginationResponse {
    return new PurchasesReturnsServicePaginationResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PurchasesReturnsServicePaginationResponse {
    return new PurchasesReturnsServicePaginationResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PurchasesReturnsServicePaginationResponse {
    return new PurchasesReturnsServicePaginationResponse().fromJsonString(jsonString, options);
  }

  static equals(a: PurchasesReturnsServicePaginationResponse | PlainMessage<PurchasesReturnsServicePaginationResponse> | undefined, b: PurchasesReturnsServicePaginationResponse | PlainMessage<PurchasesReturnsServicePaginationResponse> | undefined): boolean {
    return proto3.util.equals(PurchasesReturnsServicePaginationResponse, a, b);
  }
}

/**
 *
 * Describes the base request payload of a filter search
 *
 * @generated from message Scailo.PurchasesReturnsServiceFilterReq
 */
export class PurchasesReturnsServiceFilterReq extends Message<PurchasesReturnsServiceFilterReq> {
  /**
   * If true, then returns only active records. If false, then returns only inactive records
   *
   * @generated from field: Scailo.BOOL_FILTER is_active = 1;
   */
  isActive = BOOL_FILTER.BOOL_FILTER_ANY_UNSPECIFIED;

  /**
   * The number of records that need to be sent in the response. Returns all records if it is set to -1
   *
   * @generated from field: int64 count = 2;
   */
  count = protoInt64.zero;

  /**
   * The number that need to be offset by before fetching the records
   *
   * @generated from field: uint64 offset = 3;
   */
  offset = protoInt64.zero;

  /**
   * The sort order that is to be used to fetch the pagination response
   *
   * @generated from field: Scailo.SORT_ORDER sort_order = 4;
   */
  sortOrder = SORT_ORDER.ASCENDING_UNSPECIFIED;

  /**
   * The sort key that is to be used to fetch the pagination response
   *
   * @generated from field: Scailo.PURCHASE_RETURN_SORT_KEY sort_key = 5;
   */
  sortKey = PURCHASE_RETURN_SORT_KEY.PURCHASE_RETURN_SORT_KEY_ID_UNSPECIFIED;

  /**
   * The minimum timestamp that needs to be considered to filter by creation
   *
   * @generated from field: uint64 creation_timestamp_start = 101;
   */
  creationTimestampStart = protoInt64.zero;

  /**
   * The maximum timestamp that needs to be considered to filter by creation
   *
   * @generated from field: uint64 creation_timestamp_end = 102;
   */
  creationTimestampEnd = protoInt64.zero;

  /**
   * The minimum timestamp that needs to be considered to filter by modification
   *
   * @generated from field: uint64 modification_timestamp_start = 103;
   */
  modificationTimestampStart = protoInt64.zero;

  /**
   * The maximum timestamp that needs to be considered to filter by modification
   *
   * @generated from field: uint64 modification_timestamp_end = 104;
   */
  modificationTimestampEnd = protoInt64.zero;

  /**
   * The entity UUID that is to be used to filter records
   *
   * @generated from field: string entity_uuid = 8;
   */
  entityUuid = "";

  /**
   * The status of this purchase return
   *
   * @generated from field: Scailo.STANDARD_LIFECYCLE_STATUS status = 10;
   */
  status = STANDARD_LIFECYCLE_STATUS.ANY_UNSPECIFIED;

  /**
   * The start range of approved timestamp
   *
   * @generated from field: uint64 approved_on_start = 11;
   */
  approvedOnStart = protoInt64.zero;

  /**
   * The end range of approved timestamp
   *
   * @generated from field: uint64 approved_on_end = 12;
   */
  approvedOnEnd = protoInt64.zero;

  /**
   * The ID of the approver
   *
   * @generated from field: uint64 approved_by_user_id = 13;
   */
  approvedByUserId = protoInt64.zero;

  /**
   * The role ID of the approver
   *
   * @generated from field: uint64 approver_role_id = 14;
   */
  approverRoleId = protoInt64.zero;

  /**
   * The start range of completed timestamp
   *
   * @generated from field: uint64 completed_on_start = 15;
   */
  completedOnStart = protoInt64.zero;

  /**
   * The end range of completed timestamp
   *
   * @generated from field: uint64 completed_on_end = 16;
   */
  completedOnEnd = protoInt64.zero;

  /**
   * The reference ID of the purchase return
   *
   * @generated from field: string reference_id = 20;
   */
  referenceId = "";

  /**
   * The unique reference number that has been automatically generated
   *
   * @generated from field: string final_ref_number = 21;
   */
  finalRefNumber = "";

  /**
   * The associated reference
   *
   * @generated from field: Scailo.PURCHASE_RETURN_REF_FROM ref_from = 22;
   */
  refFrom = PURCHASE_RETURN_REF_FROM.PURCHASE_RETURN_REF_FROM_ANY_UNSPECIFIED;

  /**
   * The associated ID of the reference
   *
   * @generated from field: uint64 ref_id = 23;
   */
  refId = protoInt64.zero;

  /**
   * The location ID of where the record is created
   *
   * @generated from field: uint64 location_id = 25;
   */
  locationId = protoInt64.zero;

  /**
   * The status of the purchase return bill
   *
   * @generated from field: Scailo.PURCHASE_RETURN_BILLING_STATUS billing_status = 40;
   */
  billingStatus = PURCHASE_RETURN_BILLING_STATUS.PURCHASE_RETURN_BILLING_STATUS_ANY_UNSPECIFIED;

  /**
   * The ID of the associated vendor
   *
   * @generated from field: uint64 vendor_id = 50;
   */
  vendorId = protoInt64.zero;

  /**
   * The ID of the associated project
   *
   * @generated from field: uint64 project_id = 51;
   */
  projectId = protoInt64.zero;

  /**
   * The ID of the family
   *
   * @generated from field: uint64 family_id = 60;
   */
  familyId = protoInt64.zero;

  /**
   * The list of form data filters
   *
   * @generated from field: repeated Scailo.FormFieldDatumFilterRequest form_data = 500;
   */
  formData: FormFieldDatumFilterRequest[] = [];

  constructor(data?: PartialMessage<PurchasesReturnsServiceFilterReq>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.PurchasesReturnsServiceFilterReq";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "is_active", kind: "enum", T: proto3.getEnumType(BOOL_FILTER) },
    { no: 2, name: "count", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "offset", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 4, name: "sort_order", kind: "enum", T: proto3.getEnumType(SORT_ORDER) },
    { no: 5, name: "sort_key", kind: "enum", T: proto3.getEnumType(PURCHASE_RETURN_SORT_KEY) },
    { no: 101, name: "creation_timestamp_start", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 102, name: "creation_timestamp_end", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 103, name: "modification_timestamp_start", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 104, name: "modification_timestamp_end", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 8, name: "entity_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 10, name: "status", kind: "enum", T: proto3.getEnumType(STANDARD_LIFECYCLE_STATUS) },
    { no: 11, name: "approved_on_start", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 12, name: "approved_on_end", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 13, name: "approved_by_user_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 14, name: "approver_role_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 15, name: "completed_on_start", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 16, name: "completed_on_end", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 20, name: "reference_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 21, name: "final_ref_number", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 22, name: "ref_from", kind: "enum", T: proto3.getEnumType(PURCHASE_RETURN_REF_FROM) },
    { no: 23, name: "ref_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 25, name: "location_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 40, name: "billing_status", kind: "enum", T: proto3.getEnumType(PURCHASE_RETURN_BILLING_STATUS) },
    { no: 50, name: "vendor_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 51, name: "project_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 60, name: "family_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 500, name: "form_data", kind: "message", T: FormFieldDatumFilterRequest, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PurchasesReturnsServiceFilterReq {
    return new PurchasesReturnsServiceFilterReq().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PurchasesReturnsServiceFilterReq {
    return new PurchasesReturnsServiceFilterReq().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PurchasesReturnsServiceFilterReq {
    return new PurchasesReturnsServiceFilterReq().fromJsonString(jsonString, options);
  }

  static equals(a: PurchasesReturnsServiceFilterReq | PlainMessage<PurchasesReturnsServiceFilterReq> | undefined, b: PurchasesReturnsServiceFilterReq | PlainMessage<PurchasesReturnsServiceFilterReq> | undefined): boolean {
    return proto3.util.equals(PurchasesReturnsServiceFilterReq, a, b);
  }
}

/**
 *
 * Describes the base request payload of a count search
 *
 * @generated from message Scailo.PurchasesReturnsServiceCountReq
 */
export class PurchasesReturnsServiceCountReq extends Message<PurchasesReturnsServiceCountReq> {
  /**
   * If true, then returns only active records. If false, then returns only inactive records
   *
   * @generated from field: Scailo.BOOL_FILTER is_active = 1;
   */
  isActive = BOOL_FILTER.BOOL_FILTER_ANY_UNSPECIFIED;

  /**
   * The minimum timestamp that needs to be considered to filter by creation
   *
   * @generated from field: uint64 creation_timestamp_start = 101;
   */
  creationTimestampStart = protoInt64.zero;

  /**
   * The maximum timestamp that needs to be considered to filter by creation
   *
   * @generated from field: uint64 creation_timestamp_end = 102;
   */
  creationTimestampEnd = protoInt64.zero;

  /**
   * The minimum timestamp that needs to be considered to filter by modification
   *
   * @generated from field: uint64 modification_timestamp_start = 103;
   */
  modificationTimestampStart = protoInt64.zero;

  /**
   * The maximum timestamp that needs to be considered to filter by modification
   *
   * @generated from field: uint64 modification_timestamp_end = 104;
   */
  modificationTimestampEnd = protoInt64.zero;

  /**
   * The entity UUID that is to be used to filter records
   *
   * @generated from field: string entity_uuid = 8;
   */
  entityUuid = "";

  /**
   * The status of this purchase return
   *
   * @generated from field: Scailo.STANDARD_LIFECYCLE_STATUS status = 10;
   */
  status = STANDARD_LIFECYCLE_STATUS.ANY_UNSPECIFIED;

  /**
   * The start range of approved timestamp
   *
   * @generated from field: uint64 approved_on_start = 11;
   */
  approvedOnStart = protoInt64.zero;

  /**
   * The end range of approved timestamp
   *
   * @generated from field: uint64 approved_on_end = 12;
   */
  approvedOnEnd = protoInt64.zero;

  /**
   * The ID of the approver
   *
   * @generated from field: uint64 approved_by_user_id = 13;
   */
  approvedByUserId = protoInt64.zero;

  /**
   * The role ID of the approver
   *
   * @generated from field: uint64 approver_role_id = 14;
   */
  approverRoleId = protoInt64.zero;

  /**
   * The start range of completed timestamp
   *
   * @generated from field: uint64 completed_on_start = 15;
   */
  completedOnStart = protoInt64.zero;

  /**
   * The end range of completed timestamp
   *
   * @generated from field: uint64 completed_on_end = 16;
   */
  completedOnEnd = protoInt64.zero;

  /**
   * The reference ID of the purchase return
   *
   * @generated from field: string reference_id = 20;
   */
  referenceId = "";

  /**
   * The unique reference number that has been automatically generated
   *
   * @generated from field: string final_ref_number = 21;
   */
  finalRefNumber = "";

  /**
   * The associated reference
   *
   * @generated from field: Scailo.PURCHASE_RETURN_REF_FROM ref_from = 22;
   */
  refFrom = PURCHASE_RETURN_REF_FROM.PURCHASE_RETURN_REF_FROM_ANY_UNSPECIFIED;

  /**
   * The associated ID of the reference
   *
   * @generated from field: uint64 ref_id = 23;
   */
  refId = protoInt64.zero;

  /**
   * The location ID of where the record is created
   *
   * @generated from field: uint64 location_id = 25;
   */
  locationId = protoInt64.zero;

  /**
   * The status of the purchase return bill
   *
   * @generated from field: Scailo.PURCHASE_RETURN_BILLING_STATUS billing_status = 40;
   */
  billingStatus = PURCHASE_RETURN_BILLING_STATUS.PURCHASE_RETURN_BILLING_STATUS_ANY_UNSPECIFIED;

  /**
   * The ID of the associated vendor
   *
   * @generated from field: uint64 vendor_id = 50;
   */
  vendorId = protoInt64.zero;

  /**
   * The ID of the associated project
   *
   * @generated from field: uint64 project_id = 51;
   */
  projectId = protoInt64.zero;

  /**
   * The ID of the family
   *
   * @generated from field: uint64 family_id = 60;
   */
  familyId = protoInt64.zero;

  /**
   * The list of form data filters
   *
   * @generated from field: repeated Scailo.FormFieldDatumFilterRequest form_data = 500;
   */
  formData: FormFieldDatumFilterRequest[] = [];

  constructor(data?: PartialMessage<PurchasesReturnsServiceCountReq>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.PurchasesReturnsServiceCountReq";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "is_active", kind: "enum", T: proto3.getEnumType(BOOL_FILTER) },
    { no: 101, name: "creation_timestamp_start", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 102, name: "creation_timestamp_end", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 103, name: "modification_timestamp_start", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 104, name: "modification_timestamp_end", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 8, name: "entity_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 10, name: "status", kind: "enum", T: proto3.getEnumType(STANDARD_LIFECYCLE_STATUS) },
    { no: 11, name: "approved_on_start", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 12, name: "approved_on_end", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 13, name: "approved_by_user_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 14, name: "approver_role_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 15, name: "completed_on_start", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 16, name: "completed_on_end", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 20, name: "reference_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 21, name: "final_ref_number", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 22, name: "ref_from", kind: "enum", T: proto3.getEnumType(PURCHASE_RETURN_REF_FROM) },
    { no: 23, name: "ref_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 25, name: "location_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 40, name: "billing_status", kind: "enum", T: proto3.getEnumType(PURCHASE_RETURN_BILLING_STATUS) },
    { no: 50, name: "vendor_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 51, name: "project_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 60, name: "family_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 500, name: "form_data", kind: "message", T: FormFieldDatumFilterRequest, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PurchasesReturnsServiceCountReq {
    return new PurchasesReturnsServiceCountReq().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PurchasesReturnsServiceCountReq {
    return new PurchasesReturnsServiceCountReq().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PurchasesReturnsServiceCountReq {
    return new PurchasesReturnsServiceCountReq().fromJsonString(jsonString, options);
  }

  static equals(a: PurchasesReturnsServiceCountReq | PlainMessage<PurchasesReturnsServiceCountReq> | undefined, b: PurchasesReturnsServiceCountReq | PlainMessage<PurchasesReturnsServiceCountReq> | undefined): boolean {
    return proto3.util.equals(PurchasesReturnsServiceCountReq, a, b);
  }
}

/**
 *
 * Describes the request payload for performing a generic search operation on records
 *
 * @generated from message Scailo.PurchasesReturnsServiceSearchAllReq
 */
export class PurchasesReturnsServiceSearchAllReq extends Message<PurchasesReturnsServiceSearchAllReq> {
  /**
   * If true, then returns only active records. If false, then returns only inactive records
   *
   * @generated from field: Scailo.BOOL_FILTER is_active = 1;
   */
  isActive = BOOL_FILTER.BOOL_FILTER_ANY_UNSPECIFIED;

  /**
   * The number of records that need to be sent in the response. Returns all records if it is set to -1
   *
   * @generated from field: int64 count = 2;
   */
  count = protoInt64.zero;

  /**
   * The number that need to be offset by before fetching the records
   *
   * @generated from field: uint64 offset = 3;
   */
  offset = protoInt64.zero;

  /**
   * The sort order that is to be used to fetch the pagination response
   *
   * @generated from field: Scailo.SORT_ORDER sort_order = 4;
   */
  sortOrder = SORT_ORDER.ASCENDING_UNSPECIFIED;

  /**
   * The sort key that is to be used to fetch the pagination response
   *
   * @generated from field: Scailo.PURCHASE_RETURN_SORT_KEY sort_key = 5;
   */
  sortKey = PURCHASE_RETURN_SORT_KEY.PURCHASE_RETURN_SORT_KEY_ID_UNSPECIFIED;

  /**
   * The entity UUID that is to be used to filter records
   *
   * @generated from field: string entity_uuid = 6;
   */
  entityUuid = "";

  /**
   * Limit the search space to the given status
   *
   * @generated from field: Scailo.STANDARD_LIFECYCLE_STATUS status = 10;
   */
  status = STANDARD_LIFECYCLE_STATUS.ANY_UNSPECIFIED;

  /**
   * Describes the key with which the search operation needs to be performed
   *
   * @generated from field: string search_key = 11;
   */
  searchKey = "";

  /**
   * The associated reference
   *
   * @generated from field: Scailo.PURCHASE_RETURN_REF_FROM ref_from = 22;
   */
  refFrom = PURCHASE_RETURN_REF_FROM.PURCHASE_RETURN_REF_FROM_ANY_UNSPECIFIED;

  /**
   * The associated ID of the reference
   *
   * @generated from field: uint64 ref_id = 23;
   */
  refId = protoInt64.zero;

  /**
   * The status of the purchase return bill
   *
   * @generated from field: Scailo.PURCHASE_RETURN_BILLING_STATUS billing_status = 40;
   */
  billingStatus = PURCHASE_RETURN_BILLING_STATUS.PURCHASE_RETURN_BILLING_STATUS_ANY_UNSPECIFIED;

  /**
   * The ID of the associated vendor
   *
   * @generated from field: uint64 vendor_id = 50;
   */
  vendorId = protoInt64.zero;

  constructor(data?: PartialMessage<PurchasesReturnsServiceSearchAllReq>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Scailo.PurchasesReturnsServiceSearchAllReq";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "is_active", kind: "enum", T: proto3.getEnumType(BOOL_FILTER) },
    { no: 2, name: "count", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "offset", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 4, name: "sort_order", kind: "enum", T: proto3.getEnumType(SORT_ORDER) },
    { no: 5, name: "sort_key", kind: "enum", T: proto3.getEnumType(PURCHASE_RETURN_SORT_KEY) },
    { no: 6, name: "entity_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 10, name: "status", kind: "enum", T: proto3.getEnumType(STANDARD_LIFECYCLE_STATUS) },
    { no: 11, name: "search_key", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 22, name: "ref_from", kind: "enum", T: proto3.getEnumType(PURCHASE_RETURN_REF_FROM) },
    { no: 23, name: "ref_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 40, name: "billing_status", kind: "enum", T: proto3.getEnumType(PURCHASE_RETURN_BILLING_STATUS) },
    { no: 50, name: "vendor_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PurchasesReturnsServiceSearchAllReq {
    return new PurchasesReturnsServiceSearchAllReq().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PurchasesReturnsServiceSearchAllReq {
    return new PurchasesReturnsServiceSearchAllReq().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PurchasesReturnsServiceSearchAllReq {
    return new PurchasesReturnsServiceSearchAllReq().fromJsonString(jsonString, options);
  }

  static equals(a: PurchasesReturnsServiceSearchAllReq | PlainMessage<PurchasesReturnsServiceSearchAllReq> | undefined, b: PurchasesReturnsServiceSearchAllReq | PlainMessage<PurchasesReturnsServiceSearchAllReq> | undefined): boolean {
    return proto3.util.equals(PurchasesReturnsServiceSearchAllReq, a, b);
  }
}

