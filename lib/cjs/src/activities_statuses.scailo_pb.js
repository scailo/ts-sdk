"use strict";
// @generated by protoc-gen-es v1.5.1 with parameter "target=ts"
// @generated from file activities_statuses.scailo.proto (package Scailo, syntax proto3)
/* eslint-disable */
// @ts-nocheck
Object.defineProperty(exports, "__esModule", { value: true });
exports.ActivitiesStatusesServiceSearchAllReq = exports.ActivitiesStatusesServiceCountReq = exports.ActivitiesStatusesServiceFilterReq = exports.ActivitiesStatusesServicePaginationResponse = exports.ActivitiesStatusesServicePaginationReq = exports.ActivitiesStatusesList = exports.ActivityStatus = exports.ActivitiesStatusesServiceUpdateRequest = exports.ActivitiesStatusesServiceCreateRequest = exports.ACTIVITY_STATUS_SORT_KEY = void 0;
const protobuf_1 = require("@bufbuild/protobuf");
const base_scailo_pb_js_1 = require("./base.scailo_pb.js");
/**
 *
 * Describes the available sort keys
 *
 * @generated from enum Scailo.ACTIVITY_STATUS_SORT_KEY
 */
var ACTIVITY_STATUS_SORT_KEY;
(function (ACTIVITY_STATUS_SORT_KEY) {
    /**
     * Fetch ordered results by id
     *
     * @generated from enum value: ACTIVITY_STATUS_SORT_KEY_ID_UNSPECIFIED = 0;
     */
    ACTIVITY_STATUS_SORT_KEY[ACTIVITY_STATUS_SORT_KEY["ACTIVITY_STATUS_SORT_KEY_ID_UNSPECIFIED"] = 0] = "ACTIVITY_STATUS_SORT_KEY_ID_UNSPECIFIED";
    /**
     * Fetch ordered results by the creation timestamp
     *
     * @generated from enum value: ACTIVITY_STATUS_SORT_KEY_CREATED_AT = 1;
     */
    ACTIVITY_STATUS_SORT_KEY[ACTIVITY_STATUS_SORT_KEY["ACTIVITY_STATUS_SORT_KEY_CREATED_AT"] = 1] = "ACTIVITY_STATUS_SORT_KEY_CREATED_AT";
    /**
     * Fetch ordered results by the modified timestamp
     *
     * @generated from enum value: ACTIVITY_STATUS_SORT_KEY_MODIFIED_AT = 2;
     */
    ACTIVITY_STATUS_SORT_KEY[ACTIVITY_STATUS_SORT_KEY["ACTIVITY_STATUS_SORT_KEY_MODIFIED_AT"] = 2] = "ACTIVITY_STATUS_SORT_KEY_MODIFIED_AT";
    /**
     * Fetch ordered results by the approved on timestamp
     *
     * @generated from enum value: ACTIVITY_STATUS_SORT_KEY_APPROVED_ON = 3;
     */
    ACTIVITY_STATUS_SORT_KEY[ACTIVITY_STATUS_SORT_KEY["ACTIVITY_STATUS_SORT_KEY_APPROVED_ON"] = 3] = "ACTIVITY_STATUS_SORT_KEY_APPROVED_ON";
    /**
     * Fetch ordered results by the approved by field
     *
     * @generated from enum value: ACTIVITY_STATUS_SORT_KEY_APPROVED_BY = 4;
     */
    ACTIVITY_STATUS_SORT_KEY[ACTIVITY_STATUS_SORT_KEY["ACTIVITY_STATUS_SORT_KEY_APPROVED_BY"] = 4] = "ACTIVITY_STATUS_SORT_KEY_APPROVED_BY";
    /**
     * Fetch ordered results by the approver's role ID
     *
     * @generated from enum value: ACTIVITY_STATUS_SORT_KEY_APPROVER_ROLE_ID = 5;
     */
    ACTIVITY_STATUS_SORT_KEY[ACTIVITY_STATUS_SORT_KEY["ACTIVITY_STATUS_SORT_KEY_APPROVER_ROLE_ID"] = 5] = "ACTIVITY_STATUS_SORT_KEY_APPROVER_ROLE_ID";
    /**
     * Fetch ordered results by the name
     *
     * @generated from enum value: ACTIVITY_STATUS_SORT_KEY_NAME = 10;
     */
    ACTIVITY_STATUS_SORT_KEY[ACTIVITY_STATUS_SORT_KEY["ACTIVITY_STATUS_SORT_KEY_NAME"] = 10] = "ACTIVITY_STATUS_SORT_KEY_NAME";
    /**
     * Fetch ordered results by the code
     *
     * @generated from enum value: ACTIVITY_STATUS_SORT_KEY_CODE = 11;
     */
    ACTIVITY_STATUS_SORT_KEY[ACTIVITY_STATUS_SORT_KEY["ACTIVITY_STATUS_SORT_KEY_CODE"] = 11] = "ACTIVITY_STATUS_SORT_KEY_CODE";
})(ACTIVITY_STATUS_SORT_KEY || (exports.ACTIVITY_STATUS_SORT_KEY = ACTIVITY_STATUS_SORT_KEY = {}));
// Retrieve enum metadata with: proto3.getEnumType(ACTIVITY_STATUS_SORT_KEY)
protobuf_1.proto3.util.setEnumType(ACTIVITY_STATUS_SORT_KEY, "Scailo.ACTIVITY_STATUS_SORT_KEY", [
    { no: 0, name: "ACTIVITY_STATUS_SORT_KEY_ID_UNSPECIFIED" },
    { no: 1, name: "ACTIVITY_STATUS_SORT_KEY_CREATED_AT" },
    { no: 2, name: "ACTIVITY_STATUS_SORT_KEY_MODIFIED_AT" },
    { no: 3, name: "ACTIVITY_STATUS_SORT_KEY_APPROVED_ON" },
    { no: 4, name: "ACTIVITY_STATUS_SORT_KEY_APPROVED_BY" },
    { no: 5, name: "ACTIVITY_STATUS_SORT_KEY_APPROVER_ROLE_ID" },
    { no: 10, name: "ACTIVITY_STATUS_SORT_KEY_NAME" },
    { no: 11, name: "ACTIVITY_STATUS_SORT_KEY_CODE" },
]);
/**
 *
 * Describes the parameters necessary to create a record
 *
 * @generated from message Scailo.ActivitiesStatusesServiceCreateRequest
 */
class ActivitiesStatusesServiceCreateRequest extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * ActivitiesStatuses a globally unique entity UUID. This will be set at the organization level
         *
         * @generated from field: string entity_uuid = 1;
         */
        this.entityUuid = "";
        /**
         * ActivitiesStatuses any comment that the user might add during this operation
         *
         * @generated from field: string user_comment = 2;
         */
        this.userComment = "";
        /**
         * The name of the activity status
         *
         * @generated from field: string name = 10;
         */
        this.name = "";
        /**
         * The unique code by which the activity status is classified
         *
         * @generated from field: string code = 11;
         */
        this.code = "";
        /**
         * The color of the text that is displayed for easy recognition
         *
         * @generated from field: string fg_color = 12;
         */
        this.fgColor = "";
        /**
         * The background color that is displayed for easy recognition
         *
         * @generated from field: string bg_color = 13;
         */
        this.bgColor = "";
        /**
         * The description of the activity status
         *
         * @generated from field: string description = 14;
         */
        this.description = "";
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new ActivitiesStatusesServiceCreateRequest().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new ActivitiesStatusesServiceCreateRequest().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new ActivitiesStatusesServiceCreateRequest().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(ActivitiesStatusesServiceCreateRequest, a, b);
    }
}
exports.ActivitiesStatusesServiceCreateRequest = ActivitiesStatusesServiceCreateRequest;
ActivitiesStatusesServiceCreateRequest.runtime = protobuf_1.proto3;
ActivitiesStatusesServiceCreateRequest.typeName = "Scailo.ActivitiesStatusesServiceCreateRequest";
ActivitiesStatusesServiceCreateRequest.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "entity_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "user_comment", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 10, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 11, name: "code", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 12, name: "fg_color", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 13, name: "bg_color", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 14, name: "description", kind: "scalar", T: 9 /* ScalarType.STRING */ },
]);
/**
 *
 * Describes the parameters necessary to update a record
 *
 * @generated from message Scailo.ActivitiesStatusesServiceUpdateRequest
 */
class ActivitiesStatusesServiceUpdateRequest extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * ActivitiesStatuses any comment that the user might add during this operation
         *
         * @generated from field: string user_comment = 1;
         */
        this.userComment = "";
        /**
         * The ID of the record that needs to be updated
         *
         * @generated from field: uint64 id = 2;
         */
        this.id = protobuf_1.protoInt64.zero;
        /**
         * Optional boolean value that activities statuses if a notification needs to be sent to users about the update to the record. This is useful when a subsequent operation needs to be performed immediately (such as send to verification after updating the revision)
         *
         * @generated from field: bool notify_users = 3;
         */
        this.notifyUsers = false;
        /**
         * The name of the activity status
         *
         * @generated from field: string name = 10;
         */
        this.name = "";
        /**
         * The color of the text that is displayed for easy recognition
         *
         * @generated from field: string fg_color = 12;
         */
        this.fgColor = "";
        /**
         * The background color that is displayed for easy recognition
         *
         * @generated from field: string bg_color = 13;
         */
        this.bgColor = "";
        /**
         * The description of the activity status
         *
         * @generated from field: string description = 14;
         */
        this.description = "";
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new ActivitiesStatusesServiceUpdateRequest().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new ActivitiesStatusesServiceUpdateRequest().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new ActivitiesStatusesServiceUpdateRequest().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(ActivitiesStatusesServiceUpdateRequest, a, b);
    }
}
exports.ActivitiesStatusesServiceUpdateRequest = ActivitiesStatusesServiceUpdateRequest;
ActivitiesStatusesServiceUpdateRequest.runtime = protobuf_1.proto3;
ActivitiesStatusesServiceUpdateRequest.typeName = "Scailo.ActivitiesStatusesServiceUpdateRequest";
ActivitiesStatusesServiceUpdateRequest.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "user_comment", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 3, name: "notify_users", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 10, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 12, name: "fg_color", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 13, name: "bg_color", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 14, name: "description", kind: "scalar", T: 9 /* ScalarType.STRING */ },
]);
/**
 *
 * Describes the parameters that are part of a standard response
 *
 * @generated from message Scailo.ActivityStatus
 */
class ActivityStatus extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * ActivitiesStatuses a globally unique entity UUID. This will be set at the organization level
         *
         * @generated from field: string entity_uuid = 1;
         */
        this.entityUuid = "";
        /**
         * The status of this activity status
         *
         * @generated from field: Scailo.STANDARD_LIFECYCLE_STATUS status = 4;
         */
        this.status = base_scailo_pb_js_1.STANDARD_LIFECYCLE_STATUS.ANY_UNSPECIFIED;
        /**
         * ActivitiesStatuses the logs of every operation performed on this activity status
         *
         * @generated from field: repeated Scailo.LogbookLogConciseSLC logs = 5;
         */
        this.logs = [];
        /**
         * The name of the activity status
         *
         * @generated from field: string name = 10;
         */
        this.name = "";
        /**
         * The unique code by which the activity status is classified
         *
         * @generated from field: string code = 11;
         */
        this.code = "";
        /**
         * The color of the text that is displayed for easy recognition
         *
         * @generated from field: string fg_color = 12;
         */
        this.fgColor = "";
        /**
         * The background color that is displayed for easy recognition
         *
         * @generated from field: string bg_color = 13;
         */
        this.bgColor = "";
        /**
         * The description of the activity status
         *
         * @generated from field: string description = 14;
         */
        this.description = "";
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new ActivityStatus().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new ActivityStatus().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new ActivityStatus().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(ActivityStatus, a, b);
    }
}
exports.ActivityStatus = ActivityStatus;
ActivityStatus.runtime = protobuf_1.proto3;
ActivityStatus.typeName = "Scailo.ActivityStatus";
ActivityStatus.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "entity_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "metadata", kind: "message", T: base_scailo_pb_js_1.EmployeeMetadata },
    { no: 3, name: "approval_metadata", kind: "message", T: base_scailo_pb_js_1.ApprovalMetadata },
    { no: 4, name: "status", kind: "enum", T: protobuf_1.proto3.getEnumType(base_scailo_pb_js_1.STANDARD_LIFECYCLE_STATUS) },
    { no: 5, name: "logs", kind: "message", T: base_scailo_pb_js_1.LogbookLogConciseSLC, repeated: true },
    { no: 10, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 11, name: "code", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 12, name: "fg_color", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 13, name: "bg_color", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 14, name: "description", kind: "scalar", T: 9 /* ScalarType.STRING */ },
]);
/**
 *
 * Describes the message consisting of the list of records
 *
 * @generated from message Scailo.ActivitiesStatusesList
 */
class ActivitiesStatusesList extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * List of records
         *
         * @generated from field: repeated Scailo.ActivityStatus list = 1;
         */
        this.list = [];
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new ActivitiesStatusesList().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new ActivitiesStatusesList().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new ActivitiesStatusesList().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(ActivitiesStatusesList, a, b);
    }
}
exports.ActivitiesStatusesList = ActivitiesStatusesList;
ActivitiesStatusesList.runtime = protobuf_1.proto3;
ActivitiesStatusesList.typeName = "Scailo.ActivitiesStatusesList";
ActivitiesStatusesList.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "list", kind: "message", T: ActivityStatus, repeated: true },
]);
/**
 *
 * Describes a pagination request to retrieve records
 *
 * @generated from message Scailo.ActivitiesStatusesServicePaginationReq
 */
class ActivitiesStatusesServicePaginationReq extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * If true, then returns only active records. If false, then returns only inactive records
         *
         * @generated from field: Scailo.BOOL_FILTER is_active = 1;
         */
        this.isActive = base_scailo_pb_js_1.BOOL_FILTER.BOOL_FILTER_ANY_UNSPECIFIED;
        /**
         * The number of records that need to be sent in the response
         *
         * @generated from field: int64 count = 2;
         */
        this.count = protobuf_1.protoInt64.zero;
        /**
         * The number that need to be offset by before fetching the records
         *
         * @generated from field: uint64 offset = 3;
         */
        this.offset = protobuf_1.protoInt64.zero;
        /**
         * The sort order that is to be used to fetch the pagination response
         *
         * @generated from field: Scailo.SORT_ORDER sort_order = 4;
         */
        this.sortOrder = base_scailo_pb_js_1.SORT_ORDER.ASCENDING_UNSPECIFIED;
        /**
         * The sort key that is to be used to fetch the pagination response
         *
         * @generated from field: Scailo.ACTIVITY_STATUS_SORT_KEY sort_key = 5;
         */
        this.sortKey = ACTIVITY_STATUS_SORT_KEY.ACTIVITY_STATUS_SORT_KEY_ID_UNSPECIFIED;
        /**
         * The status of this activity status
         *
         * @generated from field: Scailo.STANDARD_LIFECYCLE_STATUS status = 6;
         */
        this.status = base_scailo_pb_js_1.STANDARD_LIFECYCLE_STATUS.ANY_UNSPECIFIED;
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new ActivitiesStatusesServicePaginationReq().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new ActivitiesStatusesServicePaginationReq().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new ActivitiesStatusesServicePaginationReq().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(ActivitiesStatusesServicePaginationReq, a, b);
    }
}
exports.ActivitiesStatusesServicePaginationReq = ActivitiesStatusesServicePaginationReq;
ActivitiesStatusesServicePaginationReq.runtime = protobuf_1.proto3;
ActivitiesStatusesServicePaginationReq.typeName = "Scailo.ActivitiesStatusesServicePaginationReq";
ActivitiesStatusesServicePaginationReq.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "is_active", kind: "enum", T: protobuf_1.proto3.getEnumType(base_scailo_pb_js_1.BOOL_FILTER) },
    { no: 2, name: "count", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "offset", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 4, name: "sort_order", kind: "enum", T: protobuf_1.proto3.getEnumType(base_scailo_pb_js_1.SORT_ORDER) },
    { no: 5, name: "sort_key", kind: "enum", T: protobuf_1.proto3.getEnumType(ACTIVITY_STATUS_SORT_KEY) },
    { no: 6, name: "status", kind: "enum", T: protobuf_1.proto3.getEnumType(base_scailo_pb_js_1.STANDARD_LIFECYCLE_STATUS) },
]);
/**
 *
 * Describes the response to a pagination request
 *
 * @generated from message Scailo.ActivitiesStatusesServicePaginationResponse
 */
class ActivitiesStatusesServicePaginationResponse extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * The number of records in this payload
         *
         * @generated from field: uint64 count = 1;
         */
        this.count = protobuf_1.protoInt64.zero;
        /**
         * The number that has been offset before fetching the records. This is the same value that has been sent as part of the pagination request
         *
         * @generated from field: uint64 offset = 2;
         */
        this.offset = protobuf_1.protoInt64.zero;
        /**
         * The total number of records that are available
         *
         * @generated from field: uint64 total = 3;
         */
        this.total = protobuf_1.protoInt64.zero;
        /**
         * The list of records
         *
         * @generated from field: repeated Scailo.ActivityStatus payload = 4;
         */
        this.payload = [];
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new ActivitiesStatusesServicePaginationResponse().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new ActivitiesStatusesServicePaginationResponse().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new ActivitiesStatusesServicePaginationResponse().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(ActivitiesStatusesServicePaginationResponse, a, b);
    }
}
exports.ActivitiesStatusesServicePaginationResponse = ActivitiesStatusesServicePaginationResponse;
ActivitiesStatusesServicePaginationResponse.runtime = protobuf_1.proto3;
ActivitiesStatusesServicePaginationResponse.typeName = "Scailo.ActivitiesStatusesServicePaginationResponse";
ActivitiesStatusesServicePaginationResponse.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "count", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 2, name: "offset", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 3, name: "total", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 4, name: "payload", kind: "message", T: ActivityStatus, repeated: true },
]);
/**
 *
 * Describes the base request payload of a filter search
 *
 * @generated from message Scailo.ActivitiesStatusesServiceFilterReq
 */
class ActivitiesStatusesServiceFilterReq extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * If true, then returns only active records. If false, then returns only inactive records
         *
         * @generated from field: Scailo.BOOL_FILTER is_active = 1;
         */
        this.isActive = base_scailo_pb_js_1.BOOL_FILTER.BOOL_FILTER_ANY_UNSPECIFIED;
        /**
         * The number of records that need to be sent in the response. Returns all records if it is set to -1
         *
         * @generated from field: int64 count = 2;
         */
        this.count = protobuf_1.protoInt64.zero;
        /**
         * The number that need to be offset by before fetching the records
         *
         * @generated from field: uint64 offset = 3;
         */
        this.offset = protobuf_1.protoInt64.zero;
        /**
         * The sort order that is to be used to fetch the pagination response
         *
         * @generated from field: Scailo.SORT_ORDER sort_order = 4;
         */
        this.sortOrder = base_scailo_pb_js_1.SORT_ORDER.ASCENDING_UNSPECIFIED;
        /**
         * The sort key that is to be used to fetch the pagination response
         *
         * @generated from field: Scailo.ACTIVITY_STATUS_SORT_KEY sort_key = 5;
         */
        this.sortKey = ACTIVITY_STATUS_SORT_KEY.ACTIVITY_STATUS_SORT_KEY_ID_UNSPECIFIED;
        /**
         * The minimum timestamp that needs to be considered to filter by creation
         *
         * @generated from field: uint64 creation_timestamp_start = 101;
         */
        this.creationTimestampStart = protobuf_1.protoInt64.zero;
        /**
         * The maximum timestamp that needs to be considered to filter by creation
         *
         * @generated from field: uint64 creation_timestamp_end = 102;
         */
        this.creationTimestampEnd = protobuf_1.protoInt64.zero;
        /**
         * The minimum timestamp that needs to be considered to filter by modification
         *
         * @generated from field: uint64 modification_timestamp_start = 103;
         */
        this.modificationTimestampStart = protobuf_1.protoInt64.zero;
        /**
         * The maximum timestamp that needs to be considered to filter by modification
         *
         * @generated from field: uint64 modification_timestamp_end = 104;
         */
        this.modificationTimestampEnd = protobuf_1.protoInt64.zero;
        /**
         * The entity UUID that is to be used to filter records
         *
         * @generated from field: string entity_uuid = 8;
         */
        this.entityUuid = "";
        /**
         * The status of this activity status
         *
         * @generated from field: Scailo.STANDARD_LIFECYCLE_STATUS status = 10;
         */
        this.status = base_scailo_pb_js_1.STANDARD_LIFECYCLE_STATUS.ANY_UNSPECIFIED;
        /**
         * The start range of approved timestamp
         *
         * @generated from field: uint64 approved_on_start = 11;
         */
        this.approvedOnStart = protobuf_1.protoInt64.zero;
        /**
         * The end range of approved timestamp
         *
         * @generated from field: uint64 approved_on_end = 12;
         */
        this.approvedOnEnd = protobuf_1.protoInt64.zero;
        /**
         * The ID of the approver
         *
         * @generated from field: uint64 approved_by_user_id = 13;
         */
        this.approvedByUserId = protobuf_1.protoInt64.zero;
        /**
         * The role ID of the approver
         *
         * @generated from field: uint64 approver_role_id = 14;
         */
        this.approverRoleId = protobuf_1.protoInt64.zero;
        /**
         * The name of the activity status
         *
         * @generated from field: string name = 20;
         */
        this.name = "";
        /**
         * The unique code by which the activity status is classified
         *
         * @generated from field: string code = 21;
         */
        this.code = "";
        /**
         * The color of the text that is displayed for easy recognition
         *
         * @generated from field: string fg_color = 22;
         */
        this.fgColor = "";
        /**
         * The background color that is displayed for easy recognition
         *
         * @generated from field: string bg_color = 23;
         */
        this.bgColor = "";
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new ActivitiesStatusesServiceFilterReq().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new ActivitiesStatusesServiceFilterReq().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new ActivitiesStatusesServiceFilterReq().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(ActivitiesStatusesServiceFilterReq, a, b);
    }
}
exports.ActivitiesStatusesServiceFilterReq = ActivitiesStatusesServiceFilterReq;
ActivitiesStatusesServiceFilterReq.runtime = protobuf_1.proto3;
ActivitiesStatusesServiceFilterReq.typeName = "Scailo.ActivitiesStatusesServiceFilterReq";
ActivitiesStatusesServiceFilterReq.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "is_active", kind: "enum", T: protobuf_1.proto3.getEnumType(base_scailo_pb_js_1.BOOL_FILTER) },
    { no: 2, name: "count", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "offset", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 4, name: "sort_order", kind: "enum", T: protobuf_1.proto3.getEnumType(base_scailo_pb_js_1.SORT_ORDER) },
    { no: 5, name: "sort_key", kind: "enum", T: protobuf_1.proto3.getEnumType(ACTIVITY_STATUS_SORT_KEY) },
    { no: 101, name: "creation_timestamp_start", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 102, name: "creation_timestamp_end", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 103, name: "modification_timestamp_start", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 104, name: "modification_timestamp_end", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 8, name: "entity_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 10, name: "status", kind: "enum", T: protobuf_1.proto3.getEnumType(base_scailo_pb_js_1.STANDARD_LIFECYCLE_STATUS) },
    { no: 11, name: "approved_on_start", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 12, name: "approved_on_end", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 13, name: "approved_by_user_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 14, name: "approver_role_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 20, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 21, name: "code", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 22, name: "fg_color", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 23, name: "bg_color", kind: "scalar", T: 9 /* ScalarType.STRING */ },
]);
/**
 *
 * Describes the base request payload of a count search
 *
 * @generated from message Scailo.ActivitiesStatusesServiceCountReq
 */
class ActivitiesStatusesServiceCountReq extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * If true, then returns only active records. If false, then returns only inactive records
         *
         * @generated from field: Scailo.BOOL_FILTER is_active = 1;
         */
        this.isActive = base_scailo_pb_js_1.BOOL_FILTER.BOOL_FILTER_ANY_UNSPECIFIED;
        /**
         * The minimum timestamp that needs to be considered to filter by creation
         *
         * @generated from field: uint64 creation_timestamp_start = 101;
         */
        this.creationTimestampStart = protobuf_1.protoInt64.zero;
        /**
         * The maximum timestamp that needs to be considered to filter by creation
         *
         * @generated from field: uint64 creation_timestamp_end = 102;
         */
        this.creationTimestampEnd = protobuf_1.protoInt64.zero;
        /**
         * The minimum timestamp that needs to be considered to filter by modification
         *
         * @generated from field: uint64 modification_timestamp_start = 103;
         */
        this.modificationTimestampStart = protobuf_1.protoInt64.zero;
        /**
         * The maximum timestamp that needs to be considered to filter by modification
         *
         * @generated from field: uint64 modification_timestamp_end = 104;
         */
        this.modificationTimestampEnd = protobuf_1.protoInt64.zero;
        /**
         * The entity UUID that is to be used to filter records
         *
         * @generated from field: string entity_uuid = 8;
         */
        this.entityUuid = "";
        /**
         * The status of this activity status
         *
         * @generated from field: Scailo.STANDARD_LIFECYCLE_STATUS status = 10;
         */
        this.status = base_scailo_pb_js_1.STANDARD_LIFECYCLE_STATUS.ANY_UNSPECIFIED;
        /**
         * The start range of approved timestamp
         *
         * @generated from field: uint64 approved_on_start = 11;
         */
        this.approvedOnStart = protobuf_1.protoInt64.zero;
        /**
         * The end range of approved timestamp
         *
         * @generated from field: uint64 approved_on_end = 12;
         */
        this.approvedOnEnd = protobuf_1.protoInt64.zero;
        /**
         * The ID of the approver
         *
         * @generated from field: uint64 approved_by_user_id = 13;
         */
        this.approvedByUserId = protobuf_1.protoInt64.zero;
        /**
         * The role ID of the approver
         *
         * @generated from field: uint64 approver_role_id = 14;
         */
        this.approverRoleId = protobuf_1.protoInt64.zero;
        /**
         * The name of the activity status
         *
         * @generated from field: string name = 20;
         */
        this.name = "";
        /**
         * The unique code by which the activity status is classified
         *
         * @generated from field: string code = 21;
         */
        this.code = "";
        /**
         * The color of the text that is displayed for easy recognition
         *
         * @generated from field: string fg_color = 22;
         */
        this.fgColor = "";
        /**
         * The background color that is displayed for easy recognition
         *
         * @generated from field: string bg_color = 23;
         */
        this.bgColor = "";
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new ActivitiesStatusesServiceCountReq().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new ActivitiesStatusesServiceCountReq().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new ActivitiesStatusesServiceCountReq().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(ActivitiesStatusesServiceCountReq, a, b);
    }
}
exports.ActivitiesStatusesServiceCountReq = ActivitiesStatusesServiceCountReq;
ActivitiesStatusesServiceCountReq.runtime = protobuf_1.proto3;
ActivitiesStatusesServiceCountReq.typeName = "Scailo.ActivitiesStatusesServiceCountReq";
ActivitiesStatusesServiceCountReq.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "is_active", kind: "enum", T: protobuf_1.proto3.getEnumType(base_scailo_pb_js_1.BOOL_FILTER) },
    { no: 101, name: "creation_timestamp_start", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 102, name: "creation_timestamp_end", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 103, name: "modification_timestamp_start", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 104, name: "modification_timestamp_end", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 8, name: "entity_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 10, name: "status", kind: "enum", T: protobuf_1.proto3.getEnumType(base_scailo_pb_js_1.STANDARD_LIFECYCLE_STATUS) },
    { no: 11, name: "approved_on_start", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 12, name: "approved_on_end", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 13, name: "approved_by_user_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 14, name: "approver_role_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 20, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 21, name: "code", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 22, name: "fg_color", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 23, name: "bg_color", kind: "scalar", T: 9 /* ScalarType.STRING */ },
]);
/**
 *
 * Describes the request payload for performing a generic search operation on records
 *
 * @generated from message Scailo.ActivitiesStatusesServiceSearchAllReq
 */
class ActivitiesStatusesServiceSearchAllReq extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * If true, then returns only active records. If false, then returns only inactive records
         *
         * @generated from field: Scailo.BOOL_FILTER is_active = 1;
         */
        this.isActive = base_scailo_pb_js_1.BOOL_FILTER.BOOL_FILTER_ANY_UNSPECIFIED;
        /**
         * The number of records that need to be sent in the response. Returns all records if it is set to -1
         *
         * @generated from field: int64 count = 2;
         */
        this.count = protobuf_1.protoInt64.zero;
        /**
         * The number that need to be offset by before fetching the records
         *
         * @generated from field: uint64 offset = 3;
         */
        this.offset = protobuf_1.protoInt64.zero;
        /**
         * The sort order that is to be used to fetch the pagination response
         *
         * @generated from field: Scailo.SORT_ORDER sort_order = 4;
         */
        this.sortOrder = base_scailo_pb_js_1.SORT_ORDER.ASCENDING_UNSPECIFIED;
        /**
         * The sort key that is to be used to fetch the pagination response
         *
         * @generated from field: Scailo.ACTIVITY_STATUS_SORT_KEY sort_key = 5;
         */
        this.sortKey = ACTIVITY_STATUS_SORT_KEY.ACTIVITY_STATUS_SORT_KEY_ID_UNSPECIFIED;
        /**
         * The entity UUID that is to be used to filter records
         *
         * @generated from field: string entity_uuid = 6;
         */
        this.entityUuid = "";
        /**
         * Limit the search space to the given status
         *
         * @generated from field: Scailo.STANDARD_LIFECYCLE_STATUS status = 10;
         */
        this.status = base_scailo_pb_js_1.STANDARD_LIFECYCLE_STATUS.ANY_UNSPECIFIED;
        /**
         * Describes the key with which the search operation needs to be performed
         *
         * @generated from field: string search_key = 11;
         */
        this.searchKey = "";
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new ActivitiesStatusesServiceSearchAllReq().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new ActivitiesStatusesServiceSearchAllReq().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new ActivitiesStatusesServiceSearchAllReq().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(ActivitiesStatusesServiceSearchAllReq, a, b);
    }
}
exports.ActivitiesStatusesServiceSearchAllReq = ActivitiesStatusesServiceSearchAllReq;
ActivitiesStatusesServiceSearchAllReq.runtime = protobuf_1.proto3;
ActivitiesStatusesServiceSearchAllReq.typeName = "Scailo.ActivitiesStatusesServiceSearchAllReq";
ActivitiesStatusesServiceSearchAllReq.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "is_active", kind: "enum", T: protobuf_1.proto3.getEnumType(base_scailo_pb_js_1.BOOL_FILTER) },
    { no: 2, name: "count", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "offset", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 4, name: "sort_order", kind: "enum", T: protobuf_1.proto3.getEnumType(base_scailo_pb_js_1.SORT_ORDER) },
    { no: 5, name: "sort_key", kind: "enum", T: protobuf_1.proto3.getEnumType(ACTIVITY_STATUS_SORT_KEY) },
    { no: 6, name: "entity_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 10, name: "status", kind: "enum", T: protobuf_1.proto3.getEnumType(base_scailo_pb_js_1.STANDARD_LIFECYCLE_STATUS) },
    { no: 11, name: "search_key", kind: "scalar", T: 9 /* ScalarType.STRING */ },
]);
