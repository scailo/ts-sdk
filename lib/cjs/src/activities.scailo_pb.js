"use strict";
// @generated by protoc-gen-es v1.5.1 with parameter "target=ts"
// @generated from file activities.scailo.proto (package Scailo, syntax proto3)
/* eslint-disable */
// @ts-nocheck
Object.defineProperty(exports, "__esModule", { value: true });
exports.ActivitiesServicePaginatedTimersResponse = exports.ActivityTimersSearchRequest = exports.ActivityTimersList = exports.ActivityTimer = exports.ActivitiesServiceTimerEndRequest = exports.ActivitiesServiceTimerCreateRequest = exports.ActivitySupervisorsList = exports.ActivitySupervisor = exports.ActivitiesServiceSupervisorCreateRequest = exports.ActivitiesServiceImportOwnersRequest = exports.ActivityOwnersList = exports.ActivityOwner = exports.ActivitiesServiceOwnerCreateRequest = exports.ActivityTagAssociationsList = exports.ActivityTagAssociation = exports.ActivitiesServiceActivityTagAssociationCreateRequest = exports.ActivitiesServiceActionWithTimerCreateRequest = exports.ActivitiesServicePaginatedActionsResponse = exports.ActivityActionsSearchRequest = exports.ActivityActionHistoryRequest = exports.ActivityActionsList = exports.ActivityActionStatistics = exports.ActivityAction = exports.ActivitiesServiceActionUpdateRequest = exports.ActivitiesServiceActionCreateRequest = exports.ActivitiesServiceSearchAllReq = exports.ActivitiesServiceCountReq = exports.ActivitiesServiceFilterReq = exports.ActivitiesServicePaginationResponse = exports.ActivitiesServicePaginationReq = exports.ActivityStatistics = exports.ActivitiesList = exports.Activity = exports.ActivitiesServiceUpdateRequest = exports.ActivitiesServiceCreateRequest = exports.LogbookLogActivityLC = exports.ACTIVITY_TIMER_SORT_KEY = exports.ACTIVITY_ACTION_SORT_KEY = exports.ACTIVITY_SORT_KEY = exports.ACTIVITY_LIFECYCLE = void 0;
const protobuf_1 = require("@bufbuild/protobuf");
const base_scailo_pb_js_1 = require("./base.scailo_pb.js");
/**
 *
 * Describes the lifecycle status of each activity
 *
 * @generated from enum Scailo.ACTIVITY_LIFECYCLE
 */
var ACTIVITY_LIFECYCLE;
(function (ACTIVITY_LIFECYCLE) {
    /**
     * Used only in filters
     *
     * @generated from enum value: ACTIVITY_LIFECYCLE_ANY_UNSPECIFIED = 0;
     */
    ACTIVITY_LIFECYCLE[ACTIVITY_LIFECYCLE["ACTIVITY_LIFECYCLE_ANY_UNSPECIFIED"] = 0] = "ACTIVITY_LIFECYCLE_ANY_UNSPECIFIED";
    /**
     * Denotes that the activity is open
     *
     * @generated from enum value: ACTIVITY_LIFECYCLE_OPEN = 1;
     */
    ACTIVITY_LIFECYCLE[ACTIVITY_LIFECYCLE["ACTIVITY_LIFECYCLE_OPEN"] = 1] = "ACTIVITY_LIFECYCLE_OPEN";
    /**
     * Denotes that the activity has completed
     *
     * @generated from enum value: ACTIVITY_LIFECYCLE_COMPLETED = 2;
     */
    ACTIVITY_LIFECYCLE[ACTIVITY_LIFECYCLE["ACTIVITY_LIFECYCLE_COMPLETED"] = 2] = "ACTIVITY_LIFECYCLE_COMPLETED";
    /**
     * Denotes that the activity has been cancelled
     *
     * @generated from enum value: ACTIVITY_LIFECYCLE_CANCELLED = 3;
     */
    ACTIVITY_LIFECYCLE[ACTIVITY_LIFECYCLE["ACTIVITY_LIFECYCLE_CANCELLED"] = 3] = "ACTIVITY_LIFECYCLE_CANCELLED";
})(ACTIVITY_LIFECYCLE || (exports.ACTIVITY_LIFECYCLE = ACTIVITY_LIFECYCLE = {}));
// Retrieve enum metadata with: proto3.getEnumType(ACTIVITY_LIFECYCLE)
protobuf_1.proto3.util.setEnumType(ACTIVITY_LIFECYCLE, "Scailo.ACTIVITY_LIFECYCLE", [
    { no: 0, name: "ACTIVITY_LIFECYCLE_ANY_UNSPECIFIED" },
    { no: 1, name: "ACTIVITY_LIFECYCLE_OPEN" },
    { no: 2, name: "ACTIVITY_LIFECYCLE_COMPLETED" },
    { no: 3, name: "ACTIVITY_LIFECYCLE_CANCELLED" },
]);
/**
 *
 * Describes the available sort keys
 *
 * @generated from enum Scailo.ACTIVITY_SORT_KEY
 */
var ACTIVITY_SORT_KEY;
(function (ACTIVITY_SORT_KEY) {
    /**
     * Fetch ordered results by id
     *
     * @generated from enum value: ACTIVITY_SORT_KEY_ID_UNSPECIFIED = 0;
     */
    ACTIVITY_SORT_KEY[ACTIVITY_SORT_KEY["ACTIVITY_SORT_KEY_ID_UNSPECIFIED"] = 0] = "ACTIVITY_SORT_KEY_ID_UNSPECIFIED";
    /**
     * Fetch ordered results by the creation timestamp
     *
     * @generated from enum value: ACTIVITY_SORT_KEY_CREATED_AT = 1;
     */
    ACTIVITY_SORT_KEY[ACTIVITY_SORT_KEY["ACTIVITY_SORT_KEY_CREATED_AT"] = 1] = "ACTIVITY_SORT_KEY_CREATED_AT";
    /**
     * Fetch ordered results by the modified timestamp
     *
     * @generated from enum value: ACTIVITY_SORT_KEY_MODIFIED_AT = 2;
     */
    ACTIVITY_SORT_KEY[ACTIVITY_SORT_KEY["ACTIVITY_SORT_KEY_MODIFIED_AT"] = 2] = "ACTIVITY_SORT_KEY_MODIFIED_AT";
    /**
     * Fetch ordered results by the approver's completed on timestamp
     *
     * @generated from enum value: ACTIVITY_SORT_KEY_COMPLETED_ON = 6;
     */
    ACTIVITY_SORT_KEY[ACTIVITY_SORT_KEY["ACTIVITY_SORT_KEY_COMPLETED_ON"] = 6] = "ACTIVITY_SORT_KEY_COMPLETED_ON";
    /**
     * Fetch ordered results by the title
     *
     * @generated from enum value: ACTIVITY_SORT_KEY_TITLE = 10;
     */
    ACTIVITY_SORT_KEY[ACTIVITY_SORT_KEY["ACTIVITY_SORT_KEY_TITLE"] = 10] = "ACTIVITY_SORT_KEY_TITLE";
    /**
     * Fetch ordered results by the start time
     *
     * @generated from enum value: ACTIVITY_SORT_KEY_STARTS_AT = 11;
     */
    ACTIVITY_SORT_KEY[ACTIVITY_SORT_KEY["ACTIVITY_SORT_KEY_STARTS_AT"] = 11] = "ACTIVITY_SORT_KEY_STARTS_AT";
    /**
     * Fetch ordered results by the due by time
     *
     * @generated from enum value: ACTIVITY_SORT_KEY_DUE_BY = 12;
     */
    ACTIVITY_SORT_KEY[ACTIVITY_SORT_KEY["ACTIVITY_SORT_KEY_DUE_BY"] = 12] = "ACTIVITY_SORT_KEY_DUE_BY";
})(ACTIVITY_SORT_KEY || (exports.ACTIVITY_SORT_KEY = ACTIVITY_SORT_KEY = {}));
// Retrieve enum metadata with: proto3.getEnumType(ACTIVITY_SORT_KEY)
protobuf_1.proto3.util.setEnumType(ACTIVITY_SORT_KEY, "Scailo.ACTIVITY_SORT_KEY", [
    { no: 0, name: "ACTIVITY_SORT_KEY_ID_UNSPECIFIED" },
    { no: 1, name: "ACTIVITY_SORT_KEY_CREATED_AT" },
    { no: 2, name: "ACTIVITY_SORT_KEY_MODIFIED_AT" },
    { no: 6, name: "ACTIVITY_SORT_KEY_COMPLETED_ON" },
    { no: 10, name: "ACTIVITY_SORT_KEY_TITLE" },
    { no: 11, name: "ACTIVITY_SORT_KEY_STARTS_AT" },
    { no: 12, name: "ACTIVITY_SORT_KEY_DUE_BY" },
]);
/**
 *
 * Describes the available sort keys
 *
 * @generated from enum Scailo.ACTIVITY_ACTION_SORT_KEY
 */
var ACTIVITY_ACTION_SORT_KEY;
(function (ACTIVITY_ACTION_SORT_KEY) {
    /**
     * Fetch ordered results by id
     *
     * @generated from enum value: ACTIVITY_ACTION_SORT_KEY_ID_UNSPECIFIED = 0;
     */
    ACTIVITY_ACTION_SORT_KEY[ACTIVITY_ACTION_SORT_KEY["ACTIVITY_ACTION_SORT_KEY_ID_UNSPECIFIED"] = 0] = "ACTIVITY_ACTION_SORT_KEY_ID_UNSPECIFIED";
    /**
     * Fetch ordered results by the creation timestamp
     *
     * @generated from enum value: ACTIVITY_ACTION_SORT_KEY_CREATED_AT = 1;
     */
    ACTIVITY_ACTION_SORT_KEY[ACTIVITY_ACTION_SORT_KEY["ACTIVITY_ACTION_SORT_KEY_CREATED_AT"] = 1] = "ACTIVITY_ACTION_SORT_KEY_CREATED_AT";
    /**
     * Fetch ordered results by the modified timestamp
     *
     * @generated from enum value: ACTIVITY_ACTION_SORT_KEY_MODIFIED_AT = 2;
     */
    ACTIVITY_ACTION_SORT_KEY[ACTIVITY_ACTION_SORT_KEY["ACTIVITY_ACTION_SORT_KEY_MODIFIED_AT"] = 2] = "ACTIVITY_ACTION_SORT_KEY_MODIFIED_AT";
    /**
     * Fetch ordered results by the title
     *
     * @generated from enum value: ACTIVITY_ACTION_SORT_KEY_TITLE = 10;
     */
    ACTIVITY_ACTION_SORT_KEY[ACTIVITY_ACTION_SORT_KEY["ACTIVITY_ACTION_SORT_KEY_TITLE"] = 10] = "ACTIVITY_ACTION_SORT_KEY_TITLE";
    /**
     * Fetch ordered results by the action code ID
     *
     * @generated from enum value: ACTIVITY_ACTION_SORT_KEY_ACTION_CODE_ID = 11;
     */
    ACTIVITY_ACTION_SORT_KEY[ACTIVITY_ACTION_SORT_KEY["ACTIVITY_ACTION_SORT_KEY_ACTION_CODE_ID"] = 11] = "ACTIVITY_ACTION_SORT_KEY_ACTION_CODE_ID";
    /**
     * Fetch ordered results by the number of points
     *
     * @generated from enum value: ACTIVITY_ACTION_SORT_KEY_POINTS = 12;
     */
    ACTIVITY_ACTION_SORT_KEY[ACTIVITY_ACTION_SORT_KEY["ACTIVITY_ACTION_SORT_KEY_POINTS"] = 12] = "ACTIVITY_ACTION_SORT_KEY_POINTS";
})(ACTIVITY_ACTION_SORT_KEY || (exports.ACTIVITY_ACTION_SORT_KEY = ACTIVITY_ACTION_SORT_KEY = {}));
// Retrieve enum metadata with: proto3.getEnumType(ACTIVITY_ACTION_SORT_KEY)
protobuf_1.proto3.util.setEnumType(ACTIVITY_ACTION_SORT_KEY, "Scailo.ACTIVITY_ACTION_SORT_KEY", [
    { no: 0, name: "ACTIVITY_ACTION_SORT_KEY_ID_UNSPECIFIED" },
    { no: 1, name: "ACTIVITY_ACTION_SORT_KEY_CREATED_AT" },
    { no: 2, name: "ACTIVITY_ACTION_SORT_KEY_MODIFIED_AT" },
    { no: 10, name: "ACTIVITY_ACTION_SORT_KEY_TITLE" },
    { no: 11, name: "ACTIVITY_ACTION_SORT_KEY_ACTION_CODE_ID" },
    { no: 12, name: "ACTIVITY_ACTION_SORT_KEY_POINTS" },
]);
/**
 *
 * Describes the available sort keys
 *
 * @generated from enum Scailo.ACTIVITY_TIMER_SORT_KEY
 */
var ACTIVITY_TIMER_SORT_KEY;
(function (ACTIVITY_TIMER_SORT_KEY) {
    /**
     * Fetch ordered results by id
     *
     * @generated from enum value: ACTIVITY_TIMER_SORT_KEY_ID_UNSPECIFIED = 0;
     */
    ACTIVITY_TIMER_SORT_KEY[ACTIVITY_TIMER_SORT_KEY["ACTIVITY_TIMER_SORT_KEY_ID_UNSPECIFIED"] = 0] = "ACTIVITY_TIMER_SORT_KEY_ID_UNSPECIFIED";
    /**
     * Fetch ordered results by the creation timestamp
     *
     * @generated from enum value: ACTIVITY_TIMER_SORT_KEY_CREATED_AT = 1;
     */
    ACTIVITY_TIMER_SORT_KEY[ACTIVITY_TIMER_SORT_KEY["ACTIVITY_TIMER_SORT_KEY_CREATED_AT"] = 1] = "ACTIVITY_TIMER_SORT_KEY_CREATED_AT";
    /**
     * Fetch ordered results by the modified timestamp
     *
     * @generated from enum value: ACTIVITY_TIMER_SORT_KEY_MODIFIED_AT = 2;
     */
    ACTIVITY_TIMER_SORT_KEY[ACTIVITY_TIMER_SORT_KEY["ACTIVITY_TIMER_SORT_KEY_MODIFIED_AT"] = 2] = "ACTIVITY_TIMER_SORT_KEY_MODIFIED_AT";
    /**
     * Fetch ordered results by the activity ID
     *
     * @generated from enum value: ACTIVITY_TIMER_SORT_KEY_ACTIVITY_ID = 10;
     */
    ACTIVITY_TIMER_SORT_KEY[ACTIVITY_TIMER_SORT_KEY["ACTIVITY_TIMER_SORT_KEY_ACTIVITY_ID"] = 10] = "ACTIVITY_TIMER_SORT_KEY_ACTIVITY_ID";
    /**
     * Fetch ordered results by the activity action ID
     *
     * @generated from enum value: ACTIVITY_TIMER_SORT_KEY_ACTIVITY_ACTION_ID = 11;
     */
    ACTIVITY_TIMER_SORT_KEY[ACTIVITY_TIMER_SORT_KEY["ACTIVITY_TIMER_SORT_KEY_ACTIVITY_ACTION_ID"] = 11] = "ACTIVITY_TIMER_SORT_KEY_ACTIVITY_ACTION_ID";
    /**
     * Fetch ordered results by the employee ID
     *
     * @generated from enum value: ACTIVITY_TIMER_SORT_KEY_EMPLOYEE_ID = 12;
     */
    ACTIVITY_TIMER_SORT_KEY[ACTIVITY_TIMER_SORT_KEY["ACTIVITY_TIMER_SORT_KEY_EMPLOYEE_ID"] = 12] = "ACTIVITY_TIMER_SORT_KEY_EMPLOYEE_ID";
    /**
     * Fetch ordered results by the start timestamp
     *
     * @generated from enum value: ACTIVITY_TIMER_SORT_KEY_START_AT = 13;
     */
    ACTIVITY_TIMER_SORT_KEY[ACTIVITY_TIMER_SORT_KEY["ACTIVITY_TIMER_SORT_KEY_START_AT"] = 13] = "ACTIVITY_TIMER_SORT_KEY_START_AT";
    /**
     * Fetch ordered results by the end timestamp
     *
     * @generated from enum value: ACTIVITY_TIMER_SORT_KEY_END_AT = 14;
     */
    ACTIVITY_TIMER_SORT_KEY[ACTIVITY_TIMER_SORT_KEY["ACTIVITY_TIMER_SORT_KEY_END_AT"] = 14] = "ACTIVITY_TIMER_SORT_KEY_END_AT";
    /**
     * Fetch ordered results by the completion percentage
     *
     * @generated from enum value: ACTIVITY_TIMER_SORT_KEY_COMPLETION_PERCENTAGE = 15;
     */
    ACTIVITY_TIMER_SORT_KEY[ACTIVITY_TIMER_SORT_KEY["ACTIVITY_TIMER_SORT_KEY_COMPLETION_PERCENTAGE"] = 15] = "ACTIVITY_TIMER_SORT_KEY_COMPLETION_PERCENTAGE";
})(ACTIVITY_TIMER_SORT_KEY || (exports.ACTIVITY_TIMER_SORT_KEY = ACTIVITY_TIMER_SORT_KEY = {}));
// Retrieve enum metadata with: proto3.getEnumType(ACTIVITY_TIMER_SORT_KEY)
protobuf_1.proto3.util.setEnumType(ACTIVITY_TIMER_SORT_KEY, "Scailo.ACTIVITY_TIMER_SORT_KEY", [
    { no: 0, name: "ACTIVITY_TIMER_SORT_KEY_ID_UNSPECIFIED" },
    { no: 1, name: "ACTIVITY_TIMER_SORT_KEY_CREATED_AT" },
    { no: 2, name: "ACTIVITY_TIMER_SORT_KEY_MODIFIED_AT" },
    { no: 10, name: "ACTIVITY_TIMER_SORT_KEY_ACTIVITY_ID" },
    { no: 11, name: "ACTIVITY_TIMER_SORT_KEY_ACTIVITY_ACTION_ID" },
    { no: 12, name: "ACTIVITY_TIMER_SORT_KEY_EMPLOYEE_ID" },
    { no: 13, name: "ACTIVITY_TIMER_SORT_KEY_START_AT" },
    { no: 14, name: "ACTIVITY_TIMER_SORT_KEY_END_AT" },
    { no: 15, name: "ACTIVITY_TIMER_SORT_KEY_COMPLETION_PERCENTAGE" },
]);
/**
 *
 * Describes each parameter that's part of the logbook (does not include historical data of the object) with the operation being an activity lifecycle status
 *
 * @generated from message Scailo.LogbookLogActivityLC
 */
class LogbookLogActivityLC extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * ID of the resource
         *
         * @generated from field: uint64 id = 1;
         */
        this.id = protobuf_1.protoInt64.zero;
        /**
         * Stores if the resource is active
         *
         * @generated from field: bool is_active = 2;
         */
        this.isActive = false;
        /**
         * Stores the timestamp of when this resource was created
         *
         * @generated from field: uint64 timestamp = 3;
         */
        this.timestamp = protobuf_1.protoInt64.zero;
        /**
         * The UUID of the resource
         *
         * @generated from field: string ref_uuid = 10;
         */
        this.refUuid = "";
        /**
         * The operation that was performed
         *
         * @generated from field: Scailo.ACTIVITY_LIFECYCLE operation = 11;
         */
        this.operation = ACTIVITY_LIFECYCLE.ACTIVITY_LIFECYCLE_ANY_UNSPECIFIED;
        /**
         * The username of the user who performed this operation
         *
         * @generated from field: string username = 12;
         */
        this.username = "";
        /**
         * The name of the person who made this entry
         *
         * @generated from field: string name = 13;
         */
        this.name = "";
        /**
         * The ID of the user who made this entry
         *
         * @generated from field: uint64 user_id = 14;
         */
        this.userId = protobuf_1.protoInt64.zero;
        /**
         * The comment generated by the application
         *
         * @generated from field: string app_comment = 15;
         */
        this.appComment = "";
        /**
         * The comment entered by the user
         *
         * @generated from field: string user_comment = 16;
         */
        this.userComment = "";
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new LogbookLogActivityLC().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new LogbookLogActivityLC().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new LogbookLogActivityLC().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(LogbookLogActivityLC, a, b);
    }
}
exports.LogbookLogActivityLC = LogbookLogActivityLC;
LogbookLogActivityLC.runtime = protobuf_1.proto3;
LogbookLogActivityLC.typeName = "Scailo.LogbookLogActivityLC";
LogbookLogActivityLC.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 2, name: "is_active", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 3, name: "timestamp", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 10, name: "ref_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 11, name: "operation", kind: "enum", T: protobuf_1.proto3.getEnumType(ACTIVITY_LIFECYCLE) },
    { no: 12, name: "username", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 13, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 14, name: "user_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 15, name: "app_comment", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 16, name: "user_comment", kind: "scalar", T: 9 /* ScalarType.STRING */ },
]);
/**
 *
 * Describes the parameters necessary to create a record
 *
 * @generated from message Scailo.ActivitiesServiceCreateRequest
 */
class ActivitiesServiceCreateRequest extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * Stores a globally unique entity UUID. This will be set at the organization level
         *
         * @generated from field: string entity_uuid = 1;
         */
        this.entityUuid = "";
        /**
         * Stores any comment that the user might add during this operation
         *
         * @generated from field: string user_comment = 2;
         */
        this.userComment = "";
        /**
         * The associated vault folder ID
         *
         * @generated from field: uint64 vault_folder_id = 7;
         */
        this.vaultFolderId = protobuf_1.protoInt64.zero;
        /**
         * The associated activity group ID
         *
         * @generated from field: uint64 activity_group_id = 8;
         */
        this.activityGroupId = protobuf_1.protoInt64.zero;
        /**
         * The associated activity status ID
         *
         * @generated from field: uint64 activity_status_id = 9;
         */
        this.activityStatusId = protobuf_1.protoInt64.zero;
        /**
         * The title of the activity
         *
         * @generated from field: string title = 10;
         */
        this.title = "";
        /**
         * The start UNIX timestamp
         *
         * @generated from field: uint64 starts_at = 11;
         */
        this.startsAt = protobuf_1.protoInt64.zero;
        /**
         * The UNIX timestamp of when the activity needs to be completed
         *
         * @generated from field: uint64 due_by = 12;
         */
        this.dueBy = protobuf_1.protoInt64.zero;
        /**
         * The description of the activity
         *
         * @generated from field: string description = 13;
         */
        this.description = "";
        /**
         * Assign self (the user creating the activity) as an owner
         *
         * @generated from field: bool assign_self_as_owner = 80;
         */
        this.assignSelfAsOwner = false;
        /**
         * Assign self (the user creating the activity) as a supervisor
         *
         * @generated from field: bool assign_self_as_supervisor = 81;
         */
        this.assignSelfAsSupervisor = false;
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new ActivitiesServiceCreateRequest().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new ActivitiesServiceCreateRequest().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new ActivitiesServiceCreateRequest().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(ActivitiesServiceCreateRequest, a, b);
    }
}
exports.ActivitiesServiceCreateRequest = ActivitiesServiceCreateRequest;
ActivitiesServiceCreateRequest.runtime = protobuf_1.proto3;
ActivitiesServiceCreateRequest.typeName = "Scailo.ActivitiesServiceCreateRequest";
ActivitiesServiceCreateRequest.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "entity_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "user_comment", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 7, name: "vault_folder_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 8, name: "activity_group_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 9, name: "activity_status_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 10, name: "title", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 11, name: "starts_at", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 12, name: "due_by", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 13, name: "description", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 80, name: "assign_self_as_owner", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 81, name: "assign_self_as_supervisor", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
]);
/**
 *
 * Describes the parameters necessary to update a record
 *
 * @generated from message Scailo.ActivitiesServiceUpdateRequest
 */
class ActivitiesServiceUpdateRequest extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * Stores any comment that the user might add during this operation
         *
         * @generated from field: string user_comment = 1;
         */
        this.userComment = "";
        /**
         * The ID of the record that needs to be updated
         *
         * @generated from field: uint64 id = 2;
         */
        this.id = protobuf_1.protoInt64.zero;
        /**
         * Optional boolean value that stores if a notification needs to be sent to users about the update to the record. This is useful when a subsequent operation needs to be performed immediately (such as send to verification after updating the revision)
         *
         * @generated from field: bool notify_users = 3;
         */
        this.notifyUsers = false;
        /**
         * The associated vault folder ID
         *
         * @generated from field: uint64 vault_folder_id = 7;
         */
        this.vaultFolderId = protobuf_1.protoInt64.zero;
        /**
         * The associated activity group ID
         *
         * @generated from field: uint64 activity_group_id = 8;
         */
        this.activityGroupId = protobuf_1.protoInt64.zero;
        /**
         * The associated activity status ID
         *
         * @generated from field: uint64 activity_status_id = 9;
         */
        this.activityStatusId = protobuf_1.protoInt64.zero;
        /**
         * The title of the activity
         *
         * @generated from field: string title = 10;
         */
        this.title = "";
        /**
         * The start UNIX timestamp
         *
         * @generated from field: uint64 starts_at = 11;
         */
        this.startsAt = protobuf_1.protoInt64.zero;
        /**
         * The UNIX timestamp of when the activity needs to be completed
         *
         * @generated from field: uint64 due_by = 12;
         */
        this.dueBy = protobuf_1.protoInt64.zero;
        /**
         * The description of the activity
         *
         * @generated from field: string description = 13;
         */
        this.description = "";
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new ActivitiesServiceUpdateRequest().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new ActivitiesServiceUpdateRequest().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new ActivitiesServiceUpdateRequest().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(ActivitiesServiceUpdateRequest, a, b);
    }
}
exports.ActivitiesServiceUpdateRequest = ActivitiesServiceUpdateRequest;
ActivitiesServiceUpdateRequest.runtime = protobuf_1.proto3;
ActivitiesServiceUpdateRequest.typeName = "Scailo.ActivitiesServiceUpdateRequest";
ActivitiesServiceUpdateRequest.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "user_comment", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 3, name: "notify_users", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 7, name: "vault_folder_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 8, name: "activity_group_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 9, name: "activity_status_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 10, name: "title", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 11, name: "starts_at", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 12, name: "due_by", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 13, name: "description", kind: "scalar", T: 9 /* ScalarType.STRING */ },
]);
/**
 *
 * Describes the parameters that are part of a standard response
 *
 * @generated from message Scailo.Activity
 */
class Activity extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * Stores a globally unique entity UUID. This will be set at the organization level
         *
         * @generated from field: string entity_uuid = 1;
         */
        this.entityUuid = "";
        /**
         * The status of this activity
         *
         * @generated from field: Scailo.ACTIVITY_LIFECYCLE status = 4;
         */
        this.status = ACTIVITY_LIFECYCLE.ACTIVITY_LIFECYCLE_ANY_UNSPECIFIED;
        /**
         * Stores the logs of every operation performed on this activity
         *
         * @generated from field: repeated Scailo.LogbookLogActivityLC logs = 5;
         */
        this.logs = [];
        /**
         * The timestamp of when this activity was marked as completed
         *
         * @generated from field: uint64 completed_on = 6;
         */
        this.completedOn = protobuf_1.protoInt64.zero;
        /**
         * The associated vault folder ID
         *
         * @generated from field: uint64 vault_folder_id = 7;
         */
        this.vaultFolderId = protobuf_1.protoInt64.zero;
        /**
         * The associated activity group ID
         *
         * @generated from field: uint64 activity_group_id = 8;
         */
        this.activityGroupId = protobuf_1.protoInt64.zero;
        /**
         * The associated activity status ID
         *
         * @generated from field: uint64 activity_status_id = 9;
         */
        this.activityStatusId = protobuf_1.protoInt64.zero;
        /**
         * The title of the activity
         *
         * @generated from field: string title = 10;
         */
        this.title = "";
        /**
         * The start UNIX timestamp
         *
         * @generated from field: uint64 starts_at = 11;
         */
        this.startsAt = protobuf_1.protoInt64.zero;
        /**
         * The UNIX timestamp of when the activity needs to be completed
         *
         * @generated from field: uint64 due_by = 12;
         */
        this.dueBy = protobuf_1.protoInt64.zero;
        /**
         * The description of the activity
         *
         * @generated from field: string description = 13;
         */
        this.description = "";
        /**
         * Stores the internal reference that is automatically generated
         *
         * @generated from field: string internal_ref = 50;
         */
        this.internalRef = "";
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new Activity().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new Activity().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new Activity().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(Activity, a, b);
    }
}
exports.Activity = Activity;
Activity.runtime = protobuf_1.proto3;
Activity.typeName = "Scailo.Activity";
Activity.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "entity_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "metadata", kind: "message", T: base_scailo_pb_js_1.EmployeeMetadata },
    { no: 4, name: "status", kind: "enum", T: protobuf_1.proto3.getEnumType(ACTIVITY_LIFECYCLE) },
    { no: 5, name: "logs", kind: "message", T: LogbookLogActivityLC, repeated: true },
    { no: 6, name: "completed_on", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 7, name: "vault_folder_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 8, name: "activity_group_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 9, name: "activity_status_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 10, name: "title", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 11, name: "starts_at", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 12, name: "due_by", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 13, name: "description", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 50, name: "internal_ref", kind: "scalar", T: 9 /* ScalarType.STRING */ },
]);
/**
 *
 * Describes the message consisting of the list of records
 *
 * @generated from message Scailo.ActivitiesList
 */
class ActivitiesList extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * List of records
         *
         * @generated from field: repeated Scailo.Activity list = 1;
         */
        this.list = [];
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new ActivitiesList().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new ActivitiesList().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new ActivitiesList().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(ActivitiesList, a, b);
    }
}
exports.ActivitiesList = ActivitiesList;
ActivitiesList.runtime = protobuf_1.proto3;
ActivitiesList.typeName = "Scailo.ActivitiesList";
ActivitiesList.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "list", kind: "message", T: Activity, repeated: true },
]);
/**
 *
 * Describes the parameters that are part of an activity's statistics payload
 *
 * @generated from message Scailo.ActivityStatistics
 */
class ActivityStatistics extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * Stores the total amount of time spent on the activity
         *
         * @generated from field: uint64 total_duration = 1;
         */
        this.totalDuration = protobuf_1.protoInt64.zero;
        /**
         * Stores the cumulative completion percentage of the activity
         *
         * @generated from field: uint64 total_completion_percentage = 2;
         */
        this.totalCompletionPercentage = protobuf_1.protoInt64.zero;
        /**
         * Stores the total number of points
         *
         * @generated from field: uint64 total_points = 3;
         */
        this.totalPoints = protobuf_1.protoInt64.zero;
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new ActivityStatistics().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new ActivityStatistics().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new ActivityStatistics().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(ActivityStatistics, a, b);
    }
}
exports.ActivityStatistics = ActivityStatistics;
ActivityStatistics.runtime = protobuf_1.proto3;
ActivityStatistics.typeName = "Scailo.ActivityStatistics";
ActivityStatistics.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "total_duration", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 2, name: "total_completion_percentage", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 3, name: "total_points", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
]);
/**
 *
 * Describes a pagination request to retrieve records
 *
 * @generated from message Scailo.ActivitiesServicePaginationReq
 */
class ActivitiesServicePaginationReq extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * If true, then returns only active records. If false, then returns only inactive records
         *
         * @generated from field: Scailo.BOOL_FILTER is_active = 1;
         */
        this.isActive = base_scailo_pb_js_1.BOOL_FILTER.BOOL_FILTER_ANY_UNSPECIFIED;
        /**
         * The number of records that need to be sent in the response
         *
         * @generated from field: int64 count = 2;
         */
        this.count = protobuf_1.protoInt64.zero;
        /**
         * The number that need to be offset by before fetching the records
         *
         * @generated from field: uint64 offset = 3;
         */
        this.offset = protobuf_1.protoInt64.zero;
        /**
         * The sort order that is to be used to fetch the pagination response
         *
         * @generated from field: Scailo.SORT_ORDER sort_order = 4;
         */
        this.sortOrder = base_scailo_pb_js_1.SORT_ORDER.ASCENDING_UNSPECIFIED;
        /**
         * The sort key that is to be used to fetch the pagination response
         *
         * @generated from field: Scailo.ACTIVITY_SORT_KEY sort_key = 5;
         */
        this.sortKey = ACTIVITY_SORT_KEY.ACTIVITY_SORT_KEY_ID_UNSPECIFIED;
        /**
         * The status of this activity
         *
         * @generated from field: Scailo.ACTIVITY_LIFECYCLE status = 6;
         */
        this.status = ACTIVITY_LIFECYCLE.ACTIVITY_LIFECYCLE_ANY_UNSPECIFIED;
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new ActivitiesServicePaginationReq().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new ActivitiesServicePaginationReq().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new ActivitiesServicePaginationReq().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(ActivitiesServicePaginationReq, a, b);
    }
}
exports.ActivitiesServicePaginationReq = ActivitiesServicePaginationReq;
ActivitiesServicePaginationReq.runtime = protobuf_1.proto3;
ActivitiesServicePaginationReq.typeName = "Scailo.ActivitiesServicePaginationReq";
ActivitiesServicePaginationReq.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "is_active", kind: "enum", T: protobuf_1.proto3.getEnumType(base_scailo_pb_js_1.BOOL_FILTER) },
    { no: 2, name: "count", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "offset", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 4, name: "sort_order", kind: "enum", T: protobuf_1.proto3.getEnumType(base_scailo_pb_js_1.SORT_ORDER) },
    { no: 5, name: "sort_key", kind: "enum", T: protobuf_1.proto3.getEnumType(ACTIVITY_SORT_KEY) },
    { no: 6, name: "status", kind: "enum", T: protobuf_1.proto3.getEnumType(ACTIVITY_LIFECYCLE) },
]);
/**
 *
 * Describes the response to a pagination request
 *
 * @generated from message Scailo.ActivitiesServicePaginationResponse
 */
class ActivitiesServicePaginationResponse extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * The number of records in this payload
         *
         * @generated from field: uint64 count = 1;
         */
        this.count = protobuf_1.protoInt64.zero;
        /**
         * The number that has been offset before fetching the records. This is the same value that has been sent as part of the pagination request
         *
         * @generated from field: uint64 offset = 2;
         */
        this.offset = protobuf_1.protoInt64.zero;
        /**
         * The total number of records that are available
         *
         * @generated from field: uint64 total = 3;
         */
        this.total = protobuf_1.protoInt64.zero;
        /**
         * The list of records
         *
         * @generated from field: repeated Scailo.Activity payload = 4;
         */
        this.payload = [];
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new ActivitiesServicePaginationResponse().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new ActivitiesServicePaginationResponse().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new ActivitiesServicePaginationResponse().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(ActivitiesServicePaginationResponse, a, b);
    }
}
exports.ActivitiesServicePaginationResponse = ActivitiesServicePaginationResponse;
ActivitiesServicePaginationResponse.runtime = protobuf_1.proto3;
ActivitiesServicePaginationResponse.typeName = "Scailo.ActivitiesServicePaginationResponse";
ActivitiesServicePaginationResponse.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "count", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 2, name: "offset", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 3, name: "total", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 4, name: "payload", kind: "message", T: Activity, repeated: true },
]);
/**
 *
 * Describes the base request payload of a filter search
 *
 * @generated from message Scailo.ActivitiesServiceFilterReq
 */
class ActivitiesServiceFilterReq extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * If true, then returns only active records. If false, then returns only inactive records
         *
         * @generated from field: Scailo.BOOL_FILTER is_active = 1;
         */
        this.isActive = base_scailo_pb_js_1.BOOL_FILTER.BOOL_FILTER_ANY_UNSPECIFIED;
        /**
         * The number of records that need to be sent in the response. Returns all records if it is set to -1
         *
         * @generated from field: int64 count = 2;
         */
        this.count = protobuf_1.protoInt64.zero;
        /**
         * The number that need to be offset by before fetching the records
         *
         * @generated from field: uint64 offset = 3;
         */
        this.offset = protobuf_1.protoInt64.zero;
        /**
         * The sort order that is to be used to fetch the pagination response
         *
         * @generated from field: Scailo.SORT_ORDER sort_order = 4;
         */
        this.sortOrder = base_scailo_pb_js_1.SORT_ORDER.ASCENDING_UNSPECIFIED;
        /**
         * The sort key that is to be used to fetch the pagination response
         *
         * @generated from field: Scailo.ACTIVITY_SORT_KEY sort_key = 5;
         */
        this.sortKey = ACTIVITY_SORT_KEY.ACTIVITY_SORT_KEY_ID_UNSPECIFIED;
        /**
         * The minimum timestamp that needs to be considered to filter by creation
         *
         * @generated from field: uint64 creation_timestamp_start = 101;
         */
        this.creationTimestampStart = protobuf_1.protoInt64.zero;
        /**
         * The maximum timestamp that needs to be considered to filter by creation
         *
         * @generated from field: uint64 creation_timestamp_end = 102;
         */
        this.creationTimestampEnd = protobuf_1.protoInt64.zero;
        /**
         * The minimum timestamp that needs to be considered to filter by modification
         *
         * @generated from field: uint64 modification_timestamp_start = 103;
         */
        this.modificationTimestampStart = protobuf_1.protoInt64.zero;
        /**
         * The maximum timestamp that needs to be considered to filter by modification
         *
         * @generated from field: uint64 modification_timestamp_end = 104;
         */
        this.modificationTimestampEnd = protobuf_1.protoInt64.zero;
        /**
         * The entity UUID that is to be used to filter records
         *
         * @generated from field: string entity_uuid = 8;
         */
        this.entityUuid = "";
        /**
         * The status of this activity
         *
         * @generated from field: Scailo.ACTIVITY_LIFECYCLE status = 10;
         */
        this.status = ACTIVITY_LIFECYCLE.ACTIVITY_LIFECYCLE_ANY_UNSPECIFIED;
        /**
         * The start range of completed timestamp
         *
         * @generated from field: uint64 completed_on_start = 15;
         */
        this.completedOnStart = protobuf_1.protoInt64.zero;
        /**
         * The end range of completed timestamp
         *
         * @generated from field: uint64 completed_on_end = 16;
         */
        this.completedOnEnd = protobuf_1.protoInt64.zero;
        /**
         * Stores the internal reference that is automatically generated
         *
         * @generated from field: string internal_ref = 18;
         */
        this.internalRef = "";
        /**
         * The title of the activity
         *
         * @generated from field: string title = 20;
         */
        this.title = "";
        /**
         * The start range of "starts at"
         *
         * @generated from field: uint64 starts_at_start = 24;
         */
        this.startsAtStart = protobuf_1.protoInt64.zero;
        /**
         * The end range of "starts at"
         *
         * @generated from field: uint64 starts_at_end = 25;
         */
        this.startsAtEnd = protobuf_1.protoInt64.zero;
        /**
         * The start range of "due by"
         *
         * @generated from field: uint64 due_by_start = 26;
         */
        this.dueByStart = protobuf_1.protoInt64.zero;
        /**
         * The end range of "due by"
         *
         * @generated from field: uint64 due_by_end = 27;
         */
        this.dueByEnd = protobuf_1.protoInt64.zero;
        /**
         * Filter by the associated activity group ID
         *
         * @generated from field: uint64 activity_group_id = 40;
         */
        this.activityGroupId = protobuf_1.protoInt64.zero;
        /**
         * Filter by the associated activity status ID
         *
         * @generated from field: uint64 activity_status_id = 41;
         */
        this.activityStatusId = protobuf_1.protoInt64.zero;
        /**
         * ------------------------------------------------
         * Filter by the associated project ID
         *
         * @generated from field: uint64 project_id = 50;
         */
        this.projectId = protobuf_1.protoInt64.zero;
        /**
         * Filter by the associated owner employee
         *
         * @generated from field: uint64 owner_employee_id = 51;
         */
        this.ownerEmployeeId = protobuf_1.protoInt64.zero;
        /**
         * Filter by the associated supervisor employee
         *
         * @generated from field: uint64 supervisor_employee_id = 52;
         */
        this.supervisorEmployeeId = protobuf_1.protoInt64.zero;
        /**
         * Filter by the associated goal
         *
         * @generated from field: uint64 goal_id = 53;
         */
        this.goalId = protobuf_1.protoInt64.zero;
        /**
         * Filter by the associated action code
         *
         * @generated from field: uint64 action_code_id = 60;
         */
        this.actionCodeId = protobuf_1.protoInt64.zero;
        /**
         * Filter by the associated activity tag
         *
         * ------------------------------------------------
         *
         * @generated from field: uint64 activity_tag_id = 70;
         */
        this.activityTagId = protobuf_1.protoInt64.zero;
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new ActivitiesServiceFilterReq().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new ActivitiesServiceFilterReq().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new ActivitiesServiceFilterReq().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(ActivitiesServiceFilterReq, a, b);
    }
}
exports.ActivitiesServiceFilterReq = ActivitiesServiceFilterReq;
ActivitiesServiceFilterReq.runtime = protobuf_1.proto3;
ActivitiesServiceFilterReq.typeName = "Scailo.ActivitiesServiceFilterReq";
ActivitiesServiceFilterReq.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "is_active", kind: "enum", T: protobuf_1.proto3.getEnumType(base_scailo_pb_js_1.BOOL_FILTER) },
    { no: 2, name: "count", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "offset", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 4, name: "sort_order", kind: "enum", T: protobuf_1.proto3.getEnumType(base_scailo_pb_js_1.SORT_ORDER) },
    { no: 5, name: "sort_key", kind: "enum", T: protobuf_1.proto3.getEnumType(ACTIVITY_SORT_KEY) },
    { no: 101, name: "creation_timestamp_start", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 102, name: "creation_timestamp_end", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 103, name: "modification_timestamp_start", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 104, name: "modification_timestamp_end", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 8, name: "entity_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 10, name: "status", kind: "enum", T: protobuf_1.proto3.getEnumType(ACTIVITY_LIFECYCLE) },
    { no: 15, name: "completed_on_start", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 16, name: "completed_on_end", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 18, name: "internal_ref", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 20, name: "title", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 24, name: "starts_at_start", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 25, name: "starts_at_end", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 26, name: "due_by_start", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 27, name: "due_by_end", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 40, name: "activity_group_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 41, name: "activity_status_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 50, name: "project_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 51, name: "owner_employee_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 52, name: "supervisor_employee_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 53, name: "goal_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 60, name: "action_code_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 70, name: "activity_tag_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
]);
/**
 *
 * Describes the base request payload of a count search
 *
 * @generated from message Scailo.ActivitiesServiceCountReq
 */
class ActivitiesServiceCountReq extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * If true, then returns only active records. If false, then returns only inactive records
         *
         * @generated from field: Scailo.BOOL_FILTER is_active = 1;
         */
        this.isActive = base_scailo_pb_js_1.BOOL_FILTER.BOOL_FILTER_ANY_UNSPECIFIED;
        /**
         * The minimum timestamp that needs to be considered to filter by creation
         *
         * @generated from field: uint64 creation_timestamp_start = 101;
         */
        this.creationTimestampStart = protobuf_1.protoInt64.zero;
        /**
         * The maximum timestamp that needs to be considered to filter by creation
         *
         * @generated from field: uint64 creation_timestamp_end = 102;
         */
        this.creationTimestampEnd = protobuf_1.protoInt64.zero;
        /**
         * The minimum timestamp that needs to be considered to filter by modification
         *
         * @generated from field: uint64 modification_timestamp_start = 103;
         */
        this.modificationTimestampStart = protobuf_1.protoInt64.zero;
        /**
         * The maximum timestamp that needs to be considered to filter by modification
         *
         * @generated from field: uint64 modification_timestamp_end = 104;
         */
        this.modificationTimestampEnd = protobuf_1.protoInt64.zero;
        /**
         * The entity UUID that is to be used to filter records
         *
         * @generated from field: string entity_uuid = 8;
         */
        this.entityUuid = "";
        /**
         * The status of this activity
         *
         * @generated from field: Scailo.ACTIVITY_LIFECYCLE status = 10;
         */
        this.status = ACTIVITY_LIFECYCLE.ACTIVITY_LIFECYCLE_ANY_UNSPECIFIED;
        /**
         * The start range of completed timestamp
         *
         * @generated from field: uint64 completed_on_start = 15;
         */
        this.completedOnStart = protobuf_1.protoInt64.zero;
        /**
         * The end range of completed timestamp
         *
         * @generated from field: uint64 completed_on_end = 16;
         */
        this.completedOnEnd = protobuf_1.protoInt64.zero;
        /**
         * Stores the internal reference that is automatically generated
         *
         * @generated from field: string internal_ref = 18;
         */
        this.internalRef = "";
        /**
         * The title of the activity
         *
         * @generated from field: string title = 20;
         */
        this.title = "";
        /**
         * The start range of "starts at"
         *
         * @generated from field: uint64 starts_at_start = 24;
         */
        this.startsAtStart = protobuf_1.protoInt64.zero;
        /**
         * The end range of "starts at"
         *
         * @generated from field: uint64 starts_at_end = 25;
         */
        this.startsAtEnd = protobuf_1.protoInt64.zero;
        /**
         * The start range of "due by"
         *
         * @generated from field: uint64 due_by_start = 26;
         */
        this.dueByStart = protobuf_1.protoInt64.zero;
        /**
         * The end range of "due by"
         *
         * @generated from field: uint64 due_by_end = 27;
         */
        this.dueByEnd = protobuf_1.protoInt64.zero;
        /**
         * Filter by the associated activity group ID
         *
         * @generated from field: uint64 activity_group_id = 40;
         */
        this.activityGroupId = protobuf_1.protoInt64.zero;
        /**
         * Filter by the associated activity status ID
         *
         * @generated from field: uint64 activity_status_id = 41;
         */
        this.activityStatusId = protobuf_1.protoInt64.zero;
        /**
         * ------------------------------------------------
         * Filter by the associated project ID
         *
         * @generated from field: uint64 project_id = 50;
         */
        this.projectId = protobuf_1.protoInt64.zero;
        /**
         * Filter by the associated owner employee
         *
         * @generated from field: uint64 owner_employee_id = 51;
         */
        this.ownerEmployeeId = protobuf_1.protoInt64.zero;
        /**
         * Filter by the associated supervisor employee
         *
         * @generated from field: uint64 supervisor_employee_id = 52;
         */
        this.supervisorEmployeeId = protobuf_1.protoInt64.zero;
        /**
         * Filter by the associated goal
         *
         * @generated from field: uint64 goal_id = 53;
         */
        this.goalId = protobuf_1.protoInt64.zero;
        /**
         * Filter by the associated action code
         *
         * @generated from field: uint64 action_code_id = 60;
         */
        this.actionCodeId = protobuf_1.protoInt64.zero;
        /**
         * Filter by the associated activity tag
         *
         * ------------------------------------------------
         *
         * @generated from field: uint64 activity_tag_id = 70;
         */
        this.activityTagId = protobuf_1.protoInt64.zero;
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new ActivitiesServiceCountReq().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new ActivitiesServiceCountReq().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new ActivitiesServiceCountReq().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(ActivitiesServiceCountReq, a, b);
    }
}
exports.ActivitiesServiceCountReq = ActivitiesServiceCountReq;
ActivitiesServiceCountReq.runtime = protobuf_1.proto3;
ActivitiesServiceCountReq.typeName = "Scailo.ActivitiesServiceCountReq";
ActivitiesServiceCountReq.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "is_active", kind: "enum", T: protobuf_1.proto3.getEnumType(base_scailo_pb_js_1.BOOL_FILTER) },
    { no: 101, name: "creation_timestamp_start", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 102, name: "creation_timestamp_end", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 103, name: "modification_timestamp_start", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 104, name: "modification_timestamp_end", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 8, name: "entity_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 10, name: "status", kind: "enum", T: protobuf_1.proto3.getEnumType(ACTIVITY_LIFECYCLE) },
    { no: 15, name: "completed_on_start", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 16, name: "completed_on_end", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 18, name: "internal_ref", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 20, name: "title", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 24, name: "starts_at_start", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 25, name: "starts_at_end", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 26, name: "due_by_start", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 27, name: "due_by_end", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 40, name: "activity_group_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 41, name: "activity_status_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 50, name: "project_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 51, name: "owner_employee_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 52, name: "supervisor_employee_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 53, name: "goal_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 60, name: "action_code_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 70, name: "activity_tag_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
]);
/**
 *
 * Describes the request payload for performing a generic search operation on records
 *
 * @generated from message Scailo.ActivitiesServiceSearchAllReq
 */
class ActivitiesServiceSearchAllReq extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * If true, then returns only active records. If false, then returns only inactive records
         *
         * @generated from field: Scailo.BOOL_FILTER is_active = 1;
         */
        this.isActive = base_scailo_pb_js_1.BOOL_FILTER.BOOL_FILTER_ANY_UNSPECIFIED;
        /**
         * The number of records that need to be sent in the response. Returns all records if it is set to -1
         *
         * @generated from field: int64 count = 2;
         */
        this.count = protobuf_1.protoInt64.zero;
        /**
         * The number that need to be offset by before fetching the records
         *
         * @generated from field: uint64 offset = 3;
         */
        this.offset = protobuf_1.protoInt64.zero;
        /**
         * The sort order that is to be used to fetch the pagination response
         *
         * @generated from field: Scailo.SORT_ORDER sort_order = 4;
         */
        this.sortOrder = base_scailo_pb_js_1.SORT_ORDER.ASCENDING_UNSPECIFIED;
        /**
         * The sort key that is to be used to fetch the pagination response
         *
         * @generated from field: Scailo.ACTIVITY_SORT_KEY sort_key = 5;
         */
        this.sortKey = ACTIVITY_SORT_KEY.ACTIVITY_SORT_KEY_ID_UNSPECIFIED;
        /**
         * The entity UUID that is to be used to filter records
         *
         * @generated from field: string entity_uuid = 6;
         */
        this.entityUuid = "";
        /**
         * Limit the search space to the given status
         *
         * @generated from field: Scailo.ACTIVITY_LIFECYCLE status = 10;
         */
        this.status = ACTIVITY_LIFECYCLE.ACTIVITY_LIFECYCLE_ANY_UNSPECIFIED;
        /**
         * Describes the key with which the search operation needs to be performed
         *
         * @generated from field: string search_key = 11;
         */
        this.searchKey = "";
        /**
         * Filter by the associated activity group ID
         *
         * @generated from field: uint64 activity_group_id = 40;
         */
        this.activityGroupId = protobuf_1.protoInt64.zero;
        /**
         * Filter by the associated activity status ID
         *
         * @generated from field: uint64 activity_status_id = 41;
         */
        this.activityStatusId = protobuf_1.protoInt64.zero;
        /**
         * ------------------------------------------------
         * Filter by the associated project ID
         *
         * @generated from field: uint64 project_id = 50;
         */
        this.projectId = protobuf_1.protoInt64.zero;
        /**
         * Filter by the associated owner employee
         *
         * @generated from field: uint64 owner_employee_id = 51;
         */
        this.ownerEmployeeId = protobuf_1.protoInt64.zero;
        /**
         * Filter by the associated supervisor employee
         *
         * @generated from field: uint64 supervisor_employee_id = 52;
         */
        this.supervisorEmployeeId = protobuf_1.protoInt64.zero;
        /**
         * Filter by the associated goal
         *
         * @generated from field: uint64 goal_id = 53;
         */
        this.goalId = protobuf_1.protoInt64.zero;
        /**
         * Filter by the associated action code
         *
         * @generated from field: uint64 action_code_id = 60;
         */
        this.actionCodeId = protobuf_1.protoInt64.zero;
        /**
         * Filter by the associated activity tag
         *
         * ------------------------------------------------
         *
         * @generated from field: uint64 activity_tag_id = 70;
         */
        this.activityTagId = protobuf_1.protoInt64.zero;
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new ActivitiesServiceSearchAllReq().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new ActivitiesServiceSearchAllReq().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new ActivitiesServiceSearchAllReq().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(ActivitiesServiceSearchAllReq, a, b);
    }
}
exports.ActivitiesServiceSearchAllReq = ActivitiesServiceSearchAllReq;
ActivitiesServiceSearchAllReq.runtime = protobuf_1.proto3;
ActivitiesServiceSearchAllReq.typeName = "Scailo.ActivitiesServiceSearchAllReq";
ActivitiesServiceSearchAllReq.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "is_active", kind: "enum", T: protobuf_1.proto3.getEnumType(base_scailo_pb_js_1.BOOL_FILTER) },
    { no: 2, name: "count", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "offset", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 4, name: "sort_order", kind: "enum", T: protobuf_1.proto3.getEnumType(base_scailo_pb_js_1.SORT_ORDER) },
    { no: 5, name: "sort_key", kind: "enum", T: protobuf_1.proto3.getEnumType(ACTIVITY_SORT_KEY) },
    { no: 6, name: "entity_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 10, name: "status", kind: "enum", T: protobuf_1.proto3.getEnumType(ACTIVITY_LIFECYCLE) },
    { no: 11, name: "search_key", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 40, name: "activity_group_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 41, name: "activity_status_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 50, name: "project_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 51, name: "owner_employee_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 52, name: "supervisor_employee_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 53, name: "goal_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 60, name: "action_code_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 70, name: "activity_tag_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
]);
/**
 *
 * Describes the parameters required to add an action to an activity
 *
 * @generated from message Scailo.ActivitiesServiceActionCreateRequest
 */
class ActivitiesServiceActionCreateRequest extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * Stores any comment that the user might add during this operation
         *
         * @generated from field: string user_comment = 1;
         */
        this.userComment = "";
        /**
         * Stores the optional employee ID
         *
         * @generated from field: uint64 employee_id = 9;
         */
        this.employeeId = protobuf_1.protoInt64.zero;
        /**
         * Stores the activity ID
         *
         * @generated from field: uint64 activity_id = 10;
         */
        this.activityId = protobuf_1.protoInt64.zero;
        /**
         * The title of the action
         *
         * @generated from field: string title = 11;
         */
        this.title = "";
        /**
         * The content of the action
         *
         * @generated from field: string content = 12;
         */
        this.content = "";
        /**
         * Stores the action code ID
         *
         * @generated from field: uint64 action_code_id = 13;
         */
        this.actionCodeId = protobuf_1.protoInt64.zero;
        /**
         * Stores the number of points assigned to this action (should be greater than 0)
         *
         * @generated from field: uint64 points = 14;
         */
        this.points = protobuf_1.protoInt64.zero;
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new ActivitiesServiceActionCreateRequest().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new ActivitiesServiceActionCreateRequest().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new ActivitiesServiceActionCreateRequest().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(ActivitiesServiceActionCreateRequest, a, b);
    }
}
exports.ActivitiesServiceActionCreateRequest = ActivitiesServiceActionCreateRequest;
ActivitiesServiceActionCreateRequest.runtime = protobuf_1.proto3;
ActivitiesServiceActionCreateRequest.typeName = "Scailo.ActivitiesServiceActionCreateRequest";
ActivitiesServiceActionCreateRequest.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "user_comment", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 9, name: "employee_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 10, name: "activity_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 11, name: "title", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 12, name: "content", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 13, name: "action_code_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 14, name: "points", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
]);
/**
 *
 * Describes the parameters required to update an action in an activity
 *
 * @generated from message Scailo.ActivitiesServiceActionUpdateRequest
 */
class ActivitiesServiceActionUpdateRequest extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * Stores any comment that the user might add during this operation
         *
         * @generated from field: string user_comment = 1;
         */
        this.userComment = "";
        /**
         * The ID of the record
         *
         * @generated from field: uint64 id = 2;
         */
        this.id = protobuf_1.protoInt64.zero;
        /**
         * Stores the optional employee ID
         *
         * @generated from field: uint64 employee_id = 9;
         */
        this.employeeId = protobuf_1.protoInt64.zero;
        /**
         * The title of the action
         *
         * @generated from field: string title = 11;
         */
        this.title = "";
        /**
         * The content of the action
         *
         * @generated from field: string content = 12;
         */
        this.content = "";
        /**
         * Stores the action code ID
         *
         * @generated from field: uint64 action_code_id = 13;
         */
        this.actionCodeId = protobuf_1.protoInt64.zero;
        /**
         * Stores the number of points assigned to this action (should be greater than 0)
         *
         * @generated from field: uint64 points = 14;
         */
        this.points = protobuf_1.protoInt64.zero;
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new ActivitiesServiceActionUpdateRequest().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new ActivitiesServiceActionUpdateRequest().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new ActivitiesServiceActionUpdateRequest().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(ActivitiesServiceActionUpdateRequest, a, b);
    }
}
exports.ActivitiesServiceActionUpdateRequest = ActivitiesServiceActionUpdateRequest;
ActivitiesServiceActionUpdateRequest.runtime = protobuf_1.proto3;
ActivitiesServiceActionUpdateRequest.typeName = "Scailo.ActivitiesServiceActionUpdateRequest";
ActivitiesServiceActionUpdateRequest.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "user_comment", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 9, name: "employee_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 11, name: "title", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 12, name: "content", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 13, name: "action_code_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 14, name: "points", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
]);
/**
 *
 * Describes the parameters that constitute an action associated to an activity
 *
 * @generated from message Scailo.ActivityAction
 */
class ActivityAction extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * Stores a globally unique entity UUID. This will be set at the organization level
         *
         * @generated from field: string entity_uuid = 1;
         */
        this.entityUuid = "";
        /**
         * Stores any comment that the user might have added during an operation
         *
         * @generated from field: string user_comment = 5;
         */
        this.userComment = "";
        /**
         * Stores the optional employee ID
         *
         * @generated from field: uint64 employee_id = 9;
         */
        this.employeeId = protobuf_1.protoInt64.zero;
        /**
         * Stores the activity ID
         *
         * @generated from field: uint64 activity_id = 10;
         */
        this.activityId = protobuf_1.protoInt64.zero;
        /**
         * The title of the action
         *
         * @generated from field: string title = 11;
         */
        this.title = "";
        /**
         * The content of the action
         *
         * @generated from field: string content = 12;
         */
        this.content = "";
        /**
         * Stores the action code ID
         *
         * @generated from field: uint64 action_code_id = 13;
         */
        this.actionCodeId = protobuf_1.protoInt64.zero;
        /**
         * Stores the number of points assigned to this action
         *
         * @generated from field: uint64 points = 14;
         */
        this.points = protobuf_1.protoInt64.zero;
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new ActivityAction().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new ActivityAction().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new ActivityAction().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(ActivityAction, a, b);
    }
}
exports.ActivityAction = ActivityAction;
ActivityAction.runtime = protobuf_1.proto3;
ActivityAction.typeName = "Scailo.ActivityAction";
ActivityAction.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "entity_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "metadata", kind: "message", T: base_scailo_pb_js_1.EmployeeMetadata },
    { no: 5, name: "user_comment", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 9, name: "employee_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 10, name: "activity_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 11, name: "title", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 12, name: "content", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 13, name: "action_code_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 14, name: "points", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
]);
/**
 *
 * Describes the parameters that are part of an activity action's statistics payload
 *
 * @generated from message Scailo.ActivityActionStatistics
 */
class ActivityActionStatistics extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * Stores the total amount of time spent on the activity action
         *
         * @generated from field: uint64 total_duration = 1;
         */
        this.totalDuration = protobuf_1.protoInt64.zero;
        /**
         * Stores the cumulative completion percentage of the activity action
         *
         * @generated from field: uint64 total_completion_percentage = 2;
         */
        this.totalCompletionPercentage = protobuf_1.protoInt64.zero;
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new ActivityActionStatistics().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new ActivityActionStatistics().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new ActivityActionStatistics().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(ActivityActionStatistics, a, b);
    }
}
exports.ActivityActionStatistics = ActivityActionStatistics;
ActivityActionStatistics.runtime = protobuf_1.proto3;
ActivityActionStatistics.typeName = "Scailo.ActivityActionStatistics";
ActivityActionStatistics.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "total_duration", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 2, name: "total_completion_percentage", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
]);
/**
 *
 * Describes the message consisting of the list of activity actions
 *
 * @generated from message Scailo.ActivityActionsList
 */
class ActivityActionsList extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * List of records
         *
         * @generated from field: repeated Scailo.ActivityAction list = 1;
         */
        this.list = [];
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new ActivityActionsList().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new ActivityActionsList().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new ActivityActionsList().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(ActivityActionsList, a, b);
    }
}
exports.ActivityActionsList = ActivityActionsList;
ActivityActionsList.runtime = protobuf_1.proto3;
ActivityActionsList.typeName = "Scailo.ActivityActionsList";
ActivityActionsList.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "list", kind: "message", T: ActivityAction, repeated: true },
]);
/**
 *
 * Describes the parameters that are required to retrieve the history of the record
 *
 * @generated from message Scailo.ActivityActionHistoryRequest
 */
class ActivityActionHistoryRequest extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * Stores the activity ID
         *
         * @generated from field: uint64 activity_id = 10;
         */
        this.activityId = protobuf_1.protoInt64.zero;
        /**
         * Stores the action code ID
         *
         * @generated from field: uint64 action_code_id = 13;
         */
        this.actionCodeId = protobuf_1.protoInt64.zero;
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new ActivityActionHistoryRequest().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new ActivityActionHistoryRequest().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new ActivityActionHistoryRequest().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(ActivityActionHistoryRequest, a, b);
    }
}
exports.ActivityActionHistoryRequest = ActivityActionHistoryRequest;
ActivityActionHistoryRequest.runtime = protobuf_1.proto3;
ActivityActionHistoryRequest.typeName = "Scailo.ActivityActionHistoryRequest";
ActivityActionHistoryRequest.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 10, name: "activity_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 13, name: "action_code_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
]);
/**
 *
 * Describes the request payload to retrieve actions.
 *
 * @generated from message Scailo.ActivityActionsSearchRequest
 */
class ActivityActionsSearchRequest extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * If true, then returns only active records. If false, then returns only inactive records
         *
         * @generated from field: Scailo.BOOL_FILTER is_active = 1;
         */
        this.isActive = base_scailo_pb_js_1.BOOL_FILTER.BOOL_FILTER_ANY_UNSPECIFIED;
        /**
         * The number of records that need to be sent in the response. Returns all records if it is set to -1
         *
         * @generated from field: int64 count = 2;
         */
        this.count = protobuf_1.protoInt64.zero;
        /**
         * The number that need to be offset by before fetching the records
         *
         * @generated from field: uint64 offset = 3;
         */
        this.offset = protobuf_1.protoInt64.zero;
        /**
         * The sort order that is to be used to fetch the pagination response
         *
         * @generated from field: Scailo.SORT_ORDER sort_order = 4;
         */
        this.sortOrder = base_scailo_pb_js_1.SORT_ORDER.ASCENDING_UNSPECIFIED;
        /**
         * The sort key that is to be used to fetch the pagination response
         *
         * @generated from field: Scailo.ACTIVITY_ACTION_SORT_KEY sort_key = 5;
         */
        this.sortKey = ACTIVITY_ACTION_SORT_KEY.ACTIVITY_ACTION_SORT_KEY_ID_UNSPECIFIED;
        /**
         * The entity UUID that is to be used to filter records
         *
         * @generated from field: string entity_uuid = 6;
         */
        this.entityUuid = "";
        /**
         * Stores the optional employee ID
         *
         * @generated from field: uint64 employee_id = 9;
         */
        this.employeeId = protobuf_1.protoInt64.zero;
        /**
         * The ID of the activity
         *
         * @generated from field: uint64 activity_id = 20;
         */
        this.activityId = protobuf_1.protoInt64.zero;
        /**
         * Stores the action code ID
         *
         * @generated from field: uint64 action_code_id = 23;
         */
        this.actionCodeId = protobuf_1.protoInt64.zero;
        /**
         * Describes the key with which the search operation needs to be performed
         *
         * @generated from field: string search_key = 40;
         */
        this.searchKey = "";
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new ActivityActionsSearchRequest().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new ActivityActionsSearchRequest().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new ActivityActionsSearchRequest().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(ActivityActionsSearchRequest, a, b);
    }
}
exports.ActivityActionsSearchRequest = ActivityActionsSearchRequest;
ActivityActionsSearchRequest.runtime = protobuf_1.proto3;
ActivityActionsSearchRequest.typeName = "Scailo.ActivityActionsSearchRequest";
ActivityActionsSearchRequest.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "is_active", kind: "enum", T: protobuf_1.proto3.getEnumType(base_scailo_pb_js_1.BOOL_FILTER) },
    { no: 2, name: "count", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "offset", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 4, name: "sort_order", kind: "enum", T: protobuf_1.proto3.getEnumType(base_scailo_pb_js_1.SORT_ORDER) },
    { no: 5, name: "sort_key", kind: "enum", T: protobuf_1.proto3.getEnumType(ACTIVITY_ACTION_SORT_KEY) },
    { no: 6, name: "entity_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 9, name: "employee_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 20, name: "activity_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 23, name: "action_code_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 40, name: "search_key", kind: "scalar", T: 9 /* ScalarType.STRING */ },
]);
/**
 *
 * Describes the response to a pagination actions request
 *
 * @generated from message Scailo.ActivitiesServicePaginatedActionsResponse
 */
class ActivitiesServicePaginatedActionsResponse extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * The number of records in this payload
         *
         * @generated from field: uint64 count = 1;
         */
        this.count = protobuf_1.protoInt64.zero;
        /**
         * The number that has been offset before fetching the records. This is the same value that has been sent as part of the pagination request
         *
         * @generated from field: uint64 offset = 2;
         */
        this.offset = protobuf_1.protoInt64.zero;
        /**
         * The total number of records that are available
         *
         * @generated from field: uint64 total = 3;
         */
        this.total = protobuf_1.protoInt64.zero;
        /**
         * The list of records
         *
         * @generated from field: repeated Scailo.ActivityAction payload = 4;
         */
        this.payload = [];
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new ActivitiesServicePaginatedActionsResponse().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new ActivitiesServicePaginatedActionsResponse().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new ActivitiesServicePaginatedActionsResponse().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(ActivitiesServicePaginatedActionsResponse, a, b);
    }
}
exports.ActivitiesServicePaginatedActionsResponse = ActivitiesServicePaginatedActionsResponse;
ActivitiesServicePaginatedActionsResponse.runtime = protobuf_1.proto3;
ActivitiesServicePaginatedActionsResponse.typeName = "Scailo.ActivitiesServicePaginatedActionsResponse";
ActivitiesServicePaginatedActionsResponse.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "count", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 2, name: "offset", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 3, name: "total", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 4, name: "payload", kind: "message", T: ActivityAction, repeated: true },
]);
/**
 *
 * Describes the parameters required to add an action along with an activity timer
 *
 * @generated from message Scailo.ActivitiesServiceActionWithTimerCreateRequest
 */
class ActivitiesServiceActionWithTimerCreateRequest extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * Stores any comment that the user might add during this operation
         *
         * @generated from field: string user_comment = 1;
         */
        this.userComment = "";
        /**
         * Stores the activity ID
         *
         * @generated from field: uint64 activity_id = 10;
         */
        this.activityId = protobuf_1.protoInt64.zero;
        /**
         * Stores the optional goal ID
         *
         * @generated from field: uint64 goal_id = 11;
         */
        this.goalId = protobuf_1.protoInt64.zero;
        /**
         * Stores the employee ID
         *
         * @generated from field: uint64 employee_id = 12;
         */
        this.employeeId = protobuf_1.protoInt64.zero;
        /**
         * Stores the number of points assigned to this action (should be greater than 0)
         *
         * @generated from field: uint64 points = 13;
         */
        this.points = protobuf_1.protoInt64.zero;
        /**
         * Stores the start time
         *
         * @generated from field: uint64 start_at = 14;
         */
        this.startAt = protobuf_1.protoInt64.zero;
        /**
         * Stores the end time (can be 0)
         *
         * @generated from field: uint64 end_at = 15;
         */
        this.endAt = protobuf_1.protoInt64.zero;
        /**
         * Stores the cumulative completion percentage (this will be diffed at the API and stored only as a diff. E.g., if this is set to 4000, and the cumulative percentage for the same action has been 3500, then the API would store this as 500)
         *
         * @generated from field: uint64 completion_percentage = 16;
         */
        this.completionPercentage = protobuf_1.protoInt64.zero;
        /**
         * Stores the action code ID
         *
         * @generated from field: uint64 action_code_id = 17;
         */
        this.actionCodeId = protobuf_1.protoInt64.zero;
        /**
         * The title of the action
         *
         * @generated from field: string title = 20;
         */
        this.title = "";
        /**
         * The content of the action
         *
         * @generated from field: string content = 21;
         */
        this.content = "";
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new ActivitiesServiceActionWithTimerCreateRequest().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new ActivitiesServiceActionWithTimerCreateRequest().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new ActivitiesServiceActionWithTimerCreateRequest().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(ActivitiesServiceActionWithTimerCreateRequest, a, b);
    }
}
exports.ActivitiesServiceActionWithTimerCreateRequest = ActivitiesServiceActionWithTimerCreateRequest;
ActivitiesServiceActionWithTimerCreateRequest.runtime = protobuf_1.proto3;
ActivitiesServiceActionWithTimerCreateRequest.typeName = "Scailo.ActivitiesServiceActionWithTimerCreateRequest";
ActivitiesServiceActionWithTimerCreateRequest.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "user_comment", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 10, name: "activity_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 11, name: "goal_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 12, name: "employee_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 13, name: "points", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 14, name: "start_at", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 15, name: "end_at", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 16, name: "completion_percentage", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 17, name: "action_code_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 20, name: "title", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 21, name: "content", kind: "scalar", T: 9 /* ScalarType.STRING */ },
]);
/**
 *
 * Describes the parameters necessary to create an activity tag association
 *
 * @generated from message Scailo.ActivitiesServiceActivityTagAssociationCreateRequest
 */
class ActivitiesServiceActivityTagAssociationCreateRequest extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * Stores any comment that the user might add during this operation
         *
         * @generated from field: string user_comment = 1;
         */
        this.userComment = "";
        /**
         * Stores the activity ID
         *
         * @generated from field: uint64 activity_id = 10;
         */
        this.activityId = protobuf_1.protoInt64.zero;
        /**
         * Stores the activity tag ID
         *
         * @generated from field: uint64 activity_tag_id = 11;
         */
        this.activityTagId = protobuf_1.protoInt64.zero;
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new ActivitiesServiceActivityTagAssociationCreateRequest().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new ActivitiesServiceActivityTagAssociationCreateRequest().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new ActivitiesServiceActivityTagAssociationCreateRequest().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(ActivitiesServiceActivityTagAssociationCreateRequest, a, b);
    }
}
exports.ActivitiesServiceActivityTagAssociationCreateRequest = ActivitiesServiceActivityTagAssociationCreateRequest;
ActivitiesServiceActivityTagAssociationCreateRequest.runtime = protobuf_1.proto3;
ActivitiesServiceActivityTagAssociationCreateRequest.typeName = "Scailo.ActivitiesServiceActivityTagAssociationCreateRequest";
ActivitiesServiceActivityTagAssociationCreateRequest.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "user_comment", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 10, name: "activity_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 11, name: "activity_tag_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
]);
/**
 *
 * Describes the parameters that constitute an activity tag association
 *
 * @generated from message Scailo.ActivityTagAssociation
 */
class ActivityTagAssociation extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * Stores a globally unique entity UUID. This will be set at the organization level
         *
         * @generated from field: string entity_uuid = 1;
         */
        this.entityUuid = "";
        /**
         * Stores any comment that the user might have added during an operation
         *
         * @generated from field: string user_comment = 5;
         */
        this.userComment = "";
        /**
         * Stores the activity ID
         *
         * @generated from field: uint64 activity_id = 10;
         */
        this.activityId = protobuf_1.protoInt64.zero;
        /**
         * Stores the activity tag ID
         *
         * @generated from field: uint64 activity_tag_id = 11;
         */
        this.activityTagId = protobuf_1.protoInt64.zero;
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new ActivityTagAssociation().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new ActivityTagAssociation().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new ActivityTagAssociation().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(ActivityTagAssociation, a, b);
    }
}
exports.ActivityTagAssociation = ActivityTagAssociation;
ActivityTagAssociation.runtime = protobuf_1.proto3;
ActivityTagAssociation.typeName = "Scailo.ActivityTagAssociation";
ActivityTagAssociation.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "entity_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "metadata", kind: "message", T: base_scailo_pb_js_1.EmployeeMetadata },
    { no: 5, name: "user_comment", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 10, name: "activity_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 11, name: "activity_tag_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
]);
/**
 *
 * Describes the message consisting of the list of activity tag associations
 *
 * @generated from message Scailo.ActivityTagAssociationsList
 */
class ActivityTagAssociationsList extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * List of records
         *
         * @generated from field: repeated Scailo.ActivityTagAssociation list = 1;
         */
        this.list = [];
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new ActivityTagAssociationsList().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new ActivityTagAssociationsList().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new ActivityTagAssociationsList().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(ActivityTagAssociationsList, a, b);
    }
}
exports.ActivityTagAssociationsList = ActivityTagAssociationsList;
ActivityTagAssociationsList.runtime = protobuf_1.proto3;
ActivityTagAssociationsList.typeName = "Scailo.ActivityTagAssociationsList";
ActivityTagAssociationsList.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "list", kind: "message", T: ActivityTagAssociation, repeated: true },
]);
/**
 *
 * Describes the parameters necessary to create an activity owner
 *
 * @generated from message Scailo.ActivitiesServiceOwnerCreateRequest
 */
class ActivitiesServiceOwnerCreateRequest extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * Stores any comment that the user might add during this operation
         *
         * @generated from field: string user_comment = 1;
         */
        this.userComment = "";
        /**
         * Stores the activity ID
         *
         * @generated from field: uint64 activity_id = 10;
         */
        this.activityId = protobuf_1.protoInt64.zero;
        /**
         * Stores the employee ID
         *
         * @generated from field: uint64 employee_id = 11;
         */
        this.employeeId = protobuf_1.protoInt64.zero;
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new ActivitiesServiceOwnerCreateRequest().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new ActivitiesServiceOwnerCreateRequest().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new ActivitiesServiceOwnerCreateRequest().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(ActivitiesServiceOwnerCreateRequest, a, b);
    }
}
exports.ActivitiesServiceOwnerCreateRequest = ActivitiesServiceOwnerCreateRequest;
ActivitiesServiceOwnerCreateRequest.runtime = protobuf_1.proto3;
ActivitiesServiceOwnerCreateRequest.typeName = "Scailo.ActivitiesServiceOwnerCreateRequest";
ActivitiesServiceOwnerCreateRequest.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "user_comment", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 10, name: "activity_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 11, name: "employee_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
]);
/**
 *
 * Describes the parameters that constitute an activity owner
 *
 * @generated from message Scailo.ActivityOwner
 */
class ActivityOwner extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * Stores a globally unique entity UUID. This will be set at the organization level
         *
         * @generated from field: string entity_uuid = 1;
         */
        this.entityUuid = "";
        /**
         * Stores any comment that the user might have added during an operation
         *
         * @generated from field: string user_comment = 5;
         */
        this.userComment = "";
        /**
         * Stores the activity ID
         *
         * @generated from field: uint64 activity_id = 10;
         */
        this.activityId = protobuf_1.protoInt64.zero;
        /**
         * Stores the employee ID
         *
         * @generated from field: uint64 employee_id = 11;
         */
        this.employeeId = protobuf_1.protoInt64.zero;
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new ActivityOwner().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new ActivityOwner().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new ActivityOwner().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(ActivityOwner, a, b);
    }
}
exports.ActivityOwner = ActivityOwner;
ActivityOwner.runtime = protobuf_1.proto3;
ActivityOwner.typeName = "Scailo.ActivityOwner";
ActivityOwner.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "entity_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "metadata", kind: "message", T: base_scailo_pb_js_1.EmployeeMetadata },
    { no: 5, name: "user_comment", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 10, name: "activity_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 11, name: "employee_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
]);
/**
 *
 * Describes the message consisting of the list of activity owners
 *
 * @generated from message Scailo.ActivityOwnersList
 */
class ActivityOwnersList extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * List of records
         *
         * @generated from field: repeated Scailo.ActivityOwner list = 1;
         */
        this.list = [];
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new ActivityOwnersList().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new ActivityOwnersList().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new ActivityOwnersList().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(ActivityOwnersList, a, b);
    }
}
exports.ActivityOwnersList = ActivityOwnersList;
ActivityOwnersList.runtime = protobuf_1.proto3;
ActivityOwnersList.typeName = "Scailo.ActivityOwnersList";
ActivityOwnersList.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "list", kind: "message", T: ActivityOwner, repeated: true },
]);
/**
 *
 * Describes the data model to handle importing of employees from the given identifier representing a team or a department
 *
 * @generated from message Scailo.ActivitiesServiceImportOwnersRequest
 */
class ActivitiesServiceImportOwnersRequest extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * Stores any comment that the user might add during this operation
         *
         * @generated from field: string user_comment = 1;
         */
        this.userComment = "";
        /**
         * The ID of the activity
         *
         * @generated from field: uint64 activity_id = 2;
         */
        this.activityId = protobuf_1.protoInt64.zero;
        /**
         * The ID of the team or the department from which employees need to be added to the activity
         *
         * @generated from field: uint64 resource_id = 3;
         */
        this.resourceId = protobuf_1.protoInt64.zero;
        /**
         * Stores if the existing employees in the activity need to be deleted before adding from the source record
         *
         * @generated from field: bool delete_existing = 4;
         */
        this.deleteExisting = false;
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new ActivitiesServiceImportOwnersRequest().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new ActivitiesServiceImportOwnersRequest().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new ActivitiesServiceImportOwnersRequest().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(ActivitiesServiceImportOwnersRequest, a, b);
    }
}
exports.ActivitiesServiceImportOwnersRequest = ActivitiesServiceImportOwnersRequest;
ActivitiesServiceImportOwnersRequest.runtime = protobuf_1.proto3;
ActivitiesServiceImportOwnersRequest.typeName = "Scailo.ActivitiesServiceImportOwnersRequest";
ActivitiesServiceImportOwnersRequest.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "user_comment", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "activity_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 3, name: "resource_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 4, name: "delete_existing", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
]);
/**
 *
 * Describes the parameters necessary to create an activity supervisor
 *
 * @generated from message Scailo.ActivitiesServiceSupervisorCreateRequest
 */
class ActivitiesServiceSupervisorCreateRequest extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * Stores any comment that the user might add during this operation
         *
         * @generated from field: string user_comment = 1;
         */
        this.userComment = "";
        /**
         * Stores the activity ID
         *
         * @generated from field: uint64 activity_id = 10;
         */
        this.activityId = protobuf_1.protoInt64.zero;
        /**
         * Stores the employee ID
         *
         * @generated from field: uint64 employee_id = 11;
         */
        this.employeeId = protobuf_1.protoInt64.zero;
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new ActivitiesServiceSupervisorCreateRequest().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new ActivitiesServiceSupervisorCreateRequest().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new ActivitiesServiceSupervisorCreateRequest().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(ActivitiesServiceSupervisorCreateRequest, a, b);
    }
}
exports.ActivitiesServiceSupervisorCreateRequest = ActivitiesServiceSupervisorCreateRequest;
ActivitiesServiceSupervisorCreateRequest.runtime = protobuf_1.proto3;
ActivitiesServiceSupervisorCreateRequest.typeName = "Scailo.ActivitiesServiceSupervisorCreateRequest";
ActivitiesServiceSupervisorCreateRequest.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "user_comment", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 10, name: "activity_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 11, name: "employee_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
]);
/**
 *
 * Describes the parameters that constitute an activity supervisor
 *
 * @generated from message Scailo.ActivitySupervisor
 */
class ActivitySupervisor extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * Stores a globally unique entity UUID. This will be set at the organization level
         *
         * @generated from field: string entity_uuid = 1;
         */
        this.entityUuid = "";
        /**
         * Stores any comment that the user might have added during an operation
         *
         * @generated from field: string user_comment = 5;
         */
        this.userComment = "";
        /**
         * Stores the activity ID
         *
         * @generated from field: uint64 activity_id = 10;
         */
        this.activityId = protobuf_1.protoInt64.zero;
        /**
         * Stores the employee ID
         *
         * @generated from field: uint64 employee_id = 11;
         */
        this.employeeId = protobuf_1.protoInt64.zero;
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new ActivitySupervisor().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new ActivitySupervisor().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new ActivitySupervisor().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(ActivitySupervisor, a, b);
    }
}
exports.ActivitySupervisor = ActivitySupervisor;
ActivitySupervisor.runtime = protobuf_1.proto3;
ActivitySupervisor.typeName = "Scailo.ActivitySupervisor";
ActivitySupervisor.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "entity_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "metadata", kind: "message", T: base_scailo_pb_js_1.EmployeeMetadata },
    { no: 5, name: "user_comment", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 10, name: "activity_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 11, name: "employee_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
]);
/**
 *
 * Describes the message consisting of the list of activity supervisors
 *
 * @generated from message Scailo.ActivitySupervisorsList
 */
class ActivitySupervisorsList extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * List of records
         *
         * @generated from field: repeated Scailo.ActivitySupervisor list = 1;
         */
        this.list = [];
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new ActivitySupervisorsList().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new ActivitySupervisorsList().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new ActivitySupervisorsList().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(ActivitySupervisorsList, a, b);
    }
}
exports.ActivitySupervisorsList = ActivitySupervisorsList;
ActivitySupervisorsList.runtime = protobuf_1.proto3;
ActivitySupervisorsList.typeName = "Scailo.ActivitySupervisorsList";
ActivitySupervisorsList.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "list", kind: "message", T: ActivitySupervisor, repeated: true },
]);
/**
 *
 * Describes the parameters necessary to create an activity timer
 *
 * @generated from message Scailo.ActivitiesServiceTimerCreateRequest
 */
class ActivitiesServiceTimerCreateRequest extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * Stores any comment that the user might add during this operation
         *
         * @generated from field: string user_comment = 1;
         */
        this.userComment = "";
        /**
         * Stores the activity action ID
         *
         * @generated from field: uint64 activity_action_id = 11;
         */
        this.activityActionId = protobuf_1.protoInt64.zero;
        /**
         * Stores the optional goal ID
         *
         * @generated from field: uint64 goal_id = 12;
         */
        this.goalId = protobuf_1.protoInt64.zero;
        /**
         * Stores the employee ID
         *
         * @generated from field: uint64 employee_id = 13;
         */
        this.employeeId = protobuf_1.protoInt64.zero;
        /**
         * Stores the start time
         *
         * @generated from field: uint64 start_at = 14;
         */
        this.startAt = protobuf_1.protoInt64.zero;
        /**
         * Stores the end time (can be 0)
         *
         * @generated from field: uint64 end_at = 15;
         */
        this.endAt = protobuf_1.protoInt64.zero;
        /**
         * Stores the cumulative completion percentage (this will be diffed at the API and stored only as a diff. E.g., if this is set to 4000, and the cumulative percentage for the same action has been 3500, then the API would store this as 500)
         *
         * @generated from field: uint64 completion_percentage = 16;
         */
        this.completionPercentage = protobuf_1.protoInt64.zero;
        /**
         * The description of the timer
         *
         * @generated from field: string description = 17;
         */
        this.description = "";
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new ActivitiesServiceTimerCreateRequest().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new ActivitiesServiceTimerCreateRequest().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new ActivitiesServiceTimerCreateRequest().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(ActivitiesServiceTimerCreateRequest, a, b);
    }
}
exports.ActivitiesServiceTimerCreateRequest = ActivitiesServiceTimerCreateRequest;
ActivitiesServiceTimerCreateRequest.runtime = protobuf_1.proto3;
ActivitiesServiceTimerCreateRequest.typeName = "Scailo.ActivitiesServiceTimerCreateRequest";
ActivitiesServiceTimerCreateRequest.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "user_comment", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 11, name: "activity_action_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 12, name: "goal_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 13, name: "employee_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 14, name: "start_at", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 15, name: "end_at", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 16, name: "completion_percentage", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 17, name: "description", kind: "scalar", T: 9 /* ScalarType.STRING */ },
]);
/**
 *
 * Describes the parameters necessary to end an activity timer
 *
 * @generated from message Scailo.ActivitiesServiceTimerEndRequest
 */
class ActivitiesServiceTimerEndRequest extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * Stores any comment that the user might add during this operation
         *
         * @generated from field: string user_comment = 1;
         */
        this.userComment = "";
        /**
         * The ID of the record
         *
         * @generated from field: uint64 id = 2;
         */
        this.id = protobuf_1.protoInt64.zero;
        /**
         * Stores the optional goal ID
         *
         * @generated from field: uint64 goal_id = 12;
         */
        this.goalId = protobuf_1.protoInt64.zero;
        /**
         * Stores the end time
         *
         * @generated from field: uint64 end_at = 15;
         */
        this.endAt = protobuf_1.protoInt64.zero;
        /**
         * Stores the cumulative completion percentage (this will be diffed at the API and stored only as a diff. E.g., if this is set to 4000, and the cumulative percentage for the same action has been 3500, then the API would store this as 500)
         *
         * @generated from field: uint64 completion_percentage = 16;
         */
        this.completionPercentage = protobuf_1.protoInt64.zero;
        /**
         * The description of the timer
         *
         * @generated from field: string description = 17;
         */
        this.description = "";
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new ActivitiesServiceTimerEndRequest().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new ActivitiesServiceTimerEndRequest().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new ActivitiesServiceTimerEndRequest().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(ActivitiesServiceTimerEndRequest, a, b);
    }
}
exports.ActivitiesServiceTimerEndRequest = ActivitiesServiceTimerEndRequest;
ActivitiesServiceTimerEndRequest.runtime = protobuf_1.proto3;
ActivitiesServiceTimerEndRequest.typeName = "Scailo.ActivitiesServiceTimerEndRequest";
ActivitiesServiceTimerEndRequest.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "user_comment", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 12, name: "goal_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 15, name: "end_at", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 16, name: "completion_percentage", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 17, name: "description", kind: "scalar", T: 9 /* ScalarType.STRING */ },
]);
/**
 *
 * Describes the parameters that constitute an activity timer
 *
 * @generated from message Scailo.ActivityTimer
 */
class ActivityTimer extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * Stores a globally unique entity UUID. This will be set at the organization level
         *
         * @generated from field: string entity_uuid = 1;
         */
        this.entityUuid = "";
        /**
         * Stores any comment that the user might have added during an operation
         *
         * @generated from field: string user_comment = 5;
         */
        this.userComment = "";
        /**
         * Stores the activity ID
         *
         * @generated from field: uint64 activity_id = 10;
         */
        this.activityId = protobuf_1.protoInt64.zero;
        /**
         * Stores the activity action ID
         *
         * @generated from field: uint64 activity_action_id = 11;
         */
        this.activityActionId = protobuf_1.protoInt64.zero;
        /**
         * Stores the optional goal ID
         *
         * @generated from field: uint64 goal_id = 12;
         */
        this.goalId = protobuf_1.protoInt64.zero;
        /**
         * Stores the employee ID
         *
         * @generated from field: uint64 employee_id = 13;
         */
        this.employeeId = protobuf_1.protoInt64.zero;
        /**
         * Stores the start time
         *
         * @generated from field: uint64 start_at = 14;
         */
        this.startAt = protobuf_1.protoInt64.zero;
        /**
         * Stores the end time
         *
         * @generated from field: uint64 end_at = 15;
         */
        this.endAt = protobuf_1.protoInt64.zero;
        /**
         * Stores the cumulative completion percentage (this will be diffed at the API and stored only as a diff. E.g., if this is set to 4000, and the cumulative percentage for the same action has been 3500, then the API would store this as 500)
         *
         * @generated from field: uint64 completion_percentage = 16;
         */
        this.completionPercentage = protobuf_1.protoInt64.zero;
        /**
         * The description of the timer
         *
         * @generated from field: string description = 17;
         */
        this.description = "";
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new ActivityTimer().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new ActivityTimer().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new ActivityTimer().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(ActivityTimer, a, b);
    }
}
exports.ActivityTimer = ActivityTimer;
ActivityTimer.runtime = protobuf_1.proto3;
ActivityTimer.typeName = "Scailo.ActivityTimer";
ActivityTimer.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "entity_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "metadata", kind: "message", T: base_scailo_pb_js_1.EmployeeMetadata },
    { no: 5, name: "user_comment", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 10, name: "activity_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 11, name: "activity_action_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 12, name: "goal_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 13, name: "employee_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 14, name: "start_at", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 15, name: "end_at", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 16, name: "completion_percentage", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 17, name: "description", kind: "scalar", T: 9 /* ScalarType.STRING */ },
]);
/**
 *
 * Describes the message consisting of the list of activity timers
 *
 * @generated from message Scailo.ActivityTimersList
 */
class ActivityTimersList extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * List of records
         *
         * @generated from field: repeated Scailo.ActivityTimer list = 1;
         */
        this.list = [];
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new ActivityTimersList().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new ActivityTimersList().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new ActivityTimersList().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(ActivityTimersList, a, b);
    }
}
exports.ActivityTimersList = ActivityTimersList;
ActivityTimersList.runtime = protobuf_1.proto3;
ActivityTimersList.typeName = "Scailo.ActivityTimersList";
ActivityTimersList.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "list", kind: "message", T: ActivityTimer, repeated: true },
]);
/**
 *
 * Describes the request payload to retrieve timers.
 *
 * @generated from message Scailo.ActivityTimersSearchRequest
 */
class ActivityTimersSearchRequest extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * If true, then returns only active records. If false, then returns only inactive records
         *
         * @generated from field: Scailo.BOOL_FILTER is_active = 1;
         */
        this.isActive = base_scailo_pb_js_1.BOOL_FILTER.BOOL_FILTER_ANY_UNSPECIFIED;
        /**
         * The number of records that need to be sent in the response. Returns all records if it is set to -1
         *
         * @generated from field: int64 count = 2;
         */
        this.count = protobuf_1.protoInt64.zero;
        /**
         * The number that need to be offset by before fetching the records
         *
         * @generated from field: uint64 offset = 3;
         */
        this.offset = protobuf_1.protoInt64.zero;
        /**
         * The sort order that is to be used to fetch the pagination response
         *
         * @generated from field: Scailo.SORT_ORDER sort_order = 4;
         */
        this.sortOrder = base_scailo_pb_js_1.SORT_ORDER.ASCENDING_UNSPECIFIED;
        /**
         * The sort key that is to be used to fetch the pagination response
         *
         * @generated from field: Scailo.ACTIVITY_TIMER_SORT_KEY sort_key = 5;
         */
        this.sortKey = ACTIVITY_TIMER_SORT_KEY.ACTIVITY_TIMER_SORT_KEY_ID_UNSPECIFIED;
        /**
         * The entity UUID that is to be used to filter records
         *
         * @generated from field: string entity_uuid = 6;
         */
        this.entityUuid = "";
        /**
         * The ID of the activity
         *
         * @generated from field: uint64 activity_id = 20;
         */
        this.activityId = protobuf_1.protoInt64.zero;
        /**
         * Stores the activity action ID
         *
         * @generated from field: uint64 activity_action_id = 21;
         */
        this.activityActionId = protobuf_1.protoInt64.zero;
        /**
         * Stores the optional goal ID
         *
         * @generated from field: uint64 goal_id = 22;
         */
        this.goalId = protobuf_1.protoInt64.zero;
        /**
         * Stores the employee ID
         *
         * @generated from field: uint64 employee_id = 23;
         */
        this.employeeId = protobuf_1.protoInt64.zero;
        /**
         * The start range of "starts at"
         *
         * @generated from field: uint64 starts_at_start = 24;
         */
        this.startsAtStart = protobuf_1.protoInt64.zero;
        /**
         * The end range of "starts at"
         *
         * @generated from field: uint64 starts_at_end = 25;
         */
        this.startsAtEnd = protobuf_1.protoInt64.zero;
        /**
         * The start range of "ends at"
         *
         * @generated from field: uint64 ends_at_start = 26;
         */
        this.endsAtStart = protobuf_1.protoInt64.zero;
        /**
         * The end range of "ends at"
         *
         * @generated from field: uint64 ends_at_end = 27;
         */
        this.endsAtEnd = protobuf_1.protoInt64.zero;
        /**
         * Describes the key with which the search operation needs to be performed
         *
         * @generated from field: string search_key = 40;
         */
        this.searchKey = "";
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new ActivityTimersSearchRequest().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new ActivityTimersSearchRequest().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new ActivityTimersSearchRequest().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(ActivityTimersSearchRequest, a, b);
    }
}
exports.ActivityTimersSearchRequest = ActivityTimersSearchRequest;
ActivityTimersSearchRequest.runtime = protobuf_1.proto3;
ActivityTimersSearchRequest.typeName = "Scailo.ActivityTimersSearchRequest";
ActivityTimersSearchRequest.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "is_active", kind: "enum", T: protobuf_1.proto3.getEnumType(base_scailo_pb_js_1.BOOL_FILTER) },
    { no: 2, name: "count", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "offset", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 4, name: "sort_order", kind: "enum", T: protobuf_1.proto3.getEnumType(base_scailo_pb_js_1.SORT_ORDER) },
    { no: 5, name: "sort_key", kind: "enum", T: protobuf_1.proto3.getEnumType(ACTIVITY_TIMER_SORT_KEY) },
    { no: 6, name: "entity_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 20, name: "activity_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 21, name: "activity_action_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 22, name: "goal_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 23, name: "employee_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 24, name: "starts_at_start", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 25, name: "starts_at_end", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 26, name: "ends_at_start", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 27, name: "ends_at_end", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 40, name: "search_key", kind: "scalar", T: 9 /* ScalarType.STRING */ },
]);
/**
 *
 * Describes the response to a pagination timers request
 *
 * @generated from message Scailo.ActivitiesServicePaginatedTimersResponse
 */
class ActivitiesServicePaginatedTimersResponse extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * The number of records in this payload
         *
         * @generated from field: uint64 count = 1;
         */
        this.count = protobuf_1.protoInt64.zero;
        /**
         * The number that has been offset before fetching the records. This is the same value that has been sent as part of the pagination request
         *
         * @generated from field: uint64 offset = 2;
         */
        this.offset = protobuf_1.protoInt64.zero;
        /**
         * The total number of records that are available
         *
         * @generated from field: uint64 total = 3;
         */
        this.total = protobuf_1.protoInt64.zero;
        /**
         * The list of records
         *
         * @generated from field: repeated Scailo.ActivityTimer payload = 4;
         */
        this.payload = [];
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new ActivitiesServicePaginatedTimersResponse().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new ActivitiesServicePaginatedTimersResponse().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new ActivitiesServicePaginatedTimersResponse().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(ActivitiesServicePaginatedTimersResponse, a, b);
    }
}
exports.ActivitiesServicePaginatedTimersResponse = ActivitiesServicePaginatedTimersResponse;
ActivitiesServicePaginatedTimersResponse.runtime = protobuf_1.proto3;
ActivitiesServicePaginatedTimersResponse.typeName = "Scailo.ActivitiesServicePaginatedTimersResponse";
ActivitiesServicePaginatedTimersResponse.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "count", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 2, name: "offset", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 3, name: "total", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 4, name: "payload", kind: "message", T: ActivityTimer, repeated: true },
]);
