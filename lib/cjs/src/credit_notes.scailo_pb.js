"use strict";
// @generated by protoc-gen-es v1.5.1 with parameter "target=ts"
// @generated from file credit_notes.scailo.proto (package Scailo, syntax proto3)
/* eslint-disable */
// @ts-nocheck
Object.defineProperty(exports, "__esModule", { value: true });
exports.CreditNoteReferencesList = exports.CreditNoteReference = exports.CreditNotesServiceReferenceCreateRequest = exports.CreditNotesServiceSearchAllReq = exports.CreditNotesServiceCountReq = exports.CreditNotesServiceFilterReq = exports.CreditNotesServicePaginationResponse = exports.CreditNotesServicePaginationReq = exports.CreditNotesServicePaginatedItemsResponse = exports.CreditNoteItemsSearchRequest = exports.CreditNotesServiceAlreadyAddedQuantityForSourceRequest = exports.CreditNoteItemProspectiveInfoRequest = exports.CreditNoteItemHistoryRequest = exports.CreditNoteItemsList = exports.CreditNotesList = exports.CreditNoteItem = exports.CreditNotesServiceItemUpdateRequest = exports.CreditNotesServiceItemCreateRequest = exports.CreditNote = exports.CreditNotesServiceAutofillRequest = exports.CreditNotesServiceUpdateRequest = exports.CreditNotesServiceCreateRequest = exports.CREDIT_NOTE_SORT_KEY = exports.CREDIT_NOTE_ITEM_STATUS = exports.CREDIT_NOTE_ITEM_SORT_KEY = void 0;
const protobuf_1 = require("@bufbuild/protobuf");
const forms_fields_data_scailo_pb_js_1 = require("./forms_fields_data.scailo_pb.js");
const base_scailo_pb_js_1 = require("./base.scailo_pb.js");
/**
 *
 * Describes the available sort keys
 *
 * @generated from enum Scailo.CREDIT_NOTE_ITEM_SORT_KEY
 */
var CREDIT_NOTE_ITEM_SORT_KEY;
(function (CREDIT_NOTE_ITEM_SORT_KEY) {
    /**
     * Fetch ordered results by id
     *
     * @generated from enum value: CREDIT_NOTE_ITEM_SORT_KEY_ID_UNSPECIFIED = 0;
     */
    CREDIT_NOTE_ITEM_SORT_KEY[CREDIT_NOTE_ITEM_SORT_KEY["CREDIT_NOTE_ITEM_SORT_KEY_ID_UNSPECIFIED"] = 0] = "CREDIT_NOTE_ITEM_SORT_KEY_ID_UNSPECIFIED";
    /**
     * Fetch ordered results by the creation timestamp
     *
     * @generated from enum value: CREDIT_NOTE_ITEM_SORT_KEY_CREATED_AT = 1;
     */
    CREDIT_NOTE_ITEM_SORT_KEY[CREDIT_NOTE_ITEM_SORT_KEY["CREDIT_NOTE_ITEM_SORT_KEY_CREATED_AT"] = 1] = "CREDIT_NOTE_ITEM_SORT_KEY_CREATED_AT";
    /**
     * Fetch ordered results by the modified timestamp
     *
     * @generated from enum value: CREDIT_NOTE_ITEM_SORT_KEY_MODIFIED_AT = 2;
     */
    CREDIT_NOTE_ITEM_SORT_KEY[CREDIT_NOTE_ITEM_SORT_KEY["CREDIT_NOTE_ITEM_SORT_KEY_MODIFIED_AT"] = 2] = "CREDIT_NOTE_ITEM_SORT_KEY_MODIFIED_AT";
    /**
     * Fetch ordered results by the approved on timestamp
     *
     * @generated from enum value: CREDIT_NOTE_ITEM_SORT_KEY_APPROVED_ON = 3;
     */
    CREDIT_NOTE_ITEM_SORT_KEY[CREDIT_NOTE_ITEM_SORT_KEY["CREDIT_NOTE_ITEM_SORT_KEY_APPROVED_ON"] = 3] = "CREDIT_NOTE_ITEM_SORT_KEY_APPROVED_ON";
    /**
     * Fetch ordered results by the approved by field
     *
     * @generated from enum value: CREDIT_NOTE_ITEM_SORT_KEY_APPROVED_BY = 4;
     */
    CREDIT_NOTE_ITEM_SORT_KEY[CREDIT_NOTE_ITEM_SORT_KEY["CREDIT_NOTE_ITEM_SORT_KEY_APPROVED_BY"] = 4] = "CREDIT_NOTE_ITEM_SORT_KEY_APPROVED_BY";
    /**
     * Fetch ordered results by the approver's role ID
     *
     * @generated from enum value: CREDIT_NOTE_ITEM_SORT_KEY_APPROVER_ROLE_ID = 5;
     */
    CREDIT_NOTE_ITEM_SORT_KEY[CREDIT_NOTE_ITEM_SORT_KEY["CREDIT_NOTE_ITEM_SORT_KEY_APPROVER_ROLE_ID"] = 5] = "CREDIT_NOTE_ITEM_SORT_KEY_APPROVER_ROLE_ID";
    /**
     * Fetch ordered results by the family ID
     *
     * @generated from enum value: CREDIT_NOTE_ITEM_SORT_KEY_FAMILY_ID = 10;
     */
    CREDIT_NOTE_ITEM_SORT_KEY[CREDIT_NOTE_ITEM_SORT_KEY["CREDIT_NOTE_ITEM_SORT_KEY_FAMILY_ID"] = 10] = "CREDIT_NOTE_ITEM_SORT_KEY_FAMILY_ID";
    /**
     * Fetch ordered results by the internal quantity
     *
     * @generated from enum value: CREDIT_NOTE_ITEM_SORT_KEY_INTERNAL_QUANTITY = 11;
     */
    CREDIT_NOTE_ITEM_SORT_KEY[CREDIT_NOTE_ITEM_SORT_KEY["CREDIT_NOTE_ITEM_SORT_KEY_INTERNAL_QUANTITY"] = 11] = "CREDIT_NOTE_ITEM_SORT_KEY_INTERNAL_QUANTITY";
    /**
     * Fetch ordered results by the client unit of material ID
     *
     * @generated from enum value: CREDIT_NOTE_ITEM_SORT_KEY_CLIENT_UOM_ID = 12;
     */
    CREDIT_NOTE_ITEM_SORT_KEY[CREDIT_NOTE_ITEM_SORT_KEY["CREDIT_NOTE_ITEM_SORT_KEY_CLIENT_UOM_ID"] = 12] = "CREDIT_NOTE_ITEM_SORT_KEY_CLIENT_UOM_ID";
    /**
     * Fetch ordered results by the client quantity
     *
     * @generated from enum value: CREDIT_NOTE_ITEM_SORT_KEY_CLIENT_QUANTITY = 13;
     */
    CREDIT_NOTE_ITEM_SORT_KEY[CREDIT_NOTE_ITEM_SORT_KEY["CREDIT_NOTE_ITEM_SORT_KEY_CLIENT_QUANTITY"] = 13] = "CREDIT_NOTE_ITEM_SORT_KEY_CLIENT_QUANTITY";
    /**
     * Fetch ordered results by the client family code
     *
     * @generated from enum value: CREDIT_NOTE_ITEM_SORT_KEY_CLIENT_FAMILY_CODE = 14;
     */
    CREDIT_NOTE_ITEM_SORT_KEY[CREDIT_NOTE_ITEM_SORT_KEY["CREDIT_NOTE_ITEM_SORT_KEY_CLIENT_FAMILY_CODE"] = 14] = "CREDIT_NOTE_ITEM_SORT_KEY_CLIENT_FAMILY_CODE";
    /**
     * Fetch ordered results by the unit price
     *
     * @generated from enum value: CREDIT_NOTE_ITEM_SORT_KEY_UNIT_PRICE = 15;
     */
    CREDIT_NOTE_ITEM_SORT_KEY[CREDIT_NOTE_ITEM_SORT_KEY["CREDIT_NOTE_ITEM_SORT_KEY_UNIT_PRICE"] = 15] = "CREDIT_NOTE_ITEM_SORT_KEY_UNIT_PRICE";
    /**
     * Fetch ordered results by the tax group ID
     *
     * @generated from enum value: CREDIT_NOTE_ITEM_SORT_KEY_TAX_GROUP_ID = 16;
     */
    CREDIT_NOTE_ITEM_SORT_KEY[CREDIT_NOTE_ITEM_SORT_KEY["CREDIT_NOTE_ITEM_SORT_KEY_TAX_GROUP_ID"] = 16] = "CREDIT_NOTE_ITEM_SORT_KEY_TAX_GROUP_ID";
})(CREDIT_NOTE_ITEM_SORT_KEY || (exports.CREDIT_NOTE_ITEM_SORT_KEY = CREDIT_NOTE_ITEM_SORT_KEY = {}));
// Retrieve enum metadata with: proto3.getEnumType(CREDIT_NOTE_ITEM_SORT_KEY)
protobuf_1.proto3.util.setEnumType(CREDIT_NOTE_ITEM_SORT_KEY, "Scailo.CREDIT_NOTE_ITEM_SORT_KEY", [
    { no: 0, name: "CREDIT_NOTE_ITEM_SORT_KEY_ID_UNSPECIFIED" },
    { no: 1, name: "CREDIT_NOTE_ITEM_SORT_KEY_CREATED_AT" },
    { no: 2, name: "CREDIT_NOTE_ITEM_SORT_KEY_MODIFIED_AT" },
    { no: 3, name: "CREDIT_NOTE_ITEM_SORT_KEY_APPROVED_ON" },
    { no: 4, name: "CREDIT_NOTE_ITEM_SORT_KEY_APPROVED_BY" },
    { no: 5, name: "CREDIT_NOTE_ITEM_SORT_KEY_APPROVER_ROLE_ID" },
    { no: 10, name: "CREDIT_NOTE_ITEM_SORT_KEY_FAMILY_ID" },
    { no: 11, name: "CREDIT_NOTE_ITEM_SORT_KEY_INTERNAL_QUANTITY" },
    { no: 12, name: "CREDIT_NOTE_ITEM_SORT_KEY_CLIENT_UOM_ID" },
    { no: 13, name: "CREDIT_NOTE_ITEM_SORT_KEY_CLIENT_QUANTITY" },
    { no: 14, name: "CREDIT_NOTE_ITEM_SORT_KEY_CLIENT_FAMILY_CODE" },
    { no: 15, name: "CREDIT_NOTE_ITEM_SORT_KEY_UNIT_PRICE" },
    { no: 16, name: "CREDIT_NOTE_ITEM_SORT_KEY_TAX_GROUP_ID" },
]);
/**
 *
 * Describes the applicable statuses of credit note items
 *
 * @generated from enum Scailo.CREDIT_NOTE_ITEM_STATUS
 */
var CREDIT_NOTE_ITEM_STATUS;
(function (CREDIT_NOTE_ITEM_STATUS) {
    /**
     * Denotes that status be disregarded. This is used only within search APIs
     *
     * @generated from enum value: CREDIT_NOTE_ITEM_STATUS_ANY_UNSPECIFIED = 0;
     */
    CREDIT_NOTE_ITEM_STATUS[CREDIT_NOTE_ITEM_STATUS["CREDIT_NOTE_ITEM_STATUS_ANY_UNSPECIFIED"] = 0] = "CREDIT_NOTE_ITEM_STATUS_ANY_UNSPECIFIED";
    /**
     * Denotes that the credit note items must have been approved
     *
     * @generated from enum value: CREDIT_NOTE_ITEM_STATUS_APPROVED = 1;
     */
    CREDIT_NOTE_ITEM_STATUS[CREDIT_NOTE_ITEM_STATUS["CREDIT_NOTE_ITEM_STATUS_APPROVED"] = 1] = "CREDIT_NOTE_ITEM_STATUS_APPROVED";
    /**
     * Denotes that the credit note items must be waiting for approval
     *
     * @generated from enum value: CREDIT_NOTE_ITEM_STATUS_UNAPPROVED = 2;
     */
    CREDIT_NOTE_ITEM_STATUS[CREDIT_NOTE_ITEM_STATUS["CREDIT_NOTE_ITEM_STATUS_UNAPPROVED"] = 2] = "CREDIT_NOTE_ITEM_STATUS_UNAPPROVED";
})(CREDIT_NOTE_ITEM_STATUS || (exports.CREDIT_NOTE_ITEM_STATUS = CREDIT_NOTE_ITEM_STATUS = {}));
// Retrieve enum metadata with: proto3.getEnumType(CREDIT_NOTE_ITEM_STATUS)
protobuf_1.proto3.util.setEnumType(CREDIT_NOTE_ITEM_STATUS, "Scailo.CREDIT_NOTE_ITEM_STATUS", [
    { no: 0, name: "CREDIT_NOTE_ITEM_STATUS_ANY_UNSPECIFIED" },
    { no: 1, name: "CREDIT_NOTE_ITEM_STATUS_APPROVED" },
    { no: 2, name: "CREDIT_NOTE_ITEM_STATUS_UNAPPROVED" },
]);
/**
 *
 * Describes the available sort keys
 *
 * @generated from enum Scailo.CREDIT_NOTE_SORT_KEY
 */
var CREDIT_NOTE_SORT_KEY;
(function (CREDIT_NOTE_SORT_KEY) {
    /**
     * Fetch ordered results by id
     *
     * @generated from enum value: CREDIT_NOTE_SORT_KEY_ID_UNSPECIFIED = 0;
     */
    CREDIT_NOTE_SORT_KEY[CREDIT_NOTE_SORT_KEY["CREDIT_NOTE_SORT_KEY_ID_UNSPECIFIED"] = 0] = "CREDIT_NOTE_SORT_KEY_ID_UNSPECIFIED";
    /**
     * Fetch ordered results by the creation timestamp
     *
     * @generated from enum value: CREDIT_NOTE_SORT_KEY_CREATED_AT = 1;
     */
    CREDIT_NOTE_SORT_KEY[CREDIT_NOTE_SORT_KEY["CREDIT_NOTE_SORT_KEY_CREATED_AT"] = 1] = "CREDIT_NOTE_SORT_KEY_CREATED_AT";
    /**
     * Fetch ordered results by the modified timestamp
     *
     * @generated from enum value: CREDIT_NOTE_SORT_KEY_MODIFIED_AT = 2;
     */
    CREDIT_NOTE_SORT_KEY[CREDIT_NOTE_SORT_KEY["CREDIT_NOTE_SORT_KEY_MODIFIED_AT"] = 2] = "CREDIT_NOTE_SORT_KEY_MODIFIED_AT";
    /**
     * Fetch ordered results by the approved on timestamp
     *
     * @generated from enum value: CREDIT_NOTE_SORT_KEY_APPROVED_ON = 3;
     */
    CREDIT_NOTE_SORT_KEY[CREDIT_NOTE_SORT_KEY["CREDIT_NOTE_SORT_KEY_APPROVED_ON"] = 3] = "CREDIT_NOTE_SORT_KEY_APPROVED_ON";
    /**
     * Fetch ordered results by the approved by field
     *
     * @generated from enum value: CREDIT_NOTE_SORT_KEY_APPROVED_BY = 4;
     */
    CREDIT_NOTE_SORT_KEY[CREDIT_NOTE_SORT_KEY["CREDIT_NOTE_SORT_KEY_APPROVED_BY"] = 4] = "CREDIT_NOTE_SORT_KEY_APPROVED_BY";
    /**
     * Fetch ordered results by the approver's role ID
     *
     * @generated from enum value: CREDIT_NOTE_SORT_KEY_APPROVER_ROLE_ID = 5;
     */
    CREDIT_NOTE_SORT_KEY[CREDIT_NOTE_SORT_KEY["CREDIT_NOTE_SORT_KEY_APPROVER_ROLE_ID"] = 5] = "CREDIT_NOTE_SORT_KEY_APPROVER_ROLE_ID";
    /**
     * Fetch ordered results by the approver's completed on timestamp
     *
     * @generated from enum value: CREDIT_NOTE_SORT_KEY_COMPLETED_ON = 6;
     */
    CREDIT_NOTE_SORT_KEY[CREDIT_NOTE_SORT_KEY["CREDIT_NOTE_SORT_KEY_COMPLETED_ON"] = 6] = "CREDIT_NOTE_SORT_KEY_COMPLETED_ON";
    /**
     * Fetch ordered results by the reference ID
     *
     * @generated from enum value: CREDIT_NOTE_SORT_KEY_REFERENCE_ID = 10;
     */
    CREDIT_NOTE_SORT_KEY[CREDIT_NOTE_SORT_KEY["CREDIT_NOTE_SORT_KEY_REFERENCE_ID"] = 10] = "CREDIT_NOTE_SORT_KEY_REFERENCE_ID";
    /**
     * Fetch ordered results by the final ref number
     *
     * @generated from enum value: CREDIT_NOTE_SORT_KEY_FINAL_REF_NUMBER = 11;
     */
    CREDIT_NOTE_SORT_KEY[CREDIT_NOTE_SORT_KEY["CREDIT_NOTE_SORT_KEY_FINAL_REF_NUMBER"] = 11] = "CREDIT_NOTE_SORT_KEY_FINAL_REF_NUMBER";
})(CREDIT_NOTE_SORT_KEY || (exports.CREDIT_NOTE_SORT_KEY = CREDIT_NOTE_SORT_KEY = {}));
// Retrieve enum metadata with: proto3.getEnumType(CREDIT_NOTE_SORT_KEY)
protobuf_1.proto3.util.setEnumType(CREDIT_NOTE_SORT_KEY, "Scailo.CREDIT_NOTE_SORT_KEY", [
    { no: 0, name: "CREDIT_NOTE_SORT_KEY_ID_UNSPECIFIED" },
    { no: 1, name: "CREDIT_NOTE_SORT_KEY_CREATED_AT" },
    { no: 2, name: "CREDIT_NOTE_SORT_KEY_MODIFIED_AT" },
    { no: 3, name: "CREDIT_NOTE_SORT_KEY_APPROVED_ON" },
    { no: 4, name: "CREDIT_NOTE_SORT_KEY_APPROVED_BY" },
    { no: 5, name: "CREDIT_NOTE_SORT_KEY_APPROVER_ROLE_ID" },
    { no: 6, name: "CREDIT_NOTE_SORT_KEY_COMPLETED_ON" },
    { no: 10, name: "CREDIT_NOTE_SORT_KEY_REFERENCE_ID" },
    { no: 11, name: "CREDIT_NOTE_SORT_KEY_FINAL_REF_NUMBER" },
]);
/**
 *
 * Describes the parameters necessary to create a record
 *
 * @generated from message Scailo.CreditNotesServiceCreateRequest
 */
class CreditNotesServiceCreateRequest extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * Stores a globally unique entity UUID. This will be set at the organization level
         *
         * @generated from field: string entity_uuid = 1;
         */
        this.entityUuid = "";
        /**
         * Stores any comment that the user might add during this operation
         *
         * @generated from field: string user_comment = 2;
         */
        this.userComment = "";
        /**
         * The associated vault folder ID
         *
         * @generated from field: uint64 vault_folder_id = 9;
         */
        this.vaultFolderId = protobuf_1.protoInt64.zero;
        /**
         * The reference ID of the credit note
         *
         * @generated from field: string reference_id = 10;
         */
        this.referenceId = "";
        /**
         * The associated reference
         *
         * @generated from field: string ref_from = 12;
         */
        this.refFrom = "";
        /**
         * The associated ID of the reference
         *
         * @generated from field: uint64 ref_id = 13;
         */
        this.refId = protobuf_1.protoInt64.zero;
        /**
         * The associated ID of the currency
         *
         * @generated from field: uint64 currency_id = 14;
         */
        this.currencyId = protobuf_1.protoInt64.zero;
        /**
         * The associated ID of the bank account
         *
         * @generated from field: uint64 bank_account_id = 15;
         */
        this.bankAccountId = protobuf_1.protoInt64.zero;
        /**
         * Any miscellaneous cost
         *
         * @generated from field: uint64 miscellaneous_cost = 16;
         */
        this.miscellaneousCost = protobuf_1.protoInt64.zero;
        /**
         * The optional discount amount
         *
         * @generated from field: uint64 overall_discount = 17;
         */
        this.overallDiscount = protobuf_1.protoInt64.zero;
        /**
         * The applicable round off amount (optional, and can be positive or negative)
         *
         * @generated from field: int64 round_off = 18;
         */
        this.roundOff = protobuf_1.protoInt64.zero;
        /**
         * The list of dynamic forms
         *
         * @generated from field: repeated Scailo.FormFieldDatumCreateRequest form_data = 30;
         */
        this.formData = [];
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new CreditNotesServiceCreateRequest().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new CreditNotesServiceCreateRequest().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new CreditNotesServiceCreateRequest().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(CreditNotesServiceCreateRequest, a, b);
    }
}
exports.CreditNotesServiceCreateRequest = CreditNotesServiceCreateRequest;
CreditNotesServiceCreateRequest.runtime = protobuf_1.proto3;
CreditNotesServiceCreateRequest.typeName = "Scailo.CreditNotesServiceCreateRequest";
CreditNotesServiceCreateRequest.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "entity_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "user_comment", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 9, name: "vault_folder_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 10, name: "reference_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 12, name: "ref_from", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 13, name: "ref_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 14, name: "currency_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 15, name: "bank_account_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 16, name: "miscellaneous_cost", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 17, name: "overall_discount", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 18, name: "round_off", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 30, name: "form_data", kind: "message", T: forms_fields_data_scailo_pb_js_1.FormFieldDatumCreateRequest, repeated: true },
]);
/**
 *
 * Describes the parameters necessary to update a record
 *
 * @generated from message Scailo.CreditNotesServiceUpdateRequest
 */
class CreditNotesServiceUpdateRequest extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * Stores any comment that the user might add during this operation
         *
         * @generated from field: string user_comment = 1;
         */
        this.userComment = "";
        /**
         * The ID of the record that needs to be updated
         *
         * @generated from field: uint64 id = 2;
         */
        this.id = protobuf_1.protoInt64.zero;
        /**
         * Optional boolean value that stores if a notification needs to be sent to users about the update to the record. This is useful when a subsequent operation needs to be performed immediately (such as send to verification after updating the revision)
         *
         * @generated from field: bool notify_users = 3;
         */
        this.notifyUsers = false;
        /**
         * The associated vault folder ID
         *
         * @generated from field: uint64 vault_folder_id = 9;
         */
        this.vaultFolderId = protobuf_1.protoInt64.zero;
        /**
         * The reference ID of the credit note
         *
         * @generated from field: string reference_id = 10;
         */
        this.referenceId = "";
        /**
         * The associated ID of the currency
         *
         * @generated from field: uint64 currency_id = 14;
         */
        this.currencyId = protobuf_1.protoInt64.zero;
        /**
         * The associated ID of the bank account
         *
         * @generated from field: uint64 bank_account_id = 15;
         */
        this.bankAccountId = protobuf_1.protoInt64.zero;
        /**
         * Any miscellaneous cost
         *
         * @generated from field: uint64 miscellaneous_cost = 16;
         */
        this.miscellaneousCost = protobuf_1.protoInt64.zero;
        /**
         * The optional discount amount
         *
         * @generated from field: uint64 overall_discount = 17;
         */
        this.overallDiscount = protobuf_1.protoInt64.zero;
        /**
         * The applicable round off amount (optional, and can be positive or negative)
         *
         * @generated from field: int64 round_off = 18;
         */
        this.roundOff = protobuf_1.protoInt64.zero;
        /**
         * The list of dynamic forms
         *
         * @generated from field: repeated Scailo.FormFieldDatumCreateRequest form_data = 30;
         */
        this.formData = [];
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new CreditNotesServiceUpdateRequest().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new CreditNotesServiceUpdateRequest().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new CreditNotesServiceUpdateRequest().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(CreditNotesServiceUpdateRequest, a, b);
    }
}
exports.CreditNotesServiceUpdateRequest = CreditNotesServiceUpdateRequest;
CreditNotesServiceUpdateRequest.runtime = protobuf_1.proto3;
CreditNotesServiceUpdateRequest.typeName = "Scailo.CreditNotesServiceUpdateRequest";
CreditNotesServiceUpdateRequest.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "user_comment", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 3, name: "notify_users", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 9, name: "vault_folder_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 10, name: "reference_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 14, name: "currency_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 15, name: "bank_account_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 16, name: "miscellaneous_cost", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 17, name: "overall_discount", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 18, name: "round_off", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 30, name: "form_data", kind: "message", T: forms_fields_data_scailo_pb_js_1.FormFieldDatumCreateRequest, repeated: true },
]);
/**
 *
 * Describes the parameters necessary to perform an autofill request
 *
 * @generated from message Scailo.CreditNotesServiceAutofillRequest
 */
class CreditNotesServiceAutofillRequest extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * Stores any comment that the user might add during this operation
         *
         * @generated from field: string user_comment = 1;
         */
        this.userComment = "";
        /**
         * The ID of the record that needs to be updated
         *
         * @generated from field: uint64 id = 2;
         */
        this.id = protobuf_1.protoInt64.zero;
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new CreditNotesServiceAutofillRequest().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new CreditNotesServiceAutofillRequest().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new CreditNotesServiceAutofillRequest().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(CreditNotesServiceAutofillRequest, a, b);
    }
}
exports.CreditNotesServiceAutofillRequest = CreditNotesServiceAutofillRequest;
CreditNotesServiceAutofillRequest.runtime = protobuf_1.proto3;
CreditNotesServiceAutofillRequest.typeName = "Scailo.CreditNotesServiceAutofillRequest";
CreditNotesServiceAutofillRequest.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "user_comment", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
]);
/**
 *
 * Describes the parameters that are part of a standard response
 *
 * @generated from message Scailo.CreditNote
 */
class CreditNote extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * Stores a globally unique entity UUID. This will be set at the organization level
         *
         * @generated from field: string entity_uuid = 1;
         */
        this.entityUuid = "";
        /**
         * The status of this credit note
         *
         * @generated from field: Scailo.STANDARD_LIFECYCLE_STATUS status = 4;
         */
        this.status = base_scailo_pb_js_1.STANDARD_LIFECYCLE_STATUS.ANY_UNSPECIFIED;
        /**
         * Stores the logs of every operation performed on this credit note
         *
         * @generated from field: repeated Scailo.LogbookLogConciseSLC logs = 5;
         */
        this.logs = [];
        /**
         * The timestamp of when this credit note was marked as completed
         *
         * @generated from field: uint64 completed_on = 6;
         */
        this.completedOn = protobuf_1.protoInt64.zero;
        /**
         * The associated vault folder ID
         *
         * @generated from field: uint64 vault_folder_id = 9;
         */
        this.vaultFolderId = protobuf_1.protoInt64.zero;
        /**
         * The reference ID of the credit note
         *
         * @generated from field: string reference_id = 10;
         */
        this.referenceId = "";
        /**
         * The unique reference number that has been automatically generated
         *
         * @generated from field: string final_ref_number = 11;
         */
        this.finalRefNumber = "";
        /**
         * The associated reference
         *
         * @generated from field: string ref_from = 12;
         */
        this.refFrom = "";
        /**
         * The associated ID of the reference
         *
         * @generated from field: uint64 ref_id = 13;
         */
        this.refId = protobuf_1.protoInt64.zero;
        /**
         * The associated ID of the currency
         *
         * @generated from field: uint64 currency_id = 14;
         */
        this.currencyId = protobuf_1.protoInt64.zero;
        /**
         * The associated ID of the bank account
         *
         * @generated from field: uint64 bank_account_id = 15;
         */
        this.bankAccountId = protobuf_1.protoInt64.zero;
        /**
         * Any miscellaneous cost
         *
         * @generated from field: uint64 miscellaneous_cost = 16;
         */
        this.miscellaneousCost = protobuf_1.protoInt64.zero;
        /**
         * The optional discount amount
         *
         * @generated from field: uint64 overall_discount = 17;
         */
        this.overallDiscount = protobuf_1.protoInt64.zero;
        /**
         * The applicable round off amount (optional, and can be positive or negative)
         *
         * @generated from field: int64 round_off = 18;
         */
        this.roundOff = protobuf_1.protoInt64.zero;
        /**
         * Stores the total value of the credit note (as a double, which requires no adjustments)
         *
         * @generated from field: double total_value = 20;
         */
        this.totalValue = 0;
        /**
         * The list of associated credit note items
         *
         * @generated from field: repeated Scailo.CreditNoteItem list = 30;
         */
        this.list = [];
        /**
         * The list of dynamic forms
         *
         * @generated from field: repeated Scailo.FormFieldDatum form_data = 40;
         */
        this.formData = [];
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new CreditNote().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new CreditNote().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new CreditNote().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(CreditNote, a, b);
    }
}
exports.CreditNote = CreditNote;
CreditNote.runtime = protobuf_1.proto3;
CreditNote.typeName = "Scailo.CreditNote";
CreditNote.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "entity_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "metadata", kind: "message", T: base_scailo_pb_js_1.EmployeeMetadata },
    { no: 3, name: "approval_metadata", kind: "message", T: base_scailo_pb_js_1.ApprovalMetadata },
    { no: 4, name: "status", kind: "enum", T: protobuf_1.proto3.getEnumType(base_scailo_pb_js_1.STANDARD_LIFECYCLE_STATUS) },
    { no: 5, name: "logs", kind: "message", T: base_scailo_pb_js_1.LogbookLogConciseSLC, repeated: true },
    { no: 6, name: "completed_on", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 9, name: "vault_folder_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 10, name: "reference_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 11, name: "final_ref_number", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 12, name: "ref_from", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 13, name: "ref_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 14, name: "currency_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 15, name: "bank_account_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 16, name: "miscellaneous_cost", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 17, name: "overall_discount", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 18, name: "round_off", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 20, name: "total_value", kind: "scalar", T: 1 /* ScalarType.DOUBLE */ },
    { no: 30, name: "list", kind: "message", T: CreditNoteItem, repeated: true },
    { no: 40, name: "form_data", kind: "message", T: forms_fields_data_scailo_pb_js_1.FormFieldDatum, repeated: true },
]);
/**
 *
 * Describes the parameters required to add an item to a credit note
 *
 * @generated from message Scailo.CreditNotesServiceItemCreateRequest
 */
class CreditNotesServiceItemCreateRequest extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * Stores any comment that the user might add during this operation
         *
         * @generated from field: string user_comment = 1;
         */
        this.userComment = "";
        /**
         * Stores the credit note ID
         *
         * @generated from field: uint64 credit_note_id = 10;
         */
        this.creditNoteId = protobuf_1.protoInt64.zero;
        /**
         * Stores the family ID
         *
         * @generated from field: uint64 family_id = 11;
         */
        this.familyId = protobuf_1.protoInt64.zero;
        /**
         * The quantity (in cents) being supplied in internal unit of material
         *
         * @generated from field: uint64 internal_quantity = 12;
         */
        this.internalQuantity = protobuf_1.protoInt64.zero;
        /**
         * Stores the ID of the client's unit of material
         *
         * @generated from field: uint64 client_uom_id = 13;
         */
        this.clientUomId = protobuf_1.protoInt64.zero;
        /**
         * Stores the quantity (in cents) being admitted in client's unit of material
         *
         * @generated from field: uint64 client_quantity = 14;
         */
        this.clientQuantity = protobuf_1.protoInt64.zero;
        /**
         * The family code as represented by the client
         *
         * @generated from field: string client_family_code = 15;
         */
        this.clientFamilyCode = "";
        /**
         * The unit price of the item (as supplied to the client)
         *
         * @generated from field: uint64 unit_price = 16;
         */
        this.unitPrice = protobuf_1.protoInt64.zero;
        /**
         * The ID of the associated tax group
         *
         * @generated from field: uint64 tax_group_id = 17;
         */
        this.taxGroupId = protobuf_1.protoInt64.zero;
        /**
         * The applicable round off amount (optional, and can be positive or negative)
         *
         * @generated from field: int64 round_off = 18;
         */
        this.roundOff = protobuf_1.protoInt64.zero;
        /**
         * Optional specifications
         *
         * @generated from field: string specifications = 19;
         */
        this.specifications = "";
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new CreditNotesServiceItemCreateRequest().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new CreditNotesServiceItemCreateRequest().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new CreditNotesServiceItemCreateRequest().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(CreditNotesServiceItemCreateRequest, a, b);
    }
}
exports.CreditNotesServiceItemCreateRequest = CreditNotesServiceItemCreateRequest;
CreditNotesServiceItemCreateRequest.runtime = protobuf_1.proto3;
CreditNotesServiceItemCreateRequest.typeName = "Scailo.CreditNotesServiceItemCreateRequest";
CreditNotesServiceItemCreateRequest.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "user_comment", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 10, name: "credit_note_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 11, name: "family_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 12, name: "internal_quantity", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 13, name: "client_uom_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 14, name: "client_quantity", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 15, name: "client_family_code", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 16, name: "unit_price", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 17, name: "tax_group_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 18, name: "round_off", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 19, name: "specifications", kind: "scalar", T: 9 /* ScalarType.STRING */ },
]);
/**
 *
 * Describes the parameters required to update an item in a credit note
 *
 * @generated from message Scailo.CreditNotesServiceItemUpdateRequest
 */
class CreditNotesServiceItemUpdateRequest extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * Stores any comment that the user might add during this operation
         *
         * @generated from field: string user_comment = 1;
         */
        this.userComment = "";
        /**
         * The ID of the record
         *
         * @generated from field: uint64 id = 2;
         */
        this.id = protobuf_1.protoInt64.zero;
        /**
         * The quantity (in cents) being supplied in internal unit of material
         *
         * @generated from field: uint64 internal_quantity = 12;
         */
        this.internalQuantity = protobuf_1.protoInt64.zero;
        /**
         * Stores the ID of the client's unit of material
         *
         * @generated from field: uint64 client_uom_id = 13;
         */
        this.clientUomId = protobuf_1.protoInt64.zero;
        /**
         * Stores the quantity (in cents) being admitted in client's unit of material
         *
         * @generated from field: uint64 client_quantity = 14;
         */
        this.clientQuantity = protobuf_1.protoInt64.zero;
        /**
         * The family code as represented by the client
         *
         * @generated from field: string client_family_code = 15;
         */
        this.clientFamilyCode = "";
        /**
         * The unit price of the item (as supplied to the client)
         *
         * @generated from field: uint64 unit_price = 16;
         */
        this.unitPrice = protobuf_1.protoInt64.zero;
        /**
         * The ID of the associated tax group
         *
         * @generated from field: uint64 tax_group_id = 17;
         */
        this.taxGroupId = protobuf_1.protoInt64.zero;
        /**
         * The applicable round off amount (optional, and can be positive or negative)
         *
         * @generated from field: int64 round_off = 18;
         */
        this.roundOff = protobuf_1.protoInt64.zero;
        /**
         * Optional specifications
         *
         * @generated from field: string specifications = 19;
         */
        this.specifications = "";
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new CreditNotesServiceItemUpdateRequest().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new CreditNotesServiceItemUpdateRequest().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new CreditNotesServiceItemUpdateRequest().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(CreditNotesServiceItemUpdateRequest, a, b);
    }
}
exports.CreditNotesServiceItemUpdateRequest = CreditNotesServiceItemUpdateRequest;
CreditNotesServiceItemUpdateRequest.runtime = protobuf_1.proto3;
CreditNotesServiceItemUpdateRequest.typeName = "Scailo.CreditNotesServiceItemUpdateRequest";
CreditNotesServiceItemUpdateRequest.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "user_comment", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 12, name: "internal_quantity", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 13, name: "client_uom_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 14, name: "client_quantity", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 15, name: "client_family_code", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 16, name: "unit_price", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 17, name: "tax_group_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 18, name: "round_off", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 19, name: "specifications", kind: "scalar", T: 9 /* ScalarType.STRING */ },
]);
/**
 *
 * Describes the parameters that constitute an item associated to a credit note
 *
 * @generated from message Scailo.CreditNoteItem
 */
class CreditNoteItem extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * Stores a globally unique entity UUID. This will be set at the organization level
         *
         * @generated from field: string entity_uuid = 1;
         */
        this.entityUuid = "";
        /**
         * Denotes if this record requires approval (or has been approved)
         *
         * @generated from field: bool need_approval = 4;
         */
        this.needApproval = false;
        /**
         * Stores any comment that the user might have added during an operation
         *
         * @generated from field: string user_comment = 5;
         */
        this.userComment = "";
        /**
         * Stores the credit note ID
         *
         * @generated from field: uint64 credit_note_id = 10;
         */
        this.creditNoteId = protobuf_1.protoInt64.zero;
        /**
         * Stores the family ID
         *
         * @generated from field: uint64 family_id = 11;
         */
        this.familyId = protobuf_1.protoInt64.zero;
        /**
         * The quantity (in cents) being supplied in internal unit of material
         *
         * @generated from field: uint64 internal_quantity = 12;
         */
        this.internalQuantity = protobuf_1.protoInt64.zero;
        /**
         * Stores the ID of the client's unit of material
         *
         * @generated from field: uint64 client_uom_id = 13;
         */
        this.clientUomId = protobuf_1.protoInt64.zero;
        /**
         * Stores the quantity (in cents) being admitted in client's unit of material
         *
         * @generated from field: uint64 client_quantity = 14;
         */
        this.clientQuantity = protobuf_1.protoInt64.zero;
        /**
         * The family code as represented by the client
         *
         * @generated from field: string client_family_code = 15;
         */
        this.clientFamilyCode = "";
        /**
         * The unit price of the item (as supplied to the client)
         *
         * @generated from field: uint64 unit_price = 16;
         */
        this.unitPrice = protobuf_1.protoInt64.zero;
        /**
         * The ID of the associated tax group
         *
         * @generated from field: uint64 tax_group_id = 17;
         */
        this.taxGroupId = protobuf_1.protoInt64.zero;
        /**
         * The applicable round off amount (optional, and can be positive or negative)
         *
         * @generated from field: int64 round_off = 18;
         */
        this.roundOff = protobuf_1.protoInt64.zero;
        /**
         * Optional specifications
         *
         * @generated from field: string specifications = 19;
         */
        this.specifications = "";
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new CreditNoteItem().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new CreditNoteItem().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new CreditNoteItem().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(CreditNoteItem, a, b);
    }
}
exports.CreditNoteItem = CreditNoteItem;
CreditNoteItem.runtime = protobuf_1.proto3;
CreditNoteItem.typeName = "Scailo.CreditNoteItem";
CreditNoteItem.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "entity_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "metadata", kind: "message", T: base_scailo_pb_js_1.EmployeeMetadata },
    { no: 3, name: "approval_metadata", kind: "message", T: base_scailo_pb_js_1.ApprovalMetadata },
    { no: 4, name: "need_approval", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 5, name: "user_comment", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 10, name: "credit_note_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 11, name: "family_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 12, name: "internal_quantity", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 13, name: "client_uom_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 14, name: "client_quantity", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 15, name: "client_family_code", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 16, name: "unit_price", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 17, name: "tax_group_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 18, name: "round_off", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 19, name: "specifications", kind: "scalar", T: 9 /* ScalarType.STRING */ },
]);
/**
 *
 * Describes the message consisting of the list of credit notes
 *
 * @generated from message Scailo.CreditNotesList
 */
class CreditNotesList extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * List of records
         *
         * @generated from field: repeated Scailo.CreditNote list = 1;
         */
        this.list = [];
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new CreditNotesList().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new CreditNotesList().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new CreditNotesList().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(CreditNotesList, a, b);
    }
}
exports.CreditNotesList = CreditNotesList;
CreditNotesList.runtime = protobuf_1.proto3;
CreditNotesList.typeName = "Scailo.CreditNotesList";
CreditNotesList.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "list", kind: "message", T: CreditNote, repeated: true },
]);
/**
 *
 * Describes the message consisting of the list of credit note items
 *
 * @generated from message Scailo.CreditNoteItemsList
 */
class CreditNoteItemsList extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * List of records
         *
         * @generated from field: repeated Scailo.CreditNoteItem list = 1;
         */
        this.list = [];
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new CreditNoteItemsList().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new CreditNoteItemsList().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new CreditNoteItemsList().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(CreditNoteItemsList, a, b);
    }
}
exports.CreditNoteItemsList = CreditNoteItemsList;
CreditNoteItemsList.runtime = protobuf_1.proto3;
CreditNoteItemsList.typeName = "Scailo.CreditNoteItemsList";
CreditNoteItemsList.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "list", kind: "message", T: CreditNoteItem, repeated: true },
]);
/**
 *
 * Describes the parameters that are required to retrieve the history of the record
 *
 * @generated from message Scailo.CreditNoteItemHistoryRequest
 */
class CreditNoteItemHistoryRequest extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * Stores the credit note ID
         *
         * @generated from field: uint64 credit_note_id = 10;
         */
        this.creditNoteId = protobuf_1.protoInt64.zero;
        /**
         * Stores the family ID
         *
         * @generated from field: uint64 family_id = 11;
         */
        this.familyId = protobuf_1.protoInt64.zero;
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new CreditNoteItemHistoryRequest().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new CreditNoteItemHistoryRequest().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new CreditNoteItemHistoryRequest().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(CreditNoteItemHistoryRequest, a, b);
    }
}
exports.CreditNoteItemHistoryRequest = CreditNoteItemHistoryRequest;
CreditNoteItemHistoryRequest.runtime = protobuf_1.proto3;
CreditNoteItemHistoryRequest.typeName = "Scailo.CreditNoteItemHistoryRequest";
CreditNoteItemHistoryRequest.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 10, name: "credit_note_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 11, name: "family_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
]);
/**
 *
 * Describes the parameters that are required to retrieve the info of a prospective credit note item
 *
 * @generated from message Scailo.CreditNoteItemProspectiveInfoRequest
 */
class CreditNoteItemProspectiveInfoRequest extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * Stores the credit note ID
         *
         * @generated from field: uint64 credit_note_id = 10;
         */
        this.creditNoteId = protobuf_1.protoInt64.zero;
        /**
         * Stores the family ID
         *
         * @generated from field: uint64 family_id = 11;
         */
        this.familyId = protobuf_1.protoInt64.zero;
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new CreditNoteItemProspectiveInfoRequest().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new CreditNoteItemProspectiveInfoRequest().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new CreditNoteItemProspectiveInfoRequest().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(CreditNoteItemProspectiveInfoRequest, a, b);
    }
}
exports.CreditNoteItemProspectiveInfoRequest = CreditNoteItemProspectiveInfoRequest;
CreditNoteItemProspectiveInfoRequest.runtime = protobuf_1.proto3;
CreditNoteItemProspectiveInfoRequest.typeName = "Scailo.CreditNoteItemProspectiveInfoRequest";
CreditNoteItemProspectiveInfoRequest.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 10, name: "credit_note_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 11, name: "family_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
]);
/**
 *
 * Describes the request payload to retrieve the quantity that has already been added for the specific ref_from, ref_id and family_id
 *
 * @generated from message Scailo.CreditNotesServiceAlreadyAddedQuantityForSourceRequest
 */
class CreditNotesServiceAlreadyAddedQuantityForSourceRequest extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * The associated reference
         *
         * @generated from field: string ref_from = 1;
         */
        this.refFrom = "";
        /**
         * The associated ID of the reference
         *
         * @generated from field: uint64 ref_id = 2;
         */
        this.refId = protobuf_1.protoInt64.zero;
        /**
         * The associated family ID
         *
         * @generated from field: uint64 family_id = 3;
         */
        this.familyId = protobuf_1.protoInt64.zero;
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new CreditNotesServiceAlreadyAddedQuantityForSourceRequest().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new CreditNotesServiceAlreadyAddedQuantityForSourceRequest().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new CreditNotesServiceAlreadyAddedQuantityForSourceRequest().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(CreditNotesServiceAlreadyAddedQuantityForSourceRequest, a, b);
    }
}
exports.CreditNotesServiceAlreadyAddedQuantityForSourceRequest = CreditNotesServiceAlreadyAddedQuantityForSourceRequest;
CreditNotesServiceAlreadyAddedQuantityForSourceRequest.runtime = protobuf_1.proto3;
CreditNotesServiceAlreadyAddedQuantityForSourceRequest.typeName = "Scailo.CreditNotesServiceAlreadyAddedQuantityForSourceRequest";
CreditNotesServiceAlreadyAddedQuantityForSourceRequest.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "ref_from", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "ref_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 3, name: "family_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
]);
/**
 *
 * Describes the request payload to retrieve approved or unapproved items.
 *
 * @generated from message Scailo.CreditNoteItemsSearchRequest
 */
class CreditNoteItemsSearchRequest extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * If true, then returns only active records. If false, then returns only inactive records
         *
         * @generated from field: Scailo.BOOL_FILTER is_active = 1;
         */
        this.isActive = base_scailo_pb_js_1.BOOL_FILTER.BOOL_FILTER_ANY_UNSPECIFIED;
        /**
         * The number of records that need to be sent in the response. Returns all records if it is set to -1
         *
         * @generated from field: int64 count = 2;
         */
        this.count = protobuf_1.protoInt64.zero;
        /**
         * The number that need to be offset by before fetching the records
         *
         * @generated from field: uint64 offset = 3;
         */
        this.offset = protobuf_1.protoInt64.zero;
        /**
         * The sort order that is to be used to fetch the pagination response
         *
         * @generated from field: Scailo.SORT_ORDER sort_order = 4;
         */
        this.sortOrder = base_scailo_pb_js_1.SORT_ORDER.ASCENDING_UNSPECIFIED;
        /**
         * The sort key that is to be used to fetch the pagination response
         *
         * @generated from field: Scailo.CREDIT_NOTE_ITEM_SORT_KEY sort_key = 5;
         */
        this.sortKey = CREDIT_NOTE_ITEM_SORT_KEY.CREDIT_NOTE_ITEM_SORT_KEY_ID_UNSPECIFIED;
        /**
         * The entity UUID that is to be used to filter records
         *
         * @generated from field: string entity_uuid = 6;
         */
        this.entityUuid = "";
        /**
         * The status of the items
         *
         * @generated from field: Scailo.CREDIT_NOTE_ITEM_STATUS status = 7;
         */
        this.status = CREDIT_NOTE_ITEM_STATUS.CREDIT_NOTE_ITEM_STATUS_ANY_UNSPECIFIED;
        /**
         * The start range of approved timestamp
         *
         * @generated from field: uint64 approved_on_start = 10;
         */
        this.approvedOnStart = protobuf_1.protoInt64.zero;
        /**
         * The end range of approved timestamp
         *
         * @generated from field: uint64 approved_on_end = 11;
         */
        this.approvedOnEnd = protobuf_1.protoInt64.zero;
        /**
         * The ID of the approver
         *
         * @generated from field: uint64 approved_by_user_id = 12;
         */
        this.approvedByUserId = protobuf_1.protoInt64.zero;
        /**
         * The role ID of the approver
         *
         * @generated from field: uint64 approver_role_id = 13;
         */
        this.approverRoleId = protobuf_1.protoInt64.zero;
        /**
         * The ID of the credit note
         *
         * @generated from field: uint64 credit_note_id = 20;
         */
        this.creditNoteId = protobuf_1.protoInt64.zero;
        /**
         * Stores the family ID
         *
         * @generated from field: uint64 family_id = 21;
         */
        this.familyId = protobuf_1.protoInt64.zero;
        /**
         * The ID of the client's unit of material
         *
         * @generated from field: uint64 client_uom_id = 23;
         */
        this.clientUomId = protobuf_1.protoInt64.zero;
        /**
         * Stores the family code as given by the client
         *
         * @generated from field: string client_family_code = 25;
         */
        this.clientFamilyCode = "";
        /**
         * The ID of the tax group
         *
         * @generated from field: uint64 tax_group_id = 27;
         */
        this.taxGroupId = protobuf_1.protoInt64.zero;
        /**
         * Describes the key with which the search operation needs to be performed
         *
         * @generated from field: string search_key = 40;
         */
        this.searchKey = "";
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new CreditNoteItemsSearchRequest().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new CreditNoteItemsSearchRequest().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new CreditNoteItemsSearchRequest().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(CreditNoteItemsSearchRequest, a, b);
    }
}
exports.CreditNoteItemsSearchRequest = CreditNoteItemsSearchRequest;
CreditNoteItemsSearchRequest.runtime = protobuf_1.proto3;
CreditNoteItemsSearchRequest.typeName = "Scailo.CreditNoteItemsSearchRequest";
CreditNoteItemsSearchRequest.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "is_active", kind: "enum", T: protobuf_1.proto3.getEnumType(base_scailo_pb_js_1.BOOL_FILTER) },
    { no: 2, name: "count", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "offset", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 4, name: "sort_order", kind: "enum", T: protobuf_1.proto3.getEnumType(base_scailo_pb_js_1.SORT_ORDER) },
    { no: 5, name: "sort_key", kind: "enum", T: protobuf_1.proto3.getEnumType(CREDIT_NOTE_ITEM_SORT_KEY) },
    { no: 6, name: "entity_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 7, name: "status", kind: "enum", T: protobuf_1.proto3.getEnumType(CREDIT_NOTE_ITEM_STATUS) },
    { no: 10, name: "approved_on_start", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 11, name: "approved_on_end", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 12, name: "approved_by_user_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 13, name: "approver_role_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 20, name: "credit_note_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 21, name: "family_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 23, name: "client_uom_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 25, name: "client_family_code", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 27, name: "tax_group_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 40, name: "search_key", kind: "scalar", T: 9 /* ScalarType.STRING */ },
]);
/**
 *
 * Describes the response to a pagination items request
 *
 * @generated from message Scailo.CreditNotesServicePaginatedItemsResponse
 */
class CreditNotesServicePaginatedItemsResponse extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * The number of records in this payload
         *
         * @generated from field: uint64 count = 1;
         */
        this.count = protobuf_1.protoInt64.zero;
        /**
         * The number that has been offset before fetching the records. This is the same value that has been sent as part of the pagination request
         *
         * @generated from field: uint64 offset = 2;
         */
        this.offset = protobuf_1.protoInt64.zero;
        /**
         * The total number of records that are available
         *
         * @generated from field: uint64 total = 3;
         */
        this.total = protobuf_1.protoInt64.zero;
        /**
         * The list of records
         *
         * @generated from field: repeated Scailo.CreditNoteItem payload = 4;
         */
        this.payload = [];
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new CreditNotesServicePaginatedItemsResponse().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new CreditNotesServicePaginatedItemsResponse().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new CreditNotesServicePaginatedItemsResponse().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(CreditNotesServicePaginatedItemsResponse, a, b);
    }
}
exports.CreditNotesServicePaginatedItemsResponse = CreditNotesServicePaginatedItemsResponse;
CreditNotesServicePaginatedItemsResponse.runtime = protobuf_1.proto3;
CreditNotesServicePaginatedItemsResponse.typeName = "Scailo.CreditNotesServicePaginatedItemsResponse";
CreditNotesServicePaginatedItemsResponse.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "count", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 2, name: "offset", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 3, name: "total", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 4, name: "payload", kind: "message", T: CreditNoteItem, repeated: true },
]);
/**
 *
 * Describes a pagination request to retrieve records
 *
 * @generated from message Scailo.CreditNotesServicePaginationReq
 */
class CreditNotesServicePaginationReq extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * If true, then returns only active records. If false, then returns only inactive records
         *
         * @generated from field: Scailo.BOOL_FILTER is_active = 1;
         */
        this.isActive = base_scailo_pb_js_1.BOOL_FILTER.BOOL_FILTER_ANY_UNSPECIFIED;
        /**
         * The number of records that need to be sent in the response
         *
         * @generated from field: int64 count = 2;
         */
        this.count = protobuf_1.protoInt64.zero;
        /**
         * The number that need to be offset by before fetching the records
         *
         * @generated from field: uint64 offset = 3;
         */
        this.offset = protobuf_1.protoInt64.zero;
        /**
         * The sort order that is to be used to fetch the pagination response
         *
         * @generated from field: Scailo.SORT_ORDER sort_order = 4;
         */
        this.sortOrder = base_scailo_pb_js_1.SORT_ORDER.ASCENDING_UNSPECIFIED;
        /**
         * The sort key that is to be used to fetch the pagination response
         *
         * @generated from field: Scailo.CREDIT_NOTE_SORT_KEY sort_key = 5;
         */
        this.sortKey = CREDIT_NOTE_SORT_KEY.CREDIT_NOTE_SORT_KEY_ID_UNSPECIFIED;
        /**
         * The status of this credit note
         *
         * @generated from field: Scailo.STANDARD_LIFECYCLE_STATUS status = 6;
         */
        this.status = base_scailo_pb_js_1.STANDARD_LIFECYCLE_STATUS.ANY_UNSPECIFIED;
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new CreditNotesServicePaginationReq().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new CreditNotesServicePaginationReq().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new CreditNotesServicePaginationReq().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(CreditNotesServicePaginationReq, a, b);
    }
}
exports.CreditNotesServicePaginationReq = CreditNotesServicePaginationReq;
CreditNotesServicePaginationReq.runtime = protobuf_1.proto3;
CreditNotesServicePaginationReq.typeName = "Scailo.CreditNotesServicePaginationReq";
CreditNotesServicePaginationReq.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "is_active", kind: "enum", T: protobuf_1.proto3.getEnumType(base_scailo_pb_js_1.BOOL_FILTER) },
    { no: 2, name: "count", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "offset", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 4, name: "sort_order", kind: "enum", T: protobuf_1.proto3.getEnumType(base_scailo_pb_js_1.SORT_ORDER) },
    { no: 5, name: "sort_key", kind: "enum", T: protobuf_1.proto3.getEnumType(CREDIT_NOTE_SORT_KEY) },
    { no: 6, name: "status", kind: "enum", T: protobuf_1.proto3.getEnumType(base_scailo_pb_js_1.STANDARD_LIFECYCLE_STATUS) },
]);
/**
 *
 * Describes the response to a pagination request
 *
 * @generated from message Scailo.CreditNotesServicePaginationResponse
 */
class CreditNotesServicePaginationResponse extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * The number of records in this payload
         *
         * @generated from field: uint64 count = 1;
         */
        this.count = protobuf_1.protoInt64.zero;
        /**
         * The number that has been offset before fetching the records. This is the same value that has been sent as part of the pagination request
         *
         * @generated from field: uint64 offset = 2;
         */
        this.offset = protobuf_1.protoInt64.zero;
        /**
         * The total number of records that are available
         *
         * @generated from field: uint64 total = 3;
         */
        this.total = protobuf_1.protoInt64.zero;
        /**
         * The list of records
         *
         * @generated from field: repeated Scailo.CreditNote payload = 4;
         */
        this.payload = [];
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new CreditNotesServicePaginationResponse().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new CreditNotesServicePaginationResponse().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new CreditNotesServicePaginationResponse().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(CreditNotesServicePaginationResponse, a, b);
    }
}
exports.CreditNotesServicePaginationResponse = CreditNotesServicePaginationResponse;
CreditNotesServicePaginationResponse.runtime = protobuf_1.proto3;
CreditNotesServicePaginationResponse.typeName = "Scailo.CreditNotesServicePaginationResponse";
CreditNotesServicePaginationResponse.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "count", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 2, name: "offset", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 3, name: "total", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 4, name: "payload", kind: "message", T: CreditNote, repeated: true },
]);
/**
 *
 * Describes the base request payload of a filter search
 *
 * @generated from message Scailo.CreditNotesServiceFilterReq
 */
class CreditNotesServiceFilterReq extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * If true, then returns only active records. If false, then returns only inactive records
         *
         * @generated from field: Scailo.BOOL_FILTER is_active = 1;
         */
        this.isActive = base_scailo_pb_js_1.BOOL_FILTER.BOOL_FILTER_ANY_UNSPECIFIED;
        /**
         * The number of records that need to be sent in the response. Returns all records if it is set to -1
         *
         * @generated from field: int64 count = 2;
         */
        this.count = protobuf_1.protoInt64.zero;
        /**
         * The number that need to be offset by before fetching the records
         *
         * @generated from field: uint64 offset = 3;
         */
        this.offset = protobuf_1.protoInt64.zero;
        /**
         * The sort order that is to be used to fetch the pagination response
         *
         * @generated from field: Scailo.SORT_ORDER sort_order = 4;
         */
        this.sortOrder = base_scailo_pb_js_1.SORT_ORDER.ASCENDING_UNSPECIFIED;
        /**
         * The sort key that is to be used to fetch the pagination response
         *
         * @generated from field: Scailo.CREDIT_NOTE_SORT_KEY sort_key = 5;
         */
        this.sortKey = CREDIT_NOTE_SORT_KEY.CREDIT_NOTE_SORT_KEY_ID_UNSPECIFIED;
        /**
         * The minimum timestamp that needs to be considered to filter by creation
         *
         * @generated from field: uint64 creation_timestamp_start = 101;
         */
        this.creationTimestampStart = protobuf_1.protoInt64.zero;
        /**
         * The maximum timestamp that needs to be considered to filter by creation
         *
         * @generated from field: uint64 creation_timestamp_end = 102;
         */
        this.creationTimestampEnd = protobuf_1.protoInt64.zero;
        /**
         * The minimum timestamp that needs to be considered to filter by modification
         *
         * @generated from field: uint64 modification_timestamp_start = 103;
         */
        this.modificationTimestampStart = protobuf_1.protoInt64.zero;
        /**
         * The maximum timestamp that needs to be considered to filter by modification
         *
         * @generated from field: uint64 modification_timestamp_end = 104;
         */
        this.modificationTimestampEnd = protobuf_1.protoInt64.zero;
        /**
         * The entity UUID that is to be used to filter records
         *
         * @generated from field: string entity_uuid = 8;
         */
        this.entityUuid = "";
        /**
         * The status of this credit note
         *
         * @generated from field: Scailo.STANDARD_LIFECYCLE_STATUS status = 10;
         */
        this.status = base_scailo_pb_js_1.STANDARD_LIFECYCLE_STATUS.ANY_UNSPECIFIED;
        /**
         * The start range of approved timestamp
         *
         * @generated from field: uint64 approved_on_start = 11;
         */
        this.approvedOnStart = protobuf_1.protoInt64.zero;
        /**
         * The end range of approved timestamp
         *
         * @generated from field: uint64 approved_on_end = 12;
         */
        this.approvedOnEnd = protobuf_1.protoInt64.zero;
        /**
         * The ID of the approver
         *
         * @generated from field: uint64 approved_by_user_id = 13;
         */
        this.approvedByUserId = protobuf_1.protoInt64.zero;
        /**
         * The role ID of the approver
         *
         * @generated from field: uint64 approver_role_id = 14;
         */
        this.approverRoleId = protobuf_1.protoInt64.zero;
        /**
         * The start range of completed timestamp
         *
         * @generated from field: uint64 completed_on_start = 15;
         */
        this.completedOnStart = protobuf_1.protoInt64.zero;
        /**
         * The end range of completed timestamp
         *
         * @generated from field: uint64 completed_on_end = 16;
         */
        this.completedOnEnd = protobuf_1.protoInt64.zero;
        /**
         * The reference ID of the credit note
         *
         * @generated from field: string reference_id = 20;
         */
        this.referenceId = "";
        /**
         * The unique reference number that has been automatically generated
         *
         * @generated from field: string final_ref_number = 21;
         */
        this.finalRefNumber = "";
        /**
         * The associated reference
         *
         * @generated from field: string ref_from = 22;
         */
        this.refFrom = "";
        /**
         * The associated ID of the reference
         *
         * @generated from field: uint64 ref_id = 23;
         */
        this.refId = protobuf_1.protoInt64.zero;
        /**
         * The ID of the associated currency
         *
         * @generated from field: uint64 currency_id = 24;
         */
        this.currencyId = protobuf_1.protoInt64.zero;
        /**
         * The associated ID of the bank account
         *
         * @generated from field: uint64 bank_account_id = 25;
         */
        this.bankAccountId = protobuf_1.protoInt64.zero;
        /**
         * The ID of the family
         *
         * @generated from field: uint64 family_id = 40;
         */
        this.familyId = protobuf_1.protoInt64.zero;
        /**
         * Sales Order related filters
         * The associated consignee client ID of the linked sales order
         *
         * @generated from field: uint64 consignee_client_id = 50;
         */
        this.consigneeClientId = protobuf_1.protoInt64.zero;
        /**
         * The associated buyer client ID of the linked sales order
         *
         * @generated from field: uint64 buyer_client_id = 51;
         */
        this.buyerClientId = protobuf_1.protoInt64.zero;
        /**
         * The ID of the associated project of the linked sales order
         *
         * @generated from field: uint64 project_id = 52;
         */
        this.projectId = protobuf_1.protoInt64.zero;
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new CreditNotesServiceFilterReq().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new CreditNotesServiceFilterReq().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new CreditNotesServiceFilterReq().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(CreditNotesServiceFilterReq, a, b);
    }
}
exports.CreditNotesServiceFilterReq = CreditNotesServiceFilterReq;
CreditNotesServiceFilterReq.runtime = protobuf_1.proto3;
CreditNotesServiceFilterReq.typeName = "Scailo.CreditNotesServiceFilterReq";
CreditNotesServiceFilterReq.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "is_active", kind: "enum", T: protobuf_1.proto3.getEnumType(base_scailo_pb_js_1.BOOL_FILTER) },
    { no: 2, name: "count", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "offset", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 4, name: "sort_order", kind: "enum", T: protobuf_1.proto3.getEnumType(base_scailo_pb_js_1.SORT_ORDER) },
    { no: 5, name: "sort_key", kind: "enum", T: protobuf_1.proto3.getEnumType(CREDIT_NOTE_SORT_KEY) },
    { no: 101, name: "creation_timestamp_start", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 102, name: "creation_timestamp_end", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 103, name: "modification_timestamp_start", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 104, name: "modification_timestamp_end", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 8, name: "entity_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 10, name: "status", kind: "enum", T: protobuf_1.proto3.getEnumType(base_scailo_pb_js_1.STANDARD_LIFECYCLE_STATUS) },
    { no: 11, name: "approved_on_start", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 12, name: "approved_on_end", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 13, name: "approved_by_user_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 14, name: "approver_role_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 15, name: "completed_on_start", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 16, name: "completed_on_end", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 20, name: "reference_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 21, name: "final_ref_number", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 22, name: "ref_from", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 23, name: "ref_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 24, name: "currency_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 25, name: "bank_account_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 40, name: "family_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 50, name: "consignee_client_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 51, name: "buyer_client_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 52, name: "project_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
]);
/**
 *
 * Describes the base request payload of a count search
 *
 * @generated from message Scailo.CreditNotesServiceCountReq
 */
class CreditNotesServiceCountReq extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * If true, then returns only active records. If false, then returns only inactive records
         *
         * @generated from field: Scailo.BOOL_FILTER is_active = 1;
         */
        this.isActive = base_scailo_pb_js_1.BOOL_FILTER.BOOL_FILTER_ANY_UNSPECIFIED;
        /**
         * The minimum timestamp that needs to be considered to filter by creation
         *
         * @generated from field: uint64 creation_timestamp_start = 101;
         */
        this.creationTimestampStart = protobuf_1.protoInt64.zero;
        /**
         * The maximum timestamp that needs to be considered to filter by creation
         *
         * @generated from field: uint64 creation_timestamp_end = 102;
         */
        this.creationTimestampEnd = protobuf_1.protoInt64.zero;
        /**
         * The minimum timestamp that needs to be considered to filter by modification
         *
         * @generated from field: uint64 modification_timestamp_start = 103;
         */
        this.modificationTimestampStart = protobuf_1.protoInt64.zero;
        /**
         * The maximum timestamp that needs to be considered to filter by modification
         *
         * @generated from field: uint64 modification_timestamp_end = 104;
         */
        this.modificationTimestampEnd = protobuf_1.protoInt64.zero;
        /**
         * The entity UUID that is to be used to filter records
         *
         * @generated from field: string entity_uuid = 8;
         */
        this.entityUuid = "";
        /**
         * The status of this credit note
         *
         * @generated from field: Scailo.STANDARD_LIFECYCLE_STATUS status = 10;
         */
        this.status = base_scailo_pb_js_1.STANDARD_LIFECYCLE_STATUS.ANY_UNSPECIFIED;
        /**
         * The start range of approved timestamp
         *
         * @generated from field: uint64 approved_on_start = 11;
         */
        this.approvedOnStart = protobuf_1.protoInt64.zero;
        /**
         * The end range of approved timestamp
         *
         * @generated from field: uint64 approved_on_end = 12;
         */
        this.approvedOnEnd = protobuf_1.protoInt64.zero;
        /**
         * The ID of the approver
         *
         * @generated from field: uint64 approved_by_user_id = 13;
         */
        this.approvedByUserId = protobuf_1.protoInt64.zero;
        /**
         * The role ID of the approver
         *
         * @generated from field: uint64 approver_role_id = 14;
         */
        this.approverRoleId = protobuf_1.protoInt64.zero;
        /**
         * The start range of completed timestamp
         *
         * @generated from field: uint64 completed_on_start = 15;
         */
        this.completedOnStart = protobuf_1.protoInt64.zero;
        /**
         * The end range of completed timestamp
         *
         * @generated from field: uint64 completed_on_end = 16;
         */
        this.completedOnEnd = protobuf_1.protoInt64.zero;
        /**
         * The reference ID of the credit note
         *
         * @generated from field: string reference_id = 20;
         */
        this.referenceId = "";
        /**
         * The unique reference number that has been automatically generated
         *
         * @generated from field: string final_ref_number = 21;
         */
        this.finalRefNumber = "";
        /**
         * The associated reference
         *
         * @generated from field: string ref_from = 22;
         */
        this.refFrom = "";
        /**
         * The associated ID of the reference
         *
         * @generated from field: uint64 ref_id = 23;
         */
        this.refId = protobuf_1.protoInt64.zero;
        /**
         * The ID of the associated currency
         *
         * @generated from field: uint64 currency_id = 24;
         */
        this.currencyId = protobuf_1.protoInt64.zero;
        /**
         * The associated ID of the bank account
         *
         * @generated from field: uint64 bank_account_id = 25;
         */
        this.bankAccountId = protobuf_1.protoInt64.zero;
        /**
         * The ID of the family
         *
         * @generated from field: uint64 family_id = 40;
         */
        this.familyId = protobuf_1.protoInt64.zero;
        /**
         * Sales Order related filters
         * The associated consignee client ID of the linked sales order
         *
         * @generated from field: uint64 consignee_client_id = 50;
         */
        this.consigneeClientId = protobuf_1.protoInt64.zero;
        /**
         * The associated buyer client ID of the linked sales order
         *
         * @generated from field: uint64 buyer_client_id = 51;
         */
        this.buyerClientId = protobuf_1.protoInt64.zero;
        /**
         * The ID of the associated project of the linked sales order
         *
         * @generated from field: uint64 project_id = 52;
         */
        this.projectId = protobuf_1.protoInt64.zero;
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new CreditNotesServiceCountReq().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new CreditNotesServiceCountReq().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new CreditNotesServiceCountReq().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(CreditNotesServiceCountReq, a, b);
    }
}
exports.CreditNotesServiceCountReq = CreditNotesServiceCountReq;
CreditNotesServiceCountReq.runtime = protobuf_1.proto3;
CreditNotesServiceCountReq.typeName = "Scailo.CreditNotesServiceCountReq";
CreditNotesServiceCountReq.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "is_active", kind: "enum", T: protobuf_1.proto3.getEnumType(base_scailo_pb_js_1.BOOL_FILTER) },
    { no: 101, name: "creation_timestamp_start", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 102, name: "creation_timestamp_end", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 103, name: "modification_timestamp_start", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 104, name: "modification_timestamp_end", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 8, name: "entity_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 10, name: "status", kind: "enum", T: protobuf_1.proto3.getEnumType(base_scailo_pb_js_1.STANDARD_LIFECYCLE_STATUS) },
    { no: 11, name: "approved_on_start", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 12, name: "approved_on_end", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 13, name: "approved_by_user_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 14, name: "approver_role_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 15, name: "completed_on_start", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 16, name: "completed_on_end", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 20, name: "reference_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 21, name: "final_ref_number", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 22, name: "ref_from", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 23, name: "ref_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 24, name: "currency_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 25, name: "bank_account_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 40, name: "family_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 50, name: "consignee_client_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 51, name: "buyer_client_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 52, name: "project_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
]);
/**
 *
 * Describes the request payload for performing a generic search operation on records
 *
 * @generated from message Scailo.CreditNotesServiceSearchAllReq
 */
class CreditNotesServiceSearchAllReq extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * If true, then returns only active records. If false, then returns only inactive records
         *
         * @generated from field: Scailo.BOOL_FILTER is_active = 1;
         */
        this.isActive = base_scailo_pb_js_1.BOOL_FILTER.BOOL_FILTER_ANY_UNSPECIFIED;
        /**
         * The number of records that need to be sent in the response. Returns all records if it is set to -1
         *
         * @generated from field: int64 count = 2;
         */
        this.count = protobuf_1.protoInt64.zero;
        /**
         * The number that need to be offset by before fetching the records
         *
         * @generated from field: uint64 offset = 3;
         */
        this.offset = protobuf_1.protoInt64.zero;
        /**
         * The sort order that is to be used to fetch the pagination response
         *
         * @generated from field: Scailo.SORT_ORDER sort_order = 4;
         */
        this.sortOrder = base_scailo_pb_js_1.SORT_ORDER.ASCENDING_UNSPECIFIED;
        /**
         * The sort key that is to be used to fetch the pagination response
         *
         * @generated from field: Scailo.CREDIT_NOTE_SORT_KEY sort_key = 5;
         */
        this.sortKey = CREDIT_NOTE_SORT_KEY.CREDIT_NOTE_SORT_KEY_ID_UNSPECIFIED;
        /**
         * The entity UUID that is to be used to filter records
         *
         * @generated from field: string entity_uuid = 6;
         */
        this.entityUuid = "";
        /**
         * Limit the search space to the given status
         *
         * @generated from field: Scailo.STANDARD_LIFECYCLE_STATUS status = 10;
         */
        this.status = base_scailo_pb_js_1.STANDARD_LIFECYCLE_STATUS.ANY_UNSPECIFIED;
        /**
         * Describes the key with which the search operation needs to be performed
         *
         * @generated from field: string search_key = 11;
         */
        this.searchKey = "";
        /**
         * The associated reference
         *
         * @generated from field: string ref_from = 22;
         */
        this.refFrom = "";
        /**
         * The associated ID of the reference
         *
         * @generated from field: uint64 ref_id = 23;
         */
        this.refId = protobuf_1.protoInt64.zero;
        /**
         * Sales Order related filters
         * The associated consignee client ID of the linked sales order
         *
         * @generated from field: uint64 consignee_client_id = 50;
         */
        this.consigneeClientId = protobuf_1.protoInt64.zero;
        /**
         * The associated buyer client ID of the linked sales order
         *
         * @generated from field: uint64 buyer_client_id = 51;
         */
        this.buyerClientId = protobuf_1.protoInt64.zero;
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new CreditNotesServiceSearchAllReq().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new CreditNotesServiceSearchAllReq().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new CreditNotesServiceSearchAllReq().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(CreditNotesServiceSearchAllReq, a, b);
    }
}
exports.CreditNotesServiceSearchAllReq = CreditNotesServiceSearchAllReq;
CreditNotesServiceSearchAllReq.runtime = protobuf_1.proto3;
CreditNotesServiceSearchAllReq.typeName = "Scailo.CreditNotesServiceSearchAllReq";
CreditNotesServiceSearchAllReq.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "is_active", kind: "enum", T: protobuf_1.proto3.getEnumType(base_scailo_pb_js_1.BOOL_FILTER) },
    { no: 2, name: "count", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "offset", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 4, name: "sort_order", kind: "enum", T: protobuf_1.proto3.getEnumType(base_scailo_pb_js_1.SORT_ORDER) },
    { no: 5, name: "sort_key", kind: "enum", T: protobuf_1.proto3.getEnumType(CREDIT_NOTE_SORT_KEY) },
    { no: 6, name: "entity_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 10, name: "status", kind: "enum", T: protobuf_1.proto3.getEnumType(base_scailo_pb_js_1.STANDARD_LIFECYCLE_STATUS) },
    { no: 11, name: "search_key", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 22, name: "ref_from", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 23, name: "ref_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 50, name: "consignee_client_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 51, name: "buyer_client_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
]);
/**
 *
 * Describes the parameters necessary to create a credit note reference
 *
 * @generated from message Scailo.CreditNotesServiceReferenceCreateRequest
 */
class CreditNotesServiceReferenceCreateRequest extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * Stores any comment that the user might add during this operation
         *
         * @generated from field: string user_comment = 1;
         */
        this.userComment = "";
        /**
         * Stores the credit note ID
         *
         * @generated from field: uint64 credit_note_id = 10;
         */
        this.creditNoteId = protobuf_1.protoInt64.zero;
        /**
         * Stores the sales return ID
         *
         * @generated from field: uint64 sales_return_id = 11;
         */
        this.salesReturnId = protobuf_1.protoInt64.zero;
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new CreditNotesServiceReferenceCreateRequest().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new CreditNotesServiceReferenceCreateRequest().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new CreditNotesServiceReferenceCreateRequest().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(CreditNotesServiceReferenceCreateRequest, a, b);
    }
}
exports.CreditNotesServiceReferenceCreateRequest = CreditNotesServiceReferenceCreateRequest;
CreditNotesServiceReferenceCreateRequest.runtime = protobuf_1.proto3;
CreditNotesServiceReferenceCreateRequest.typeName = "Scailo.CreditNotesServiceReferenceCreateRequest";
CreditNotesServiceReferenceCreateRequest.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "user_comment", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 10, name: "credit_note_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 11, name: "sales_return_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
]);
/**
 *
 * Describes the parameters that constitute a credit note reference
 *
 * @generated from message Scailo.CreditNoteReference
 */
class CreditNoteReference extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * Stores a globally unique entity UUID. This will be set at the organization level
         *
         * @generated from field: string entity_uuid = 1;
         */
        this.entityUuid = "";
        /**
         * Denotes if this record requires approval (or has been approved)
         *
         * @generated from field: bool need_approval = 4;
         */
        this.needApproval = false;
        /**
         * Stores any comment that the user might have added during an operation
         *
         * @generated from field: string user_comment = 5;
         */
        this.userComment = "";
        /**
         * Stores the credit note ID
         *
         * @generated from field: uint64 credit_note_id = 10;
         */
        this.creditNoteId = protobuf_1.protoInt64.zero;
        /**
         * Stores the sales return ID
         *
         * @generated from field: uint64 sales_return_id = 11;
         */
        this.salesReturnId = protobuf_1.protoInt64.zero;
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new CreditNoteReference().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new CreditNoteReference().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new CreditNoteReference().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(CreditNoteReference, a, b);
    }
}
exports.CreditNoteReference = CreditNoteReference;
CreditNoteReference.runtime = protobuf_1.proto3;
CreditNoteReference.typeName = "Scailo.CreditNoteReference";
CreditNoteReference.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "entity_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "metadata", kind: "message", T: base_scailo_pb_js_1.EmployeeMetadata },
    { no: 3, name: "approval_metadata", kind: "message", T: base_scailo_pb_js_1.ApprovalMetadata },
    { no: 4, name: "need_approval", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 5, name: "user_comment", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 10, name: "credit_note_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 11, name: "sales_return_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
]);
/**
 *
 * Describes the message consisting of the list of credit note references
 *
 * @generated from message Scailo.CreditNoteReferencesList
 */
class CreditNoteReferencesList extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * List of records
         *
         * @generated from field: repeated Scailo.CreditNoteReference list = 1;
         */
        this.list = [];
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new CreditNoteReferencesList().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new CreditNoteReferencesList().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new CreditNoteReferencesList().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(CreditNoteReferencesList, a, b);
    }
}
exports.CreditNoteReferencesList = CreditNoteReferencesList;
CreditNoteReferencesList.runtime = protobuf_1.proto3;
CreditNoteReferencesList.typeName = "Scailo.CreditNoteReferencesList";
CreditNoteReferencesList.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "list", kind: "message", T: CreditNoteReference, repeated: true },
]);
