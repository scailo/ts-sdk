"use strict";
// @generated by protoc-gen-es v1.5.1 with parameter "target=ts"
// @generated from file labels.scailo.proto (package Scailo, syntax proto3)
/* eslint-disable */
// @ts-nocheck
Object.defineProperty(exports, "__esModule", { value: true });
exports.LabelsServiceSearchAllReq = exports.LabelsServiceCountReq = exports.LabelsServiceFilterReq = exports.LabelsServicePaginationReq = exports.LabelsServiceUpdateRequest = exports.LabelsServiceCreateRequest = exports.LabelPaginationResp = exports.LabelsList = exports.Label = exports.LABEL_SORT_KEY = void 0;
const protobuf_1 = require("@bufbuild/protobuf");
const base_scailo_pb_js_1 = require("./base.scailo_pb.js");
/**
 *
 * Describes the available sort keys for retrieving labels
 *
 * @generated from enum Scailo.LABEL_SORT_KEY
 */
var LABEL_SORT_KEY;
(function (LABEL_SORT_KEY) {
    /**
     * Fetch ordered results by id
     *
     * @generated from enum value: LABEL_SORT_KEY_ID_UNSPECIFIED = 0;
     */
    LABEL_SORT_KEY[LABEL_SORT_KEY["LABEL_SORT_KEY_ID_UNSPECIFIED"] = 0] = "LABEL_SORT_KEY_ID_UNSPECIFIED";
    /**
     * Fetch ordered results by the creation timestamp
     *
     * @generated from enum value: LABEL_SORT_KEY_CREATED_AT = 1;
     */
    LABEL_SORT_KEY[LABEL_SORT_KEY["LABEL_SORT_KEY_CREATED_AT"] = 1] = "LABEL_SORT_KEY_CREATED_AT";
    /**
     * Fetch ordered results by the modified timestamp
     *
     * @generated from enum value: LABEL_SORT_KEY_MODIFIED_AT = 2;
     */
    LABEL_SORT_KEY[LABEL_SORT_KEY["LABEL_SORT_KEY_MODIFIED_AT"] = 2] = "LABEL_SORT_KEY_MODIFIED_AT";
    /**
     * Fetch ordered results by name
     *
     * @generated from enum value: LABEL_SORT_KEY_NAME = 10;
     */
    LABEL_SORT_KEY[LABEL_SORT_KEY["LABEL_SORT_KEY_NAME"] = 10] = "LABEL_SORT_KEY_NAME";
    /**
     * Fetch ordered results by the code
     *
     * @generated from enum value: LABEL_SORT_KEY_CODE = 11;
     */
    LABEL_SORT_KEY[LABEL_SORT_KEY["LABEL_SORT_KEY_CODE"] = 11] = "LABEL_SORT_KEY_CODE";
})(LABEL_SORT_KEY || (exports.LABEL_SORT_KEY = LABEL_SORT_KEY = {}));
// Retrieve enum metadata with: proto3.getEnumType(LABEL_SORT_KEY)
protobuf_1.proto3.util.setEnumType(LABEL_SORT_KEY, "Scailo.LABEL_SORT_KEY", [
    { no: 0, name: "LABEL_SORT_KEY_ID_UNSPECIFIED" },
    { no: 1, name: "LABEL_SORT_KEY_CREATED_AT" },
    { no: 2, name: "LABEL_SORT_KEY_MODIFIED_AT" },
    { no: 10, name: "LABEL_SORT_KEY_NAME" },
    { no: 11, name: "LABEL_SORT_KEY_CODE" },
]);
/**
 *
 * Describes the data structure of each label on the platform
 *
 * @generated from message Scailo.Label
 */
class Label extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * Stores a globally unique entity UUID. This will be set at the organization level
         *
         * @generated from field: string entity_uuid = 1;
         */
        this.entityUuid = "";
        /**
         * The name of the label
         *
         * @generated from field: string name = 10;
         */
        this.name = "";
        /**
         * The unique code by which the label is classified
         *
         * @generated from field: string code = 21;
         */
        this.code = "";
        /**
         * A short description of the label
         *
         * @generated from field: string description = 11;
         */
        this.description = "";
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new Label().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new Label().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new Label().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(Label, a, b);
    }
}
exports.Label = Label;
Label.runtime = protobuf_1.proto3;
Label.typeName = "Scailo.Label";
Label.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "entity_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "metadata", kind: "message", T: base_scailo_pb_js_1.EmployeeMetadata },
    { no: 10, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 21, name: "code", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 11, name: "description", kind: "scalar", T: 9 /* ScalarType.STRING */ },
]);
/**
 *
 * Describes the data structure that stores a list of labels
 *
 * @generated from message Scailo.LabelsList
 */
class LabelsList extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * List of labels
         *
         * @generated from field: repeated Scailo.Label list = 1;
         */
        this.list = [];
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new LabelsList().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new LabelsList().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new LabelsList().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(LabelsList, a, b);
    }
}
exports.LabelsList = LabelsList;
LabelsList.runtime = protobuf_1.proto3;
LabelsList.typeName = "Scailo.LabelsList";
LabelsList.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "list", kind: "message", T: Label, repeated: true },
]);
/**
 *
 * Describes the data structure that responds to a pagination request
 *
 * @generated from message Scailo.LabelPaginationResp
 */
class LabelPaginationResp extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * The number of records in this payload
         *
         * @generated from field: uint64 count = 1;
         */
        this.count = protobuf_1.protoInt64.zero;
        /**
         * The number that has been offset before fetching the records. This is the same value that has been sent as part of the pagination request
         *
         * @generated from field: uint64 offset = 2;
         */
        this.offset = protobuf_1.protoInt64.zero;
        /**
         * The total number of records that are available
         *
         * @generated from field: uint64 total = 3;
         */
        this.total = protobuf_1.protoInt64.zero;
        /**
         * The list of records
         *
         * @generated from field: repeated Scailo.Label payload = 4;
         */
        this.payload = [];
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new LabelPaginationResp().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new LabelPaginationResp().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new LabelPaginationResp().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(LabelPaginationResp, a, b);
    }
}
exports.LabelPaginationResp = LabelPaginationResp;
LabelPaginationResp.runtime = protobuf_1.proto3;
LabelPaginationResp.typeName = "Scailo.LabelPaginationResp";
LabelPaginationResp.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "count", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 2, name: "offset", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 3, name: "total", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 4, name: "payload", kind: "message", T: Label, repeated: true },
]);
/**
 *
 * Describes the necessary data structure during creation of a label
 *
 * @generated from message Scailo.LabelsServiceCreateRequest
 */
class LabelsServiceCreateRequest extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * Stores a globally unique entity UUID. This will be set at the organization level
         *
         * @generated from field: string entity_uuid = 1;
         */
        this.entityUuid = "";
        /**
         * Stores any comment that the user might add during this operation
         *
         * @generated from field: string user_comment = 2;
         */
        this.userComment = "";
        /**
         * The name of the label
         *
         * @generated from field: string name = 10;
         */
        this.name = "";
        /**
         * The unique code by which the label is classified
         *
         * @generated from field: string code = 21;
         */
        this.code = "";
        /**
         * A short description of the label
         *
         * @generated from field: string description = 11;
         */
        this.description = "";
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new LabelsServiceCreateRequest().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new LabelsServiceCreateRequest().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new LabelsServiceCreateRequest().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(LabelsServiceCreateRequest, a, b);
    }
}
exports.LabelsServiceCreateRequest = LabelsServiceCreateRequest;
LabelsServiceCreateRequest.runtime = protobuf_1.proto3;
LabelsServiceCreateRequest.typeName = "Scailo.LabelsServiceCreateRequest";
LabelsServiceCreateRequest.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "entity_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "user_comment", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 10, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 21, name: "code", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 11, name: "description", kind: "scalar", T: 9 /* ScalarType.STRING */ },
]);
/**
 *
 * Describes the data structure to perform the update (draft/revision) operation on a label
 *
 * @generated from message Scailo.LabelsServiceUpdateRequest
 */
class LabelsServiceUpdateRequest extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * Stores any comment that the user might add during this operation
         *
         * @generated from field: string user_comment = 1;
         */
        this.userComment = "";
        /**
         * The ID of the label that needs to be updated
         *
         * @generated from field: uint64 id = 2;
         */
        this.id = protobuf_1.protoInt64.zero;
        /**
         * The name of the label
         *
         * @generated from field: string name = 10;
         */
        this.name = "";
        /**
         * The unique code by which the label is classified
         *
         * @generated from field: string code = 21;
         */
        this.code = "";
        /**
         * A short description of the label
         *
         * @generated from field: string description = 11;
         */
        this.description = "";
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new LabelsServiceUpdateRequest().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new LabelsServiceUpdateRequest().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new LabelsServiceUpdateRequest().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(LabelsServiceUpdateRequest, a, b);
    }
}
exports.LabelsServiceUpdateRequest = LabelsServiceUpdateRequest;
LabelsServiceUpdateRequest.runtime = protobuf_1.proto3;
LabelsServiceUpdateRequest.typeName = "Scailo.LabelsServiceUpdateRequest";
LabelsServiceUpdateRequest.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "user_comment", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 10, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 21, name: "code", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 11, name: "description", kind: "scalar", T: 9 /* ScalarType.STRING */ },
]);
/**
 *
 * Describes a pagination request to retrieve records
 *
 * @generated from message Scailo.LabelsServicePaginationReq
 */
class LabelsServicePaginationReq extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * If true, then returns only active records. If false, then returns only inactive records
         *
         * @generated from field: Scailo.BOOL_FILTER is_active = 1;
         */
        this.isActive = base_scailo_pb_js_1.BOOL_FILTER.BOOL_FILTER_ANY_UNSPECIFIED;
        /**
         * The number of records that need to be sent in the response
         *
         * @generated from field: int64 count = 2;
         */
        this.count = protobuf_1.protoInt64.zero;
        /**
         * The number that need to be offset by before fetching the records
         *
         * @generated from field: uint64 offset = 3;
         */
        this.offset = protobuf_1.protoInt64.zero;
        /**
         * The sort order that is to be used to fetch the pagination response
         *
         * @generated from field: Scailo.SORT_ORDER sort_order = 4;
         */
        this.sortOrder = base_scailo_pb_js_1.SORT_ORDER.ASCENDING_UNSPECIFIED;
        /**
         * The sort key that is to be used to fetch the pagination response
         *
         * @generated from field: Scailo.LABEL_SORT_KEY sort_key = 5;
         */
        this.sortKey = LABEL_SORT_KEY.LABEL_SORT_KEY_ID_UNSPECIFIED;
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new LabelsServicePaginationReq().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new LabelsServicePaginationReq().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new LabelsServicePaginationReq().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(LabelsServicePaginationReq, a, b);
    }
}
exports.LabelsServicePaginationReq = LabelsServicePaginationReq;
LabelsServicePaginationReq.runtime = protobuf_1.proto3;
LabelsServicePaginationReq.typeName = "Scailo.LabelsServicePaginationReq";
LabelsServicePaginationReq.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "is_active", kind: "enum", T: protobuf_1.proto3.getEnumType(base_scailo_pb_js_1.BOOL_FILTER) },
    { no: 2, name: "count", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "offset", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 4, name: "sort_order", kind: "enum", T: protobuf_1.proto3.getEnumType(base_scailo_pb_js_1.SORT_ORDER) },
    { no: 5, name: "sort_key", kind: "enum", T: protobuf_1.proto3.getEnumType(LABEL_SORT_KEY) },
]);
/**
 *
 * Describes the base request payload of a filter search
 *
 * @generated from message Scailo.LabelsServiceFilterReq
 */
class LabelsServiceFilterReq extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * If true, then returns only active records. If false, then returns only inactive records
         *
         * @generated from field: Scailo.BOOL_FILTER is_active = 1;
         */
        this.isActive = base_scailo_pb_js_1.BOOL_FILTER.BOOL_FILTER_ANY_UNSPECIFIED;
        /**
         * The number of records that need to be sent in the response. Returns all records if it is set to -1
         *
         * @generated from field: int64 count = 2;
         */
        this.count = protobuf_1.protoInt64.zero;
        /**
         * The number that need to be offset by before fetching the records
         *
         * @generated from field: uint64 offset = 3;
         */
        this.offset = protobuf_1.protoInt64.zero;
        /**
         * The sort order that is to be used to fetch the pagination response
         *
         * @generated from field: Scailo.SORT_ORDER sort_order = 4;
         */
        this.sortOrder = base_scailo_pb_js_1.SORT_ORDER.ASCENDING_UNSPECIFIED;
        /**
         * The sort key that is to be used to fetch the pagination response
         *
         * @generated from field: Scailo.LABEL_SORT_KEY sort_key = 5;
         */
        this.sortKey = LABEL_SORT_KEY.LABEL_SORT_KEY_ID_UNSPECIFIED;
        /**
         * The minimum timestamp that needs to be considered to filter by creation
         *
         * @generated from field: uint64 creation_timestamp_start = 101;
         */
        this.creationTimestampStart = protobuf_1.protoInt64.zero;
        /**
         * The maximum timestamp that needs to be considered to filter by creation
         *
         * @generated from field: uint64 creation_timestamp_end = 102;
         */
        this.creationTimestampEnd = protobuf_1.protoInt64.zero;
        /**
         * The minimum timestamp that needs to be considered to filter by modification
         *
         * @generated from field: uint64 modification_timestamp_start = 103;
         */
        this.modificationTimestampStart = protobuf_1.protoInt64.zero;
        /**
         * The maximum timestamp that needs to be considered to filter by modification
         *
         * @generated from field: uint64 modification_timestamp_end = 104;
         */
        this.modificationTimestampEnd = protobuf_1.protoInt64.zero;
        /**
         * The entity UUID that is to be used to filter records
         *
         * @generated from field: string entity_uuid = 8;
         */
        this.entityUuid = "";
        /**
         * The name of the label
         *
         * @generated from field: string name = 10;
         */
        this.name = "";
        /**
         * The unique code by which the label is classified
         *
         * @generated from field: string code = 21;
         */
        this.code = "";
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new LabelsServiceFilterReq().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new LabelsServiceFilterReq().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new LabelsServiceFilterReq().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(LabelsServiceFilterReq, a, b);
    }
}
exports.LabelsServiceFilterReq = LabelsServiceFilterReq;
LabelsServiceFilterReq.runtime = protobuf_1.proto3;
LabelsServiceFilterReq.typeName = "Scailo.LabelsServiceFilterReq";
LabelsServiceFilterReq.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "is_active", kind: "enum", T: protobuf_1.proto3.getEnumType(base_scailo_pb_js_1.BOOL_FILTER) },
    { no: 2, name: "count", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "offset", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 4, name: "sort_order", kind: "enum", T: protobuf_1.proto3.getEnumType(base_scailo_pb_js_1.SORT_ORDER) },
    { no: 5, name: "sort_key", kind: "enum", T: protobuf_1.proto3.getEnumType(LABEL_SORT_KEY) },
    { no: 101, name: "creation_timestamp_start", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 102, name: "creation_timestamp_end", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 103, name: "modification_timestamp_start", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 104, name: "modification_timestamp_end", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 8, name: "entity_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 10, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 21, name: "code", kind: "scalar", T: 9 /* ScalarType.STRING */ },
]);
/**
 *
 * Describes the base request payload of a count search
 *
 * @generated from message Scailo.LabelsServiceCountReq
 */
class LabelsServiceCountReq extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * If true, then returns only active records. If false, then returns only inactive records
         *
         * @generated from field: Scailo.BOOL_FILTER is_active = 1;
         */
        this.isActive = base_scailo_pb_js_1.BOOL_FILTER.BOOL_FILTER_ANY_UNSPECIFIED;
        /**
         * The minimum timestamp that needs to be considered to filter by creation
         *
         * @generated from field: uint64 creation_timestamp_start = 101;
         */
        this.creationTimestampStart = protobuf_1.protoInt64.zero;
        /**
         * The maximum timestamp that needs to be considered to filter by creation
         *
         * @generated from field: uint64 creation_timestamp_end = 102;
         */
        this.creationTimestampEnd = protobuf_1.protoInt64.zero;
        /**
         * The minimum timestamp that needs to be considered to filter by modification
         *
         * @generated from field: uint64 modification_timestamp_start = 103;
         */
        this.modificationTimestampStart = protobuf_1.protoInt64.zero;
        /**
         * The maximum timestamp that needs to be considered to filter by modification
         *
         * @generated from field: uint64 modification_timestamp_end = 104;
         */
        this.modificationTimestampEnd = protobuf_1.protoInt64.zero;
        /**
         * The entity UUID that is to be used to filter records
         *
         * @generated from field: string entity_uuid = 8;
         */
        this.entityUuid = "";
        /**
         * The name of the label
         *
         * @generated from field: string name = 10;
         */
        this.name = "";
        /**
         * The unique code by which the label is classified
         *
         * @generated from field: string code = 21;
         */
        this.code = "";
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new LabelsServiceCountReq().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new LabelsServiceCountReq().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new LabelsServiceCountReq().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(LabelsServiceCountReq, a, b);
    }
}
exports.LabelsServiceCountReq = LabelsServiceCountReq;
LabelsServiceCountReq.runtime = protobuf_1.proto3;
LabelsServiceCountReq.typeName = "Scailo.LabelsServiceCountReq";
LabelsServiceCountReq.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "is_active", kind: "enum", T: protobuf_1.proto3.getEnumType(base_scailo_pb_js_1.BOOL_FILTER) },
    { no: 101, name: "creation_timestamp_start", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 102, name: "creation_timestamp_end", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 103, name: "modification_timestamp_start", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 104, name: "modification_timestamp_end", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 8, name: "entity_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 10, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 21, name: "code", kind: "scalar", T: 9 /* ScalarType.STRING */ },
]);
/**
 *
 * Describes the request payload for performing a generic search operation on labels
 *
 * @generated from message Scailo.LabelsServiceSearchAllReq
 */
class LabelsServiceSearchAllReq extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * If true, then returns only active records. If false, then returns only inactive records
         *
         * @generated from field: Scailo.BOOL_FILTER is_active = 1;
         */
        this.isActive = base_scailo_pb_js_1.BOOL_FILTER.BOOL_FILTER_ANY_UNSPECIFIED;
        /**
         * The number of records that need to be sent in the response. Returns all records if it is set to -1
         *
         * @generated from field: int64 count = 2;
         */
        this.count = protobuf_1.protoInt64.zero;
        /**
         * The number that need to be offset by before fetching the records
         *
         * @generated from field: uint64 offset = 3;
         */
        this.offset = protobuf_1.protoInt64.zero;
        /**
         * The sort order that is to be used to fetch the pagination response
         *
         * @generated from field: Scailo.SORT_ORDER sort_order = 4;
         */
        this.sortOrder = base_scailo_pb_js_1.SORT_ORDER.ASCENDING_UNSPECIFIED;
        /**
         * The sort key that is to be used to fetch the response
         *
         * @generated from field: Scailo.LABEL_SORT_KEY sort_key = 5;
         */
        this.sortKey = LABEL_SORT_KEY.LABEL_SORT_KEY_ID_UNSPECIFIED;
        /**
         * The entity UUID that is to be used to filter labels
         *
         * @generated from field: string entity_uuid = 6;
         */
        this.entityUuid = "";
        /**
         * Describes the key with which the search operation needs to be performed
         *
         * @generated from field: string search_key = 10;
         */
        this.searchKey = "";
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new LabelsServiceSearchAllReq().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new LabelsServiceSearchAllReq().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new LabelsServiceSearchAllReq().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(LabelsServiceSearchAllReq, a, b);
    }
}
exports.LabelsServiceSearchAllReq = LabelsServiceSearchAllReq;
LabelsServiceSearchAllReq.runtime = protobuf_1.proto3;
LabelsServiceSearchAllReq.typeName = "Scailo.LabelsServiceSearchAllReq";
LabelsServiceSearchAllReq.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "is_active", kind: "enum", T: protobuf_1.proto3.getEnumType(base_scailo_pb_js_1.BOOL_FILTER) },
    { no: 2, name: "count", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "offset", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 4, name: "sort_order", kind: "enum", T: protobuf_1.proto3.getEnumType(base_scailo_pb_js_1.SORT_ORDER) },
    { no: 5, name: "sort_key", kind: "enum", T: protobuf_1.proto3.getEnumType(LABEL_SORT_KEY) },
    { no: 6, name: "entity_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 10, name: "search_key", kind: "scalar", T: 9 /* ScalarType.STRING */ },
]);
