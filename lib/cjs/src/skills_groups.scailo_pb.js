"use strict";
// @generated by protoc-gen-es v1.5.1 with parameter "target=ts"
// @generated from file skills_groups.scailo.proto (package Scailo, syntax proto3)
/* eslint-disable */
// @ts-nocheck
Object.defineProperty(exports, "__esModule", { value: true });
exports.SkillsGroupsServiceSearchAllReq = exports.SkillsGroupsServiceCountReq = exports.SkillsGroupsServiceFilterReq = exports.SkillsGroupsServicePaginationResponse = exports.SkillsGroupsServicePaginationReq = exports.SkillGroupItemHistoryRequest = exports.SkillsGroupsItemsList = exports.SkillsGroupsList = exports.SkillGroupItem = exports.SkillsGroupsServiceItemUpdateRequest = exports.SkillsGroupsServiceItemCreateRequest = exports.SkillGroup = exports.SkillsGroupsServiceUpdateRequest = exports.SkillsGroupsServiceCreateRequest = exports.SKILL_GROUP_SORT_KEY = exports.SKILL_GROUP_ITEM_INPUT_VALUE_TYPE = void 0;
const protobuf_1 = require("@bufbuild/protobuf");
const forms_fields_data_scailo_pb_js_1 = require("./forms_fields_data.scailo_pb.js");
const base_scailo_pb_js_1 = require("./base.scailo_pb.js");
/**
 *
 * Describes the available input types for a skill group item (with possible vbalues being number-absolute, number-percentage, text-input, text-dropdown)
 *
 * @generated from enum Scailo.SKILL_GROUP_ITEM_INPUT_VALUE_TYPE
 */
var SKILL_GROUP_ITEM_INPUT_VALUE_TYPE;
(function (SKILL_GROUP_ITEM_INPUT_VALUE_TYPE) {
    /**
     * Input value type is an absolute number (with min and max defined in number_min_value and number_max_value)
     *
     * @generated from enum value: SKILL_GROUP_ITEM_INPUT_VALUE_TYPE_NUMBER_ABSOLUTE_UNSPECIFIED = 0;
     */
    SKILL_GROUP_ITEM_INPUT_VALUE_TYPE[SKILL_GROUP_ITEM_INPUT_VALUE_TYPE["SKILL_GROUP_ITEM_INPUT_VALUE_TYPE_NUMBER_ABSOLUTE_UNSPECIFIED"] = 0] = "SKILL_GROUP_ITEM_INPUT_VALUE_TYPE_NUMBER_ABSOLUTE_UNSPECIFIED";
    /**
     * Input value type is a percentage
     *
     * @generated from enum value: SKILL_GROUP_ITEM_INPUT_VALUE_TYPE_NUMBER_PERCENTAGE = 1;
     */
    SKILL_GROUP_ITEM_INPUT_VALUE_TYPE[SKILL_GROUP_ITEM_INPUT_VALUE_TYPE["SKILL_GROUP_ITEM_INPUT_VALUE_TYPE_NUMBER_PERCENTAGE"] = 1] = "SKILL_GROUP_ITEM_INPUT_VALUE_TYPE_NUMBER_PERCENTAGE";
    /**
     * Input value type is a textual input
     *
     * @generated from enum value: SKILL_GROUP_ITEM_INPUT_VALUE_TYPE_TEXT_INPUT = 2;
     */
    SKILL_GROUP_ITEM_INPUT_VALUE_TYPE[SKILL_GROUP_ITEM_INPUT_VALUE_TYPE["SKILL_GROUP_ITEM_INPUT_VALUE_TYPE_TEXT_INPUT"] = 2] = "SKILL_GROUP_ITEM_INPUT_VALUE_TYPE_TEXT_INPUT";
    /**
     * Input value type is a dropdown (from the values as defined in text_values)
     *
     * @generated from enum value: SKILL_GROUP_ITEM_INPUT_VALUE_TYPE_TEXT_DROPDOWN = 3;
     */
    SKILL_GROUP_ITEM_INPUT_VALUE_TYPE[SKILL_GROUP_ITEM_INPUT_VALUE_TYPE["SKILL_GROUP_ITEM_INPUT_VALUE_TYPE_TEXT_DROPDOWN"] = 3] = "SKILL_GROUP_ITEM_INPUT_VALUE_TYPE_TEXT_DROPDOWN";
})(SKILL_GROUP_ITEM_INPUT_VALUE_TYPE || (exports.SKILL_GROUP_ITEM_INPUT_VALUE_TYPE = SKILL_GROUP_ITEM_INPUT_VALUE_TYPE = {}));
// Retrieve enum metadata with: proto3.getEnumType(SKILL_GROUP_ITEM_INPUT_VALUE_TYPE)
protobuf_1.proto3.util.setEnumType(SKILL_GROUP_ITEM_INPUT_VALUE_TYPE, "Scailo.SKILL_GROUP_ITEM_INPUT_VALUE_TYPE", [
    { no: 0, name: "SKILL_GROUP_ITEM_INPUT_VALUE_TYPE_NUMBER_ABSOLUTE_UNSPECIFIED" },
    { no: 1, name: "SKILL_GROUP_ITEM_INPUT_VALUE_TYPE_NUMBER_PERCENTAGE" },
    { no: 2, name: "SKILL_GROUP_ITEM_INPUT_VALUE_TYPE_TEXT_INPUT" },
    { no: 3, name: "SKILL_GROUP_ITEM_INPUT_VALUE_TYPE_TEXT_DROPDOWN" },
]);
/**
 *
 * Describes the available sort keys
 *
 * @generated from enum Scailo.SKILL_GROUP_SORT_KEY
 */
var SKILL_GROUP_SORT_KEY;
(function (SKILL_GROUP_SORT_KEY) {
    /**
     * Fetch ordered results by id
     *
     * @generated from enum value: SKILL_GROUP_SORT_KEY_ID_UNSPECIFIED = 0;
     */
    SKILL_GROUP_SORT_KEY[SKILL_GROUP_SORT_KEY["SKILL_GROUP_SORT_KEY_ID_UNSPECIFIED"] = 0] = "SKILL_GROUP_SORT_KEY_ID_UNSPECIFIED";
    /**
     * Fetch ordered results by the creation timestamp
     *
     * @generated from enum value: SKILL_GROUP_SORT_KEY_CREATED_AT = 1;
     */
    SKILL_GROUP_SORT_KEY[SKILL_GROUP_SORT_KEY["SKILL_GROUP_SORT_KEY_CREATED_AT"] = 1] = "SKILL_GROUP_SORT_KEY_CREATED_AT";
    /**
     * Fetch ordered results by the modified timestamp
     *
     * @generated from enum value: SKILL_GROUP_SORT_KEY_MODIFIED_AT = 2;
     */
    SKILL_GROUP_SORT_KEY[SKILL_GROUP_SORT_KEY["SKILL_GROUP_SORT_KEY_MODIFIED_AT"] = 2] = "SKILL_GROUP_SORT_KEY_MODIFIED_AT";
    /**
     * Fetch ordered results by the approved on timestamp
     *
     * @generated from enum value: SKILL_GROUP_SORT_KEY_APPROVED_ON = 3;
     */
    SKILL_GROUP_SORT_KEY[SKILL_GROUP_SORT_KEY["SKILL_GROUP_SORT_KEY_APPROVED_ON"] = 3] = "SKILL_GROUP_SORT_KEY_APPROVED_ON";
    /**
     * Fetch ordered results by the approved by field
     *
     * @generated from enum value: SKILL_GROUP_SORT_KEY_APPROVED_BY = 4;
     */
    SKILL_GROUP_SORT_KEY[SKILL_GROUP_SORT_KEY["SKILL_GROUP_SORT_KEY_APPROVED_BY"] = 4] = "SKILL_GROUP_SORT_KEY_APPROVED_BY";
    /**
     * Fetch ordered results by the approver's role ID
     *
     * @generated from enum value: SKILL_GROUP_SORT_KEY_APPROVER_ROLE_ID = 5;
     */
    SKILL_GROUP_SORT_KEY[SKILL_GROUP_SORT_KEY["SKILL_GROUP_SORT_KEY_APPROVER_ROLE_ID"] = 5] = "SKILL_GROUP_SORT_KEY_APPROVER_ROLE_ID";
    /**
     * Fetch ordered results by the approver's completed on timestamp
     *
     * @generated from enum value: SKILL_GROUP_SORT_KEY_COMPLETED_ON = 6;
     */
    SKILL_GROUP_SORT_KEY[SKILL_GROUP_SORT_KEY["SKILL_GROUP_SORT_KEY_COMPLETED_ON"] = 6] = "SKILL_GROUP_SORT_KEY_COMPLETED_ON";
    /**
     * Fetch ordered results by the name
     *
     * @generated from enum value: SKILL_GROUP_SORT_KEY_NAME = 10;
     */
    SKILL_GROUP_SORT_KEY[SKILL_GROUP_SORT_KEY["SKILL_GROUP_SORT_KEY_NAME"] = 10] = "SKILL_GROUP_SORT_KEY_NAME";
    /**
     * Fetch ordered results by the role ID
     *
     * @generated from enum value: SKILL_GROUP_SORT_KEY_ROLE_ID = 11;
     */
    SKILL_GROUP_SORT_KEY[SKILL_GROUP_SORT_KEY["SKILL_GROUP_SORT_KEY_ROLE_ID"] = 11] = "SKILL_GROUP_SORT_KEY_ROLE_ID";
})(SKILL_GROUP_SORT_KEY || (exports.SKILL_GROUP_SORT_KEY = SKILL_GROUP_SORT_KEY = {}));
// Retrieve enum metadata with: proto3.getEnumType(SKILL_GROUP_SORT_KEY)
protobuf_1.proto3.util.setEnumType(SKILL_GROUP_SORT_KEY, "Scailo.SKILL_GROUP_SORT_KEY", [
    { no: 0, name: "SKILL_GROUP_SORT_KEY_ID_UNSPECIFIED" },
    { no: 1, name: "SKILL_GROUP_SORT_KEY_CREATED_AT" },
    { no: 2, name: "SKILL_GROUP_SORT_KEY_MODIFIED_AT" },
    { no: 3, name: "SKILL_GROUP_SORT_KEY_APPROVED_ON" },
    { no: 4, name: "SKILL_GROUP_SORT_KEY_APPROVED_BY" },
    { no: 5, name: "SKILL_GROUP_SORT_KEY_APPROVER_ROLE_ID" },
    { no: 6, name: "SKILL_GROUP_SORT_KEY_COMPLETED_ON" },
    { no: 10, name: "SKILL_GROUP_SORT_KEY_NAME" },
    { no: 11, name: "SKILL_GROUP_SORT_KEY_ROLE_ID" },
]);
/**
 *
 * Describes the parameters necessary to create a record
 *
 * @generated from message Scailo.SkillsGroupsServiceCreateRequest
 */
class SkillsGroupsServiceCreateRequest extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * Stores a globally unique entity UUID. This will be set at the organization level
         *
         * @generated from field: string entity_uuid = 1;
         */
        this.entityUuid = "";
        /**
         * Stores any comment that the user might add during this operation
         *
         * @generated from field: string user_comment = 2;
         */
        this.userComment = "";
        /**
         * The associated vault folder ID
         *
         * @generated from field: uint64 vault_folder_id = 9;
         */
        this.vaultFolderId = protobuf_1.protoInt64.zero;
        /**
         * The name of the skill group
         *
         * @generated from field: string name = 10;
         */
        this.name = "";
        /**
         * The skill group code
         *
         * @generated from field: string code = 11;
         */
        this.code = "";
        /**
         * The ID of the role that this skill group belongs to
         *
         * @generated from field: uint64 role_id = 12;
         */
        this.roleId = protobuf_1.protoInt64.zero;
        /**
         * The description of the skill group
         *
         * @generated from field: string description = 13;
         */
        this.description = "";
        /**
         * The list of dynamic forms
         *
         * @generated from field: repeated Scailo.FormFieldDatumCreateRequest form_data = 30;
         */
        this.formData = [];
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new SkillsGroupsServiceCreateRequest().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new SkillsGroupsServiceCreateRequest().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new SkillsGroupsServiceCreateRequest().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(SkillsGroupsServiceCreateRequest, a, b);
    }
}
exports.SkillsGroupsServiceCreateRequest = SkillsGroupsServiceCreateRequest;
SkillsGroupsServiceCreateRequest.runtime = protobuf_1.proto3;
SkillsGroupsServiceCreateRequest.typeName = "Scailo.SkillsGroupsServiceCreateRequest";
SkillsGroupsServiceCreateRequest.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "entity_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "user_comment", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 9, name: "vault_folder_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 10, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 11, name: "code", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 12, name: "role_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 13, name: "description", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 30, name: "form_data", kind: "message", T: forms_fields_data_scailo_pb_js_1.FormFieldDatumCreateRequest, repeated: true },
]);
/**
 *
 * Describes the parameters necessary to update a record
 *
 * @generated from message Scailo.SkillsGroupsServiceUpdateRequest
 */
class SkillsGroupsServiceUpdateRequest extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * Stores any comment that the user might add during this operation
         *
         * @generated from field: string user_comment = 1;
         */
        this.userComment = "";
        /**
         * The ID of the record that needs to be updated
         *
         * @generated from field: uint64 id = 2;
         */
        this.id = protobuf_1.protoInt64.zero;
        /**
         * Optional boolean value that stores if a notification needs to be sent to users about the update to the record. This is useful when a subsequent operation needs to be performed immediately (such as send to verification after updating the revision)
         *
         * @generated from field: bool notify_users = 3;
         */
        this.notifyUsers = false;
        /**
         * The associated vault folder ID
         *
         * @generated from field: uint64 vault_folder_id = 9;
         */
        this.vaultFolderId = protobuf_1.protoInt64.zero;
        /**
         * The name of the skill group
         *
         * @generated from field: string name = 10;
         */
        this.name = "";
        /**
         * The skill group code
         *
         * @generated from field: string code = 11;
         */
        this.code = "";
        /**
         * The ID of the role that this skill group belongs to
         *
         * @generated from field: uint64 role_id = 12;
         */
        this.roleId = protobuf_1.protoInt64.zero;
        /**
         * The description of the skill group
         *
         * @generated from field: string description = 13;
         */
        this.description = "";
        /**
         * The list of dynamic forms
         *
         * @generated from field: repeated Scailo.FormFieldDatumCreateRequest form_data = 30;
         */
        this.formData = [];
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new SkillsGroupsServiceUpdateRequest().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new SkillsGroupsServiceUpdateRequest().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new SkillsGroupsServiceUpdateRequest().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(SkillsGroupsServiceUpdateRequest, a, b);
    }
}
exports.SkillsGroupsServiceUpdateRequest = SkillsGroupsServiceUpdateRequest;
SkillsGroupsServiceUpdateRequest.runtime = protobuf_1.proto3;
SkillsGroupsServiceUpdateRequest.typeName = "Scailo.SkillsGroupsServiceUpdateRequest";
SkillsGroupsServiceUpdateRequest.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "user_comment", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 3, name: "notify_users", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 9, name: "vault_folder_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 10, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 11, name: "code", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 12, name: "role_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 13, name: "description", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 30, name: "form_data", kind: "message", T: forms_fields_data_scailo_pb_js_1.FormFieldDatumCreateRequest, repeated: true },
]);
/**
 *
 * Describes the parameters that are part of a standard response
 *
 * @generated from message Scailo.SkillGroup
 */
class SkillGroup extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * Stores a globally unique entity UUID. This will be set at the organization level
         *
         * @generated from field: string entity_uuid = 1;
         */
        this.entityUuid = "";
        /**
         * The status of this skill group
         *
         * @generated from field: Scailo.STANDARD_LIFECYCLE_STATUS status = 4;
         */
        this.status = base_scailo_pb_js_1.STANDARD_LIFECYCLE_STATUS.ANY_UNSPECIFIED;
        /**
         * Stores the logs of every operation performed on this skill group
         *
         * @generated from field: repeated Scailo.LogbookLogConciseSLC logs = 5;
         */
        this.logs = [];
        /**
         * The timestamp of when this skill group was marked as completed
         *
         * @generated from field: uint64 completed_on = 6;
         */
        this.completedOn = protobuf_1.protoInt64.zero;
        /**
         * The associated vault folder ID
         *
         * @generated from field: uint64 vault_folder_id = 9;
         */
        this.vaultFolderId = protobuf_1.protoInt64.zero;
        /**
         * The name of the skill group
         *
         * @generated from field: string name = 10;
         */
        this.name = "";
        /**
         * The skill group code
         *
         * @generated from field: string code = 11;
         */
        this.code = "";
        /**
         * The ID of the role that this skill group belongs to
         *
         * @generated from field: uint64 role_id = 12;
         */
        this.roleId = protobuf_1.protoInt64.zero;
        /**
         * The description of the skill group
         *
         * @generated from field: string description = 13;
         */
        this.description = "";
        /**
         * The list of associated skill group params
         *
         * @generated from field: repeated Scailo.SkillGroupItem list = 20;
         */
        this.list = [];
        /**
         * The list of dynamic forms
         *
         * @generated from field: repeated Scailo.FormFieldDatum form_data = 30;
         */
        this.formData = [];
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new SkillGroup().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new SkillGroup().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new SkillGroup().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(SkillGroup, a, b);
    }
}
exports.SkillGroup = SkillGroup;
SkillGroup.runtime = protobuf_1.proto3;
SkillGroup.typeName = "Scailo.SkillGroup";
SkillGroup.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "entity_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "metadata", kind: "message", T: base_scailo_pb_js_1.EmployeeMetadata },
    { no: 3, name: "approval_metadata", kind: "message", T: base_scailo_pb_js_1.ApprovalMetadata },
    { no: 4, name: "status", kind: "enum", T: protobuf_1.proto3.getEnumType(base_scailo_pb_js_1.STANDARD_LIFECYCLE_STATUS) },
    { no: 5, name: "logs", kind: "message", T: base_scailo_pb_js_1.LogbookLogConciseSLC, repeated: true },
    { no: 6, name: "completed_on", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 9, name: "vault_folder_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 10, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 11, name: "code", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 12, name: "role_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 13, name: "description", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 20, name: "list", kind: "message", T: SkillGroupItem, repeated: true },
    { no: 30, name: "form_data", kind: "message", T: forms_fields_data_scailo_pb_js_1.FormFieldDatum, repeated: true },
]);
/**
 *
 * Describes the parameters required to add a param to a skill group
 *
 * @generated from message Scailo.SkillsGroupsServiceItemCreateRequest
 */
class SkillsGroupsServiceItemCreateRequest extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * Stores any comment that the user might add during this operation
         *
         * @generated from field: string user_comment = 1;
         */
        this.userComment = "";
        /**
         * Stores the ID of the skill group
         *
         * @generated from field: uint64 skill_group_id = 10;
         */
        this.skillGroupId = protobuf_1.protoInt64.zero;
        /**
         * The ID of the skill param that is a part of the skill group
         *
         * @generated from field: uint64 skill_param_id = 11;
         */
        this.skillParamId = protobuf_1.protoInt64.zero;
        /**
         * The input value type of the item
         *
         * @generated from field: Scailo.SKILL_GROUP_ITEM_INPUT_VALUE_TYPE input_value_type = 12;
         */
        this.inputValueType = SKILL_GROUP_ITEM_INPUT_VALUE_TYPE.SKILL_GROUP_ITEM_INPUT_VALUE_TYPE_NUMBER_ABSOLUTE_UNSPECIFIED;
        /**
         * The minimum value (in cents) in case the input value type is number-absolute or number-percentage
         *
         * @generated from field: uint64 number_min_value = 13;
         */
        this.numberMinValue = protobuf_1.protoInt64.zero;
        /**
         * The maximum value (in cents) in case the input value type is number-absolute or number-percentage
         *
         * @generated from field: uint64 number_max_value = 14;
         */
        this.numberMaxValue = protobuf_1.protoInt64.zero;
        /**
         * The possible values from which a user can choose in case the input type is text-dropdown
         *
         * @generated from field: repeated string text_values = 15;
         */
        this.textValues = [];
        /**
         * An optional description
         *
         * @generated from field: string description = 20;
         */
        this.description = "";
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new SkillsGroupsServiceItemCreateRequest().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new SkillsGroupsServiceItemCreateRequest().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new SkillsGroupsServiceItemCreateRequest().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(SkillsGroupsServiceItemCreateRequest, a, b);
    }
}
exports.SkillsGroupsServiceItemCreateRequest = SkillsGroupsServiceItemCreateRequest;
SkillsGroupsServiceItemCreateRequest.runtime = protobuf_1.proto3;
SkillsGroupsServiceItemCreateRequest.typeName = "Scailo.SkillsGroupsServiceItemCreateRequest";
SkillsGroupsServiceItemCreateRequest.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "user_comment", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 10, name: "skill_group_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 11, name: "skill_param_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 12, name: "input_value_type", kind: "enum", T: protobuf_1.proto3.getEnumType(SKILL_GROUP_ITEM_INPUT_VALUE_TYPE) },
    { no: 13, name: "number_min_value", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 14, name: "number_max_value", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 15, name: "text_values", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 20, name: "description", kind: "scalar", T: 9 /* ScalarType.STRING */ },
]);
/**
 *
 * Describes the parameters required to update a param in a skill group
 *
 * @generated from message Scailo.SkillsGroupsServiceItemUpdateRequest
 */
class SkillsGroupsServiceItemUpdateRequest extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * Stores any comment that the user might add during this operation
         *
         * @generated from field: string user_comment = 1;
         */
        this.userComment = "";
        /**
         * The ID of the record
         *
         * @generated from field: uint64 id = 2;
         */
        this.id = protobuf_1.protoInt64.zero;
        /**
         * The input value type of the item
         *
         * @generated from field: Scailo.SKILL_GROUP_ITEM_INPUT_VALUE_TYPE input_value_type = 12;
         */
        this.inputValueType = SKILL_GROUP_ITEM_INPUT_VALUE_TYPE.SKILL_GROUP_ITEM_INPUT_VALUE_TYPE_NUMBER_ABSOLUTE_UNSPECIFIED;
        /**
         * The minimum value (in cents) in case the input value type is number-absolute or number-percentage
         *
         * @generated from field: uint64 number_min_value = 13;
         */
        this.numberMinValue = protobuf_1.protoInt64.zero;
        /**
         * The maximum value (in cents) in case the input value type is number-absolute or number-percentage
         *
         * @generated from field: uint64 number_max_value = 14;
         */
        this.numberMaxValue = protobuf_1.protoInt64.zero;
        /**
         * The possible values from which a user can choose in case the input type is text-dropdown
         *
         * @generated from field: repeated string text_values = 15;
         */
        this.textValues = [];
        /**
         * An optional description
         *
         * @generated from field: string description = 20;
         */
        this.description = "";
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new SkillsGroupsServiceItemUpdateRequest().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new SkillsGroupsServiceItemUpdateRequest().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new SkillsGroupsServiceItemUpdateRequest().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(SkillsGroupsServiceItemUpdateRequest, a, b);
    }
}
exports.SkillsGroupsServiceItemUpdateRequest = SkillsGroupsServiceItemUpdateRequest;
SkillsGroupsServiceItemUpdateRequest.runtime = protobuf_1.proto3;
SkillsGroupsServiceItemUpdateRequest.typeName = "Scailo.SkillsGroupsServiceItemUpdateRequest";
SkillsGroupsServiceItemUpdateRequest.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "user_comment", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 12, name: "input_value_type", kind: "enum", T: protobuf_1.proto3.getEnumType(SKILL_GROUP_ITEM_INPUT_VALUE_TYPE) },
    { no: 13, name: "number_min_value", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 14, name: "number_max_value", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 15, name: "text_values", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 20, name: "description", kind: "scalar", T: 9 /* ScalarType.STRING */ },
]);
/**
 *
 * Describes the parameters that constitute a param associated to a skill group
 *
 * @generated from message Scailo.SkillGroupItem
 */
class SkillGroupItem extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * Stores a globally unique entity UUID. This will be set at the organization level
         *
         * @generated from field: string entity_uuid = 1;
         */
        this.entityUuid = "";
        /**
         * Denotes if this record requires approval (or has been approved)
         *
         * @generated from field: bool need_approval = 4;
         */
        this.needApproval = false;
        /**
         * Stores any comment that the user might have added during an operation
         *
         * @generated from field: string user_comment = 5;
         */
        this.userComment = "";
        /**
         * Stores the ID of the skill group
         *
         * @generated from field: uint64 skill_group_id = 10;
         */
        this.skillGroupId = protobuf_1.protoInt64.zero;
        /**
         * The ID of the skill param that is a part of the skill group
         *
         * @generated from field: uint64 skill_param_id = 11;
         */
        this.skillParamId = protobuf_1.protoInt64.zero;
        /**
         * The input value type of the item
         *
         * @generated from field: Scailo.SKILL_GROUP_ITEM_INPUT_VALUE_TYPE input_value_type = 12;
         */
        this.inputValueType = SKILL_GROUP_ITEM_INPUT_VALUE_TYPE.SKILL_GROUP_ITEM_INPUT_VALUE_TYPE_NUMBER_ABSOLUTE_UNSPECIFIED;
        /**
         * The minimum value (in cents) in case the input value type is number-absolute or number-percentage
         *
         * @generated from field: uint64 number_min_value = 13;
         */
        this.numberMinValue = protobuf_1.protoInt64.zero;
        /**
         * The maximum value (in cents) in case the input value type is number-absolute or number-percentage
         *
         * @generated from field: uint64 number_max_value = 14;
         */
        this.numberMaxValue = protobuf_1.protoInt64.zero;
        /**
         * The possible values from which a user can choose in case the input type is text-dropdown
         *
         * @generated from field: repeated string text_values = 15;
         */
        this.textValues = [];
        /**
         * An optional description
         *
         * @generated from field: string description = 20;
         */
        this.description = "";
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new SkillGroupItem().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new SkillGroupItem().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new SkillGroupItem().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(SkillGroupItem, a, b);
    }
}
exports.SkillGroupItem = SkillGroupItem;
SkillGroupItem.runtime = protobuf_1.proto3;
SkillGroupItem.typeName = "Scailo.SkillGroupItem";
SkillGroupItem.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "entity_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "metadata", kind: "message", T: base_scailo_pb_js_1.EmployeeMetadata },
    { no: 3, name: "approval_metadata", kind: "message", T: base_scailo_pb_js_1.ApprovalMetadata },
    { no: 4, name: "need_approval", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 5, name: "user_comment", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 10, name: "skill_group_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 11, name: "skill_param_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 12, name: "input_value_type", kind: "enum", T: protobuf_1.proto3.getEnumType(SKILL_GROUP_ITEM_INPUT_VALUE_TYPE) },
    { no: 13, name: "number_min_value", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 14, name: "number_max_value", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 15, name: "text_values", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 20, name: "description", kind: "scalar", T: 9 /* ScalarType.STRING */ },
]);
/**
 *
 * Describes the message consisting of the list of skills groups
 *
 * @generated from message Scailo.SkillsGroupsList
 */
class SkillsGroupsList extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * List of records
         *
         * @generated from field: repeated Scailo.SkillGroup list = 1;
         */
        this.list = [];
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new SkillsGroupsList().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new SkillsGroupsList().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new SkillsGroupsList().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(SkillsGroupsList, a, b);
    }
}
exports.SkillsGroupsList = SkillsGroupsList;
SkillsGroupsList.runtime = protobuf_1.proto3;
SkillsGroupsList.typeName = "Scailo.SkillsGroupsList";
SkillsGroupsList.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "list", kind: "message", T: SkillGroup, repeated: true },
]);
/**
 *
 * Describes the message consisting of the list of skill group params
 *
 * @generated from message Scailo.SkillsGroupsItemsList
 */
class SkillsGroupsItemsList extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * List of records
         *
         * @generated from field: repeated Scailo.SkillGroupItem list = 1;
         */
        this.list = [];
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new SkillsGroupsItemsList().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new SkillsGroupsItemsList().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new SkillsGroupsItemsList().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(SkillsGroupsItemsList, a, b);
    }
}
exports.SkillsGroupsItemsList = SkillsGroupsItemsList;
SkillsGroupsItemsList.runtime = protobuf_1.proto3;
SkillsGroupsItemsList.typeName = "Scailo.SkillsGroupsItemsList";
SkillsGroupsItemsList.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "list", kind: "message", T: SkillGroupItem, repeated: true },
]);
/**
 *
 * Describes the parameters that are required to retrieve the history of the record
 *
 * @generated from message Scailo.SkillGroupItemHistoryRequest
 */
class SkillGroupItemHistoryRequest extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * Stores the ID of the skill group
         *
         * @generated from field: uint64 skill_group_id = 10;
         */
        this.skillGroupId = protobuf_1.protoInt64.zero;
        /**
         * The ID of the skill param that is a part of the skill group
         *
         * @generated from field: uint64 skill_param_id = 11;
         */
        this.skillParamId = protobuf_1.protoInt64.zero;
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new SkillGroupItemHistoryRequest().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new SkillGroupItemHistoryRequest().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new SkillGroupItemHistoryRequest().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(SkillGroupItemHistoryRequest, a, b);
    }
}
exports.SkillGroupItemHistoryRequest = SkillGroupItemHistoryRequest;
SkillGroupItemHistoryRequest.runtime = protobuf_1.proto3;
SkillGroupItemHistoryRequest.typeName = "Scailo.SkillGroupItemHistoryRequest";
SkillGroupItemHistoryRequest.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 10, name: "skill_group_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 11, name: "skill_param_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
]);
/**
 *
 * Describes a pagination request to retrieve records
 *
 * @generated from message Scailo.SkillsGroupsServicePaginationReq
 */
class SkillsGroupsServicePaginationReq extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * If true, then returns only active records. If false, then returns only inactive records
         *
         * @generated from field: Scailo.BOOL_FILTER is_active = 1;
         */
        this.isActive = base_scailo_pb_js_1.BOOL_FILTER.BOOL_FILTER_ANY_UNSPECIFIED;
        /**
         * The number of records that need to be sent in the response
         *
         * @generated from field: int64 count = 2;
         */
        this.count = protobuf_1.protoInt64.zero;
        /**
         * The number that need to be offset by before fetching the records
         *
         * @generated from field: uint64 offset = 3;
         */
        this.offset = protobuf_1.protoInt64.zero;
        /**
         * The sort order that is to be used to fetch the pagination response
         *
         * @generated from field: Scailo.SORT_ORDER sort_order = 4;
         */
        this.sortOrder = base_scailo_pb_js_1.SORT_ORDER.ASCENDING_UNSPECIFIED;
        /**
         * The sort key that is to be used to fetch the pagination response
         *
         * @generated from field: Scailo.SKILL_GROUP_SORT_KEY sort_key = 5;
         */
        this.sortKey = SKILL_GROUP_SORT_KEY.SKILL_GROUP_SORT_KEY_ID_UNSPECIFIED;
        /**
         * The status of this skill group
         *
         * @generated from field: Scailo.STANDARD_LIFECYCLE_STATUS status = 6;
         */
        this.status = base_scailo_pb_js_1.STANDARD_LIFECYCLE_STATUS.ANY_UNSPECIFIED;
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new SkillsGroupsServicePaginationReq().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new SkillsGroupsServicePaginationReq().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new SkillsGroupsServicePaginationReq().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(SkillsGroupsServicePaginationReq, a, b);
    }
}
exports.SkillsGroupsServicePaginationReq = SkillsGroupsServicePaginationReq;
SkillsGroupsServicePaginationReq.runtime = protobuf_1.proto3;
SkillsGroupsServicePaginationReq.typeName = "Scailo.SkillsGroupsServicePaginationReq";
SkillsGroupsServicePaginationReq.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "is_active", kind: "enum", T: protobuf_1.proto3.getEnumType(base_scailo_pb_js_1.BOOL_FILTER) },
    { no: 2, name: "count", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "offset", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 4, name: "sort_order", kind: "enum", T: protobuf_1.proto3.getEnumType(base_scailo_pb_js_1.SORT_ORDER) },
    { no: 5, name: "sort_key", kind: "enum", T: protobuf_1.proto3.getEnumType(SKILL_GROUP_SORT_KEY) },
    { no: 6, name: "status", kind: "enum", T: protobuf_1.proto3.getEnumType(base_scailo_pb_js_1.STANDARD_LIFECYCLE_STATUS) },
]);
/**
 *
 * Describes the response to a pagination request
 *
 * @generated from message Scailo.SkillsGroupsServicePaginationResponse
 */
class SkillsGroupsServicePaginationResponse extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * The number of records in this payload
         *
         * @generated from field: uint64 count = 1;
         */
        this.count = protobuf_1.protoInt64.zero;
        /**
         * The number that has been offset before fetching the records. This is the same value that has been sent as part of the pagination request
         *
         * @generated from field: uint64 offset = 2;
         */
        this.offset = protobuf_1.protoInt64.zero;
        /**
         * The total number of records that are available
         *
         * @generated from field: uint64 total = 3;
         */
        this.total = protobuf_1.protoInt64.zero;
        /**
         * The list of records
         *
         * @generated from field: repeated Scailo.SkillGroup payload = 4;
         */
        this.payload = [];
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new SkillsGroupsServicePaginationResponse().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new SkillsGroupsServicePaginationResponse().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new SkillsGroupsServicePaginationResponse().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(SkillsGroupsServicePaginationResponse, a, b);
    }
}
exports.SkillsGroupsServicePaginationResponse = SkillsGroupsServicePaginationResponse;
SkillsGroupsServicePaginationResponse.runtime = protobuf_1.proto3;
SkillsGroupsServicePaginationResponse.typeName = "Scailo.SkillsGroupsServicePaginationResponse";
SkillsGroupsServicePaginationResponse.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "count", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 2, name: "offset", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 3, name: "total", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 4, name: "payload", kind: "message", T: SkillGroup, repeated: true },
]);
/**
 *
 * Describes the base request payload of a filter search
 *
 * @generated from message Scailo.SkillsGroupsServiceFilterReq
 */
class SkillsGroupsServiceFilterReq extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * If true, then returns only active records. If false, then returns only inactive records
         *
         * @generated from field: Scailo.BOOL_FILTER is_active = 1;
         */
        this.isActive = base_scailo_pb_js_1.BOOL_FILTER.BOOL_FILTER_ANY_UNSPECIFIED;
        /**
         * The number of records that need to be sent in the response. Returns all records if it is set to -1
         *
         * @generated from field: int64 count = 2;
         */
        this.count = protobuf_1.protoInt64.zero;
        /**
         * The number that need to be offset by before fetching the records
         *
         * @generated from field: uint64 offset = 3;
         */
        this.offset = protobuf_1.protoInt64.zero;
        /**
         * The sort order that is to be used to fetch the pagination response
         *
         * @generated from field: Scailo.SORT_ORDER sort_order = 4;
         */
        this.sortOrder = base_scailo_pb_js_1.SORT_ORDER.ASCENDING_UNSPECIFIED;
        /**
         * The sort key that is to be used to fetch the pagination response
         *
         * @generated from field: Scailo.SKILL_GROUP_SORT_KEY sort_key = 5;
         */
        this.sortKey = SKILL_GROUP_SORT_KEY.SKILL_GROUP_SORT_KEY_ID_UNSPECIFIED;
        /**
         * The minimum timestamp that needs to be considered to filter by creation
         *
         * @generated from field: uint64 creation_timestamp_start = 101;
         */
        this.creationTimestampStart = protobuf_1.protoInt64.zero;
        /**
         * The maximum timestamp that needs to be considered to filter by creation
         *
         * @generated from field: uint64 creation_timestamp_end = 102;
         */
        this.creationTimestampEnd = protobuf_1.protoInt64.zero;
        /**
         * The minimum timestamp that needs to be considered to filter by modification
         *
         * @generated from field: uint64 modification_timestamp_start = 103;
         */
        this.modificationTimestampStart = protobuf_1.protoInt64.zero;
        /**
         * The maximum timestamp that needs to be considered to filter by modification
         *
         * @generated from field: uint64 modification_timestamp_end = 104;
         */
        this.modificationTimestampEnd = protobuf_1.protoInt64.zero;
        /**
         * The entity UUID that is to be used to filter records
         *
         * @generated from field: string entity_uuid = 8;
         */
        this.entityUuid = "";
        /**
         * The status of this skill group
         *
         * @generated from field: Scailo.STANDARD_LIFECYCLE_STATUS status = 10;
         */
        this.status = base_scailo_pb_js_1.STANDARD_LIFECYCLE_STATUS.ANY_UNSPECIFIED;
        /**
         * The start range of approved timestamp
         *
         * @generated from field: uint64 approved_on_start = 11;
         */
        this.approvedOnStart = protobuf_1.protoInt64.zero;
        /**
         * The end range of approved timestamp
         *
         * @generated from field: uint64 approved_on_end = 12;
         */
        this.approvedOnEnd = protobuf_1.protoInt64.zero;
        /**
         * The ID of the approver
         *
         * @generated from field: uint64 approved_by_user_id = 13;
         */
        this.approvedByUserId = protobuf_1.protoInt64.zero;
        /**
         * The role ID of the approver
         *
         * @generated from field: uint64 approver_role_id = 14;
         */
        this.approverRoleId = protobuf_1.protoInt64.zero;
        /**
         * The start range of completed timestamp
         *
         * @generated from field: uint64 completed_on_start = 15;
         */
        this.completedOnStart = protobuf_1.protoInt64.zero;
        /**
         * The end range of completed timestamp
         *
         * @generated from field: uint64 completed_on_end = 16;
         */
        this.completedOnEnd = protobuf_1.protoInt64.zero;
        /**
         * The name of the skill group
         *
         * @generated from field: string name = 20;
         */
        this.name = "";
        /**
         * The skill group code
         *
         * @generated from field: string code = 21;
         */
        this.code = "";
        /**
         * The ID of the role that this skill group belongs to
         *
         * @generated from field: uint64 role_id = 22;
         */
        this.roleId = protobuf_1.protoInt64.zero;
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new SkillsGroupsServiceFilterReq().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new SkillsGroupsServiceFilterReq().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new SkillsGroupsServiceFilterReq().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(SkillsGroupsServiceFilterReq, a, b);
    }
}
exports.SkillsGroupsServiceFilterReq = SkillsGroupsServiceFilterReq;
SkillsGroupsServiceFilterReq.runtime = protobuf_1.proto3;
SkillsGroupsServiceFilterReq.typeName = "Scailo.SkillsGroupsServiceFilterReq";
SkillsGroupsServiceFilterReq.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "is_active", kind: "enum", T: protobuf_1.proto3.getEnumType(base_scailo_pb_js_1.BOOL_FILTER) },
    { no: 2, name: "count", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "offset", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 4, name: "sort_order", kind: "enum", T: protobuf_1.proto3.getEnumType(base_scailo_pb_js_1.SORT_ORDER) },
    { no: 5, name: "sort_key", kind: "enum", T: protobuf_1.proto3.getEnumType(SKILL_GROUP_SORT_KEY) },
    { no: 101, name: "creation_timestamp_start", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 102, name: "creation_timestamp_end", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 103, name: "modification_timestamp_start", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 104, name: "modification_timestamp_end", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 8, name: "entity_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 10, name: "status", kind: "enum", T: protobuf_1.proto3.getEnumType(base_scailo_pb_js_1.STANDARD_LIFECYCLE_STATUS) },
    { no: 11, name: "approved_on_start", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 12, name: "approved_on_end", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 13, name: "approved_by_user_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 14, name: "approver_role_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 15, name: "completed_on_start", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 16, name: "completed_on_end", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 20, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 21, name: "code", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 22, name: "role_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
]);
/**
 *
 * Describes the base request payload of a count search
 *
 * @generated from message Scailo.SkillsGroupsServiceCountReq
 */
class SkillsGroupsServiceCountReq extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * If true, then returns only active records. If false, then returns only inactive records
         *
         * @generated from field: Scailo.BOOL_FILTER is_active = 1;
         */
        this.isActive = base_scailo_pb_js_1.BOOL_FILTER.BOOL_FILTER_ANY_UNSPECIFIED;
        /**
         * The minimum timestamp that needs to be considered to filter by creation
         *
         * @generated from field: uint64 creation_timestamp_start = 101;
         */
        this.creationTimestampStart = protobuf_1.protoInt64.zero;
        /**
         * The maximum timestamp that needs to be considered to filter by creation
         *
         * @generated from field: uint64 creation_timestamp_end = 102;
         */
        this.creationTimestampEnd = protobuf_1.protoInt64.zero;
        /**
         * The minimum timestamp that needs to be considered to filter by modification
         *
         * @generated from field: uint64 modification_timestamp_start = 103;
         */
        this.modificationTimestampStart = protobuf_1.protoInt64.zero;
        /**
         * The maximum timestamp that needs to be considered to filter by modification
         *
         * @generated from field: uint64 modification_timestamp_end = 104;
         */
        this.modificationTimestampEnd = protobuf_1.protoInt64.zero;
        /**
         * The entity UUID that is to be used to filter records
         *
         * @generated from field: string entity_uuid = 8;
         */
        this.entityUuid = "";
        /**
         * The status of this skill group
         *
         * @generated from field: Scailo.STANDARD_LIFECYCLE_STATUS status = 10;
         */
        this.status = base_scailo_pb_js_1.STANDARD_LIFECYCLE_STATUS.ANY_UNSPECIFIED;
        /**
         * The start range of approved timestamp
         *
         * @generated from field: uint64 approved_on_start = 11;
         */
        this.approvedOnStart = protobuf_1.protoInt64.zero;
        /**
         * The end range of approved timestamp
         *
         * @generated from field: uint64 approved_on_end = 12;
         */
        this.approvedOnEnd = protobuf_1.protoInt64.zero;
        /**
         * The ID of the approver
         *
         * @generated from field: uint64 approved_by_user_id = 13;
         */
        this.approvedByUserId = protobuf_1.protoInt64.zero;
        /**
         * The role ID of the approver
         *
         * @generated from field: uint64 approver_role_id = 14;
         */
        this.approverRoleId = protobuf_1.protoInt64.zero;
        /**
         * The start range of completed timestamp
         *
         * @generated from field: uint64 completed_on_start = 15;
         */
        this.completedOnStart = protobuf_1.protoInt64.zero;
        /**
         * The end range of completed timestamp
         *
         * @generated from field: uint64 completed_on_end = 16;
         */
        this.completedOnEnd = protobuf_1.protoInt64.zero;
        /**
         * The name of the skill group
         *
         * @generated from field: string name = 20;
         */
        this.name = "";
        /**
         * The skill group code
         *
         * @generated from field: string code = 21;
         */
        this.code = "";
        /**
         * The ID of the role that this skill group belongs to
         *
         * @generated from field: uint64 role_id = 22;
         */
        this.roleId = protobuf_1.protoInt64.zero;
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new SkillsGroupsServiceCountReq().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new SkillsGroupsServiceCountReq().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new SkillsGroupsServiceCountReq().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(SkillsGroupsServiceCountReq, a, b);
    }
}
exports.SkillsGroupsServiceCountReq = SkillsGroupsServiceCountReq;
SkillsGroupsServiceCountReq.runtime = protobuf_1.proto3;
SkillsGroupsServiceCountReq.typeName = "Scailo.SkillsGroupsServiceCountReq";
SkillsGroupsServiceCountReq.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "is_active", kind: "enum", T: protobuf_1.proto3.getEnumType(base_scailo_pb_js_1.BOOL_FILTER) },
    { no: 101, name: "creation_timestamp_start", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 102, name: "creation_timestamp_end", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 103, name: "modification_timestamp_start", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 104, name: "modification_timestamp_end", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 8, name: "entity_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 10, name: "status", kind: "enum", T: protobuf_1.proto3.getEnumType(base_scailo_pb_js_1.STANDARD_LIFECYCLE_STATUS) },
    { no: 11, name: "approved_on_start", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 12, name: "approved_on_end", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 13, name: "approved_by_user_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 14, name: "approver_role_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 15, name: "completed_on_start", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 16, name: "completed_on_end", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 20, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 21, name: "code", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 22, name: "role_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
]);
/**
 *
 * Describes the request payload for performing a generic search operation on records
 *
 * @generated from message Scailo.SkillsGroupsServiceSearchAllReq
 */
class SkillsGroupsServiceSearchAllReq extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * If true, then returns only active records. If false, then returns only inactive records
         *
         * @generated from field: Scailo.BOOL_FILTER is_active = 1;
         */
        this.isActive = base_scailo_pb_js_1.BOOL_FILTER.BOOL_FILTER_ANY_UNSPECIFIED;
        /**
         * The number of records that need to be sent in the response. Returns all records if it is set to -1
         *
         * @generated from field: int64 count = 2;
         */
        this.count = protobuf_1.protoInt64.zero;
        /**
         * The number that need to be offset by before fetching the records
         *
         * @generated from field: uint64 offset = 3;
         */
        this.offset = protobuf_1.protoInt64.zero;
        /**
         * The sort order that is to be used to fetch the pagination response
         *
         * @generated from field: Scailo.SORT_ORDER sort_order = 4;
         */
        this.sortOrder = base_scailo_pb_js_1.SORT_ORDER.ASCENDING_UNSPECIFIED;
        /**
         * The sort key that is to be used to fetch the pagination response
         *
         * @generated from field: Scailo.SKILL_GROUP_SORT_KEY sort_key = 5;
         */
        this.sortKey = SKILL_GROUP_SORT_KEY.SKILL_GROUP_SORT_KEY_ID_UNSPECIFIED;
        /**
         * The entity UUID that is to be used to filter records
         *
         * @generated from field: string entity_uuid = 6;
         */
        this.entityUuid = "";
        /**
         * Limit the search space to the given status
         *
         * @generated from field: Scailo.STANDARD_LIFECYCLE_STATUS status = 10;
         */
        this.status = base_scailo_pb_js_1.STANDARD_LIFECYCLE_STATUS.ANY_UNSPECIFIED;
        /**
         * Describes the key with which the search operation needs to be performed
         *
         * @generated from field: string search_key = 11;
         */
        this.searchKey = "";
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new SkillsGroupsServiceSearchAllReq().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new SkillsGroupsServiceSearchAllReq().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new SkillsGroupsServiceSearchAllReq().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(SkillsGroupsServiceSearchAllReq, a, b);
    }
}
exports.SkillsGroupsServiceSearchAllReq = SkillsGroupsServiceSearchAllReq;
SkillsGroupsServiceSearchAllReq.runtime = protobuf_1.proto3;
SkillsGroupsServiceSearchAllReq.typeName = "Scailo.SkillsGroupsServiceSearchAllReq";
SkillsGroupsServiceSearchAllReq.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "is_active", kind: "enum", T: protobuf_1.proto3.getEnumType(base_scailo_pb_js_1.BOOL_FILTER) },
    { no: 2, name: "count", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "offset", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 4, name: "sort_order", kind: "enum", T: protobuf_1.proto3.getEnumType(base_scailo_pb_js_1.SORT_ORDER) },
    { no: 5, name: "sort_key", kind: "enum", T: protobuf_1.proto3.getEnumType(SKILL_GROUP_SORT_KEY) },
    { no: 6, name: "entity_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 10, name: "status", kind: "enum", T: protobuf_1.proto3.getEnumType(base_scailo_pb_js_1.STANDARD_LIFECYCLE_STATUS) },
    { no: 11, name: "search_key", kind: "scalar", T: 9 /* ScalarType.STRING */ },
]);
