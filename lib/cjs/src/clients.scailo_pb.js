"use strict";
// @generated by protoc-gen-es v1.5.1 with parameter "target=ts"
// @generated from file clients.scailo.proto (package Scailo, syntax proto3)
/* eslint-disable */
// @ts-nocheck
Object.defineProperty(exports, "__esModule", { value: true });
exports.ClientsServicePaginatedUsersResponse = exports.ClientUsersSearchRequest = exports.ClientUsersList = exports.ClientUser = exports.ClientsServiceUserCreateRequest = exports.ClientsServiceSearchAllReq = exports.ClientsServiceCountReq = exports.ClientsServiceFilterReq = exports.ClientsServicePaginationResponse = exports.ClientsServicePaginationReq = exports.ClientsList = exports.Client = exports.ClientsServiceUpdateRequest = exports.ClientsServiceCreateRequest = exports.CLIENT_USER_STATUS = exports.CLIENT_SORT_KEY = void 0;
const protobuf_1 = require("@bufbuild/protobuf");
const forms_fields_data_scailo_pb_js_1 = require("./forms_fields_data.scailo_pb.js");
const base_scailo_pb_js_1 = require("./base.scailo_pb.js");
/**
 *
 * Describes the available sort keys
 *
 * @generated from enum Scailo.CLIENT_SORT_KEY
 */
var CLIENT_SORT_KEY;
(function (CLIENT_SORT_KEY) {
    /**
     * Fetch ordered results by id
     *
     * @generated from enum value: CLIENT_SORT_KEY_ID_UNSPECIFIED = 0;
     */
    CLIENT_SORT_KEY[CLIENT_SORT_KEY["CLIENT_SORT_KEY_ID_UNSPECIFIED"] = 0] = "CLIENT_SORT_KEY_ID_UNSPECIFIED";
    /**
     * Fetch ordered results by the creation timestamp
     *
     * @generated from enum value: CLIENT_SORT_KEY_CREATED_AT = 1;
     */
    CLIENT_SORT_KEY[CLIENT_SORT_KEY["CLIENT_SORT_KEY_CREATED_AT"] = 1] = "CLIENT_SORT_KEY_CREATED_AT";
    /**
     * Fetch ordered results by the modified timestamp
     *
     * @generated from enum value: CLIENT_SORT_KEY_MODIFIED_AT = 2;
     */
    CLIENT_SORT_KEY[CLIENT_SORT_KEY["CLIENT_SORT_KEY_MODIFIED_AT"] = 2] = "CLIENT_SORT_KEY_MODIFIED_AT";
    /**
     * Fetch ordered results by the approved on timestamp
     *
     * @generated from enum value: CLIENT_SORT_KEY_APPROVED_ON = 3;
     */
    CLIENT_SORT_KEY[CLIENT_SORT_KEY["CLIENT_SORT_KEY_APPROVED_ON"] = 3] = "CLIENT_SORT_KEY_APPROVED_ON";
    /**
     * Fetch ordered results by the approved by field
     *
     * @generated from enum value: CLIENT_SORT_KEY_APPROVED_BY = 4;
     */
    CLIENT_SORT_KEY[CLIENT_SORT_KEY["CLIENT_SORT_KEY_APPROVED_BY"] = 4] = "CLIENT_SORT_KEY_APPROVED_BY";
    /**
     * Fetch ordered results by the approver's role ID
     *
     * @generated from enum value: CLIENT_SORT_KEY_APPROVER_ROLE_ID = 5;
     */
    CLIENT_SORT_KEY[CLIENT_SORT_KEY["CLIENT_SORT_KEY_APPROVER_ROLE_ID"] = 5] = "CLIENT_SORT_KEY_APPROVER_ROLE_ID";
    /**
     * Fetch ordered results by the name
     *
     * @generated from enum value: CLIENT_SORT_KEY_NAME = 10;
     */
    CLIENT_SORT_KEY[CLIENT_SORT_KEY["CLIENT_SORT_KEY_NAME"] = 10] = "CLIENT_SORT_KEY_NAME";
    /**
     * Fetch ordered results by the code
     *
     * @generated from enum value: CLIENT_SORT_KEY_CODE = 11;
     */
    CLIENT_SORT_KEY[CLIENT_SORT_KEY["CLIENT_SORT_KEY_CODE"] = 11] = "CLIENT_SORT_KEY_CODE";
    /**
     * Fetch ordered results by the email address
     *
     * @generated from enum value: CLIENT_SORT_KEY_EMAIL = 12;
     */
    CLIENT_SORT_KEY[CLIENT_SORT_KEY["CLIENT_SORT_KEY_EMAIL"] = 12] = "CLIENT_SORT_KEY_EMAIL";
    /**
     * Fetch ordered results by the phone number
     *
     * @generated from enum value: CLIENT_SORT_KEY_PHONE = 13;
     */
    CLIENT_SORT_KEY[CLIENT_SORT_KEY["CLIENT_SORT_KEY_PHONE"] = 13] = "CLIENT_SORT_KEY_PHONE";
})(CLIENT_SORT_KEY || (exports.CLIENT_SORT_KEY = CLIENT_SORT_KEY = {}));
// Retrieve enum metadata with: proto3.getEnumType(CLIENT_SORT_KEY)
protobuf_1.proto3.util.setEnumType(CLIENT_SORT_KEY, "Scailo.CLIENT_SORT_KEY", [
    { no: 0, name: "CLIENT_SORT_KEY_ID_UNSPECIFIED" },
    { no: 1, name: "CLIENT_SORT_KEY_CREATED_AT" },
    { no: 2, name: "CLIENT_SORT_KEY_MODIFIED_AT" },
    { no: 3, name: "CLIENT_SORT_KEY_APPROVED_ON" },
    { no: 4, name: "CLIENT_SORT_KEY_APPROVED_BY" },
    { no: 5, name: "CLIENT_SORT_KEY_APPROVER_ROLE_ID" },
    { no: 10, name: "CLIENT_SORT_KEY_NAME" },
    { no: 11, name: "CLIENT_SORT_KEY_CODE" },
    { no: 12, name: "CLIENT_SORT_KEY_EMAIL" },
    { no: 13, name: "CLIENT_SORT_KEY_PHONE" },
]);
/**
 *
 * Describes the applicable statuses of client users
 *
 * @generated from enum Scailo.CLIENT_USER_STATUS
 */
var CLIENT_USER_STATUS;
(function (CLIENT_USER_STATUS) {
    /**
     * Denotes that status be disregarded. This is used only within search APIs
     *
     * @generated from enum value: CLIENT_USER_STATUS_ANY_UNSPECIFIED = 0;
     */
    CLIENT_USER_STATUS[CLIENT_USER_STATUS["CLIENT_USER_STATUS_ANY_UNSPECIFIED"] = 0] = "CLIENT_USER_STATUS_ANY_UNSPECIFIED";
    /**
     * Denotes that the vendor items must have been approved
     *
     * @generated from enum value: CLIENT_USER_STATUS_APPROVED = 1;
     */
    CLIENT_USER_STATUS[CLIENT_USER_STATUS["CLIENT_USER_STATUS_APPROVED"] = 1] = "CLIENT_USER_STATUS_APPROVED";
    /**
     * Denotes that the vendor items must be waiting for approval
     *
     * @generated from enum value: CLIENT_USER_STATUS_UNAPPROVED = 2;
     */
    CLIENT_USER_STATUS[CLIENT_USER_STATUS["CLIENT_USER_STATUS_UNAPPROVED"] = 2] = "CLIENT_USER_STATUS_UNAPPROVED";
})(CLIENT_USER_STATUS || (exports.CLIENT_USER_STATUS = CLIENT_USER_STATUS = {}));
// Retrieve enum metadata with: proto3.getEnumType(CLIENT_USER_STATUS)
protobuf_1.proto3.util.setEnumType(CLIENT_USER_STATUS, "Scailo.CLIENT_USER_STATUS", [
    { no: 0, name: "CLIENT_USER_STATUS_ANY_UNSPECIFIED" },
    { no: 1, name: "CLIENT_USER_STATUS_APPROVED" },
    { no: 2, name: "CLIENT_USER_STATUS_UNAPPROVED" },
]);
/**
 *
 * Describes the parameters necessary to create a record
 *
 * @generated from message Scailo.ClientsServiceCreateRequest
 */
class ClientsServiceCreateRequest extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * Stores a globally unique entity UUID. This will be set at the organization level
         *
         * @generated from field: string entity_uuid = 1;
         */
        this.entityUuid = "";
        /**
         * Stores any comment that the user might add during this operation
         *
         * @generated from field: string user_comment = 2;
         */
        this.userComment = "";
        /**
         * The associated vault folder ID
         *
         * @generated from field: uint64 vault_folder_id = 9;
         */
        this.vaultFolderId = protobuf_1.protoInt64.zero;
        /**
         * The name of the client
         *
         * @generated from field: string name = 10;
         */
        this.name = "";
        /**
         * The unique code by which the client is classified
         *
         * @generated from field: string code = 11;
         */
        this.code = "";
        /**
         * The primary email of the client
         *
         * @generated from field: string email = 12;
         */
        this.email = "";
        /**
         * The primary contact number of the client
         *
         * @generated from field: string phone = 13;
         */
        this.phone = "";
        /**
         * The list of dynamic forms
         *
         * @generated from field: repeated Scailo.FormFieldDatumCreateRequest form_data = 30;
         */
        this.formData = [];
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new ClientsServiceCreateRequest().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new ClientsServiceCreateRequest().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new ClientsServiceCreateRequest().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(ClientsServiceCreateRequest, a, b);
    }
}
exports.ClientsServiceCreateRequest = ClientsServiceCreateRequest;
ClientsServiceCreateRequest.runtime = protobuf_1.proto3;
ClientsServiceCreateRequest.typeName = "Scailo.ClientsServiceCreateRequest";
ClientsServiceCreateRequest.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "entity_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "user_comment", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 9, name: "vault_folder_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 10, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 11, name: "code", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 12, name: "email", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 13, name: "phone", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 30, name: "form_data", kind: "message", T: forms_fields_data_scailo_pb_js_1.FormFieldDatumCreateRequest, repeated: true },
]);
/**
 *
 * Describes the parameters necessary to update a record
 *
 * @generated from message Scailo.ClientsServiceUpdateRequest
 */
class ClientsServiceUpdateRequest extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * Stores any comment that the user might add during this operation
         *
         * @generated from field: string user_comment = 1;
         */
        this.userComment = "";
        /**
         * The ID of the record that needs to be updated
         *
         * @generated from field: uint64 id = 2;
         */
        this.id = protobuf_1.protoInt64.zero;
        /**
         * Optional boolean value that stores if a notification needs to be sent to users about the update to the record. This is useful when a subsequent operation needs to be performed immediately (such as send to verification after updating the revision)
         *
         * @generated from field: bool notify_users = 3;
         */
        this.notifyUsers = false;
        /**
         * The associated vault folder ID
         *
         * @generated from field: uint64 vault_folder_id = 9;
         */
        this.vaultFolderId = protobuf_1.protoInt64.zero;
        /**
         * The name of the client
         *
         * @generated from field: string name = 10;
         */
        this.name = "";
        /**
         * The unique code by which the client is classified
         *
         * @generated from field: string code = 11;
         */
        this.code = "";
        /**
         * The primary email of the client
         *
         * @generated from field: string email = 12;
         */
        this.email = "";
        /**
         * The primary contact number of the client
         *
         * @generated from field: string phone = 13;
         */
        this.phone = "";
        /**
         * The list of dynamic forms
         *
         * @generated from field: repeated Scailo.FormFieldDatumCreateRequest form_data = 30;
         */
        this.formData = [];
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new ClientsServiceUpdateRequest().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new ClientsServiceUpdateRequest().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new ClientsServiceUpdateRequest().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(ClientsServiceUpdateRequest, a, b);
    }
}
exports.ClientsServiceUpdateRequest = ClientsServiceUpdateRequest;
ClientsServiceUpdateRequest.runtime = protobuf_1.proto3;
ClientsServiceUpdateRequest.typeName = "Scailo.ClientsServiceUpdateRequest";
ClientsServiceUpdateRequest.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "user_comment", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 3, name: "notify_users", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 9, name: "vault_folder_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 10, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 11, name: "code", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 12, name: "email", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 13, name: "phone", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 30, name: "form_data", kind: "message", T: forms_fields_data_scailo_pb_js_1.FormFieldDatumCreateRequest, repeated: true },
]);
/**
 *
 * Describes the parameters that are part of a standard response
 *
 * @generated from message Scailo.Client
 */
class Client extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * Stores a globally unique entity UUID. This will be set at the organization level
         *
         * @generated from field: string entity_uuid = 1;
         */
        this.entityUuid = "";
        /**
         * The status of this client
         *
         * @generated from field: Scailo.STANDARD_LIFECYCLE_STATUS status = 4;
         */
        this.status = base_scailo_pb_js_1.STANDARD_LIFECYCLE_STATUS.ANY_UNSPECIFIED;
        /**
         * Stores the logs of every operation performed on this client
         *
         * @generated from field: repeated Scailo.LogbookLogConciseSLC logs = 5;
         */
        this.logs = [];
        /**
         * The associated vault folder ID
         *
         * @generated from field: uint64 vault_folder_id = 9;
         */
        this.vaultFolderId = protobuf_1.protoInt64.zero;
        /**
         * The name of the client
         *
         * @generated from field: string name = 10;
         */
        this.name = "";
        /**
         * The unique code by which the client is classified
         *
         * @generated from field: string code = 11;
         */
        this.code = "";
        /**
         * The primary email of the client
         *
         * @generated from field: string email = 12;
         */
        this.email = "";
        /**
         * The primary contact number of the client
         *
         * @generated from field: string phone = 13;
         */
        this.phone = "";
        /**
         * The list of dynamic forms
         *
         * @generated from field: repeated Scailo.FormFieldDatum form_data = 30;
         */
        this.formData = [];
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new Client().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new Client().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new Client().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(Client, a, b);
    }
}
exports.Client = Client;
Client.runtime = protobuf_1.proto3;
Client.typeName = "Scailo.Client";
Client.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "entity_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "metadata", kind: "message", T: base_scailo_pb_js_1.EmployeeMetadata },
    { no: 3, name: "approval_metadata", kind: "message", T: base_scailo_pb_js_1.ApprovalMetadata },
    { no: 4, name: "status", kind: "enum", T: protobuf_1.proto3.getEnumType(base_scailo_pb_js_1.STANDARD_LIFECYCLE_STATUS) },
    { no: 5, name: "logs", kind: "message", T: base_scailo_pb_js_1.LogbookLogConciseSLC, repeated: true },
    { no: 9, name: "vault_folder_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 10, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 11, name: "code", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 12, name: "email", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 13, name: "phone", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 30, name: "form_data", kind: "message", T: forms_fields_data_scailo_pb_js_1.FormFieldDatum, repeated: true },
]);
/**
 *
 * Describes the message consisting of the list of records
 *
 * @generated from message Scailo.ClientsList
 */
class ClientsList extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * List of records
         *
         * @generated from field: repeated Scailo.Client list = 1;
         */
        this.list = [];
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new ClientsList().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new ClientsList().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new ClientsList().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(ClientsList, a, b);
    }
}
exports.ClientsList = ClientsList;
ClientsList.runtime = protobuf_1.proto3;
ClientsList.typeName = "Scailo.ClientsList";
ClientsList.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "list", kind: "message", T: Client, repeated: true },
]);
/**
 *
 * Describes a pagination request to retrieve records
 *
 * @generated from message Scailo.ClientsServicePaginationReq
 */
class ClientsServicePaginationReq extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * If true, then returns only active records. If false, then returns only inactive records
         *
         * @generated from field: Scailo.BOOL_FILTER is_active = 1;
         */
        this.isActive = base_scailo_pb_js_1.BOOL_FILTER.BOOL_FILTER_ANY_UNSPECIFIED;
        /**
         * The number of records that need to be sent in the response
         *
         * @generated from field: int64 count = 2;
         */
        this.count = protobuf_1.protoInt64.zero;
        /**
         * The number that need to be offset by before fetching the records
         *
         * @generated from field: uint64 offset = 3;
         */
        this.offset = protobuf_1.protoInt64.zero;
        /**
         * The sort order that is to be used to fetch the pagination response
         *
         * @generated from field: Scailo.SORT_ORDER sort_order = 4;
         */
        this.sortOrder = base_scailo_pb_js_1.SORT_ORDER.ASCENDING_UNSPECIFIED;
        /**
         * The sort key that is to be used to fetch the pagination response
         *
         * @generated from field: Scailo.CLIENT_SORT_KEY sort_key = 5;
         */
        this.sortKey = CLIENT_SORT_KEY.CLIENT_SORT_KEY_ID_UNSPECIFIED;
        /**
         * The status of this client
         *
         * @generated from field: Scailo.STANDARD_LIFECYCLE_STATUS status = 6;
         */
        this.status = base_scailo_pb_js_1.STANDARD_LIFECYCLE_STATUS.ANY_UNSPECIFIED;
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new ClientsServicePaginationReq().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new ClientsServicePaginationReq().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new ClientsServicePaginationReq().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(ClientsServicePaginationReq, a, b);
    }
}
exports.ClientsServicePaginationReq = ClientsServicePaginationReq;
ClientsServicePaginationReq.runtime = protobuf_1.proto3;
ClientsServicePaginationReq.typeName = "Scailo.ClientsServicePaginationReq";
ClientsServicePaginationReq.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "is_active", kind: "enum", T: protobuf_1.proto3.getEnumType(base_scailo_pb_js_1.BOOL_FILTER) },
    { no: 2, name: "count", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "offset", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 4, name: "sort_order", kind: "enum", T: protobuf_1.proto3.getEnumType(base_scailo_pb_js_1.SORT_ORDER) },
    { no: 5, name: "sort_key", kind: "enum", T: protobuf_1.proto3.getEnumType(CLIENT_SORT_KEY) },
    { no: 6, name: "status", kind: "enum", T: protobuf_1.proto3.getEnumType(base_scailo_pb_js_1.STANDARD_LIFECYCLE_STATUS) },
]);
/**
 *
 * Describes the response to a pagination request
 *
 * @generated from message Scailo.ClientsServicePaginationResponse
 */
class ClientsServicePaginationResponse extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * The number of records in this payload
         *
         * @generated from field: uint64 count = 1;
         */
        this.count = protobuf_1.protoInt64.zero;
        /**
         * The number that has been offset before fetching the records. This is the same value that has been sent as part of the pagination request
         *
         * @generated from field: uint64 offset = 2;
         */
        this.offset = protobuf_1.protoInt64.zero;
        /**
         * The total number of records that are available
         *
         * @generated from field: uint64 total = 3;
         */
        this.total = protobuf_1.protoInt64.zero;
        /**
         * The list of records
         *
         * @generated from field: repeated Scailo.Client payload = 4;
         */
        this.payload = [];
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new ClientsServicePaginationResponse().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new ClientsServicePaginationResponse().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new ClientsServicePaginationResponse().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(ClientsServicePaginationResponse, a, b);
    }
}
exports.ClientsServicePaginationResponse = ClientsServicePaginationResponse;
ClientsServicePaginationResponse.runtime = protobuf_1.proto3;
ClientsServicePaginationResponse.typeName = "Scailo.ClientsServicePaginationResponse";
ClientsServicePaginationResponse.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "count", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 2, name: "offset", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 3, name: "total", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 4, name: "payload", kind: "message", T: Client, repeated: true },
]);
/**
 *
 * Describes the base request payload of a filter search
 *
 * @generated from message Scailo.ClientsServiceFilterReq
 */
class ClientsServiceFilterReq extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * If true, then returns only active records. If false, then returns only inactive records
         *
         * @generated from field: Scailo.BOOL_FILTER is_active = 1;
         */
        this.isActive = base_scailo_pb_js_1.BOOL_FILTER.BOOL_FILTER_ANY_UNSPECIFIED;
        /**
         * The number of records that need to be sent in the response. Returns all records if it is set to -1
         *
         * @generated from field: int64 count = 2;
         */
        this.count = protobuf_1.protoInt64.zero;
        /**
         * The number that need to be offset by before fetching the records
         *
         * @generated from field: uint64 offset = 3;
         */
        this.offset = protobuf_1.protoInt64.zero;
        /**
         * The sort order that is to be used to fetch the pagination response
         *
         * @generated from field: Scailo.SORT_ORDER sort_order = 4;
         */
        this.sortOrder = base_scailo_pb_js_1.SORT_ORDER.ASCENDING_UNSPECIFIED;
        /**
         * The sort key that is to be used to fetch the pagination response
         *
         * @generated from field: Scailo.CLIENT_SORT_KEY sort_key = 5;
         */
        this.sortKey = CLIENT_SORT_KEY.CLIENT_SORT_KEY_ID_UNSPECIFIED;
        /**
         * The minimum timestamp that needs to be considered to filter by creation
         *
         * @generated from field: uint64 creation_timestamp_start = 101;
         */
        this.creationTimestampStart = protobuf_1.protoInt64.zero;
        /**
         * The maximum timestamp that needs to be considered to filter by creation
         *
         * @generated from field: uint64 creation_timestamp_end = 102;
         */
        this.creationTimestampEnd = protobuf_1.protoInt64.zero;
        /**
         * The minimum timestamp that needs to be considered to filter by modification
         *
         * @generated from field: uint64 modification_timestamp_start = 103;
         */
        this.modificationTimestampStart = protobuf_1.protoInt64.zero;
        /**
         * The maximum timestamp that needs to be considered to filter by modification
         *
         * @generated from field: uint64 modification_timestamp_end = 104;
         */
        this.modificationTimestampEnd = protobuf_1.protoInt64.zero;
        /**
         * The entity UUID that is to be used to filter records
         *
         * @generated from field: string entity_uuid = 8;
         */
        this.entityUuid = "";
        /**
         * The status of this client
         *
         * @generated from field: Scailo.STANDARD_LIFECYCLE_STATUS status = 10;
         */
        this.status = base_scailo_pb_js_1.STANDARD_LIFECYCLE_STATUS.ANY_UNSPECIFIED;
        /**
         * The start range of approved timestamp
         *
         * @generated from field: uint64 approved_on_start = 11;
         */
        this.approvedOnStart = protobuf_1.protoInt64.zero;
        /**
         * The end range of approved timestamp
         *
         * @generated from field: uint64 approved_on_end = 12;
         */
        this.approvedOnEnd = protobuf_1.protoInt64.zero;
        /**
         * The ID of the approver
         *
         * @generated from field: uint64 approved_by_user_id = 13;
         */
        this.approvedByUserId = protobuf_1.protoInt64.zero;
        /**
         * The role ID of the approver
         *
         * @generated from field: uint64 approver_role_id = 14;
         */
        this.approverRoleId = protobuf_1.protoInt64.zero;
        /**
         * The name of the client
         *
         * @generated from field: string name = 20;
         */
        this.name = "";
        /**
         * The unique code by which the client is classified
         *
         * @generated from field: string code = 21;
         */
        this.code = "";
        /**
         * The primary email of the client
         *
         * @generated from field: string email = 22;
         */
        this.email = "";
        /**
         * The primary contact number of the client
         *
         * @generated from field: string phone = 23;
         */
        this.phone = "";
        /**
         * The list of form data filters
         *
         * @generated from field: repeated Scailo.FormFieldDatumFilterRequest form_data = 500;
         */
        this.formData = [];
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new ClientsServiceFilterReq().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new ClientsServiceFilterReq().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new ClientsServiceFilterReq().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(ClientsServiceFilterReq, a, b);
    }
}
exports.ClientsServiceFilterReq = ClientsServiceFilterReq;
ClientsServiceFilterReq.runtime = protobuf_1.proto3;
ClientsServiceFilterReq.typeName = "Scailo.ClientsServiceFilterReq";
ClientsServiceFilterReq.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "is_active", kind: "enum", T: protobuf_1.proto3.getEnumType(base_scailo_pb_js_1.BOOL_FILTER) },
    { no: 2, name: "count", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "offset", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 4, name: "sort_order", kind: "enum", T: protobuf_1.proto3.getEnumType(base_scailo_pb_js_1.SORT_ORDER) },
    { no: 5, name: "sort_key", kind: "enum", T: protobuf_1.proto3.getEnumType(CLIENT_SORT_KEY) },
    { no: 101, name: "creation_timestamp_start", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 102, name: "creation_timestamp_end", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 103, name: "modification_timestamp_start", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 104, name: "modification_timestamp_end", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 8, name: "entity_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 10, name: "status", kind: "enum", T: protobuf_1.proto3.getEnumType(base_scailo_pb_js_1.STANDARD_LIFECYCLE_STATUS) },
    { no: 11, name: "approved_on_start", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 12, name: "approved_on_end", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 13, name: "approved_by_user_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 14, name: "approver_role_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 20, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 21, name: "code", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 22, name: "email", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 23, name: "phone", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 500, name: "form_data", kind: "message", T: forms_fields_data_scailo_pb_js_1.FormFieldDatumFilterRequest, repeated: true },
]);
/**
 *
 * Describes the base request payload of a count search
 *
 * @generated from message Scailo.ClientsServiceCountReq
 */
class ClientsServiceCountReq extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * If true, then returns only active records. If false, then returns only inactive records
         *
         * @generated from field: Scailo.BOOL_FILTER is_active = 1;
         */
        this.isActive = base_scailo_pb_js_1.BOOL_FILTER.BOOL_FILTER_ANY_UNSPECIFIED;
        /**
         * The minimum timestamp that needs to be considered to filter by creation
         *
         * @generated from field: uint64 creation_timestamp_start = 101;
         */
        this.creationTimestampStart = protobuf_1.protoInt64.zero;
        /**
         * The maximum timestamp that needs to be considered to filter by creation
         *
         * @generated from field: uint64 creation_timestamp_end = 102;
         */
        this.creationTimestampEnd = protobuf_1.protoInt64.zero;
        /**
         * The minimum timestamp that needs to be considered to filter by modification
         *
         * @generated from field: uint64 modification_timestamp_start = 103;
         */
        this.modificationTimestampStart = protobuf_1.protoInt64.zero;
        /**
         * The maximum timestamp that needs to be considered to filter by modification
         *
         * @generated from field: uint64 modification_timestamp_end = 104;
         */
        this.modificationTimestampEnd = protobuf_1.protoInt64.zero;
        /**
         * The entity UUID that is to be used to filter records
         *
         * @generated from field: string entity_uuid = 8;
         */
        this.entityUuid = "";
        /**
         * The status of this client
         *
         * @generated from field: Scailo.STANDARD_LIFECYCLE_STATUS status = 10;
         */
        this.status = base_scailo_pb_js_1.STANDARD_LIFECYCLE_STATUS.ANY_UNSPECIFIED;
        /**
         * The start range of approved timestamp
         *
         * @generated from field: uint64 approved_on_start = 11;
         */
        this.approvedOnStart = protobuf_1.protoInt64.zero;
        /**
         * The end range of approved timestamp
         *
         * @generated from field: uint64 approved_on_end = 12;
         */
        this.approvedOnEnd = protobuf_1.protoInt64.zero;
        /**
         * The ID of the approver
         *
         * @generated from field: uint64 approved_by_user_id = 13;
         */
        this.approvedByUserId = protobuf_1.protoInt64.zero;
        /**
         * The role ID of the approver
         *
         * @generated from field: uint64 approver_role_id = 14;
         */
        this.approverRoleId = protobuf_1.protoInt64.zero;
        /**
         * The name of the client
         *
         * @generated from field: string name = 20;
         */
        this.name = "";
        /**
         * The unique code by which the client is classified
         *
         * @generated from field: string code = 21;
         */
        this.code = "";
        /**
         * The primary email of the client
         *
         * @generated from field: string email = 22;
         */
        this.email = "";
        /**
         * The primary contact number of the client
         *
         * @generated from field: string phone = 23;
         */
        this.phone = "";
        /**
         * The list of form data filters
         *
         * @generated from field: repeated Scailo.FormFieldDatumFilterRequest form_data = 500;
         */
        this.formData = [];
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new ClientsServiceCountReq().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new ClientsServiceCountReq().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new ClientsServiceCountReq().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(ClientsServiceCountReq, a, b);
    }
}
exports.ClientsServiceCountReq = ClientsServiceCountReq;
ClientsServiceCountReq.runtime = protobuf_1.proto3;
ClientsServiceCountReq.typeName = "Scailo.ClientsServiceCountReq";
ClientsServiceCountReq.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "is_active", kind: "enum", T: protobuf_1.proto3.getEnumType(base_scailo_pb_js_1.BOOL_FILTER) },
    { no: 101, name: "creation_timestamp_start", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 102, name: "creation_timestamp_end", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 103, name: "modification_timestamp_start", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 104, name: "modification_timestamp_end", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 8, name: "entity_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 10, name: "status", kind: "enum", T: protobuf_1.proto3.getEnumType(base_scailo_pb_js_1.STANDARD_LIFECYCLE_STATUS) },
    { no: 11, name: "approved_on_start", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 12, name: "approved_on_end", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 13, name: "approved_by_user_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 14, name: "approver_role_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 20, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 21, name: "code", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 22, name: "email", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 23, name: "phone", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 500, name: "form_data", kind: "message", T: forms_fields_data_scailo_pb_js_1.FormFieldDatumFilterRequest, repeated: true },
]);
/**
 *
 * Describes the request payload for performing a generic search operation on records
 *
 * @generated from message Scailo.ClientsServiceSearchAllReq
 */
class ClientsServiceSearchAllReq extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * If true, then returns only active records. If false, then returns only inactive records
         *
         * @generated from field: Scailo.BOOL_FILTER is_active = 1;
         */
        this.isActive = base_scailo_pb_js_1.BOOL_FILTER.BOOL_FILTER_ANY_UNSPECIFIED;
        /**
         * The number of records that need to be sent in the response. Returns all records if it is set to -1
         *
         * @generated from field: int64 count = 2;
         */
        this.count = protobuf_1.protoInt64.zero;
        /**
         * The number that need to be offset by before fetching the records
         *
         * @generated from field: uint64 offset = 3;
         */
        this.offset = protobuf_1.protoInt64.zero;
        /**
         * The sort order that is to be used to fetch the pagination response
         *
         * @generated from field: Scailo.SORT_ORDER sort_order = 4;
         */
        this.sortOrder = base_scailo_pb_js_1.SORT_ORDER.ASCENDING_UNSPECIFIED;
        /**
         * The sort key that is to be used to fetch the pagination response
         *
         * @generated from field: Scailo.CLIENT_SORT_KEY sort_key = 5;
         */
        this.sortKey = CLIENT_SORT_KEY.CLIENT_SORT_KEY_ID_UNSPECIFIED;
        /**
         * The entity UUID that is to be used to filter records
         *
         * @generated from field: string entity_uuid = 6;
         */
        this.entityUuid = "";
        /**
         * Limit the search space to the given status
         *
         * @generated from field: Scailo.STANDARD_LIFECYCLE_STATUS status = 10;
         */
        this.status = base_scailo_pb_js_1.STANDARD_LIFECYCLE_STATUS.ANY_UNSPECIFIED;
        /**
         * Describes the key with which the search operation needs to be performed
         *
         * @generated from field: string search_key = 11;
         */
        this.searchKey = "";
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new ClientsServiceSearchAllReq().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new ClientsServiceSearchAllReq().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new ClientsServiceSearchAllReq().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(ClientsServiceSearchAllReq, a, b);
    }
}
exports.ClientsServiceSearchAllReq = ClientsServiceSearchAllReq;
ClientsServiceSearchAllReq.runtime = protobuf_1.proto3;
ClientsServiceSearchAllReq.typeName = "Scailo.ClientsServiceSearchAllReq";
ClientsServiceSearchAllReq.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "is_active", kind: "enum", T: protobuf_1.proto3.getEnumType(base_scailo_pb_js_1.BOOL_FILTER) },
    { no: 2, name: "count", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "offset", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 4, name: "sort_order", kind: "enum", T: protobuf_1.proto3.getEnumType(base_scailo_pb_js_1.SORT_ORDER) },
    { no: 5, name: "sort_key", kind: "enum", T: protobuf_1.proto3.getEnumType(CLIENT_SORT_KEY) },
    { no: 6, name: "entity_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 10, name: "status", kind: "enum", T: protobuf_1.proto3.getEnumType(base_scailo_pb_js_1.STANDARD_LIFECYCLE_STATUS) },
    { no: 11, name: "search_key", kind: "scalar", T: 9 /* ScalarType.STRING */ },
]);
/**
 *
 * Describes the parameters necessary to create a client user
 *
 * @generated from message Scailo.ClientsServiceUserCreateRequest
 */
class ClientsServiceUserCreateRequest extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * Stores any comment that the user might add during this operation
         *
         * @generated from field: string user_comment = 1;
         */
        this.userComment = "";
        /**
         * Stores the client ID
         *
         * @generated from field: uint64 client_id = 10;
         */
        this.clientId = protobuf_1.protoInt64.zero;
        /**
         * Stores the user ID
         *
         * @generated from field: uint64 user_id = 11;
         */
        this.userId = protobuf_1.protoInt64.zero;
        /**
         * Stores an optional associate ID
         *
         * @generated from field: uint64 associate_id = 12;
         */
        this.associateId = protobuf_1.protoInt64.zero;
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new ClientsServiceUserCreateRequest().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new ClientsServiceUserCreateRequest().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new ClientsServiceUserCreateRequest().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(ClientsServiceUserCreateRequest, a, b);
    }
}
exports.ClientsServiceUserCreateRequest = ClientsServiceUserCreateRequest;
ClientsServiceUserCreateRequest.runtime = protobuf_1.proto3;
ClientsServiceUserCreateRequest.typeName = "Scailo.ClientsServiceUserCreateRequest";
ClientsServiceUserCreateRequest.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "user_comment", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 10, name: "client_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 11, name: "user_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 12, name: "associate_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
]);
/**
 *
 * Describes the parameters that constitute a client user
 *
 * @generated from message Scailo.ClientUser
 */
class ClientUser extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * Stores a globally unique entity UUID. This will be set at the organization level
         *
         * @generated from field: string entity_uuid = 1;
         */
        this.entityUuid = "";
        /**
         * Denotes if this record requires approval (or has been approved)
         *
         * @generated from field: bool need_approval = 4;
         */
        this.needApproval = false;
        /**
         * Stores any comment that the user might have added during an operation
         *
         * @generated from field: string user_comment = 5;
         */
        this.userComment = "";
        /**
         * Stores the client ID
         *
         * @generated from field: uint64 client_id = 10;
         */
        this.clientId = protobuf_1.protoInt64.zero;
        /**
         * Stores the user ID
         *
         * @generated from field: uint64 user_id = 11;
         */
        this.userId = protobuf_1.protoInt64.zero;
        /**
         * Stores an optional associate ID
         *
         * @generated from field: uint64 associate_id = 12;
         */
        this.associateId = protobuf_1.protoInt64.zero;
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new ClientUser().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new ClientUser().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new ClientUser().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(ClientUser, a, b);
    }
}
exports.ClientUser = ClientUser;
ClientUser.runtime = protobuf_1.proto3;
ClientUser.typeName = "Scailo.ClientUser";
ClientUser.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "entity_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "metadata", kind: "message", T: base_scailo_pb_js_1.EmployeeMetadata },
    { no: 3, name: "approval_metadata", kind: "message", T: base_scailo_pb_js_1.ApprovalMetadata },
    { no: 4, name: "need_approval", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 5, name: "user_comment", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 10, name: "client_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 11, name: "user_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 12, name: "associate_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
]);
/**
 *
 * Describes the message consisting of the list of client users
 *
 * @generated from message Scailo.ClientUsersList
 */
class ClientUsersList extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * List of records
         *
         * @generated from field: repeated Scailo.ClientUser list = 1;
         */
        this.list = [];
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new ClientUsersList().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new ClientUsersList().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new ClientUsersList().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(ClientUsersList, a, b);
    }
}
exports.ClientUsersList = ClientUsersList;
ClientUsersList.runtime = protobuf_1.proto3;
ClientUsersList.typeName = "Scailo.ClientUsersList";
ClientUsersList.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "list", kind: "message", T: ClientUser, repeated: true },
]);
/**
 *
 * Describes the request payload to search client users
 *
 * @generated from message Scailo.ClientUsersSearchRequest
 */
class ClientUsersSearchRequest extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * If true, then returns only active records. If false, then returns only inactive records
         *
         * @generated from field: Scailo.BOOL_FILTER is_active = 1;
         */
        this.isActive = base_scailo_pb_js_1.BOOL_FILTER.BOOL_FILTER_ANY_UNSPECIFIED;
        /**
         * The number of records that need to be sent in the response. Returns all records if it is set to -1
         *
         * @generated from field: int64 count = 2;
         */
        this.count = protobuf_1.protoInt64.zero;
        /**
         * The number that need to be offset by before fetching the records
         *
         * @generated from field: uint64 offset = 3;
         */
        this.offset = protobuf_1.protoInt64.zero;
        /**
         * The entity UUID that is to be used to filter records
         *
         * @generated from field: string entity_uuid = 6;
         */
        this.entityUuid = "";
        /**
         * The status of the users
         *
         * @generated from field: Scailo.CLIENT_USER_STATUS status = 7;
         */
        this.status = CLIENT_USER_STATUS.CLIENT_USER_STATUS_ANY_UNSPECIFIED;
        /**
         * Stores the client ID
         *
         * @generated from field: uint64 client_id = 10;
         */
        this.clientId = protobuf_1.protoInt64.zero;
        /**
         * Stores the user ID
         *
         * @generated from field: uint64 user_id = 11;
         */
        this.userId = protobuf_1.protoInt64.zero;
        /**
         * Stores an optional associate ID
         *
         * @generated from field: uint64 associate_id = 12;
         */
        this.associateId = protobuf_1.protoInt64.zero;
        /**
         * Describes the key with which the search operation needs to be performed
         *
         * @generated from field: string search_key = 20;
         */
        this.searchKey = "";
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new ClientUsersSearchRequest().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new ClientUsersSearchRequest().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new ClientUsersSearchRequest().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(ClientUsersSearchRequest, a, b);
    }
}
exports.ClientUsersSearchRequest = ClientUsersSearchRequest;
ClientUsersSearchRequest.runtime = protobuf_1.proto3;
ClientUsersSearchRequest.typeName = "Scailo.ClientUsersSearchRequest";
ClientUsersSearchRequest.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "is_active", kind: "enum", T: protobuf_1.proto3.getEnumType(base_scailo_pb_js_1.BOOL_FILTER) },
    { no: 2, name: "count", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "offset", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 6, name: "entity_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 7, name: "status", kind: "enum", T: protobuf_1.proto3.getEnumType(CLIENT_USER_STATUS) },
    { no: 10, name: "client_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 11, name: "user_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 12, name: "associate_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 20, name: "search_key", kind: "scalar", T: 9 /* ScalarType.STRING */ },
]);
/**
 *
 * Describes the response to a pagination items request
 *
 * @generated from message Scailo.ClientsServicePaginatedUsersResponse
 */
class ClientsServicePaginatedUsersResponse extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * The number of records in this payload
         *
         * @generated from field: uint64 count = 1;
         */
        this.count = protobuf_1.protoInt64.zero;
        /**
         * The number that has been offset before fetching the records. This is the same value that has been sent as part of the pagination request
         *
         * @generated from field: uint64 offset = 2;
         */
        this.offset = protobuf_1.protoInt64.zero;
        /**
         * The total number of records that are available
         *
         * @generated from field: uint64 total = 3;
         */
        this.total = protobuf_1.protoInt64.zero;
        /**
         * The list of records
         *
         * @generated from field: repeated Scailo.ClientUser payload = 4;
         */
        this.payload = [];
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new ClientsServicePaginatedUsersResponse().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new ClientsServicePaginatedUsersResponse().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new ClientsServicePaginatedUsersResponse().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(ClientsServicePaginatedUsersResponse, a, b);
    }
}
exports.ClientsServicePaginatedUsersResponse = ClientsServicePaginatedUsersResponse;
ClientsServicePaginatedUsersResponse.runtime = protobuf_1.proto3;
ClientsServicePaginatedUsersResponse.typeName = "Scailo.ClientsServicePaginatedUsersResponse";
ClientsServicePaginatedUsersResponse.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "count", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 2, name: "offset", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 3, name: "total", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 4, name: "payload", kind: "message", T: ClientUser, repeated: true },
]);
