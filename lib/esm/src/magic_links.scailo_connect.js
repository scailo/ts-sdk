"use strict";
// @generated by protoc-gen-connect-es v0.12.0 with parameter "target=ts"
// @generated from file magic_links.scailo.proto (package Scailo, syntax proto3)
/* eslint-disable */
// @ts-nocheck
Object.defineProperty(exports, "__esModule", { value: true });
exports.MagicLinksService = void 0;
const magic_links_scailo_pb_js_1 = require("./magic_links.scailo_pb.js");
const protobuf_1 = require("@bufbuild/protobuf");
const base_scailo_pb_js_1 = require("./base.scailo_pb.js");
/**
 *
 * Describes the methods applicable on each magic link
 *
 * @generated from service Scailo.MagicLinksService
 */
exports.MagicLinksService = {
    typeName: "Scailo.MagicLinksService",
    methods: {
        /**
         * Create a magic link
         *
         * @generated from rpc Scailo.MagicLinksService.Create
         */
        create: {
            name: "Create",
            I: magic_links_scailo_pb_js_1.MagicLinksServiceCreateRequest,
            O: magic_links_scailo_pb_js_1.MagicLink,
            kind: protobuf_1.MethodKind.Unary,
        },
        /**
         * Update a magic link
         *
         * @generated from rpc Scailo.MagicLinksService.Update
         */
        update: {
            name: "Update",
            I: magic_links_scailo_pb_js_1.MagicLinksServiceUpdateRequest,
            O: magic_links_scailo_pb_js_1.MagicLink,
            kind: protobuf_1.MethodKind.Unary,
        },
        /**
         * Discard the magic link
         *
         * @generated from rpc Scailo.MagicLinksService.Discard
         */
        discard: {
            name: "Discard",
            I: base_scailo_pb_js_1.IdentifierUUIDWithUserComment,
            O: base_scailo_pb_js_1.IdentifierResponse,
            kind: protobuf_1.MethodKind.Unary,
        },
        /**
         * Restore the magic link
         *
         * @generated from rpc Scailo.MagicLinksService.Restore
         */
        restore: {
            name: "Restore",
            I: base_scailo_pb_js_1.IdentifierUUIDWithUserComment,
            O: base_scailo_pb_js_1.IdentifierResponse,
            kind: protobuf_1.MethodKind.Unary,
        },
        /**
         * View by ID
         *
         * @generated from rpc Scailo.MagicLinksService.ViewByID
         */
        viewByID: {
            name: "ViewByID",
            I: base_scailo_pb_js_1.Identifier,
            O: magic_links_scailo_pb_js_1.MagicLink,
            kind: protobuf_1.MethodKind.Unary,
        },
        /**
         * View by UUID
         *
         * @generated from rpc Scailo.MagicLinksService.ViewByUUID
         */
        viewByUUID: {
            name: "ViewByUUID",
            I: base_scailo_pb_js_1.IdentifierUUID,
            O: magic_links_scailo_pb_js_1.MagicLink,
            kind: protobuf_1.MethodKind.Unary,
        },
        /**
         * View only essential components that matches the given code
         *
         * @generated from rpc Scailo.MagicLinksService.ViewByCode
         */
        viewByCode: {
            name: "ViewByCode",
            I: magic_links_scailo_pb_js_1.MagicLinkServiceSearchByCodeReq,
            O: magic_links_scailo_pb_js_1.MagicLink,
            kind: protobuf_1.MethodKind.Unary,
        },
        /**
         * View all records with the given IDs
         *
         * @generated from rpc Scailo.MagicLinksService.ViewFromIDs
         */
        viewFromIDs: {
            name: "ViewFromIDs",
            I: base_scailo_pb_js_1.IdentifiersList,
            O: magic_links_scailo_pb_js_1.MagicLinksList,
            kind: protobuf_1.MethodKind.Unary,
        },
        /**
         * View all magic links
         *
         * @generated from rpc Scailo.MagicLinksService.ViewAll
         */
        viewAll: {
            name: "ViewAll",
            I: base_scailo_pb_js_1.ActiveStatus,
            O: magic_links_scailo_pb_js_1.MagicLinksList,
            kind: protobuf_1.MethodKind.Unary,
        },
        /**
         * View all magic links with the given entity UUID
         *
         * @generated from rpc Scailo.MagicLinksService.ViewAllForEntityUUID
         */
        viewAllForEntityUUID: {
            name: "ViewAllForEntityUUID",
            I: base_scailo_pb_js_1.IdentifierUUID,
            O: magic_links_scailo_pb_js_1.MagicLinksList,
            kind: protobuf_1.MethodKind.Unary,
        },
        /**
         * View magic links with pagination
         *
         * @generated from rpc Scailo.MagicLinksService.ViewWithPagination
         */
        viewWithPagination: {
            name: "ViewWithPagination",
            I: magic_links_scailo_pb_js_1.MagicLinksServicePaginationReq,
            O: magic_links_scailo_pb_js_1.MagicLinkPaginationResp,
            kind: protobuf_1.MethodKind.Unary,
        },
        /**
         * View access logs of magic link
         *
         * @generated from rpc Scailo.MagicLinksService.ViewAccessLogs
         */
        viewAccessLogs: {
            name: "ViewAccessLogs",
            I: base_scailo_pb_js_1.IdentifierUUID,
            O: magic_links_scailo_pb_js_1.MagicLinkAccessLogsList,
            kind: protobuf_1.MethodKind.Unary,
        },
        /**
         * View all magic links that match the given search key
         *
         * @generated from rpc Scailo.MagicLinksService.SearchAll
         */
        searchAll: {
            name: "SearchAll",
            I: magic_links_scailo_pb_js_1.MagicLinksServiceSearchAllReq,
            O: magic_links_scailo_pb_js_1.MagicLinksList,
            kind: protobuf_1.MethodKind.Unary,
        },
        /**
         * View all that match the given filter criteria
         *
         * @generated from rpc Scailo.MagicLinksService.Filter
         */
        filter: {
            name: "Filter",
            I: magic_links_scailo_pb_js_1.MagicLinksServiceFilterReq,
            O: magic_links_scailo_pb_js_1.MagicLinksList,
            kind: protobuf_1.MethodKind.Unary,
        },
        /**
         * Count all that match the given criteria
         *
         * @generated from rpc Scailo.MagicLinksService.Count
         */
        count: {
            name: "Count",
            I: magic_links_scailo_pb_js_1.MagicLinksServiceCountReq,
            O: base_scailo_pb_js_1.CountResponse,
            kind: protobuf_1.MethodKind.Unary,
        },
        /**
         * CSV operations
         * Download the CSV file that consists of the list of records according to the given filter request. The same file could also be used as a template for uploading records
         *
         * @generated from rpc Scailo.MagicLinksService.DownloadAsCSV
         */
        downloadAsCSV: {
            name: "DownloadAsCSV",
            I: magic_links_scailo_pb_js_1.MagicLinksServiceFilterReq,
            O: base_scailo_pb_js_1.StandardFile,
            kind: protobuf_1.MethodKind.Unary,
        },
    }
};
