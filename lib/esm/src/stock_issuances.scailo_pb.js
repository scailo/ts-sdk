"use strict";
// @generated by protoc-gen-es v1.5.1 with parameter "target=ts"
// @generated from file stock_issuances.scailo.proto (package Scailo, syntax proto3)
/* eslint-disable */
// @ts-nocheck
Object.defineProperty(exports, "__esModule", { value: true });
exports.StockIssuancesServicePaginatedItemsResponse = exports.StockIssuanceItemsSearchRequest = exports.StockIssuancesServiceSearchAllReq = exports.StockIssuancesServiceCountReq = exports.StockIssuancesServiceFilterReq = exports.StockIssuancesServicePaginationResponse = exports.StockIssuancesServicePaginationReq = exports.StockIssuancesServiceAlreadyAddedQuantityForSourceRequest = exports.StockIssuanceItemProspectiveInfoRequest = exports.StockIssuanceItemHistoryRequest = exports.StockIssuancesItemsList = exports.StockIssuancesList = exports.StockIssuanceItem = exports.StockIssuancesServiceItemUpdateRequest = exports.StockIssuancesServiceItemCreateRequest = exports.StockIssuance = exports.StockIssuancesServiceAutofillRequest = exports.StockIssuancesServiceUpdateRequest = exports.StockIssuancesServiceCreateRequest = exports.STOCK_ISSUANCE_ITEM_STATUS = exports.STOCK_ISSUANCE_ITEM_SORT_KEY = exports.STOCK_ISSUANCE_SORT_KEY = exports.STOCK_ISSUANCE_REF_FROM = void 0;
const protobuf_1 = require("@bufbuild/protobuf");
const forms_fields_data_scailo_pb_js_1 = require("./forms_fields_data.scailo_pb.js");
const base_scailo_pb_js_1 = require("./base.scailo_pb.js");
/**
 *
 * Stores all the possible references from which a stock issuance can be added
 *
 * @generated from enum Scailo.STOCK_ISSUANCE_REF_FROM
 */
var STOCK_ISSUANCE_REF_FROM;
(function (STOCK_ISSUANCE_REF_FROM) {
    /**
     * Used only in filters
     *
     * @generated from enum value: STOCK_ISSUANCE_REF_FROM_ANY_UNSPECIFIED = 0;
     */
    STOCK_ISSUANCE_REF_FROM[STOCK_ISSUANCE_REF_FROM["STOCK_ISSUANCE_REF_FROM_ANY_UNSPECIFIED"] = 0] = "STOCK_ISSUANCE_REF_FROM_ANY_UNSPECIFIED";
    /**
     * Denotes that the stock issuance originated from a production indent
     *
     * @generated from enum value: STOCK_ISSUANCE_REF_FROM_PRODUCTION_INDENT = 1;
     */
    STOCK_ISSUANCE_REF_FROM[STOCK_ISSUANCE_REF_FROM["STOCK_ISSUANCE_REF_FROM_PRODUCTION_INDENT"] = 1] = "STOCK_ISSUANCE_REF_FROM_PRODUCTION_INDENT";
    /**
     * Denotes that the stock issuance originated from an asset indent
     *
     * @generated from enum value: STOCK_ISSUANCE_REF_FROM_ASSET_INDENT = 2;
     */
    STOCK_ISSUANCE_REF_FROM[STOCK_ISSUANCE_REF_FROM["STOCK_ISSUANCE_REF_FROM_ASSET_INDENT"] = 2] = "STOCK_ISSUANCE_REF_FROM_ASSET_INDENT";
    /**
     * Denotes that the stock issuance originated from a replaceable indent
     *
     * @generated from enum value: STOCK_ISSUANCE_REF_FROM_REPLACEABLE_INDENT = 3;
     */
    STOCK_ISSUANCE_REF_FROM[STOCK_ISSUANCE_REF_FROM["STOCK_ISSUANCE_REF_FROM_REPLACEABLE_INDENT"] = 3] = "STOCK_ISSUANCE_REF_FROM_REPLACEABLE_INDENT";
})(STOCK_ISSUANCE_REF_FROM || (exports.STOCK_ISSUANCE_REF_FROM = STOCK_ISSUANCE_REF_FROM = {}));
// Retrieve enum metadata with: proto3.getEnumType(STOCK_ISSUANCE_REF_FROM)
protobuf_1.proto3.util.setEnumType(STOCK_ISSUANCE_REF_FROM, "Scailo.STOCK_ISSUANCE_REF_FROM", [
    { no: 0, name: "STOCK_ISSUANCE_REF_FROM_ANY_UNSPECIFIED" },
    { no: 1, name: "STOCK_ISSUANCE_REF_FROM_PRODUCTION_INDENT" },
    { no: 2, name: "STOCK_ISSUANCE_REF_FROM_ASSET_INDENT" },
    { no: 3, name: "STOCK_ISSUANCE_REF_FROM_REPLACEABLE_INDENT" },
]);
/**
 *
 * Describes the available sort keys
 *
 * @generated from enum Scailo.STOCK_ISSUANCE_SORT_KEY
 */
var STOCK_ISSUANCE_SORT_KEY;
(function (STOCK_ISSUANCE_SORT_KEY) {
    /**
     * Fetch ordered results by id
     *
     * @generated from enum value: STOCK_ISSUANCE_SORT_KEY_ID_UNSPECIFIED = 0;
     */
    STOCK_ISSUANCE_SORT_KEY[STOCK_ISSUANCE_SORT_KEY["STOCK_ISSUANCE_SORT_KEY_ID_UNSPECIFIED"] = 0] = "STOCK_ISSUANCE_SORT_KEY_ID_UNSPECIFIED";
    /**
     * Fetch ordered results by the creation timestamp
     *
     * @generated from enum value: STOCK_ISSUANCE_SORT_KEY_CREATED_AT = 1;
     */
    STOCK_ISSUANCE_SORT_KEY[STOCK_ISSUANCE_SORT_KEY["STOCK_ISSUANCE_SORT_KEY_CREATED_AT"] = 1] = "STOCK_ISSUANCE_SORT_KEY_CREATED_AT";
    /**
     * Fetch ordered results by the modified timestamp
     *
     * @generated from enum value: STOCK_ISSUANCE_SORT_KEY_MODIFIED_AT = 2;
     */
    STOCK_ISSUANCE_SORT_KEY[STOCK_ISSUANCE_SORT_KEY["STOCK_ISSUANCE_SORT_KEY_MODIFIED_AT"] = 2] = "STOCK_ISSUANCE_SORT_KEY_MODIFIED_AT";
    /**
     * Fetch ordered results by the approved on timestamp
     *
     * @generated from enum value: STOCK_ISSUANCE_SORT_KEY_APPROVED_ON = 3;
     */
    STOCK_ISSUANCE_SORT_KEY[STOCK_ISSUANCE_SORT_KEY["STOCK_ISSUANCE_SORT_KEY_APPROVED_ON"] = 3] = "STOCK_ISSUANCE_SORT_KEY_APPROVED_ON";
    /**
     * Fetch ordered results by the approved by field
     *
     * @generated from enum value: STOCK_ISSUANCE_SORT_KEY_APPROVED_BY = 4;
     */
    STOCK_ISSUANCE_SORT_KEY[STOCK_ISSUANCE_SORT_KEY["STOCK_ISSUANCE_SORT_KEY_APPROVED_BY"] = 4] = "STOCK_ISSUANCE_SORT_KEY_APPROVED_BY";
    /**
     * Fetch ordered results by the approver's role ID
     *
     * @generated from enum value: STOCK_ISSUANCE_SORT_KEY_APPROVER_ROLE_ID = 5;
     */
    STOCK_ISSUANCE_SORT_KEY[STOCK_ISSUANCE_SORT_KEY["STOCK_ISSUANCE_SORT_KEY_APPROVER_ROLE_ID"] = 5] = "STOCK_ISSUANCE_SORT_KEY_APPROVER_ROLE_ID";
    /**
     * Fetch ordered results by the approver's completed on timestamp
     *
     * @generated from enum value: STOCK_ISSUANCE_SORT_KEY_COMPLETED_ON = 6;
     */
    STOCK_ISSUANCE_SORT_KEY[STOCK_ISSUANCE_SORT_KEY["STOCK_ISSUANCE_SORT_KEY_COMPLETED_ON"] = 6] = "STOCK_ISSUANCE_SORT_KEY_COMPLETED_ON";
    /**
     * Fetch ordered results by the reference ID
     *
     * @generated from enum value: STOCK_ISSUANCE_SORT_KEY_REFERENCE_ID = 10;
     */
    STOCK_ISSUANCE_SORT_KEY[STOCK_ISSUANCE_SORT_KEY["STOCK_ISSUANCE_SORT_KEY_REFERENCE_ID"] = 10] = "STOCK_ISSUANCE_SORT_KEY_REFERENCE_ID";
    /**
     * Fetch ordered results by the final ref number
     *
     * @generated from enum value: STOCK_ISSUANCE_SORT_KEY_FINAL_REF_NUMBER = 11;
     */
    STOCK_ISSUANCE_SORT_KEY[STOCK_ISSUANCE_SORT_KEY["STOCK_ISSUANCE_SORT_KEY_FINAL_REF_NUMBER"] = 11] = "STOCK_ISSUANCE_SORT_KEY_FINAL_REF_NUMBER";
})(STOCK_ISSUANCE_SORT_KEY || (exports.STOCK_ISSUANCE_SORT_KEY = STOCK_ISSUANCE_SORT_KEY = {}));
// Retrieve enum metadata with: proto3.getEnumType(STOCK_ISSUANCE_SORT_KEY)
protobuf_1.proto3.util.setEnumType(STOCK_ISSUANCE_SORT_KEY, "Scailo.STOCK_ISSUANCE_SORT_KEY", [
    { no: 0, name: "STOCK_ISSUANCE_SORT_KEY_ID_UNSPECIFIED" },
    { no: 1, name: "STOCK_ISSUANCE_SORT_KEY_CREATED_AT" },
    { no: 2, name: "STOCK_ISSUANCE_SORT_KEY_MODIFIED_AT" },
    { no: 3, name: "STOCK_ISSUANCE_SORT_KEY_APPROVED_ON" },
    { no: 4, name: "STOCK_ISSUANCE_SORT_KEY_APPROVED_BY" },
    { no: 5, name: "STOCK_ISSUANCE_SORT_KEY_APPROVER_ROLE_ID" },
    { no: 6, name: "STOCK_ISSUANCE_SORT_KEY_COMPLETED_ON" },
    { no: 10, name: "STOCK_ISSUANCE_SORT_KEY_REFERENCE_ID" },
    { no: 11, name: "STOCK_ISSUANCE_SORT_KEY_FINAL_REF_NUMBER" },
]);
/**
 *
 * Describes the available sort keys
 *
 * @generated from enum Scailo.STOCK_ISSUANCE_ITEM_SORT_KEY
 */
var STOCK_ISSUANCE_ITEM_SORT_KEY;
(function (STOCK_ISSUANCE_ITEM_SORT_KEY) {
    /**
     * Fetch results by id
     *
     * @generated from enum value: STOCK_ISSUANCE_ITEM_SORT_KEY_ID_UNSPECIFIED = 0;
     */
    STOCK_ISSUANCE_ITEM_SORT_KEY[STOCK_ISSUANCE_ITEM_SORT_KEY["STOCK_ISSUANCE_ITEM_SORT_KEY_ID_UNSPECIFIED"] = 0] = "STOCK_ISSUANCE_ITEM_SORT_KEY_ID_UNSPECIFIED";
    /**
     * Fetch results by the creation timestamp
     *
     * @generated from enum value: STOCK_ISSUANCE_ITEM_SORT_KEY_CREATED_AT = 1;
     */
    STOCK_ISSUANCE_ITEM_SORT_KEY[STOCK_ISSUANCE_ITEM_SORT_KEY["STOCK_ISSUANCE_ITEM_SORT_KEY_CREATED_AT"] = 1] = "STOCK_ISSUANCE_ITEM_SORT_KEY_CREATED_AT";
    /**
     * Fetch results by the modified timestamp
     *
     * @generated from enum value: STOCK_ISSUANCE_ITEM_SORT_KEY_MODIFIED_AT = 2;
     */
    STOCK_ISSUANCE_ITEM_SORT_KEY[STOCK_ISSUANCE_ITEM_SORT_KEY["STOCK_ISSUANCE_ITEM_SORT_KEY_MODIFIED_AT"] = 2] = "STOCK_ISSUANCE_ITEM_SORT_KEY_MODIFIED_AT";
    /**
     * Fetch results by the approved on timestamp
     *
     * @generated from enum value: STOCK_ISSUANCE_ITEM_SORT_KEY_APPROVED_ON = 3;
     */
    STOCK_ISSUANCE_ITEM_SORT_KEY[STOCK_ISSUANCE_ITEM_SORT_KEY["STOCK_ISSUANCE_ITEM_SORT_KEY_APPROVED_ON"] = 3] = "STOCK_ISSUANCE_ITEM_SORT_KEY_APPROVED_ON";
    /**
     * Fetch results by the approved by field
     *
     * @generated from enum value: STOCK_ISSUANCE_ITEM_SORT_KEY_APPROVED_BY = 4;
     */
    STOCK_ISSUANCE_ITEM_SORT_KEY[STOCK_ISSUANCE_ITEM_SORT_KEY["STOCK_ISSUANCE_ITEM_SORT_KEY_APPROVED_BY"] = 4] = "STOCK_ISSUANCE_ITEM_SORT_KEY_APPROVED_BY";
    /**
     * Fetch results by the approver's role ID
     *
     * @generated from enum value: STOCK_ISSUANCE_ITEM_SORT_KEY_APPROVER_ROLE_ID = 5;
     */
    STOCK_ISSUANCE_ITEM_SORT_KEY[STOCK_ISSUANCE_ITEM_SORT_KEY["STOCK_ISSUANCE_ITEM_SORT_KEY_APPROVER_ROLE_ID"] = 5] = "STOCK_ISSUANCE_ITEM_SORT_KEY_APPROVER_ROLE_ID";
    /**
     * Fetch results by the family ID
     *
     * @generated from enum value: STOCK_ISSUANCE_ITEM_SORT_KEY_FAMILY_ID = 10;
     */
    STOCK_ISSUANCE_ITEM_SORT_KEY[STOCK_ISSUANCE_ITEM_SORT_KEY["STOCK_ISSUANCE_ITEM_SORT_KEY_FAMILY_ID"] = 10] = "STOCK_ISSUANCE_ITEM_SORT_KEY_FAMILY_ID";
    /**
     * Fetch results by the quantity
     *
     * @generated from enum value: STOCK_ISSUANCE_ITEM_SORT_KEY_INTERNAL_QUANTITY = 11;
     */
    STOCK_ISSUANCE_ITEM_SORT_KEY[STOCK_ISSUANCE_ITEM_SORT_KEY["STOCK_ISSUANCE_ITEM_SORT_KEY_INTERNAL_QUANTITY"] = 11] = "STOCK_ISSUANCE_ITEM_SORT_KEY_INTERNAL_QUANTITY";
})(STOCK_ISSUANCE_ITEM_SORT_KEY || (exports.STOCK_ISSUANCE_ITEM_SORT_KEY = STOCK_ISSUANCE_ITEM_SORT_KEY = {}));
// Retrieve enum metadata with: proto3.getEnumType(STOCK_ISSUANCE_ITEM_SORT_KEY)
protobuf_1.proto3.util.setEnumType(STOCK_ISSUANCE_ITEM_SORT_KEY, "Scailo.STOCK_ISSUANCE_ITEM_SORT_KEY", [
    { no: 0, name: "STOCK_ISSUANCE_ITEM_SORT_KEY_ID_UNSPECIFIED" },
    { no: 1, name: "STOCK_ISSUANCE_ITEM_SORT_KEY_CREATED_AT" },
    { no: 2, name: "STOCK_ISSUANCE_ITEM_SORT_KEY_MODIFIED_AT" },
    { no: 3, name: "STOCK_ISSUANCE_ITEM_SORT_KEY_APPROVED_ON" },
    { no: 4, name: "STOCK_ISSUANCE_ITEM_SORT_KEY_APPROVED_BY" },
    { no: 5, name: "STOCK_ISSUANCE_ITEM_SORT_KEY_APPROVER_ROLE_ID" },
    { no: 10, name: "STOCK_ISSUANCE_ITEM_SORT_KEY_FAMILY_ID" },
    { no: 11, name: "STOCK_ISSUANCE_ITEM_SORT_KEY_INTERNAL_QUANTITY" },
]);
/**
 *
 * Describes the applicable statuses of stock issuance items
 *
 * @generated from enum Scailo.STOCK_ISSUANCE_ITEM_STATUS
 */
var STOCK_ISSUANCE_ITEM_STATUS;
(function (STOCK_ISSUANCE_ITEM_STATUS) {
    /**
     * Denotes that status be disregarded. This is used only within search APIs
     *
     * @generated from enum value: STOCK_ISSUANCE_ITEM_STATUS_ANY_UNSPECIFIED = 0;
     */
    STOCK_ISSUANCE_ITEM_STATUS[STOCK_ISSUANCE_ITEM_STATUS["STOCK_ISSUANCE_ITEM_STATUS_ANY_UNSPECIFIED"] = 0] = "STOCK_ISSUANCE_ITEM_STATUS_ANY_UNSPECIFIED";
    /**
     * Denotes that the stock issuance items must have been approved
     *
     * @generated from enum value: STOCK_ISSUANCE_ITEM_STATUS_APPROVED = 1;
     */
    STOCK_ISSUANCE_ITEM_STATUS[STOCK_ISSUANCE_ITEM_STATUS["STOCK_ISSUANCE_ITEM_STATUS_APPROVED"] = 1] = "STOCK_ISSUANCE_ITEM_STATUS_APPROVED";
    /**
     * Denotes that the stock issuance items must be waiting for approval
     *
     * @generated from enum value: STOCK_ISSUANCE_ITEM_STATUS_UNAPPROVED = 2;
     */
    STOCK_ISSUANCE_ITEM_STATUS[STOCK_ISSUANCE_ITEM_STATUS["STOCK_ISSUANCE_ITEM_STATUS_UNAPPROVED"] = 2] = "STOCK_ISSUANCE_ITEM_STATUS_UNAPPROVED";
})(STOCK_ISSUANCE_ITEM_STATUS || (exports.STOCK_ISSUANCE_ITEM_STATUS = STOCK_ISSUANCE_ITEM_STATUS = {}));
// Retrieve enum metadata with: proto3.getEnumType(STOCK_ISSUANCE_ITEM_STATUS)
protobuf_1.proto3.util.setEnumType(STOCK_ISSUANCE_ITEM_STATUS, "Scailo.STOCK_ISSUANCE_ITEM_STATUS", [
    { no: 0, name: "STOCK_ISSUANCE_ITEM_STATUS_ANY_UNSPECIFIED" },
    { no: 1, name: "STOCK_ISSUANCE_ITEM_STATUS_APPROVED" },
    { no: 2, name: "STOCK_ISSUANCE_ITEM_STATUS_UNAPPROVED" },
]);
/**
 *
 * Describes the parameters necessary to create a record
 *
 * @generated from message Scailo.StockIssuancesServiceCreateRequest
 */
class StockIssuancesServiceCreateRequest extends protobuf_1.Message {
    /**
     * Stores a globally unique entity UUID. This will be set at the organization level
     *
     * @generated from field: string entity_uuid = 1;
     */
    entityUuid = "";
    /**
     * Stores any comment that the user might add during this operation
     *
     * @generated from field: string user_comment = 2;
     */
    userComment = "";
    /**
     * The associated vault folder ID
     *
     * @generated from field: uint64 vault_folder_id = 9;
     */
    vaultFolderId = protobuf_1.protoInt64.zero;
    /**
     * The reference ID of the stock issuance
     *
     * @generated from field: string reference_id = 10;
     */
    referenceId = "";
    /**
     * The associated reference
     *
     * @generated from field: Scailo.STOCK_ISSUANCE_REF_FROM ref_from = 12;
     */
    refFrom = STOCK_ISSUANCE_REF_FROM.STOCK_ISSUANCE_REF_FROM_ANY_UNSPECIFIED;
    /**
     * The associated ID of the reference
     *
     * @generated from field: uint64 ref_id = 13;
     */
    refId = protobuf_1.protoInt64.zero;
    /**
     * The list of dynamic forms
     *
     * @generated from field: repeated Scailo.FormFieldDatumCreateRequest form_data = 30;
     */
    formData = [];
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static runtime = protobuf_1.proto3;
    static typeName = "Scailo.StockIssuancesServiceCreateRequest";
    static fields = protobuf_1.proto3.util.newFieldList(() => [
        { no: 1, name: "entity_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 2, name: "user_comment", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 9, name: "vault_folder_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
        { no: 10, name: "reference_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 12, name: "ref_from", kind: "enum", T: protobuf_1.proto3.getEnumType(STOCK_ISSUANCE_REF_FROM) },
        { no: 13, name: "ref_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
        { no: 30, name: "form_data", kind: "message", T: forms_fields_data_scailo_pb_js_1.FormFieldDatumCreateRequest, repeated: true },
    ]);
    static fromBinary(bytes, options) {
        return new StockIssuancesServiceCreateRequest().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new StockIssuancesServiceCreateRequest().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new StockIssuancesServiceCreateRequest().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(StockIssuancesServiceCreateRequest, a, b);
    }
}
exports.StockIssuancesServiceCreateRequest = StockIssuancesServiceCreateRequest;
/**
 *
 * Describes the parameters necessary to update a record
 *
 * @generated from message Scailo.StockIssuancesServiceUpdateRequest
 */
class StockIssuancesServiceUpdateRequest extends protobuf_1.Message {
    /**
     * Stores any comment that the user might add during this operation
     *
     * @generated from field: string user_comment = 1;
     */
    userComment = "";
    /**
     * The ID of the record that needs to be updated
     *
     * @generated from field: uint64 id = 2;
     */
    id = protobuf_1.protoInt64.zero;
    /**
     * Optional boolean value that stores if a notification needs to be sent to users about the update to the record. This is useful when a subsequent operation needs to be performed immediately (such as send to verification after updating the revision)
     *
     * @generated from field: bool notify_users = 3;
     */
    notifyUsers = false;
    /**
     * The associated vault folder ID
     *
     * @generated from field: uint64 vault_folder_id = 9;
     */
    vaultFolderId = protobuf_1.protoInt64.zero;
    /**
     * The reference ID of the stock issuance
     *
     * @generated from field: string reference_id = 10;
     */
    referenceId = "";
    /**
     * The list of dynamic forms
     *
     * @generated from field: repeated Scailo.FormFieldDatumCreateRequest form_data = 30;
     */
    formData = [];
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static runtime = protobuf_1.proto3;
    static typeName = "Scailo.StockIssuancesServiceUpdateRequest";
    static fields = protobuf_1.proto3.util.newFieldList(() => [
        { no: 1, name: "user_comment", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 2, name: "id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
        { no: 3, name: "notify_users", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
        { no: 9, name: "vault_folder_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
        { no: 10, name: "reference_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 30, name: "form_data", kind: "message", T: forms_fields_data_scailo_pb_js_1.FormFieldDatumCreateRequest, repeated: true },
    ]);
    static fromBinary(bytes, options) {
        return new StockIssuancesServiceUpdateRequest().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new StockIssuancesServiceUpdateRequest().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new StockIssuancesServiceUpdateRequest().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(StockIssuancesServiceUpdateRequest, a, b);
    }
}
exports.StockIssuancesServiceUpdateRequest = StockIssuancesServiceUpdateRequest;
/**
 *
 * Describes the parameters necessary to perform an autofill request
 *
 * @generated from message Scailo.StockIssuancesServiceAutofillRequest
 */
class StockIssuancesServiceAutofillRequest extends protobuf_1.Message {
    /**
     * Stores any comment that the user might add during this operation
     *
     * @generated from field: string user_comment = 1;
     */
    userComment = "";
    /**
     * The UUID of the record that needs to be updated
     *
     * @generated from field: string uuid = 2;
     */
    uuid = "";
    /**
     * Stores if the inventory needs to be split into unit quantities
     *
     * @generated from field: bool split_into_unit_quantity = 10;
     */
    splitIntoUnitQuantity = false;
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static runtime = protobuf_1.proto3;
    static typeName = "Scailo.StockIssuancesServiceAutofillRequest";
    static fields = protobuf_1.proto3.util.newFieldList(() => [
        { no: 1, name: "user_comment", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 2, name: "uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 10, name: "split_into_unit_quantity", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    ]);
    static fromBinary(bytes, options) {
        return new StockIssuancesServiceAutofillRequest().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new StockIssuancesServiceAutofillRequest().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new StockIssuancesServiceAutofillRequest().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(StockIssuancesServiceAutofillRequest, a, b);
    }
}
exports.StockIssuancesServiceAutofillRequest = StockIssuancesServiceAutofillRequest;
/**
 *
 * Describes the parameters that are part of a standard response
 *
 * @generated from message Scailo.StockIssuance
 */
class StockIssuance extends protobuf_1.Message {
    /**
     * Stores a globally unique entity UUID. This will be set at the organization level
     *
     * @generated from field: string entity_uuid = 1;
     */
    entityUuid = "";
    /**
     * Stores the metadata of this stock issuance
     *
     * @generated from field: Scailo.EmployeeMetadata metadata = 2;
     */
    metadata;
    /**
     * Stores the approval metadata
     *
     * @generated from field: Scailo.ApprovalMetadata approval_metadata = 3;
     */
    approvalMetadata;
    /**
     * The status of this stock issuance
     *
     * @generated from field: Scailo.STANDARD_LIFECYCLE_STATUS status = 4;
     */
    status = base_scailo_pb_js_1.STANDARD_LIFECYCLE_STATUS.ANY_UNSPECIFIED;
    /**
     * Stores the logs of every operation performed on this stock issuance
     *
     * @generated from field: repeated Scailo.LogbookLogConciseSLC logs = 5;
     */
    logs = [];
    /**
     * The timestamp of when this stock issuance was marked as completed
     *
     * @generated from field: uint64 completed_on = 6;
     */
    completedOn = protobuf_1.protoInt64.zero;
    /**
     * The associated vault folder ID
     *
     * @generated from field: uint64 vault_folder_id = 9;
     */
    vaultFolderId = protobuf_1.protoInt64.zero;
    /**
     * The reference ID of the stock issuance
     *
     * @generated from field: string reference_id = 10;
     */
    referenceId = "";
    /**
     * The unique reference number that has been automatically generated
     *
     * @generated from field: string final_ref_number = 11;
     */
    finalRefNumber = "";
    /**
     * The associated reference
     *
     * @generated from field: Scailo.STOCK_ISSUANCE_REF_FROM ref_from = 12;
     */
    refFrom = STOCK_ISSUANCE_REF_FROM.STOCK_ISSUANCE_REF_FROM_ANY_UNSPECIFIED;
    /**
     * The associated ID of the reference
     *
     * @generated from field: uint64 ref_id = 13;
     */
    refId = protobuf_1.protoInt64.zero;
    /**
     * The location ID of where the record is created
     *
     * @generated from field: uint64 location_id = 15;
     */
    locationId = protobuf_1.protoInt64.zero;
    /**
     * The list of associated stock issuance items
     *
     * @generated from field: repeated Scailo.StockIssuanceItem list = 20;
     */
    list = [];
    /**
     * The list of dynamic forms
     *
     * @generated from field: repeated Scailo.FormFieldDatum form_data = 30;
     */
    formData = [];
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static runtime = protobuf_1.proto3;
    static typeName = "Scailo.StockIssuance";
    static fields = protobuf_1.proto3.util.newFieldList(() => [
        { no: 1, name: "entity_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 2, name: "metadata", kind: "message", T: base_scailo_pb_js_1.EmployeeMetadata },
        { no: 3, name: "approval_metadata", kind: "message", T: base_scailo_pb_js_1.ApprovalMetadata },
        { no: 4, name: "status", kind: "enum", T: protobuf_1.proto3.getEnumType(base_scailo_pb_js_1.STANDARD_LIFECYCLE_STATUS) },
        { no: 5, name: "logs", kind: "message", T: base_scailo_pb_js_1.LogbookLogConciseSLC, repeated: true },
        { no: 6, name: "completed_on", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
        { no: 9, name: "vault_folder_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
        { no: 10, name: "reference_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 11, name: "final_ref_number", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 12, name: "ref_from", kind: "enum", T: protobuf_1.proto3.getEnumType(STOCK_ISSUANCE_REF_FROM) },
        { no: 13, name: "ref_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
        { no: 15, name: "location_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
        { no: 20, name: "list", kind: "message", T: StockIssuanceItem, repeated: true },
        { no: 30, name: "form_data", kind: "message", T: forms_fields_data_scailo_pb_js_1.FormFieldDatum, repeated: true },
    ]);
    static fromBinary(bytes, options) {
        return new StockIssuance().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new StockIssuance().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new StockIssuance().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(StockIssuance, a, b);
    }
}
exports.StockIssuance = StockIssuance;
/**
 *
 * Describes the parameters required to add an item to a stock issuance
 *
 * @generated from message Scailo.StockIssuancesServiceItemCreateRequest
 */
class StockIssuancesServiceItemCreateRequest extends protobuf_1.Message {
    /**
     * Stores any comment that the user might add during this operation
     *
     * @generated from field: string user_comment = 1;
     */
    userComment = "";
    /**
     * Stores the stock issuance ID
     *
     * @generated from field: uint64 stock_issuance_id = 10;
     */
    stockIssuanceId = protobuf_1.protoInt64.zero;
    /**
     * Stores the family ID
     *
     * @generated from field: uint64 family_id = 11;
     */
    familyId = protobuf_1.protoInt64.zero;
    /**
     * The quantity (in cents) being admitted in internal unit of material
     *
     * @generated from field: uint64 internal_quantity = 12;
     */
    internalQuantity = protobuf_1.protoInt64.zero;
    /**
     * The hash of the inventory item
     *
     * @generated from field: string item_hash = 13;
     */
    itemHash = "";
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static runtime = protobuf_1.proto3;
    static typeName = "Scailo.StockIssuancesServiceItemCreateRequest";
    static fields = protobuf_1.proto3.util.newFieldList(() => [
        { no: 1, name: "user_comment", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 10, name: "stock_issuance_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
        { no: 11, name: "family_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
        { no: 12, name: "internal_quantity", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
        { no: 13, name: "item_hash", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    ]);
    static fromBinary(bytes, options) {
        return new StockIssuancesServiceItemCreateRequest().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new StockIssuancesServiceItemCreateRequest().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new StockIssuancesServiceItemCreateRequest().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(StockIssuancesServiceItemCreateRequest, a, b);
    }
}
exports.StockIssuancesServiceItemCreateRequest = StockIssuancesServiceItemCreateRequest;
/**
 *
 * Describes the parameters required to update an item in a stock issuance
 *
 * @generated from message Scailo.StockIssuancesServiceItemUpdateRequest
 */
class StockIssuancesServiceItemUpdateRequest extends protobuf_1.Message {
    /**
     * Stores any comment that the user might add during this operation
     *
     * @generated from field: string user_comment = 1;
     */
    userComment = "";
    /**
     * The ID of the record
     *
     * @generated from field: uint64 id = 2;
     */
    id = protobuf_1.protoInt64.zero;
    /**
     * The quantity (in cents) being admitted in internal unit of material
     *
     * @generated from field: uint64 internal_quantity = 12;
     */
    internalQuantity = protobuf_1.protoInt64.zero;
    /**
     * The hash of the inventory item
     *
     * @generated from field: string item_hash = 13;
     */
    itemHash = "";
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static runtime = protobuf_1.proto3;
    static typeName = "Scailo.StockIssuancesServiceItemUpdateRequest";
    static fields = protobuf_1.proto3.util.newFieldList(() => [
        { no: 1, name: "user_comment", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 2, name: "id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
        { no: 12, name: "internal_quantity", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
        { no: 13, name: "item_hash", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    ]);
    static fromBinary(bytes, options) {
        return new StockIssuancesServiceItemUpdateRequest().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new StockIssuancesServiceItemUpdateRequest().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new StockIssuancesServiceItemUpdateRequest().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(StockIssuancesServiceItemUpdateRequest, a, b);
    }
}
exports.StockIssuancesServiceItemUpdateRequest = StockIssuancesServiceItemUpdateRequest;
/**
 *
 * Describes the parameters that constitute an item associated to a stock issuance
 *
 * @generated from message Scailo.StockIssuanceItem
 */
class StockIssuanceItem extends protobuf_1.Message {
    /**
     * Stores a globally unique entity UUID. This will be set at the organization level
     *
     * @generated from field: string entity_uuid = 1;
     */
    entityUuid = "";
    /**
     * Stores the metadata of this stock issuance
     *
     * @generated from field: Scailo.EmployeeMetadata metadata = 2;
     */
    metadata;
    /**
     * Stores the approval metadata
     *
     * @generated from field: Scailo.ApprovalMetadata approval_metadata = 3;
     */
    approvalMetadata;
    /**
     * Denotes if this record requires approval (or has been approved)
     *
     * @generated from field: bool need_approval = 4;
     */
    needApproval = false;
    /**
     * Stores any comment that the user might have added during an operation
     *
     * @generated from field: string user_comment = 5;
     */
    userComment = "";
    /**
     * Stores the stock issuance ID
     *
     * @generated from field: uint64 stock_issuance_id = 10;
     */
    stockIssuanceId = protobuf_1.protoInt64.zero;
    /**
     * Stores the family ID
     *
     * @generated from field: uint64 family_id = 11;
     */
    familyId = protobuf_1.protoInt64.zero;
    /**
     * The quantity (in cents) being admitted in internal unit of material
     *
     * @generated from field: uint64 internal_quantity = 12;
     */
    internalQuantity = protobuf_1.protoInt64.zero;
    /**
     * The hash of the inventory item
     *
     * @generated from field: string item_hash = 13;
     */
    itemHash = "";
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static runtime = protobuf_1.proto3;
    static typeName = "Scailo.StockIssuanceItem";
    static fields = protobuf_1.proto3.util.newFieldList(() => [
        { no: 1, name: "entity_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 2, name: "metadata", kind: "message", T: base_scailo_pb_js_1.EmployeeMetadata },
        { no: 3, name: "approval_metadata", kind: "message", T: base_scailo_pb_js_1.ApprovalMetadata },
        { no: 4, name: "need_approval", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
        { no: 5, name: "user_comment", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 10, name: "stock_issuance_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
        { no: 11, name: "family_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
        { no: 12, name: "internal_quantity", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
        { no: 13, name: "item_hash", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    ]);
    static fromBinary(bytes, options) {
        return new StockIssuanceItem().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new StockIssuanceItem().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new StockIssuanceItem().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(StockIssuanceItem, a, b);
    }
}
exports.StockIssuanceItem = StockIssuanceItem;
/**
 *
 * Describes the message consisting of the list of stock issuances
 *
 * @generated from message Scailo.StockIssuancesList
 */
class StockIssuancesList extends protobuf_1.Message {
    /**
     * List of records
     *
     * @generated from field: repeated Scailo.StockIssuance list = 1;
     */
    list = [];
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static runtime = protobuf_1.proto3;
    static typeName = "Scailo.StockIssuancesList";
    static fields = protobuf_1.proto3.util.newFieldList(() => [
        { no: 1, name: "list", kind: "message", T: StockIssuance, repeated: true },
    ]);
    static fromBinary(bytes, options) {
        return new StockIssuancesList().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new StockIssuancesList().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new StockIssuancesList().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(StockIssuancesList, a, b);
    }
}
exports.StockIssuancesList = StockIssuancesList;
/**
 *
 * Describes the message consisting of the list of stock issuance items
 *
 * @generated from message Scailo.StockIssuancesItemsList
 */
class StockIssuancesItemsList extends protobuf_1.Message {
    /**
     * List of records
     *
     * @generated from field: repeated Scailo.StockIssuanceItem list = 1;
     */
    list = [];
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static runtime = protobuf_1.proto3;
    static typeName = "Scailo.StockIssuancesItemsList";
    static fields = protobuf_1.proto3.util.newFieldList(() => [
        { no: 1, name: "list", kind: "message", T: StockIssuanceItem, repeated: true },
    ]);
    static fromBinary(bytes, options) {
        return new StockIssuancesItemsList().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new StockIssuancesItemsList().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new StockIssuancesItemsList().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(StockIssuancesItemsList, a, b);
    }
}
exports.StockIssuancesItemsList = StockIssuancesItemsList;
/**
 *
 * Describes the parameters that are required to retrieve the history of the record
 *
 * @generated from message Scailo.StockIssuanceItemHistoryRequest
 */
class StockIssuanceItemHistoryRequest extends protobuf_1.Message {
    /**
     * Stores the stock issuance ID
     *
     * @generated from field: uint64 stock_issuance_id = 10;
     */
    stockIssuanceId = protobuf_1.protoInt64.zero;
    /**
     * Stores the family ID
     *
     * @generated from field: uint64 family_id = 11;
     */
    familyId = protobuf_1.protoInt64.zero;
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static runtime = protobuf_1.proto3;
    static typeName = "Scailo.StockIssuanceItemHistoryRequest";
    static fields = protobuf_1.proto3.util.newFieldList(() => [
        { no: 10, name: "stock_issuance_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
        { no: 11, name: "family_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    ]);
    static fromBinary(bytes, options) {
        return new StockIssuanceItemHistoryRequest().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new StockIssuanceItemHistoryRequest().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new StockIssuanceItemHistoryRequest().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(StockIssuanceItemHistoryRequest, a, b);
    }
}
exports.StockIssuanceItemHistoryRequest = StockIssuanceItemHistoryRequest;
/**
 *
 * Describes the parameters that are required to retrieve the info of a prospective stock issuance item
 *
 * @generated from message Scailo.StockIssuanceItemProspectiveInfoRequest
 */
class StockIssuanceItemProspectiveInfoRequest extends protobuf_1.Message {
    /**
     * Stores the stock issuance ID
     *
     * @generated from field: uint64 stock_issuance_id = 10;
     */
    stockIssuanceId = protobuf_1.protoInt64.zero;
    /**
     * Stores the family ID
     *
     * @generated from field: uint64 family_id = 11;
     */
    familyId = protobuf_1.protoInt64.zero;
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static runtime = protobuf_1.proto3;
    static typeName = "Scailo.StockIssuanceItemProspectiveInfoRequest";
    static fields = protobuf_1.proto3.util.newFieldList(() => [
        { no: 10, name: "stock_issuance_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
        { no: 11, name: "family_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    ]);
    static fromBinary(bytes, options) {
        return new StockIssuanceItemProspectiveInfoRequest().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new StockIssuanceItemProspectiveInfoRequest().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new StockIssuanceItemProspectiveInfoRequest().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(StockIssuanceItemProspectiveInfoRequest, a, b);
    }
}
exports.StockIssuanceItemProspectiveInfoRequest = StockIssuanceItemProspectiveInfoRequest;
/**
 *
 * Describes the request payload to retrieve the quantity that has already been added for the specific ref_from, ref_id and family_id
 *
 * @generated from message Scailo.StockIssuancesServiceAlreadyAddedQuantityForSourceRequest
 */
class StockIssuancesServiceAlreadyAddedQuantityForSourceRequest extends protobuf_1.Message {
    /**
     * The associated reference
     *
     * @generated from field: Scailo.STOCK_ISSUANCE_REF_FROM ref_from = 1;
     */
    refFrom = STOCK_ISSUANCE_REF_FROM.STOCK_ISSUANCE_REF_FROM_ANY_UNSPECIFIED;
    /**
     * The associated ID of the reference
     *
     * @generated from field: uint64 ref_id = 2;
     */
    refId = protobuf_1.protoInt64.zero;
    /**
     * The associated family ID
     *
     * @generated from field: uint64 family_id = 3;
     */
    familyId = protobuf_1.protoInt64.zero;
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static runtime = protobuf_1.proto3;
    static typeName = "Scailo.StockIssuancesServiceAlreadyAddedQuantityForSourceRequest";
    static fields = protobuf_1.proto3.util.newFieldList(() => [
        { no: 1, name: "ref_from", kind: "enum", T: protobuf_1.proto3.getEnumType(STOCK_ISSUANCE_REF_FROM) },
        { no: 2, name: "ref_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
        { no: 3, name: "family_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    ]);
    static fromBinary(bytes, options) {
        return new StockIssuancesServiceAlreadyAddedQuantityForSourceRequest().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new StockIssuancesServiceAlreadyAddedQuantityForSourceRequest().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new StockIssuancesServiceAlreadyAddedQuantityForSourceRequest().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(StockIssuancesServiceAlreadyAddedQuantityForSourceRequest, a, b);
    }
}
exports.StockIssuancesServiceAlreadyAddedQuantityForSourceRequest = StockIssuancesServiceAlreadyAddedQuantityForSourceRequest;
/**
 *
 * Describes a pagination request to retrieve records
 *
 * @generated from message Scailo.StockIssuancesServicePaginationReq
 */
class StockIssuancesServicePaginationReq extends protobuf_1.Message {
    /**
     * If true, then returns only active records. If false, then returns only inactive records
     *
     * @generated from field: Scailo.BOOL_FILTER is_active = 1;
     */
    isActive = base_scailo_pb_js_1.BOOL_FILTER.BOOL_FILTER_ANY_UNSPECIFIED;
    /**
     * The number of records that need to be sent in the response
     *
     * @generated from field: int64 count = 2;
     */
    count = protobuf_1.protoInt64.zero;
    /**
     * The number that need to be offset by before fetching the records
     *
     * @generated from field: uint64 offset = 3;
     */
    offset = protobuf_1.protoInt64.zero;
    /**
     * The sort order that is to be used to fetch the pagination response
     *
     * @generated from field: Scailo.SORT_ORDER sort_order = 4;
     */
    sortOrder = base_scailo_pb_js_1.SORT_ORDER.ASCENDING_UNSPECIFIED;
    /**
     * The sort key that is to be used to fetch the pagination response
     *
     * @generated from field: Scailo.STOCK_ISSUANCE_SORT_KEY sort_key = 5;
     */
    sortKey = STOCK_ISSUANCE_SORT_KEY.STOCK_ISSUANCE_SORT_KEY_ID_UNSPECIFIED;
    /**
     * The status of this stock issuance
     *
     * @generated from field: Scailo.STANDARD_LIFECYCLE_STATUS status = 6;
     */
    status = base_scailo_pb_js_1.STANDARD_LIFECYCLE_STATUS.ANY_UNSPECIFIED;
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static runtime = protobuf_1.proto3;
    static typeName = "Scailo.StockIssuancesServicePaginationReq";
    static fields = protobuf_1.proto3.util.newFieldList(() => [
        { no: 1, name: "is_active", kind: "enum", T: protobuf_1.proto3.getEnumType(base_scailo_pb_js_1.BOOL_FILTER) },
        { no: 2, name: "count", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
        { no: 3, name: "offset", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
        { no: 4, name: "sort_order", kind: "enum", T: protobuf_1.proto3.getEnumType(base_scailo_pb_js_1.SORT_ORDER) },
        { no: 5, name: "sort_key", kind: "enum", T: protobuf_1.proto3.getEnumType(STOCK_ISSUANCE_SORT_KEY) },
        { no: 6, name: "status", kind: "enum", T: protobuf_1.proto3.getEnumType(base_scailo_pb_js_1.STANDARD_LIFECYCLE_STATUS) },
    ]);
    static fromBinary(bytes, options) {
        return new StockIssuancesServicePaginationReq().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new StockIssuancesServicePaginationReq().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new StockIssuancesServicePaginationReq().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(StockIssuancesServicePaginationReq, a, b);
    }
}
exports.StockIssuancesServicePaginationReq = StockIssuancesServicePaginationReq;
/**
 *
 * Describes the response to a pagination request
 *
 * @generated from message Scailo.StockIssuancesServicePaginationResponse
 */
class StockIssuancesServicePaginationResponse extends protobuf_1.Message {
    /**
     * The number of records in this payload
     *
     * @generated from field: uint64 count = 1;
     */
    count = protobuf_1.protoInt64.zero;
    /**
     * The number that has been offset before fetching the records. This is the same value that has been sent as part of the pagination request
     *
     * @generated from field: uint64 offset = 2;
     */
    offset = protobuf_1.protoInt64.zero;
    /**
     * The total number of records that are available
     *
     * @generated from field: uint64 total = 3;
     */
    total = protobuf_1.protoInt64.zero;
    /**
     * The list of records
     *
     * @generated from field: repeated Scailo.StockIssuance payload = 4;
     */
    payload = [];
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static runtime = protobuf_1.proto3;
    static typeName = "Scailo.StockIssuancesServicePaginationResponse";
    static fields = protobuf_1.proto3.util.newFieldList(() => [
        { no: 1, name: "count", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
        { no: 2, name: "offset", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
        { no: 3, name: "total", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
        { no: 4, name: "payload", kind: "message", T: StockIssuance, repeated: true },
    ]);
    static fromBinary(bytes, options) {
        return new StockIssuancesServicePaginationResponse().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new StockIssuancesServicePaginationResponse().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new StockIssuancesServicePaginationResponse().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(StockIssuancesServicePaginationResponse, a, b);
    }
}
exports.StockIssuancesServicePaginationResponse = StockIssuancesServicePaginationResponse;
/**
 *
 * Describes the base request payload of a filter search
 *
 * @generated from message Scailo.StockIssuancesServiceFilterReq
 */
class StockIssuancesServiceFilterReq extends protobuf_1.Message {
    /**
     * If true, then returns only active records. If false, then returns only inactive records
     *
     * @generated from field: Scailo.BOOL_FILTER is_active = 1;
     */
    isActive = base_scailo_pb_js_1.BOOL_FILTER.BOOL_FILTER_ANY_UNSPECIFIED;
    /**
     * The number of records that need to be sent in the response. Returns all records if it is set to -1
     *
     * @generated from field: int64 count = 2;
     */
    count = protobuf_1.protoInt64.zero;
    /**
     * The number that need to be offset by before fetching the records
     *
     * @generated from field: uint64 offset = 3;
     */
    offset = protobuf_1.protoInt64.zero;
    /**
     * The sort order that is to be used to fetch the pagination response
     *
     * @generated from field: Scailo.SORT_ORDER sort_order = 4;
     */
    sortOrder = base_scailo_pb_js_1.SORT_ORDER.ASCENDING_UNSPECIFIED;
    /**
     * The sort key that is to be used to fetch the pagination response
     *
     * @generated from field: Scailo.STOCK_ISSUANCE_SORT_KEY sort_key = 5;
     */
    sortKey = STOCK_ISSUANCE_SORT_KEY.STOCK_ISSUANCE_SORT_KEY_ID_UNSPECIFIED;
    /**
     * The minimum timestamp that needs to be considered to filter by creation
     *
     * @generated from field: uint64 creation_timestamp_start = 101;
     */
    creationTimestampStart = protobuf_1.protoInt64.zero;
    /**
     * The maximum timestamp that needs to be considered to filter by creation
     *
     * @generated from field: uint64 creation_timestamp_end = 102;
     */
    creationTimestampEnd = protobuf_1.protoInt64.zero;
    /**
     * The minimum timestamp that needs to be considered to filter by modification
     *
     * @generated from field: uint64 modification_timestamp_start = 103;
     */
    modificationTimestampStart = protobuf_1.protoInt64.zero;
    /**
     * The maximum timestamp that needs to be considered to filter by modification
     *
     * @generated from field: uint64 modification_timestamp_end = 104;
     */
    modificationTimestampEnd = protobuf_1.protoInt64.zero;
    /**
     * The entity UUID that is to be used to filter records
     *
     * @generated from field: string entity_uuid = 8;
     */
    entityUuid = "";
    /**
     * The status of this stock issuance
     *
     * @generated from field: Scailo.STANDARD_LIFECYCLE_STATUS status = 10;
     */
    status = base_scailo_pb_js_1.STANDARD_LIFECYCLE_STATUS.ANY_UNSPECIFIED;
    /**
     * The start range of approved timestamp
     *
     * @generated from field: uint64 approved_on_start = 11;
     */
    approvedOnStart = protobuf_1.protoInt64.zero;
    /**
     * The end range of approved timestamp
     *
     * @generated from field: uint64 approved_on_end = 12;
     */
    approvedOnEnd = protobuf_1.protoInt64.zero;
    /**
     * The ID of the approver
     *
     * @generated from field: uint64 approved_by_user_id = 13;
     */
    approvedByUserId = protobuf_1.protoInt64.zero;
    /**
     * The role ID of the approver
     *
     * @generated from field: uint64 approver_role_id = 14;
     */
    approverRoleId = protobuf_1.protoInt64.zero;
    /**
     * The start range of completed timestamp
     *
     * @generated from field: uint64 completed_on_start = 15;
     */
    completedOnStart = protobuf_1.protoInt64.zero;
    /**
     * The end range of completed timestamp
     *
     * @generated from field: uint64 completed_on_end = 16;
     */
    completedOnEnd = protobuf_1.protoInt64.zero;
    /**
     * The reference ID of the stock issuance
     *
     * @generated from field: string reference_id = 20;
     */
    referenceId = "";
    /**
     * The unique reference number that has been automatically generated
     *
     * @generated from field: string final_ref_number = 21;
     */
    finalRefNumber = "";
    /**
     * The associated reference
     *
     * @generated from field: Scailo.STOCK_ISSUANCE_REF_FROM ref_from = 22;
     */
    refFrom = STOCK_ISSUANCE_REF_FROM.STOCK_ISSUANCE_REF_FROM_ANY_UNSPECIFIED;
    /**
     * The associated ID of the reference
     *
     * @generated from field: uint64 ref_id = 23;
     */
    refId = protobuf_1.protoInt64.zero;
    /**
     * The location ID of where the record is created
     *
     * @generated from field: uint64 location_id = 25;
     */
    locationId = protobuf_1.protoInt64.zero;
    /**
     * The ID of the family
     *
     * @generated from field: uint64 family_id = 30;
     */
    familyId = protobuf_1.protoInt64.zero;
    /**
     * The list of form data filters
     *
     * @generated from field: repeated Scailo.FormFieldDatumFilterRequest form_data = 500;
     */
    formData = [];
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static runtime = protobuf_1.proto3;
    static typeName = "Scailo.StockIssuancesServiceFilterReq";
    static fields = protobuf_1.proto3.util.newFieldList(() => [
        { no: 1, name: "is_active", kind: "enum", T: protobuf_1.proto3.getEnumType(base_scailo_pb_js_1.BOOL_FILTER) },
        { no: 2, name: "count", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
        { no: 3, name: "offset", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
        { no: 4, name: "sort_order", kind: "enum", T: protobuf_1.proto3.getEnumType(base_scailo_pb_js_1.SORT_ORDER) },
        { no: 5, name: "sort_key", kind: "enum", T: protobuf_1.proto3.getEnumType(STOCK_ISSUANCE_SORT_KEY) },
        { no: 101, name: "creation_timestamp_start", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
        { no: 102, name: "creation_timestamp_end", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
        { no: 103, name: "modification_timestamp_start", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
        { no: 104, name: "modification_timestamp_end", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
        { no: 8, name: "entity_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 10, name: "status", kind: "enum", T: protobuf_1.proto3.getEnumType(base_scailo_pb_js_1.STANDARD_LIFECYCLE_STATUS) },
        { no: 11, name: "approved_on_start", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
        { no: 12, name: "approved_on_end", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
        { no: 13, name: "approved_by_user_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
        { no: 14, name: "approver_role_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
        { no: 15, name: "completed_on_start", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
        { no: 16, name: "completed_on_end", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
        { no: 20, name: "reference_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 21, name: "final_ref_number", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 22, name: "ref_from", kind: "enum", T: protobuf_1.proto3.getEnumType(STOCK_ISSUANCE_REF_FROM) },
        { no: 23, name: "ref_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
        { no: 25, name: "location_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
        { no: 30, name: "family_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
        { no: 500, name: "form_data", kind: "message", T: forms_fields_data_scailo_pb_js_1.FormFieldDatumFilterRequest, repeated: true },
    ]);
    static fromBinary(bytes, options) {
        return new StockIssuancesServiceFilterReq().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new StockIssuancesServiceFilterReq().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new StockIssuancesServiceFilterReq().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(StockIssuancesServiceFilterReq, a, b);
    }
}
exports.StockIssuancesServiceFilterReq = StockIssuancesServiceFilterReq;
/**
 *
 * Describes the base request payload of a count search
 *
 * @generated from message Scailo.StockIssuancesServiceCountReq
 */
class StockIssuancesServiceCountReq extends protobuf_1.Message {
    /**
     * If true, then returns only active records. If false, then returns only inactive records
     *
     * @generated from field: Scailo.BOOL_FILTER is_active = 1;
     */
    isActive = base_scailo_pb_js_1.BOOL_FILTER.BOOL_FILTER_ANY_UNSPECIFIED;
    /**
     * The minimum timestamp that needs to be considered to filter by creation
     *
     * @generated from field: uint64 creation_timestamp_start = 101;
     */
    creationTimestampStart = protobuf_1.protoInt64.zero;
    /**
     * The maximum timestamp that needs to be considered to filter by creation
     *
     * @generated from field: uint64 creation_timestamp_end = 102;
     */
    creationTimestampEnd = protobuf_1.protoInt64.zero;
    /**
     * The minimum timestamp that needs to be considered to filter by modification
     *
     * @generated from field: uint64 modification_timestamp_start = 103;
     */
    modificationTimestampStart = protobuf_1.protoInt64.zero;
    /**
     * The maximum timestamp that needs to be considered to filter by modification
     *
     * @generated from field: uint64 modification_timestamp_end = 104;
     */
    modificationTimestampEnd = protobuf_1.protoInt64.zero;
    /**
     * The entity UUID that is to be used to filter records
     *
     * @generated from field: string entity_uuid = 8;
     */
    entityUuid = "";
    /**
     * The status of this stock issuance
     *
     * @generated from field: Scailo.STANDARD_LIFECYCLE_STATUS status = 10;
     */
    status = base_scailo_pb_js_1.STANDARD_LIFECYCLE_STATUS.ANY_UNSPECIFIED;
    /**
     * The start range of approved timestamp
     *
     * @generated from field: uint64 approved_on_start = 11;
     */
    approvedOnStart = protobuf_1.protoInt64.zero;
    /**
     * The end range of approved timestamp
     *
     * @generated from field: uint64 approved_on_end = 12;
     */
    approvedOnEnd = protobuf_1.protoInt64.zero;
    /**
     * The ID of the approver
     *
     * @generated from field: uint64 approved_by_user_id = 13;
     */
    approvedByUserId = protobuf_1.protoInt64.zero;
    /**
     * The role ID of the approver
     *
     * @generated from field: uint64 approver_role_id = 14;
     */
    approverRoleId = protobuf_1.protoInt64.zero;
    /**
     * The start range of completed timestamp
     *
     * @generated from field: uint64 completed_on_start = 15;
     */
    completedOnStart = protobuf_1.protoInt64.zero;
    /**
     * The end range of completed timestamp
     *
     * @generated from field: uint64 completed_on_end = 16;
     */
    completedOnEnd = protobuf_1.protoInt64.zero;
    /**
     * The reference ID of the stock issuance
     *
     * @generated from field: string reference_id = 20;
     */
    referenceId = "";
    /**
     * The unique reference number that has been automatically generated
     *
     * @generated from field: string final_ref_number = 21;
     */
    finalRefNumber = "";
    /**
     * The associated reference
     *
     * @generated from field: Scailo.STOCK_ISSUANCE_REF_FROM ref_from = 22;
     */
    refFrom = STOCK_ISSUANCE_REF_FROM.STOCK_ISSUANCE_REF_FROM_ANY_UNSPECIFIED;
    /**
     * The associated ID of the reference
     *
     * @generated from field: uint64 ref_id = 23;
     */
    refId = protobuf_1.protoInt64.zero;
    /**
     * The location ID of where the record is created
     *
     * @generated from field: uint64 location_id = 25;
     */
    locationId = protobuf_1.protoInt64.zero;
    /**
     * The ID of the family
     *
     * @generated from field: uint64 family_id = 30;
     */
    familyId = protobuf_1.protoInt64.zero;
    /**
     * The list of form data filters
     *
     * @generated from field: repeated Scailo.FormFieldDatumFilterRequest form_data = 500;
     */
    formData = [];
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static runtime = protobuf_1.proto3;
    static typeName = "Scailo.StockIssuancesServiceCountReq";
    static fields = protobuf_1.proto3.util.newFieldList(() => [
        { no: 1, name: "is_active", kind: "enum", T: protobuf_1.proto3.getEnumType(base_scailo_pb_js_1.BOOL_FILTER) },
        { no: 101, name: "creation_timestamp_start", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
        { no: 102, name: "creation_timestamp_end", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
        { no: 103, name: "modification_timestamp_start", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
        { no: 104, name: "modification_timestamp_end", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
        { no: 8, name: "entity_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 10, name: "status", kind: "enum", T: protobuf_1.proto3.getEnumType(base_scailo_pb_js_1.STANDARD_LIFECYCLE_STATUS) },
        { no: 11, name: "approved_on_start", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
        { no: 12, name: "approved_on_end", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
        { no: 13, name: "approved_by_user_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
        { no: 14, name: "approver_role_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
        { no: 15, name: "completed_on_start", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
        { no: 16, name: "completed_on_end", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
        { no: 20, name: "reference_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 21, name: "final_ref_number", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 22, name: "ref_from", kind: "enum", T: protobuf_1.proto3.getEnumType(STOCK_ISSUANCE_REF_FROM) },
        { no: 23, name: "ref_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
        { no: 25, name: "location_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
        { no: 30, name: "family_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
        { no: 500, name: "form_data", kind: "message", T: forms_fields_data_scailo_pb_js_1.FormFieldDatumFilterRequest, repeated: true },
    ]);
    static fromBinary(bytes, options) {
        return new StockIssuancesServiceCountReq().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new StockIssuancesServiceCountReq().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new StockIssuancesServiceCountReq().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(StockIssuancesServiceCountReq, a, b);
    }
}
exports.StockIssuancesServiceCountReq = StockIssuancesServiceCountReq;
/**
 *
 * Describes the request payload for performing a generic search operation on records
 *
 * @generated from message Scailo.StockIssuancesServiceSearchAllReq
 */
class StockIssuancesServiceSearchAllReq extends protobuf_1.Message {
    /**
     * If true, then returns only active records. If false, then returns only inactive records
     *
     * @generated from field: Scailo.BOOL_FILTER is_active = 1;
     */
    isActive = base_scailo_pb_js_1.BOOL_FILTER.BOOL_FILTER_ANY_UNSPECIFIED;
    /**
     * The number of records that need to be sent in the response. Returns all records if it is set to -1
     *
     * @generated from field: int64 count = 2;
     */
    count = protobuf_1.protoInt64.zero;
    /**
     * The number that need to be offset by before fetching the records
     *
     * @generated from field: uint64 offset = 3;
     */
    offset = protobuf_1.protoInt64.zero;
    /**
     * The sort order that is to be used to fetch the pagination response
     *
     * @generated from field: Scailo.SORT_ORDER sort_order = 4;
     */
    sortOrder = base_scailo_pb_js_1.SORT_ORDER.ASCENDING_UNSPECIFIED;
    /**
     * The sort key that is to be used to fetch the pagination response
     *
     * @generated from field: Scailo.STOCK_ISSUANCE_SORT_KEY sort_key = 5;
     */
    sortKey = STOCK_ISSUANCE_SORT_KEY.STOCK_ISSUANCE_SORT_KEY_ID_UNSPECIFIED;
    /**
     * The entity UUID that is to be used to filter records
     *
     * @generated from field: string entity_uuid = 6;
     */
    entityUuid = "";
    /**
     * Limit the search space to the given status
     *
     * @generated from field: Scailo.STANDARD_LIFECYCLE_STATUS status = 10;
     */
    status = base_scailo_pb_js_1.STANDARD_LIFECYCLE_STATUS.ANY_UNSPECIFIED;
    /**
     * Describes the key with which the search operation needs to be performed
     *
     * @generated from field: string search_key = 11;
     */
    searchKey = "";
    /**
     * The associated reference
     *
     * @generated from field: Scailo.STOCK_ISSUANCE_REF_FROM ref_from = 22;
     */
    refFrom = STOCK_ISSUANCE_REF_FROM.STOCK_ISSUANCE_REF_FROM_ANY_UNSPECIFIED;
    /**
     * The associated ID of the reference
     *
     * @generated from field: uint64 ref_id = 23;
     */
    refId = protobuf_1.protoInt64.zero;
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static runtime = protobuf_1.proto3;
    static typeName = "Scailo.StockIssuancesServiceSearchAllReq";
    static fields = protobuf_1.proto3.util.newFieldList(() => [
        { no: 1, name: "is_active", kind: "enum", T: protobuf_1.proto3.getEnumType(base_scailo_pb_js_1.BOOL_FILTER) },
        { no: 2, name: "count", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
        { no: 3, name: "offset", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
        { no: 4, name: "sort_order", kind: "enum", T: protobuf_1.proto3.getEnumType(base_scailo_pb_js_1.SORT_ORDER) },
        { no: 5, name: "sort_key", kind: "enum", T: protobuf_1.proto3.getEnumType(STOCK_ISSUANCE_SORT_KEY) },
        { no: 6, name: "entity_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 10, name: "status", kind: "enum", T: protobuf_1.proto3.getEnumType(base_scailo_pb_js_1.STANDARD_LIFECYCLE_STATUS) },
        { no: 11, name: "search_key", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 22, name: "ref_from", kind: "enum", T: protobuf_1.proto3.getEnumType(STOCK_ISSUANCE_REF_FROM) },
        { no: 23, name: "ref_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    ]);
    static fromBinary(bytes, options) {
        return new StockIssuancesServiceSearchAllReq().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new StockIssuancesServiceSearchAllReq().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new StockIssuancesServiceSearchAllReq().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(StockIssuancesServiceSearchAllReq, a, b);
    }
}
exports.StockIssuancesServiceSearchAllReq = StockIssuancesServiceSearchAllReq;
/**
 *
 * Describes the request payload to retrieve approved or unapproved items.
 *
 * @generated from message Scailo.StockIssuanceItemsSearchRequest
 */
class StockIssuanceItemsSearchRequest extends protobuf_1.Message {
    /**
     * If true, then returns only active records. If false, then returns only inactive records
     *
     * @generated from field: Scailo.BOOL_FILTER is_active = 1;
     */
    isActive = base_scailo_pb_js_1.BOOL_FILTER.BOOL_FILTER_ANY_UNSPECIFIED;
    /**
     * The number of records that need to be sent in the response. Returns all records if it is set to -1
     *
     * @generated from field: int64 count = 2;
     */
    count = protobuf_1.protoInt64.zero;
    /**
     * The number that need to be offset by before fetching the records
     *
     * @generated from field: uint64 offset = 3;
     */
    offset = protobuf_1.protoInt64.zero;
    /**
     * The sort order that is to be used to fetch the pagination response
     *
     * @generated from field: Scailo.SORT_ORDER sort_order = 4;
     */
    sortOrder = base_scailo_pb_js_1.SORT_ORDER.ASCENDING_UNSPECIFIED;
    /**
     * The sort key that is to be used to fetch the pagination response
     *
     * @generated from field: Scailo.STOCK_ISSUANCE_ITEM_SORT_KEY sort_key = 5;
     */
    sortKey = STOCK_ISSUANCE_ITEM_SORT_KEY.STOCK_ISSUANCE_ITEM_SORT_KEY_ID_UNSPECIFIED;
    /**
     * The entity UUID that is to be used to filter records
     *
     * @generated from field: string entity_uuid = 6;
     */
    entityUuid = "";
    /**
     * The status of the items
     *
     * @generated from field: Scailo.STOCK_ISSUANCE_ITEM_STATUS status = 7;
     */
    status = STOCK_ISSUANCE_ITEM_STATUS.STOCK_ISSUANCE_ITEM_STATUS_ANY_UNSPECIFIED;
    /**
     * The start range of approved timestamp
     *
     * @generated from field: uint64 approved_on_start = 10;
     */
    approvedOnStart = protobuf_1.protoInt64.zero;
    /**
     * The end range of approved timestamp
     *
     * @generated from field: uint64 approved_on_end = 11;
     */
    approvedOnEnd = protobuf_1.protoInt64.zero;
    /**
     * The ID of the approver
     *
     * @generated from field: uint64 approved_by_user_id = 12;
     */
    approvedByUserId = protobuf_1.protoInt64.zero;
    /**
     * The role ID of the approver
     *
     * @generated from field: uint64 approver_role_id = 13;
     */
    approverRoleId = protobuf_1.protoInt64.zero;
    /**
     * The ID of the stock issuance
     *
     * @generated from field: uint64 stock_issuance_id = 20;
     */
    stockIssuanceId = protobuf_1.protoInt64.zero;
    /**
     * The ID of the family
     *
     * @generated from field: uint64 family_id = 21;
     */
    familyId = protobuf_1.protoInt64.zero;
    /**
     * Stores the item hash
     *
     * @generated from field: string item_hash = 22;
     */
    itemHash = "";
    /**
     * Describes the key with which the search operation needs to be performed
     *
     * @generated from field: string search_key = 40;
     */
    searchKey = "";
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static runtime = protobuf_1.proto3;
    static typeName = "Scailo.StockIssuanceItemsSearchRequest";
    static fields = protobuf_1.proto3.util.newFieldList(() => [
        { no: 1, name: "is_active", kind: "enum", T: protobuf_1.proto3.getEnumType(base_scailo_pb_js_1.BOOL_FILTER) },
        { no: 2, name: "count", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
        { no: 3, name: "offset", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
        { no: 4, name: "sort_order", kind: "enum", T: protobuf_1.proto3.getEnumType(base_scailo_pb_js_1.SORT_ORDER) },
        { no: 5, name: "sort_key", kind: "enum", T: protobuf_1.proto3.getEnumType(STOCK_ISSUANCE_ITEM_SORT_KEY) },
        { no: 6, name: "entity_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 7, name: "status", kind: "enum", T: protobuf_1.proto3.getEnumType(STOCK_ISSUANCE_ITEM_STATUS) },
        { no: 10, name: "approved_on_start", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
        { no: 11, name: "approved_on_end", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
        { no: 12, name: "approved_by_user_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
        { no: 13, name: "approver_role_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
        { no: 20, name: "stock_issuance_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
        { no: 21, name: "family_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
        { no: 22, name: "item_hash", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 40, name: "search_key", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    ]);
    static fromBinary(bytes, options) {
        return new StockIssuanceItemsSearchRequest().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new StockIssuanceItemsSearchRequest().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new StockIssuanceItemsSearchRequest().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(StockIssuanceItemsSearchRequest, a, b);
    }
}
exports.StockIssuanceItemsSearchRequest = StockIssuanceItemsSearchRequest;
/**
 *
 * Describes the response to a pagination items request
 *
 * @generated from message Scailo.StockIssuancesServicePaginatedItemsResponse
 */
class StockIssuancesServicePaginatedItemsResponse extends protobuf_1.Message {
    /**
     * The number of records in this payload
     *
     * @generated from field: uint64 count = 1;
     */
    count = protobuf_1.protoInt64.zero;
    /**
     * The number that has been offset before fetching the records. This is the same value that has been sent as part of the pagination request
     *
     * @generated from field: uint64 offset = 2;
     */
    offset = protobuf_1.protoInt64.zero;
    /**
     * The total number of records that are available
     *
     * @generated from field: uint64 total = 3;
     */
    total = protobuf_1.protoInt64.zero;
    /**
     * The list of records
     *
     * @generated from field: repeated Scailo.StockIssuanceItem payload = 4;
     */
    payload = [];
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static runtime = protobuf_1.proto3;
    static typeName = "Scailo.StockIssuancesServicePaginatedItemsResponse";
    static fields = protobuf_1.proto3.util.newFieldList(() => [
        { no: 1, name: "count", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
        { no: 2, name: "offset", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
        { no: 3, name: "total", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
        { no: 4, name: "payload", kind: "message", T: StockIssuanceItem, repeated: true },
    ]);
    static fromBinary(bytes, options) {
        return new StockIssuancesServicePaginatedItemsResponse().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new StockIssuancesServicePaginatedItemsResponse().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new StockIssuancesServicePaginatedItemsResponse().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(StockIssuancesServicePaginatedItemsResponse, a, b);
    }
}
exports.StockIssuancesServicePaginatedItemsResponse = StockIssuancesServicePaginatedItemsResponse;
